['v3 = ( void **)rook_o_8; \n', 'v20 = ( void **)rook_o_8; \n', 'v9 = ( void **)rook_o_8; \n', 'v20 = ( void **)rook_o_8; \n', 'v9 = ( void **)rook_o_8; \n']
['if ( !moved[110] && *( _OWORD *)( &board + 110) == __PAIR128__( 0xD0000000DLL, 0xD00000008LL) ) \n', 'if ( !moved[26] && *( _OWORD *)( &board + 26) == __PAIR128__( 0xD0000000DLL, 0xD00000007LL) ) \n']
['if ( !moved[110] && *( _OWORD *)( &board + 110) == __PAIR128__( 0xD0000000DLL, 0xD00000008LL) ) \n', 'if ( !moved[26] && *( _OWORD *)( &board + 26) == __PAIR128__( 0xD0000000DLL, 0xD00000007LL) ) \n']
['v3 = ( void **)rook_o_8; \n']
['if ( v3 == jpt_40352C ) \n', 'if ( jpt_40352C == v3 ) \n']
['if ( !moved[110] && *( _OWORD *)( &board + 110) == __PAIR128__( 0xD0000000DLL, 0xD00000008LL) ) \n', 'if ( !moved[26] && *( _OWORD *)( &board + 26) == __PAIR128__( 0xD0000000DLL, 0xD00000007LL) ) \n']
['pawnmated_4 = 0; \n']
['knightmated_3 = 0; \n']
['bishopmated_2 = 0; \n']
['rookmated_1 = 0; \n']
['queenmated_0 = 0; \n']
['if ( pawnmated_4 == pawnmates ) \n']
['if ( !( pawnmates | pawnmated_4) ) \n']
['if ( knightmated_3 != knightmates ) \n']
['if ( !( knightmates | knightmated_3) ) \n']
['if ( bishopmated_2 != bishopmates ) \n']
['if ( !( bishopmates | bishopmated_2) ) \n']
['if ( rookmated_1 != rookmates ) \n']
['if ( !( rookmates | rookmated_1) ) \n']
['if ( queenmated_0 != v6 ) \n']
['else if ( !( v6 | queenmated_0) ) \n']
['pawnmates = pawnmated_4 - 1; \n']
['pawnmated_4 = pawnmates; \n']
['bishopmates = bishopmated_2 - 1; \n']
['bishopmated_2 = bishopmates; \n']
['rookmates = rookmated_1 - 1; \n']
['rookmated_1 = rookmates; \n']
['v6 = queenmated_0 - 1; \n']
['queenmated_0 = v6; \n']
['knightmated_3 = knightmates; \n']
['--knightmated_3; \n']
['howmuch[0] = _mm_load_si128( ( const __m128i *)&xmmword_41CF60); \n', 'howmuch[1] = _mm_load_si128( ( const __m128i *)&xmmword_41CF70); \n']
['howmuch[0] = _mm_load_si128( ( const __m128i *)&xmmword_41CF60); \n', 'howmuch[1] = _mm_load_si128( ( const __m128i *)&xmmword_41CF70); \n']
['howmuch[0] = _mm_load_si128( ( const __m128i *)&xmmword_41CF60); \n', 'howmuch[1] = _mm_load_si128( ( const __m128i *)&xmmword_41CF70); \n']
['howmuch[0] = _mm_load_si128( ( const __m128i *)&xmmword_41CF60); \n', 'howmuch[1] = _mm_load_si128( ( const __m128i *)&xmmword_41CF70); \n']
['howmuch[0] = _mm_load_si128( ( const __m128i *)&xmmword_41CF60); \n', 'howmuch[1] = _mm_load_si128( ( const __m128i *)&xmmword_41CF70); \n']
['howmuch[0] = _mm_load_si128( ( const __m128i *)&xmmword_41CF60); \n', 'howmuch[1] = _mm_load_si128( ( const __m128i *)&xmmword_41CF70); \n']
['if ( !moved[110] && *( _OWORD *)( &board + 110) == __PAIR128__( 0xD0000000DLL, 0xD00000008LL) ) \n', 'if ( !moved[26] && *( _OWORD *)( &board + 26) == __PAIR128__( 0xD0000000DLL, 0xD00000007LL) ) \n']
['if ( !moved[110] && *( _OWORD *)( &board + 110) == __PAIR128__( 0xD0000000DLL, 0xD00000008LL) ) \n', 'if ( !moved[26] && *( _OWORD *)( &board + 26) == __PAIR128__( 0xD0000000DLL, 0xD00000007LL) ) \n']
['if ( !moved[110] && *( _OWORD *)( &board + 110) == __PAIR128__( 0xD0000000DLL, 0xD00000008LL) ) \n', 'if ( !moved[26] && *( _OWORD *)( &board + 26) == __PAIR128__( 0xD0000000DLL, 0xD00000007LL) ) \n']
['if ( !moved[110] && *( _OWORD *)( &board + 110) == __PAIR128__( 0xD0000000DLL, 0xD00000008LL) ) \n', 'if ( !moved[26] && *( _OWORD *)( &board + 26) == __PAIR128__( 0xD0000000DLL, 0xD00000007LL) ) \n']
['if ( !moved[110] && *( _OWORD *)( &board + 110) == __PAIR128__( 0xD0000000DLL, 0xD00000008LL) ) \n', 'if ( !moved[26] && *( _OWORD *)( &board + 26) == __PAIR128__( 0xD0000000DLL, 0xD00000007LL) ) \n']
['if ( !moved[110] && *( _OWORD *)( &board + 110) == __PAIR128__( 0xD0000000DLL, 0xD00000008LL) ) \n', 'if ( !moved[26] && *( _OWORD *)( &board + 26) == __PAIR128__( 0xD0000000DLL, 0xD00000007LL) ) \n']
['if ( !moved[110] && *( _OWORD *)( &board + 110) == __PAIR128__( 0xD0000000DLL, 0xD00000008LL) ) \n', 'if ( !moved[26] && *( _OWORD *)( &board + 26) == __PAIR128__( 0xD0000000DLL, 0xD00000007LL) ) \n']
['if ( !moved[110] && *( _OWORD *)( &board + 110) == __PAIR128__( 0xD0000000DLL, 0xD00000008LL) ) \n']
['if ( !moved[26] && *( _OWORD *)( &board + 26) == __PAIR128__( 0xD0000000DLL, 0xD00000007LL) ) \n']
['howmuch[0] = _mm_load_si128( ( const __m128i *)&xmmword_41CF60); \n']
['howmuch[1] = _mm_load_si128( ( const __m128i *)&xmmword_41CF70); \n']
['MEMORY[0] = 0; \n', 'MEMORY[0] = 0; \n', 'MEMORY[0] = 0; \n']
['qmemcpy( init_board, &unk_41E5A0, sizeof( init_board)); \n', 'qmemcpy( init_board, &unk_41E960, sizeof( init_board)); \n']
['if ( !moved[110] && *( _OWORD *)( &board + 110) == __PAIR128__( 0xD0000000DLL, 0xD00000008LL) ) \n', 'if ( !moved[26] && *( _OWORD *)( &board + 26) == __PAIR128__( 0xD0000000DLL, 0xD00000007LL) ) \n']
['while ( v1 != &next ); \n']
['if ( !moved[110] && *( _OWORD *)( &board + 110) == __PAIR128__( 0xD0000000DLL, 0xD00000008LL) ) \n', 'if ( !moved[26] && *( _OWORD *)( &board + 26) == __PAIR128__( 0xD0000000DLL, 0xD00000007LL) ) \n']
['v9 = ( void **)rook_o_8; \n', 'v9 = ( void **)rook_o_8; \n']
['if ( v9 == jpt_40352C ) \n', 'if ( v9 == jpt_40352C ) \n']
['if ( !moved[110] && *( _OWORD *)( &board + 110) == __PAIR128__( 0xD0000000DLL, 0xD00000008LL) ) \n', 'if ( !moved[26] && *( _OWORD *)( &board + 26) == __PAIR128__( 0xD0000000DLL, 0xD00000007LL) ) \n']
['v3 = ( void **)rook_o_8; \n', 'v20 = ( void **)rook_o_8; \n', 'v9 = ( void **)rook_o_8; \n', 'v20 = ( void **)rook_o_8; \n', 'v9 = ( void **)rook_o_8; \n']
['if ( !moved[110] && *( _OWORD *)( &board + 110) == __PAIR128__( 0xD0000000DLL, 0xD00000008LL) ) \n', 'if ( !moved[26] && *( _OWORD *)( &board + 26) == __PAIR128__( 0xD0000000DLL, 0xD00000007LL) ) \n']
['howmuch[0] = _mm_load_si128( ( const __m128i *)&xmmword_41CF60); \n', 'howmuch[1] = _mm_load_si128( ( const __m128i *)&xmmword_41CF70); \n']
['howmuch[0] = _mm_load_si128( ( const __m128i *)&xmmword_41CF60); \n', 'howmuch[1] = _mm_load_si128( ( const __m128i *)&xmmword_41CF70); \n']
['*( _OWORD *)&v80.captured = *( _OWORD *)( v16 - 1535); \n', '*( _OWORD *)&v80.captured = *( _OWORD *)( v16 - 1535); \n']
['*( _OWORD *)&v80.captured = *( _OWORD *)( v16 - 1535); \n', '*( _OWORD *)&v80.captured = *( _OWORD *)( v16 - 1535); \n']
['*( _OWORD *)&v80.captured = *( _OWORD *)( v16 - 1535); \n', '*( _OWORD *)&v80.captured = *( _OWORD *)( v16 - 1535); \n']
['*( _OWORD *)&v80.captured = *( _OWORD *)( v16 - 1535); \n', '*( _OWORD *)&v80.captured = *( _OWORD *)( v16 - 1535); \n']
['if ( !moved[110] && *( _OWORD *)( &board + 110) == __PAIR128__( 0xD0000000DLL, 0xD00000008LL) ) \n', 'if ( !moved[26] && *( _OWORD *)( &board + 26) == __PAIR128__( 0xD0000000DLL, 0xD00000007LL) ) \n']
['v3 = ( void **)rook_o_8; \n', 'v20 = ( void **)rook_o_8; \n', 'v9 = ( void **)rook_o_8; \n', 'v20 = ( void **)rook_o_8; \n', 'v9 = ( void **)rook_o_8; \n']
['while ( v1 != &next ); \n']
['if ( !moved[110] && *( _OWORD *)( &board + 110) == __PAIR128__( 0xD0000000DLL, 0xD00000008LL) ) \n', 'if ( !moved[26] && *( _OWORD *)( &board + 26) == __PAIR128__( 0xD0000000DLL, 0xD00000007LL) ) \n']
['v9 = ( void **)rook_o_8; \n', 'v9 = ( void **)rook_o_8; \n']
['while ( v1 != &next ); \n']
['qmemcpy( init_board, &unk_41E5A0, sizeof( init_board)); \n', 'qmemcpy( init_board, &unk_41E960, sizeof( init_board)); \n']
['*( _OWORD *)&v80.captured = *( _OWORD *)( v16 - 1535); \n', '*( _OWORD *)&v80.captured = *( _OWORD *)( v16 - 1535); \n']
['*( _OWORD *)&v80.captured = *( _OWORD *)( v16 - 1535); \n', '*( _OWORD *)&v80.captured = *( _OWORD *)( v16 - 1535); \n']
['if ( ( _DWORD)captured != 13 && rc_index_0[captured] == rc_index_0[path[v16].captured] ) \n', 'if ( ( _DWORD)captured != 13 && rc_index_0[captured] == rc_index_0[path[v16].captured] ) \n']
['if ( ( _DWORD)captured != 13 && rc_index_0[captured] == rc_index_0[path[v16].captured] ) \n', 'if ( ( _DWORD)captured != 13 && rc_index_0[captured] == rc_index_0[path[v16].captured] ) \n']
['*( _OWORD *)&v80.captured = *( _OWORD *)( v16 - 1535); \n', '*( _OWORD *)&v80.captured = *( _OWORD *)( v16 - 1535); \n']
['*( _OWORD *)&v80.captured = *( _OWORD *)( v16 - 1535); \n', '*( _OWORD *)&v80.captured = *( _OWORD *)( v16 - 1535); \n']
['v2 = ( const char *)rook_o_2; \n']
['if ( !moved[110] && *( _OWORD *)( &board + 110) == __PAIR128__( 0xD0000000DLL, 0xD00000008LL) ) \n', 'if ( !moved[26] && *( _OWORD *)( &board + 26) == __PAIR128__( 0xD0000000DLL, 0xD00000007LL) ) \n']
['rankoffset = rankoffsets_0[rankp]; \n']
['howmuch[0] = _mm_load_si128( ( const __m128i *)&xmmword_41CF60); \n', 'howmuch[1] = _mm_load_si128( ( const __m128i *)&xmmword_41CF70); \n']
['*( _OWORD *)&v80.captured = *( _OWORD *)( v16 - 1535); \n', '*( _OWORD *)&v80.captured = *( _OWORD *)( v16 - 1535); \n']
['*( _OWORD *)&v80.captured = *( _OWORD *)( v16 - 1535); \n', '*( _OWORD *)&v80.captured = *( _OWORD *)( v16 - 1535); \n']
['howmuch[0] = _mm_load_si128( ( const __m128i *)&xmmword_41CF60); \n', 'howmuch[1] = _mm_load_si128( ( const __m128i *)&xmmword_41CF70); \n']
['*( _OWORD *)&v80.captured = *( _OWORD *)( v16 - 1535); \n', '*( _OWORD *)&v80.captured = *( _OWORD *)( v16 - 1535); \n']
['*( _OWORD *)&v80.captured = *( _OWORD *)( v16 - 1535); \n', '*( _OWORD *)&v80.captured = *( _OWORD *)( v16 - 1535); \n']
['howmuch[0] = _mm_load_si128( ( const __m128i *)&xmmword_41CF60); \n', 'howmuch[1] = _mm_load_si128( ( const __m128i *)&xmmword_41CF70); \n']
['howmuch[0] = _mm_load_si128( ( const __m128i *)&xmmword_41CF60); \n', 'howmuch[1] = _mm_load_si128( ( const __m128i *)&xmmword_41CF70); \n']
['*( _OWORD *)&v80.captured = *( _OWORD *)( v16 - 1535); \n', '*( _OWORD *)&v80.captured = *( _OWORD *)( v16 - 1535); \n']
['*( _OWORD *)&v80.captured = *( _OWORD *)( v16 - 1535); \n', '*( _OWORD *)&v80.captured = *( _OWORD *)( v16 - 1535); \n']
['*( _OWORD *)&v80.captured = *( _OWORD *)( v16 - 1535); \n', '*( _OWORD *)&v80.captured = *( _OWORD *)( v16 - 1535); \n']
['*( _OWORD *)&v80.captured = *( _OWORD *)( v16 - 1535); \n', '*( _OWORD *)&v80.captured = *( _OWORD *)( v16 - 1535); \n']
['howmuch[0] = _mm_load_si128( ( const __m128i *)&xmmword_41CF60); \n', 'howmuch[1] = _mm_load_si128( ( const __m128i *)&xmmword_41CF70); \n']
['howmuch[0] = _mm_load_si128( ( const __m128i *)&xmmword_41CF60); \n', 'howmuch[1] = _mm_load_si128( ( const __m128i *)&xmmword_41CF70); \n']
['howmuch[0] = _mm_load_si128( ( const __m128i *)&xmmword_41CF60); \n', 'howmuch[1] = _mm_load_si128( ( const __m128i *)&xmmword_41CF70); \n']
['howmuch[0] = _mm_load_si128( ( const __m128i *)&xmmword_41CF60); \n', 'howmuch[1] = _mm_load_si128( ( const __m128i *)&xmmword_41CF70); \n']
['howmuch[0] = _mm_load_si128( ( const __m128i *)&xmmword_41CF60); \n', 'howmuch[1] = _mm_load_si128( ( const __m128i *)&xmmword_41CF70); \n']
['howmuch[0] = _mm_load_si128( ( const __m128i *)&xmmword_41CF60); \n', 'howmuch[1] = _mm_load_si128( ( const __m128i *)&xmmword_41CF70); \n']
['*( _OWORD *)&v80.captured = *( _OWORD *)( v16 - 1535); \n', '*( _OWORD *)&v80.captured = *( _OWORD *)( v16 - 1535); \n']
['*( _OWORD *)&v80.captured = *( _OWORD *)( v16 - 1535); \n', '*( _OWORD *)&v80.captured = *( _OWORD *)( v16 - 1535); \n']
['if ( !moved[110] && *( _OWORD *)( &board + 110) == __PAIR128__( 0xD0000000DLL, 0xD00000008LL) ) \n', 'if ( !moved[26] && *( _OWORD *)( &board + 26) == __PAIR128__( 0xD0000000DLL, 0xD00000007LL) ) \n']
['*( _OWORD *)&v80.captured = *( _OWORD *)( v16 - 1535); \n', '*( _OWORD *)&v80.captured = *( _OWORD *)( v16 - 1535); \n']
['*( _OWORD *)&v80.captured = *( _OWORD *)( v16 - 1535); \n', '*( _OWORD *)&v80.captured = *( _OWORD *)( v16 - 1535); \n']
['MEMORY[0] = 0; \n', 'MEMORY[0] = 0; \n', 'MEMORY[0] = 0; \n']
['if ( !moved[110] && *( _OWORD *)( &board + 110) == __PAIR128__( 0xD0000000DLL, 0xD00000008LL) ) \n', 'if ( !moved[26] && *( _OWORD *)( &board + 26) == __PAIR128__( 0xD0000000DLL, 0xD00000007LL) ) \n']
['if ( !moved[110] && *( _OWORD *)( &board + 110) == __PAIR128__( 0xD0000000DLL, 0xD00000008LL) ) \n', 'if ( !moved[26] && *( _OWORD *)( &board + 26) == __PAIR128__( 0xD0000000DLL, 0xD00000007LL) ) \n']
['if ( !moved[110] && *( _OWORD *)( &board + 110) == __PAIR128__( 0xD0000000DLL, 0xD00000008LL) ) \n', 'if ( !moved[26] && *( _OWORD *)( &board + 26) == __PAIR128__( 0xD0000000DLL, 0xD00000007LL) ) \n']
