['a_sq += rook_o_8[i]; \n']
['if ( pawnmates != pawnmated_4 ) \n', 'if ( knightmates != knightmated_3 ) \n', 'if ( bishopmates != bishopmated_2 ) \n', 'if ( rookmates != rookmated_1 ) \n', 'if ( queenmates != queenmated_0 ) \n']
['a_sqa += bishop_o_7[ia]; \n', 'a_sqc += bishop_o_7[id]; \n']
['if ( board[knight_o_6[ib] + square] == 3 ) \n', 'if ( board[knight_o_6[ie] + square] == 4 ) \n']
['a_sqa += bishop_o_7[ia]; \n', 'a_sqc += bishop_o_7[id]; \n']
['v3 = bishop_o_5[i]; \n', 'v3 = bishop_o_2[i]; \n']
['v3 = bishop_o_5[i]; \n', 'v3 = bishop_o_2[i]; \n']
['a_sqa += bishop_o_7[ia]; \n', 'a_sqc += bishop_o_7[id]; \n']
['if ( board[knight_o_6[ib] + square] == 3 ) \n', 'if ( board[knight_o_6[ie] + square] == 4 ) \n']
['a_sqa += bishop_o_7[ia]; \n', 'a_sqc += bishop_o_7[id]; \n']
['pawnmated_4 = 0; \n', '--pawnmated_4; \n']
['knightmated_3 = 0; \n', '--knightmated_3; \n']
['bishopmated_2 = 0; \n', '--bishopmated_2; \n']
['rookmated_1 = 0; \n', '--rookmated_1; \n']
['queenmated_0 = 0; \n', '--queenmated_0; \n']
['if ( pawnmates != pawnmated_4 ) \n']
['if ( pawnmates != pawnmated_4 ) \n']
['if ( knightmates != knightmated_3 ) \n']
['if ( knightmates != knightmated_3 ) \n']
['if ( bishopmates != bishopmated_2 ) \n']
['if ( bishopmates != bishopmated_2 ) \n']
['if ( rookmates != rookmated_1 ) \n']
['if ( rookmates != rookmated_1 ) \n']
['if ( queenmates != queenmated_0 ) \n']
['else if ( !queenmates && !queenmated_0 ) \n']
['pawnmated_4 = 0; \n', '--pawnmated_4; \n']
['pawnmated_4 = 0; \n', '--pawnmated_4; \n']
['bishopmated_2 = bishopmates; \n']
['bishopmated_2 = bishopmates; \n']
['rookmated_1 = rookmates; \n']
['rookmated_1 = rookmates; \n']
['queenmated_0 = 0; \n', '--queenmated_0; \n']
['queenmated_0 = 0; \n', '--queenmated_0; \n']
['knightmated_3 = knightmates; \n']
['knightmated_3 = 0; \n', '--knightmated_3; \n']
['v2 += rook_o_2[i]; \n']
['v2 += rook_o_2[i]; \n']
['if ( board[knight_o_2[i] + square] == 13 ) \n']
['if ( target == knight_o_3[lh] + wking_loc ) \n', 'if ( target == knight_o_3[lbg] + bking_loc ) \n']
['if ( target == knight_o_3[lh] + wking_loc ) \n', 'if ( target == knight_o_3[lbg] + bking_loc ) \n']
['if ( target == knight_o_3[lh] + wking_loc ) \n', 'if ( target == knight_o_3[lbg] + bking_loc ) \n']
['if ( !strncmp( input + 6, off_423B32, 3uLL) ) \n']
[]
['MEMORY[0] = 0; \n', 'MEMORY[0] = 0; \n', 'MEMORY[0] = 0; \n']
['MEMORY[0] = 0; \n', 'MEMORY[0] = 0; \n', 'MEMORY[0] = 0; \n']
['qmemcpy( init_board, &unk_425340, sizeof( init_board)); \n', 'qmemcpy( init_board, &unk_425A40, sizeof( init_board)); \n']
['v3 = bishop_o_5[i]; \n']
['v8 = knight_o_0[k] + square; \n']
['v3 = bishop_o_5[i]; \n', 'v13 = bishop_o_5[m]; \n']
['v9 = rook_o_3[k]; \n']
['if ( board[knight_o_4[j] + square] == 3 ) \n', 'if ( board[knight_o_4[n] + square] == 4 ) \n']
['v3 = bishop_o_5[i]; \n', 'v13 = bishop_o_5[m]; \n']
['if ( board[knight_o_4[j] + square] == 3 ) \n', 'if ( board[knight_o_4[n] + square] == 4 ) \n']
['v3 = bishop_o_5[i]; \n', 'v13 = bishop_o_5[m]; \n']
['v9 = rook_o_3[k]; \n']
['if ( board[knight_o_4[j] + square] == 3 ) \n', 'if ( board[knight_o_4[n] + square] == 4 ) \n']
[]
[]
[]
['else if ( !strcmp( input, off_4249EB) ) \n']
['v3 = bishop_o_2[i]; \n']
['v8 = knight_o_0[k] + square; \n']
['v3 = bishop_o_2[i]; \n', 'v13 = bishop_o_2[n]; \n']
['v9 = rook_o_0[k]; \n']
['v9 = rook_o_3[k]; \n', 'v9 = rook_o_0[k]; \n']
['v3 = bishop_o_2[i]; \n', 'v13 = bishop_o_2[n]; \n']
['if ( board[knight_o_1[j] + square] == 3 ) \n']
['v3 = bishop_o_2[i]; \n', 'v13 = bishop_o_2[n]; \n']
['v9 = rook_o_0[k]; \n']
['if ( pawnmates != pawnmated_4 ) \n', 'if ( knightmates != knightmated_3 ) \n', 'if ( bishopmates != bishopmated_2 ) \n', 'if ( rookmates != rookmated_1 ) \n', 'if ( queenmates != queenmated_0 ) \n']
['qmemcpy( init_board, &unk_425340, sizeof( init_board)); \n', 'qmemcpy( init_board, &unk_425A40, sizeof( init_board)); \n']
['&& rc_index_0[path[ply - 1].captured] == rc_index_0[path[ply - 2].captured] ) \n', '&& rc_index_0[path[ply - 1].captured] == rc_index_0[path[ply - 2].captured] ) \n']
['&& rc_index_0[path[ply - 1].captured] == rc_index_0[path[ply - 2].captured] ) \n', '&& rc_index_0[path[ply - 1].captured] == rc_index_0[path[ply - 2].captured] ) \n']
['v3 = bishop_o_5[i]; \n', 'v3 = bishop_o_2[i]; \n']
['v5 += bishop_o_1[j]; \n']
['v8 = knight_o_0[k] + square; \n']
['v5 += bishop_o_1[j]; \n']
['rankoffset = rankoffsets_0[++rankp]; \n']
['MEMORY[0] = 0; \n', 'MEMORY[0] = 0; \n', 'MEMORY[0] = 0; \n']
