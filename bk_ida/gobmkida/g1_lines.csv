if ( !working_area_initialized_6 ) 
v9 = working_5; 
while ( v9 != &working_area_initialized_6 ); 
working_area_initialized_6 = 1; 
queue_4[0] = pos; 
working_5[pos] = strength; 
v28 = dword_A38F3C[v10]; 
v33 = working_5[v28] * inv_attenuation; 
v15 = working_5[v12]; 
queue_4[queue_end++] = v12; 
working_5[v12] = v15 + v14; 
v27 = working_5[v18]; 
queue_4[queue_end++] = v18; 
working_5[v18] = v27 + v26; 
v38 = queue_4[j]; 
v39 = working_5[v38]; 
working_5[v38] = 0; 
v30 = dword_760CDC[k]; 
|| byte_A07ABF[m] != 3 && !score[m + 399] 
v6 = &pdfa.name[70]; 
v338 = dword_760CDC[v292] + v25; 
right = dword_760CDC[k]; 
if ( cached_board_2[v7] != v9 ) 
cached_board_2[v7] = v9; 
active_caches_1[0] = 0; 
dword_A38744 = 0; 
if ( active_caches_1[color == 1] ) 
escape_value[i] = escape_values_0[2 * i + v6]; 
escape_values_0[2 * k + v6] = escape_value[k]; 
active_caches_1[color == 1] = 1; 
memcpy( q, base, sizeof( influence_data)); 
v9 = ( unsigned __int8)byte_A07ABF[v6]; 
+ COERCE_DOUBLE( *( _OWORD *)&_mm_cmpgt_sd( v70, v72) & 0x3FF0000000000000LL)); 
- COERCE_DOUBLE( *( _OWORD *)&_mm_cmpgt_sd( v78, v76) & 0x3FF0000000000000LL)); 
if ( byte_A07ABF[v96] != 3 && mn[v96 + 399] ) 
&& ( v113 = byte_A07ABD[v96], v130 == v113) 
|| !byte_A07ABE[v96] 
gprintf( "status=%s, escape=%d\n", snames_0[v1[4]], ( unsigned int)dragon2[*v1].escape_route); 
v16 = dword_760CDC[i] + v24; 
v40 = dword_760CDC[v39]; 
v57 = dword_760CDC[j]; 
current_minsize = minsize; 
current_attacks = attacks; 
memset( conditional_attack_point, 0, sizeof( conditional_attack_point)); 
memset( conditional_attack_point, 0, sizeof( conditional_attack_point)); 
gg_sort( v17->target, v21, 4uLL, target_comp_func); 
gg_sort( attacks, j, 0x14uLL, move_comp_func); 
p_last_index = ( int *)&pdfa.name[70]; 
gprintf( "%o%s%1m", &pdfa.name[70], v53); 
p_last_index = &pdfa.last_index; 
gprintf( "%o%s%1m", &pdfa.last_index, v53); 
v6 = ( char *)&unk_A49554 + 4 * ( unsigned int)( 2 * board_size - 3); 
v7 = ( char *)&unk_A49550; 
v19 = ( char *)&unk_A49550; 
worms_2[( int)v20][v13] = worms_2[0][v12 + v18]; 
worms_2[( int)v20][v13] = worms_2[0][v12 + v18]; 
while ( *( _DWORD *)v14 != worms_2[0][v12 + v18] ) 
if ( v14 == ( char *)&unk_A48984 + 144 * v20 + 4 * ( unsigned int)( v13 - 1) ) 
v28 = worms_2[0][j + v24]; 
v21[v33] = worms_2[0][v33 + v22]; 
v15 = dword_760CDC[i]; 
shape_moves[0].name = ( const char *)&unk_4936E3; 
memcpy( v2, *owl, sizeof( local_owl_data)); 
if ( !mx_initialized_1 ) 
memset( mx_0, 0, sizeof( mx_0)); 
memset( mx_0, 0, sizeof( mx_0)); 
mx_initialized_1 = 1; 
mx_0[v5] = 1; 
if ( v16 != 3 && !mx_0[v15] ) 
mx_0[v15] = 1; 
if ( v21 != 3 && !mx_0[v20] ) 
mx_0[v20] = 1; 
if ( v26 != 3 && !mx_0[v25] ) 
mx_0[v25] = 1; 
if ( v31 != 3 && !mx_0[v30] ) 
mx_0[v30] = 1; 
if ( !mx_0[v14 + 19] ) 
mx_0[v42] = 1; 
if ( !mx_0[v14 - 21] ) 
mx_0[v43] = 1; 
if ( !mx_0[v14 - 19] ) 
mx_0[v47] = 1; 
if ( !mx_0[v14 + 21] ) 
mx_0[v35] = 1; 
if ( mx_0[*v10] != 1 ) 
mx_0[v51] = 0; 
v7 = dword_760CDC[v5]; 
v6 = dword_760CDC[v5]; 
up = dword_760CDC[v5]; 
v5 = dword_760CDC[v4]; 
effective_size_low = _mm_xor_ps( effective_size_low, ( __m128)xmmword_48B6D0); 
gg_snprintf( result_0, 0x1DuLL, "%d%d%d%d", a, b, c, d); 
gg_snprintf( result_0, 0x1DuLL, "[%d, %d, %d, %d]", a, e->b, e->c, e->d); 
return result_0; 
sprintf( buf, "Move order for %sconnect: %n", &pdfa.name[70], &chars); 
v55 = &pdfa.name[70]; 
|| byte_A07ABF[v8] != 3 && p_origin[171] == origin && !*( ( _BYTE *)p_origin + 700) 
if ( current_seed_3 == seed ) 
if ( v8 != current_board_2[0][k + v5] ) 
current_board_2[0][k + v5] = v8; 
current_seed_3 = seed; 
while ( byte_A4695F[v1] ); 
if ( memcmp( v1, &unk_499BBF, 7uLL) ) 
$58E8A322B99FFF983766F42E1DE15117 v17; // ebx 
if ( !_getopt_initialized ) 
_getopt_initialized = 1; 
v17 = ordering; 
if ( v17 == REQUIRE_ORDER ) 
nextchar = ( _BYTE *)( &pdfa + 70); 
while ( v1 != ( unsigned int *)&unk_B93F64 ); 
return gtp_success( &pdfa.name[70]); 
return gtp_success( &pdfa.name[70]); 
name = commands_0[0].name; 
if ( !commands_0[0].name ) 
return gtp_success( &pdfa.name[70]); 
return gtp_success( &pdfa.name[70]); 
return gtp_success( &pdfa.name[70]); 
return gtp_success( &pdfa.name[70]); 
return gtp_success( &pdfa.name[70]); 
return gtp_success( &pdfa.name[70]); 
return gtp_success( &pdfa.name[70]); 
return gtp_success( &pdfa.name[70]); 
return gtp_success( &pdfa.name[70]); 
routines[10] = &pdfa.name[70]; 
routines[11] = &pdfa.name[70]; 
routines[12] = &pdfa.name[70]; 
routines[13] = &pdfa.name[70]; 
routines[14] = &pdfa.name[70]; 
routines[15] = &pdfa.name[70]; 
if ( byte_A07ABF[i] != 3 ) 
v1 = init_1; 
if ( !init_1 ) 
v2 = buf_0; 
init_1 = 1; 
return &buf_0[5 * pos]; 
v25 = findlib( ii, 241, libs_1); 
v22 = libs_1[v21]; 
|| ( ( v32 = byte_A07ABF[kk], v32 == 3) || v35 == v32) 
if ( ( unsigned __int8)( byte_A07ABF[i3] - 1) <= 1u 
v78 = findlib( i4, 241, libs_0); 
v84 = libs_0[i5]; 
v82 = libs_0[i5] + *v81; 
v8 = dword_760CDC[i]; 
while ( v3 != ( int *)&unk_B93F64 ); 
init_owl( &owl_0, target, 0, 0, 1); 
owl_make_domains( owl_0, 0LL); 
list_goal_worms( owl_0, owl_goal_worm); 
result[0] = do_owl_defend( target, &move, &wid, owl_0, 0, 0, 0); 
owl_0->goal, 
number_of_matches = 0; 
if ( !number_of_matches ) 
if ( number_of_matches <= 0 ) 
v3 = handicap_matches; 
v4 = 24LL * ( unsigned int)( number_of_matches - 1) + 10064248; 
v5 = handicap_matches; 
v10 = number_of_matches; 
if ( number_of_matches <= 0 ) 
v11 = v9 - handicap_matches[0].value; 
v12 = ( _DWORD *)( handicap_matches + 24); 
while ( ++v13 != number_of_matches ) 
anchor = handicap_matches[v10].anchor; 
ll = handicap_matches[v10].ll; 
if ( current_color_1 != color ) 
current_color_1 = color; 
if ( v5 != 3 && v5 != current_board_0[i] ) 
current_board_0[i] = v5; 
v33 = strtok( line, &pdfa.name[70]); 
gtp_main_loop( commands_0, gtp_input); 
gprintf( &pdfa.name[70], v7, v6); 
v4 = *( float *)&dword_A0603C[k]; 
v24 = dword_760CDC[v23]; 
if ( last_purge_position_number_0 != position_number ) 
last_purge_position_number_0 = position_number; 
if ( last_purge_position_number_1 != position_number ) 
last_purge_position_number_1 = position_number; 
if ( !byte_A4695F[++v54] ) 
while ( v1 != &number_of_matches ); 
v10 = ( const char *)&off_48D10E; 
v10 = ( const char *)&unk_48D112; 
v11 = ( const char *)&off_48D10E; 
v11 = ( const char *)&unk_48D112; 
result = ( const char *)&unk_48E421; 
result = ( const char *)&unk_48E409; 
if ( !initialized_0 ) 
initialized_0 = 1; 
result = ( const char *)&unk_48E3D1; 
result = ( const char *)&unk_48E3EF; 
number_of_regions = ( unsigned __int64)marked_3; 
memset( marked_3, 0, sizeof( marked_3)); 
memset( marked_3, 0, sizeof( marked_3)); 
&& !marked_3[i] 
marked_3[i] = 1; 
if ( board[v7] != 3 && !marked_3[v7] && region_owner( q, v7) == color ) 
marked_3[v7] = 1; 
v9 = 1000 * node_limits_0[10 - level] / 500; 
v2 = &local_tree_0; 
v26 = snames_2[*( ( int *)v12 + 15)]; 
v15 = snames_2[*( ( int *)v12 + 4)]; 
gprintf( ", owl status %s\n", snames_2[*( ( int *)v12 + 6)]); 
if ( stone_count_for_position_2 != position_number ) 
white_stones_1 = 0; 
black_stones_0 = 0; 
white_stones_1 = v5; 
black_stones_0 = v3; 
stone_count_for_position_2 = position_number; 
v6 = black_stones_0; 
v7 = white_stones_1; 
|| byte_A07ABF[k] != 3 && v21[19] == j 
|| byte_A07ABF[k] != 3 && v22[19] == 1 
fprintf( outputfile, off_48E364, *v30); 
