['p_free_buffs = ( _cpp_buff_0 *)&pfile->free_buffs;']
['result = ( _cpp_buff_0 *)&v5[v4];']
['v2 = ( tokenrun_0 *)xmalloc( 0x20uLL);']
['v2 = ( tokenrun_0 *)xmalloc( 0x20uLL);']
['v2 = ( tokenrun_0 *)xmalloc( 0x20uLL);']
['v2 = ( tokenrun_0 *)xmalloc( 0x20uLL);']
['v7 = cpp_type2name( ( cpp_ttype)v0);']
['fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");']
['v12 = gen_rtx_MEM( ( machine_mode)*( ( unsigned __int8 *)v12 + 2), fixed);']
['tree_node *elements; // rdi']
['fancy_abort( ( const char *)&a, 9320, "add_byte_size_attribute");']
['elements = result->vector.elements;']
['if ( elements )']
['if ( host_integerp( elements, 1) )']
['rtx *v191; // rax']
['rtx *v23; // rax']
['v9 = ( rtx)rtx[1];', 'v9 = ( rtx)rtx[1];', 'v21 = ( rtx)body[1];', 'v6 = ( rtx)rtx[1];']
['*( _QWORD *)( v11 + 24) = v10;']
['if ( v23 )']
['if ( v9 == head )']
['insns = ( rtx)v12.rtwint;']
['insns = ( rtx)v12.rtwint;']
['v9 = ( rtx)rtx[1];', 'v9 = ( rtx)rtx[1];', 'v21 = ( rtx)body[1];', 'v6 = ( rtx)rtx[1];']
['*( _QWORD *)( v11 + 24) = v10;']
['if ( v23 )']
['if ( set_2 == -1 )', 'if ( set_3 == -1 )', 'if ( set_31 == -1 )', 'if ( level_3 == 2 )']
['fancy_abort( ( const char *)&a, 8430, "field_byte_offset");']
['fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");']
['fancy_abort( ( const char *)&a, 8599, "add_data_member_location_attribute");']
['v2 = reverse_condition( ( rtx_code)*( _WORD *)v1);', 'v2 = reverse_condition( ( rtx_code)*( _WORD *)v1);', 'v2 = reverse_condition( ( rtx_code)*( _WORD *)v1);']
['*hv = ( __PAIR128__( h2, l2) + *( _OWORD *)&l1) >> 64;']
['return ( ( ( ( __PAIR128__( h2, l2) + *( _OWORD *)&l1) >> 64) ^ v6) & ~( v6 ^ h2)) >> 63;']
['v18 = gen_rtx_fmt_e( code, ( machine_mode)*( ( unsigned __int8 *)target + 2), v19);']
['v18 = gen_rtx_fmt_ee( code, ( machine_mode)*( ( unsigned __int8 *)target + 2), v17, v16);']
['compiler_params = ( param_info_0 *)xrealloc( compiler_params, 24 * ( num_compiler_params + n));']
['return gen_rtx_fmt_ee( PLUS, ( machine_mode)*( ( unsigned __int8 *)addr + 2), addr->fld[0].rtx, v6);']
['rtx v10; // r13']
['rtx v13; // r12', 'rtx v13; // r12', 'rtx v13; // r12']
['rtx v16; // rax', 'rtx v11; // rcx', 'rtx v16; // rbx', 'rtx v16; // rbx', 'rtx v16; // rdx', 'rtx v16; // rbx', 'rtx v16; // rax']
['rtx v23; // rax']
['rtx src; // [rsp+8h] [rbp-40h]', 'rtx ptra; // [rsp+8h] [rbp-90h]']
['v10 = *( rtx *)( v9 + 16);']
['v10 = 0LL;', 'v10 = 0LL;', 'v10 = 0LL;']
['v13 = change_address_1( memref, mode, v26, validate);']
['( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),']
['v6 = ( ( unsigned int)( mode_class_0[( BYTE5( type->block.abstract_origin) >> 1) & 0x7F] - 5) < 2) + 1;']
['if ( initialized_6 )']
['initialized_6 = 1;']
['if ( initialized_2 )']
['initialized_2 = 1;']
['return gen_rtx_fmt_ee( EXPR_LIST, ( machine_mode)kind, val, next);']
['rtx *v19; // rbp', 'rtx *v19; // rbp', 'rtx *v11; // rbp']
['uid_cuid_1 = v3;']
['v15 = *( ( unsigned int *)uid_cuid_1 + v14);', 'free( uid_cuid_0);', 'free( uid_cuid_1);']
['v10 = *( rtx *)( v9 + 16);', 'v11 = ( rtx *)rtx + v8;']
['v26 = canon_modify_mem_list[v9];']
['sbitmap_vector_zero( comp_0, n_basic_blocks);']
['v4 = convert_to_mode( ( machine_mode)v7, v4, 1);']
['v12 = gen_reg_rtx( ( machine_mode)v11);']
['v10 = *( ( unsigned __int16 *)&insn_data_0[1234].operand[1] + 8);']
['predicate = insn_data_0[1234].operand[1].predicate;']
['( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),']
['emit_cmp_and_jump_insns( v17, v20, GTU, 0LL, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), 1, v22);']
['( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),']
['v22 = expand_divmod( 0, TRUNC_DIV_EXPR, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v20, v21, 0LL, 1);']
['v3 = expand_mult( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v22, v23, 0LL, 1);']
['free( reg_pref_0);']
['if ( reg_pref_0 )', 'if ( reg_pref_0 )', 'if ( reg_pref_0 )']
['reg_pref_0 = reg_pref_buffer;', 'reg_pref_0 = reg_pref_buffer;']
['v12 = assign_stack_local( ( machine_mode)i, v11, -( v11 != v9));']
['v12 = assign_stack_local( ( machine_mode)i, v11, -( v11 != v9));']
['v8 = adjust_address_1( v3, ( machine_mode)v1, v6, 1, 1);']
['res = simplify_subreg( outermode, v26.rtx, ( machine_mode)*( unsigned __int8 *)( v26.rtwint + 2), v27);']
['verbatim( off_661611, v1);']
['( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),']
['return size_11;']
['if ( size_11 >= 0 )']
['size_11 = v1;']
['size_11 = 2 * v1;']
['return size_11;']
['else if ( ( unsigned int)( mode_class_0[v3] - 5) >= 2 )']
['if ( ix86_hard_regno_mode_ok( v5, ( machine_mode)i) )']
['v4 = trunc_int_for_mode( v4, ( machine_mode)v13);']
['if ( ix86_hard_regno_mode_ok( v5, ( machine_mode)i) )']
['v4 = trunc_int_for_mode( v4, ( machine_mode)v13);']
['if ( ix86_hard_regno_mode_ok( v5, ( machine_mode)i) )']
['v4 = trunc_int_for_mode( v4, ( machine_mode)v13);']
['v9 = size_11;']
['rtx v18; // rax']
['v5 = gen_rtx_fmt_E( SEQUENCE, VOIDmode, v4);']
['rtwint = ( int *)srca->fld[0].rtwint;', 'rtwint = ( int *)srca->fld[0].rtwint;']
['v16 = v9;', 'v16 = v9;', 'v15 = v14;', 'v15 = v14;', 'v6 = v10;']
['v17 = legitimate_address_p( ( machine_mode)*( ( unsigned __int8 *)rtx + 2), v16, 0);']
['v3 = gen_reg_rtx( ( machine_mode)*( ( unsigned __int8 *)reg + 2));']
['rtx v35; // rbx', 'rtx v53; // rbx', 'rtx v58; // rbx', 'rtx v85; // rbx', 'rtx v35; // rbx', 'rtx v58; // rbx']
['rtx v6; // r13']
['rtx result; // rax', 'rtx result; // rax', 'rtx result; // rax', 'rtx result; // rax', 'rtx result; // rax', 'rtx result; // rax', 'rtx result; // rax']
['if ( ( mode_class_0[*( ( unsigned __int8 *)v2 + 2)] & 0xFFFFFFFB) != 2 )']
['&& mode_class_0[*( ( unsigned __int8 *)x + 2)] != MODE_VECTOR_FLOAT )', '&& mode_class_0[*( ( unsigned __int8 *)x + 2)] != MODE_VECTOR_FLOAT )']
['v5 = expand_compound_operation( rtx);']
['v6 = expand_compound_operation( v4);']
['v12 = *( _WORD *)v13;', 'v10 = *( _DWORD *)v9;']
['if ( *( _WORD *)v5 == *( _WORD *)v6 )', 'if ( *( _WORD *)v5 == *( _WORD *)v6 )']
['if ( *( _BYTE *)( v5->fld[0].rtwint + 2) == *( _BYTE *)( v6->fld[0].rtwint + 2) && v5[1] == v6[1] )', 'if ( *( _BYTE *)( v5->fld[0].rtwint + 2) == *( _BYTE *)( v6->fld[0].rtwint + 2) && v5[1] == v6[1] )', 'if ( *( _BYTE *)( v5->fld[0].rtwint + 2) == *( _BYTE *)( v6->fld[0].rtwint + 2) && v5[1] == v6[1] )', 'if ( *( _BYTE *)( v5->fld[0].rtwint + 2) == *( _BYTE *)( v6->fld[0].rtwint + 2) && v5[1] == v6[1] )']
['if ( *( _BYTE *)( v5->fld[0].rtwint + 2) == *( _BYTE *)( v6->fld[0].rtwint + 2) && v5[1] == v6[1] )', 'if ( *( _BYTE *)( v5->fld[0].rtwint + 2) == *( _BYTE *)( v6->fld[0].rtwint + 2) && v5[1] == v6[1] )', 'if ( *( _BYTE *)( v5->fld[0].rtwint + 2) == *( _BYTE *)( v6->fld[0].rtwint + 2) && v5[1] == v6[1] )', 'if ( *( _BYTE *)( v5->fld[0].rtwint + 2) == *( _BYTE *)( v6->fld[0].rtwint + 2) && v5[1] == v6[1] )']
['if ( v9[1] != 10 )']
['if ( v9[1] != 10 )']
['return size_5;']
['if ( size_5 >= 0 )']
['size_5 = 0;']
['if ( ix86_hard_regno_mode_ok( v5, ( machine_mode)i) )']
['if ( ix86_hard_regno_mode_ok( v5, ( machine_mode)i) )']
['if ( operand->predicate( v8, ( machine_mode)v6) )']
['if ( ix86_hard_regno_mode_ok( v5, ( machine_mode)i) )']
['if ( ix86_hard_regno_mode_ok( v5, ( machine_mode)i) )']
['if ( ix86_hard_regno_mode_ok( v5, ( machine_mode)i) )']
['v11 = safe_hash( v6, ( machine_mode)v8);']
['v9 = size_11;']
['if ( ( unsigned int)( mode_class_0[mode] - 5) > 1 )']
['mode_alignment = get_mode_alignment( ( machine_mode)v4);']
['size_5 += mode_size[v3];']
['v15 = hex_value[( unsigned __int8)*i];']
['v15 = hex_value[( unsigned __int8)*i];']
['v19 = sch_istable[v17];']
['while ( ( sch_istable[( unsigned __int8)*v38] & 4) != 0 );']
['if ( ( sch_istable[v13] & 4) == 0 )']
['while ( ( sch_istable[v9] & 4) != 0 );']
['sprintf( label, "*.%s%u", ( const char *)&off_6F972E, ( unsigned int)++labelno_17);', 'sprintf( label, "*.%s%u", ( const char *)&off_6F972E, ( unsigned int)++labelno_17);']
['sprintf( label, "*.%s%u", ( const char *)&off_6F972E, ( unsigned int)++labelno_17);', 'sprintf( label, "*.%s%u", ( const char *)&off_6F972E, ( unsigned int)++labelno_17);']
['fprintf( asm_out_file, ".%s%u:\\n", ( const char *)&off_6F972E, ( unsigned int)labelno_17);', 'fprintf( asm_out_file, ".%s%u:\\n", ( const char *)&off_6F972E, ( unsigned int)labelno_17);']
['fprintf( asm_out_file, ".%s%u:\\n", ( const char *)&off_6F972E, ( unsigned int)labelno_17);', 'fprintf( asm_out_file, ".%s%u:\\n", ( const char *)&off_6F972E, ( unsigned int)labelno_17);']
['v2 = after_function_constants;']
['after_function_constants = 0LL;']
['fprintf( asm_out_file, off_6F973A, 6514846LL);']
['v19 = etens[8];']
['v12 = &qty_0[v11];']
['if ( v25 != ( tree_node *)global_trees )']
['if ( !v12 || v12 == ( tree_node *)global_trees )']
['if ( in_section_0 != in_bss )']
['in_section_0 = in_bss;']
['fprintf( v29, off_6F973A, "object");']
['if ( ( tree_node *)global_trees == v2 )', 'if ( ( tree_node *)global_trees == v11 )']
['if ( in_section_0 == in_text )', 'if ( in_section_0 == in_text )']
['fprintf( asm_out_file, off_6F973A, "object");']
['if ( in_section_0 == in_text )', 'if ( in_section_0 == in_text )']
['v18 = ( tree_node *)*( ( _QWORD *)v2 + 1);', 'v22 = ( tree_node *)*( ( _QWORD *)v2 + 3);']
['rtx start; // rbp']
['rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax']
['rtx v9; // rax', 'rtx v9; // rax']
['start = loop->start;']
['nonnote_insn = prev_nonnote_insn( end);']
['v6 = nonnote_insn;']
['if ( *( _WORD *)nonnote_insn == 35 )']
['v6 = (  struct rtx_def *)nonnote_insn[1];']
['if ( start != rtx )']
['if ( start != v9 )']
['v10 = start;', 'v10 = start;']
['v10 = start;', 'v10 = start;']
['v9 = v9[1].fld[0].rtx;', 'v9 = v9[1].fld[0].rtx;', 'v9 = v9[1].fld[0].rtx;', 'v9 = v9[1].fld[0].rtx;']
['v9 = v9[1].fld[0].rtx;', 'v9 = v9[1].fld[0].rtx;', 'v9 = v9[1].fld[0].rtx;', 'v9 = v9[1].fld[0].rtx;']
['if ( v10 == rtx )']
['return mode_class_0[*( ( unsigned __int8 *)op + 2)] == MODE_FLOAT;']
['return mode_class_0[*( ( unsigned __int8 *)op + 2)] == MODE_FLOAT;']
['v1 = off_666031;', 'v7 = off_6BAD95;']
['v2 = ( tree_node *)*( &global_trees + 19);']
['if ( *( _OWORD *)v6->bits != 0LL )']
['*( _QWORD *)object_base = *v5;']
['*( _QWORD *)object_base = *v5;']
['*( _QWORD *)object_base = *v5;']
['induction_1 *biv; // rbx', 'induction_1 *biv; // rbx']
['induction_1 *biv; // rbx', 'induction_1 *biv; // rbx']
['biv = bl_0->biv;']
['if ( biv )', 'if ( biv )']
['v4 = *( ( _BYTE *)biv + 100);']
['if ( biv->mult_val != const_int_rtx[65] )']
['v2 = fold_rtx_mult_add( v2, const_int_rtx[65], biv->add_val, biv->mode);', 'v2 = fold_rtx_mult_add( v2, const_int_rtx[65], biv->add_val, biv->mode);']
['v2 = fold_rtx_mult_add( v2, const_int_rtx[65], biv->add_val, biv->mode);', 'v2 = fold_rtx_mult_add( v2, const_int_rtx[65], biv->add_val, biv->mode);']
['biv = biv->next_iv;', 'biv = biv->next_iv;']
['biv = biv->next_iv;', 'biv = biv->next_iv;']
['if ( !biv )']
['rtx v19; // rbx']
['if ( !ignore_next_note_3 )']
['ignore_next_note_3 = 0;']
['ignore_next_note_3 = 1;']
['return gen_rtx_fmt_ee( ( rtx_code)*( _WORD *)x, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v5, v6);', 'return gen_rtx_fmt_ee( ( rtx_code)*( _WORD *)x, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v5, v6);', 'return gen_rtx_fmt_ee( ( rtx_code)*( _WORD *)x, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v5, v6);', 'return gen_rtx_fmt_ee( ( rtx_code)*( _WORD *)x, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v5, v6);']
['return gen_rtx_fmt_ee( ( rtx_code)*( _WORD *)x, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v5, v6);', 'return gen_rtx_fmt_ee( ( rtx_code)*( _WORD *)x, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v5, v6);', 'return gen_rtx_fmt_ee( ( rtx_code)*( _WORD *)x, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v5, v6);', 'return gen_rtx_fmt_ee( ( rtx_code)*( _WORD *)x, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v5, v6);']
['*( _QWORD *)&src->end[4] = v15;']
['v8 = ( const char *)&unk_6F6114;', 'v8 = ( const char *)&unk_6F6128;', 'v8 = ( const char *)&unk_6F613E;', 'v8 = ( const char *)&unk_6F6150;']
['v8 = ( const char *)&unk_6F613E;']
['v8 = ( const char *)&unk_6F6114;']
['v8 = ( const char *)&unk_6F6114;', 'v8 = ( const char *)&unk_6F6128;', 'v8 = ( const char *)&unk_6F613E;', 'v8 = ( const char *)&unk_6F6150;']
['v13 = *( tree_node **)( low + 8);']
['if ( v12 == ( tree_node *)global_trees )', 'if ( v13 == ( tree_node *)global_trees )']
['v6 = ( tree_node *)global_trees;']
['sprintf( v9, "%s.%d", "__compound_literal", ( unsigned int)var_labelno);']
['++var_labelno;']
['node->int_cst.int_cst = *( $A887AD9C3C6C8CC7716950D571F57C9D *)&v4->block.vars;']
['reg_dies( *( _DWORD *)( v10 + 8), ( machine_mode)*( unsigned __int8 *)( v10 + 2), v9);', 'reg_dies( *( _DWORD *)( v12 + 8), ( machine_mode)*( unsigned __int8 *)( v12 + 2), v9);']
['reg_dies( *( _DWORD *)( v10 + 8), ( machine_mode)*( unsigned __int8 *)( v10 + 2), v9);', 'reg_dies( *( _DWORD *)( v12 + 8), ( machine_mode)*( unsigned __int8 *)( v12 + 2), v9);']
['$A887AD9C3C6C8CC7716950D571F57C9D *p_int_cst; // rax', '$A887AD9C3C6C8CC7716950D571F57C9D *p_int_cst; // rax', '$A887AD9C3C6C8CC7716950D571F57C9D *p_int_cst; // rax', '$A887AD9C3C6C8CC7716950D571F57C9D *p_int_cst; // rax', '$A887AD9C3C6C8CC7716950D571F57C9D *p_int_cst; // rax', '$A887AD9C3C6C8CC7716950D571F57C9D *p_int_cst; // rax']
['$A887AD9C3C6C8CC7716950D571F57C9D *p_int_cst; // rax', '$A887AD9C3C6C8CC7716950D571F57C9D *p_int_cst; // rax', '$A887AD9C3C6C8CC7716950D571F57C9D *p_int_cst; // rax', '$A887AD9C3C6C8CC7716950D571F57C9D *p_int_cst; // rax', '$A887AD9C3C6C8CC7716950D571F57C9D *p_int_cst; // rax', '$A887AD9C3C6C8CC7716950D571F57C9D *p_int_cst; // rax']
['p_int_cst = &node->int_cst.int_cst;', 'p_int_cst = &node->int_cst.int_cst;']
['p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);']
['p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);']
['p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);']
['v12 = *( _WORD *)v13;', '*( _OWORD *)i0 = ~*( _OWORD *)&v12;']
['if ( p_int_cst == ( $A887AD9C3C6C8CC7716950D571F57C9D *)v7 )', 'if ( p_int_cst == ( $A887AD9C3C6C8CC7716950D571F57C9D *)v7 )']
['if ( p_int_cst == ( $A887AD9C3C6C8CC7716950D571F57C9D *)v7 )', 'if ( p_int_cst == ( $A887AD9C3C6C8CC7716950D571F57C9D *)v7 )']
['p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);']
['p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);']
['p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);']
['v12 = *( _WORD *)v13;']
['$A887AD9C3C6C8CC7716950D571F57C9D *p_int_cst; // rax', '$A887AD9C3C6C8CC7716950D571F57C9D *p_int_cst; // rax', '$A887AD9C3C6C8CC7716950D571F57C9D *p_int_cst; // rax', '$A887AD9C3C6C8CC7716950D571F57C9D *p_int_cst; // rax', '$A887AD9C3C6C8CC7716950D571F57C9D *p_int_cst; // rax', '$A887AD9C3C6C8CC7716950D571F57C9D *p_int_cst; // rax']
['$A887AD9C3C6C8CC7716950D571F57C9D *p_int_cst; // rax', '$A887AD9C3C6C8CC7716950D571F57C9D *p_int_cst; // rax', '$A887AD9C3C6C8CC7716950D571F57C9D *p_int_cst; // rax', '$A887AD9C3C6C8CC7716950D571F57C9D *p_int_cst; // rax', '$A887AD9C3C6C8CC7716950D571F57C9D *p_int_cst; // rax', '$A887AD9C3C6C8CC7716950D571F57C9D *p_int_cst; // rax']
['p_int_cst = &node->int_cst.int_cst;', 'p_int_cst = &node->int_cst.int_cst;']
['p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);']
['p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);']
['p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);']
['v12 = *( _WORD *)v13;', '*( _OWORD *)i0 = ~*( _OWORD *)&v12;']
['if ( p_int_cst == ( $A887AD9C3C6C8CC7716950D571F57C9D *)v7 )', 'if ( p_int_cst == ( $A887AD9C3C6C8CC7716950D571F57C9D *)v7 )']
['if ( p_int_cst == ( $A887AD9C3C6C8CC7716950D571F57C9D *)v7 )', 'if ( p_int_cst == ( $A887AD9C3C6C8CC7716950D571F57C9D *)v7 )']
['p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);']
['p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);']
['p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);']
['v12 = *( _WORD *)v13;']
['if ( reg_note )', 'if ( reg_note )', 'if ( reg_note )', 'if ( reg_note )']
['if ( !reg_note )', 'if ( !reg_note )']
['v23 = ( tree_node *)*( &global_trees + 12);', 'v3 = ( tree_node *)*( &global_trees + 16);', 'v3 = ( tree_node *)*( &global_trees + 16);', 'v3 = ( tree_node *)*( &global_trees + 16);', 'v3 = ( tree_node *)*( &global_trees + 15);', 'v17 = ( tree_node *)*( &global_trees + 12);']
['v37 = build( ( tree_code)( 59 - ( ( ( ( code - 130) & 0xFFFFFFFD) == 0) - 1)), v22, v36, v24);']
['v6 = ( tree_node *)global_trees;', 'v4 = ( tree_node *)global_trees;', 'v4 = ( tree_node *)global_trees;', 'v4 = ( tree_node *)global_trees;']
['v23 = ( tree_node *)splay_tree_lookup( cases, ( splay_tree_key)low_value);']
['duplicatea = *( tree_node **)( low_bound->value + 48);']
['v8 = *( tree_node **)( low + 40);']
['v2 = ( tree_node *)*( &global_trees + 16);']
['v2 = ( tree_node *)*( &global_trees + 15);']
['v2 = ( tree_node *)*( &global_trees + 16);', 'v6 = ( tree_node *)*( &global_trees + 16);', 'v3 = ( tree_node *)*( &global_trees + 16);', 'v3 = ( tree_node *)*( &global_trees + 16);', 'v3 = ( tree_node *)*( &global_trees + 16);', 'v18 = ( tree_node *)*( &global_trees + 11);', 'v17 = ( tree_node *)*( &global_trees + 12);', 'v17 = ( tree_node *)*( &global_trees + 11);', 'v18 = ( tree_node *)*( &global_trees + 15);']
['if ( *( tree_node **)( *( _QWORD *)( low + 8) + 8LL) != v14 )']
['if ( *( tree_node **)( *( _QWORD *)( low + 8) + 8LL) != v14 )']
['v0 = &if_stack_0[--if_stack_pointer];']
['if ( ( tree_node *)global_trees != v5 )']
['if_stack_0 = ( if_elt *)xrealloc( if_stack_0, 32LL * ( v4 + 10));', 'if_stack_0 = ( if_elt *)xrealloc( if_stack_0, 32LL * ( v4 + 10));']
['if_stack_0 = ( if_elt *)xrealloc( if_stack_0, 32LL * ( v4 + 10));', 'if_stack_0 = ( if_elt *)xrealloc( if_stack_0, 32LL * ( v4 + 10));']
['if_stack_0 = ( if_elt *)xmalloc( 0x140uLL);']
['v6 = &if_stack_0[if_stack_pointer];']
['v1 = &if_stack_0[v0 - 2];']
['if ( if_stack_0[v0 - 1].compstmt_count == v1->compstmt_count )']
['if_stmt = if_stack_0[if_stack_pointer - 1].if_stmt;', 'if_stmt = if_stack_0[if_stack_pointer - 1].if_stmt;']
['if_stmt = if_stack_0[if_stack_pointer - 1].if_stmt;', 'if_stmt = if_stack_0[if_stack_pointer - 1].if_stmt;']
['timevar_push( TV_CPP_0);']
['timevar_pop( TV_CPP_0);']
['if ( ( sch_istable[c] & 0xAC) != 0 )']
['v3 = ( tree_node *)*( &global_trees + 16);', 'v3 = ( tree_node *)*( &global_trees + 16);', 'v3 = ( tree_node *)*( &global_trees + 16);']
['v3 = ( tree_node *)*( &global_trees + 15);']
['*( _QWORD *)&src->end[4] = v15;']
['*( _QWORD *)&src->end[4] = v15;']
['*( _QWORD *)&v14[1] = rtx;', '*( _QWORD *)&src->end[4] = v15;', '*( _QWORD *)object_base = *v5;', '*( _QWORD *)&v10[1] = v8;', '*( _QWORD *)&v10[1] = v11;', '*( _QWORD *)&v11[1] = v10;']
['*( _QWORD *)&src->end[4] = v15;']
['if ( *( _OWORD *)&idom != 0LL )']
['rtx last_value; // rax']
['rtx *v21; // rbp']
['rtx v25; // rax', 'rtx v25; // rax', 'rtx v25; // rax', 'rtx v25; // rax', 'rtx v25; // rax', 'rtx v25; // rax', 'rtx v25; // rax']
['rtx v27; // rax', 'rtx v27; // rax']
['rtx insns; // [rsp+8h] [rbp-20h] BYREF']
['insn = rtx;']
['v2 = ( unsigned __int64 *)primes_0;']
['x[0] = ( rtx)v1;']
['return general_operand( op, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4));', 'return general_operand( op, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4));']
['return general_operand( op, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4));', 'return general_operand( op, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4));']
['v9 = ( tree_node *)i[4];']
['while ( v2 != ( change_t_0 *)v3 );']
['( machine_mode)*( unsigned __int8 *)( v2.rtwint + 2));']
['|| !global_regs[rtuint] && ( fixed_regs[rtuint] || mode_class_0[*( ( unsigned __int8 *)rtx + 2)] == MODE_CC) )']
['|| insn_data_0[rtint].n_dups > 0) )']
['return gen_rtx_fmt_ee( PLUS, ( machine_mode)*( ( unsigned __int8 *)x + 2), v6, v7);', 'return gen_rtx_fmt_ee( PLUS, ( machine_mode)*( ( unsigned __int8 *)x + 2), v4, v5);', 'return gen_rtx_fmt_ee( PLUS, ( machine_mode)*( ( unsigned __int8 *)x + 2), v4, v2);']
['v7 = base_alias_check( addr, mem_addr, ( machine_mode)*( ( unsigned __int8 *)x + 2), mem_mode);']
['rtx v8; // r12']
['rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax']
['rtx v17; // rax', 'rtx v17; // rax', 'rtx v17; // rax', 'rtx v17; // rax']
['rtx old; // [rsp+8h] [rbp-50h]']
['rtx ya; // [rsp+8h] [rbp-70h]']
['v9 = ( rtx)cond[1];']
['if ( rtx_class[v10] == 60 && const_tiny_rtx[0][*( ( unsigned __int8 *)rtx + 2)] == v9 && rtx != want_reg )']
['v9 = ( rtx)rtx[1];', 'v9 = ( rtx)rtx[1];', 'v6 = ( rtx)rtx[1];']
['if ( rtx_class[v10] != 60 || const_tiny_rtx[0][*( ( unsigned __int8 *)rtx + 2)] != v9 || rtx == want_reg )']
['nonnote_insn = prev_nonnote_insn( v5);']
['v5 = nonnote_insn;']
['if ( reg_note )', 'if ( reg_note )', 'if ( reg_note )', 'if ( reg_note )']
['if ( *( __int64 *)( reg_note->fld[0].rtwint + 8) <= 4999 )']
['subtarget = gen_reg_rtx( ( machine_mode)*( ( unsigned __int8 *)value + 2));']
['v7 = gen_rtx_MEM( ( machine_mode)v6, pointer);']
['rtx v6; // r13', 'rtx v6; // rdx', 'rtx v6; // rbx', 'rtx v6; // r12', 'rtx v6; // r12', 'rtx v6; // rax', 'rtx v6; // rax', 'rtx v6; // rdi', 'rtx v6; // rax']
['rtx v7; // rax', 'rtx v7; // rax']
['if ( !rtx_equal_p( rtx, memref->fld[0].rtx) || ( v6 = memref, *( ( unsigned __int8 *)memref + 2) != v4) )']
['v6 = gen_rtx_MEM( v4, rtx);']
['*( _QWORD *)&v14[1] = rtx;', '*( _QWORD *)&v10[1] = v11;', '*( _QWORD *)&v11[1] = v10;']
['v6 = v5;', 'v6 = v5;']
['v6 = v5;', 'v6 = v5;']
['v7 = *( ( _BYTE *)memref + 3) & 8 | *( ( _BYTE *)v6 + 3) & 0xF7;']
['v7 = *( ( _BYTE *)memref + 3) & 8 | *( ( _BYTE *)v6 + 3) & 0xF7;']
['*( ( _BYTE *)v6 + 3) = v7;']
['*( ( _BYTE *)v6 + 3) = v7;']
['v7 = *( ( _BYTE *)memref + 3) & 8 | *( ( _BYTE *)v6 + 3) & 0xF7;']
['v7 = *( ( _BYTE *)memref + 3) & 8 | *( ( _BYTE *)v6 + 3) & 0xF7;']
['*( ( _BYTE *)v6 + 3) = v7;']
['*( ( _BYTE *)v6 + 3) = v7;']
['if ( ( sch_istable[*( unsigned __int8 *)v10] & 4) != 0 && !v10[1] )']
['rtx v10; // rax', 'rtx v16; // rax', 'rtx v13; // rax', 'rtx v92; // rax', 'rtx v10; // rax', 'rtx v18; // rax', 'rtx v42; // rax', 'rtx v22; // rax', 'rtx v42; // rax', 'rtx v13; // rax', 'rtx v10; // rax', 'rtx v42; // rax', 'rtx v14; // rax', 'rtx v82; // rax', 'rtx v15; // rax', 'rtx v22; // rax', 'rtx v12; // rdx', 'rtx v19; // rax', 'rtx v11; // rax', 'rtx v42; // rax', 'rtx v16; // rax', 'rtx v17; // rax', 'rtx v13; // rax', 'rtx v42; // rax', 'rtx v10; // rax', 'rtx v10; // rax', 'rtx v10; // rax', 'rtx v11; // rax', 'rtx v15; // rax', 'rtx v17; // rax', 'rtx v10; // rax', 'rtx v17; // rax', 'rtx v15; // rax', 'rtx v17; // rax', 'rtx v11; // rax']
['rtx v25; // rsi', 'rtx v28; // rsi', 'rtx v20; // rdi', 'rtx v40; // rsi', 'rtx v22; // rsi', 'rtx v60; // rsi']
['rtx v22; // rax', 'rtx v22; // rax']
['rtx insna; // [rsp+20h] [rbp-C0h]']
['n_operands = recog_data_0.n_operands;', 'n_operands = recog_data_0.n_operands;', 'n_operands = recog_data_0.n_operands;', 'n_operands = recog_data_0.n_operands;']
['n_outputs = recog_data_0.n_operands - asm_operand_n_inputs;']
['if ( recog_data_0.n_operands > 0 )', 'if ( recog_data_0.n_operands > 0 )', 'if ( recog_data_0.n_operands > 0 )', 'if ( recog_data_0.n_operands > 0 )', 'if ( recog_data_0.n_operands > 0 )', 'if ( recog_data_0.n_operands > 0 )']
['v7 = recog_data_0.operand[v4];', 'v9 = recog_data_0.operand[v6];']
['recog_data_0.operand[0] = rtx;', 'recog_data_0.operand[0] = rtx;', 'recog_data_0.operand[0] = rtx;', 'recog_data_0.operand[0] = rtx;', 'recog_data_0.operand[0] = rtx;', 'recog_data_0.operand[0] = rtx;', 'recog_data_0.operand[0] = rtx;', 'recog_data_0.operand[0] = rtx;', 'recog_data_0.operand[0] = rtx;']
['v13 = recog_data_0.operand[v11];', 'v13 = recog_data_0.operand[v11];', 'v12 = recog_data_0.operand[0];', 'v12 = recog_data_0.operand[0];', 'v2 = recog_data_0.operand[v1];']
['v13 = recog_data_0.operand[v11];', 'v13 = recog_data_0.operand[v11];', 'v12 = recog_data_0.operand[0];', 'v12 = recog_data_0.operand[0];', 'v2 = recog_data_0.operand[v1];']
['if ( *( _WORD *)v17 == 61 )']
['rtwint = v14->fld[0].rtwint;', 'rtuint = reg->fld[0].rtuint;', 'rtuint = reg->fld[0].rtuint;']
['v13 = recog_data_0.operand[v11];', 'v13 = recog_data_0.operand[v11];', 'v12 = recog_data_0.operand[0];', 'v12 = recog_data_0.operand[0];', 'v2 = recog_data_0.operand[v1];']
['v8 = *( tree_node **)( v7->int_cst.int_cst.low + 32);']
['timevar_push( TV_SYMOUT_0);', 'timevar_push( TV_SYMOUT_0);', 'timevar_push( TV_SYMOUT_0);']
['timevar_pop( TV_SYMOUT_0);', 'timevar_pop( TV_SYMOUT_0);', 'timevar_pop( TV_SYMOUT_0);']
['induction_1 *v23; // r12', 'induction_1 *v23; // r12']
['induction_1 *v23; // r12', 'induction_1 *v23; // r12']
['rtx src_reg; // [rsp+18h] [rbp-60h] BYREF']
['rtx add_val; // [rsp+20h] [rbp-58h] BYREF']
['rtx mult_val; // [rsp+28h] [rbp-50h] BYREF']
['rtx ext_val; // [rsp+30h] [rbp-48h] BYREF']
['rtx last_consec_insn[8]; // [rsp+38h] [rbp-40h] BYREF']
['&& rtx_equal_p( *( rtx *)&v8[1], static_chain_incoming_rtx->fld[0].rtx) )', 'df_uses_record( df_0, ( rtx *)&rtx[1], DF_REF_REG_USE, bb, insn, ( df_ref_flags)0);', 'note_stores( *( ( rtx *)v11 + 4), reg_becomes_live_0, live_at_edge);', 'if ( rtx_equal_p( *( rtx *)( v195 + 8), recog_data_0.operand[1]) )', 'if ( rtx_equal_p( *( rtx *)( v195 + 16), recog_data_0.operand[2]) )', 'if ( rtx_equal_p( *( rtx *)( v197 + 8), recog_data_0.operand[1]) )', 'if ( rtx_equal_p( *( rtx *)( v197 + 16), recog_data_0.operand[2]) )', 'if ( rtx_equal_p( *( rtx *)( v110 + 8), recog_data_0.operand[2]) )', 'if ( rtx_equal_p( *( rtx *)( v115 + 8), recog_data_0.operand[3]) )']
['&& rtx_equal_p( *( rtx *)&v8[1], static_chain_incoming_rtx->fld[0].rtx) )', 'df_uses_record( df_0, ( rtx *)&rtx[1], DF_REF_REG_USE, bb, insn, ( df_ref_flags)0);', 'note_stores( *( ( rtx *)v11 + 4), reg_becomes_live_0, live_at_edge);', 'if ( rtx_equal_p( *( rtx *)( v195 + 8), recog_data_0.operand[1]) )', 'if ( rtx_equal_p( *( rtx *)( v195 + 16), recog_data_0.operand[2]) )', 'if ( rtx_equal_p( *( rtx *)( v197 + 8), recog_data_0.operand[1]) )', 'if ( rtx_equal_p( *( rtx *)( v197 + 16), recog_data_0.operand[2]) )', 'if ( rtx_equal_p( *( rtx *)( v110 + 8), recog_data_0.operand[2]) )', 'if ( rtx_equal_p( *( rtx *)( v115 + 8), recog_data_0.operand[3]) )']
['v30 = ( ( unsigned int)( mode_class_0[v24] - 5) < 2) + 1;']
['v13 = ( ( unsigned int)( mode_class_0[v11] - 5) < 2) + 1;', 'v33 = ( ( unsigned int)( mode_class_0[v31] - 5) < 2) + 1;']
['v14 = ( ( unsigned int)( mode_class_0[*v17] - 5) < 2) + 1;']
['v5 = ( ( unsigned int)( mode_class_0[v2] - 5) < 2) + 1;', 'v31 = ( ( unsigned int)( mode_class_0[v29] - 5) < 2) + 1;', 'v30 = ( ( unsigned int)( mode_class_0[v24] - 5) < 2) + 1;', 'v34 = ( ( unsigned int)( mode_class_0[v26] - 5) < 2) + 1;']
['else if ( ( unsigned int)( mode_class_0[v3] - 5) >= 2 )', 'v31 = ( ( unsigned int)( mode_class_0[v29] - 5) < 2) + 1;']
['if ( ix86_hard_regno_mode_ok( v5, ( machine_mode)i) )']
['v21 = subreg_regno_offset( rtint, ( machine_mode)*( ( unsigned __int8 *)v19 + 2), nr, v18) + rtint;']
['v22 = smallest_mode_for_size( nr + mode_size[v18], mode_class_0[v18]);']
['if ( !ix86_hard_regno_mode_ok( v21, *( ( machine_mode *)&rld + 26 * v12 + 7)) )']
['nre = ix86_register_move_cost( v18, ( reg_class)j, ( reg_class)bad_for_class);']
['if ( nre >= ix86_memory_move_cost( v18, ( reg_class)bad_for_class, 1)']
['|| ix86_secondary_memory_needed( ( reg_class)j, ( reg_class)bad_for_class, v18, 1) )']
['*( reload_type *)( v7 + 64),']
['*( machine_mode *)v7);']
['( machine_mode)( BYTE5( type->block.abstract_origin) >> 1),', '( machine_mode)( BYTE5( type->block.abstract_origin) >> 1),']
['( machine_mode)( *( _BYTE *)( rtl->fld[0].rtwint + 61) >> 1),']
['( machine_mode)( BYTE5( type->block.abstract_origin) >> 1),', '( machine_mode)( BYTE5( type->block.abstract_origin) >> 1),']
['( machine_mode)( *( _BYTE *)( i->fld[0].rtwint + 61) >> 1),']
['rtx v2; // rbp']
['rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax']
['v2 = rtx;', 'v2 = rtx;', 'v2 = rtx;']
['if ( *( _WORD *)v14 != 75 )']
['nonnote_insn = prev_nonnote_insn( v5);']
['nonnote_insn = prev_nonnote_insn( v5);']
['if ( *( _WORD *)nonnote_insn == 35 )']
['if ( *( _WORD *)v14 != 75 )']
['delete_insn( v4);', 'delete_insn( v4);']
['delete_insn( nonnote_insn);']
['delete_insn( nonnote_insn);']
['delete_insn( nonnote_insn);']
['timevar_push( TV_CLEANUP_CFG_0);']
['timevar_push( TV_CLEANUP_CFG_0);']
['if ( recog_data_0.n_operands > 0 )', 'if ( recog_data_0.n_operands > 0 )', 'if ( recog_data_0.n_operands > 0 )', 'if ( recog_data_0.n_operands > 0 )', 'if ( recog_data_0.n_operands > 0 )', 'if ( recog_data_0.n_operands > 0 )']
['v3 = recog_data_0.operand_loc[v1];']
['recog_data_0.operand[v1] = alter_subreg( v3);']
['while ( recog_data_0.n_operands > ( int)v1 );', 'while ( recog_data_0.n_operands > ( int)v4 );', 'while ( recog_data_0.n_operands > ( int)v1 );', 'while ( recog_data_0.n_operands > ( int)v6 );']
['else if ( ( unsigned __int16)( *( _WORD *)recog_data_0.operand[v1] - 66) <= 0xCu']
['&& _bittest64( &v2, ( unsigned int)*( _WORD *)recog_data_0.operand[v1] - 66) )']
['recog_data_0.operand[v1] = walk_alter_subreg( v3);']
['while ( recog_data_0.n_operands > ( int)v1 );', 'while ( recog_data_0.n_operands > ( int)v4 );', 'while ( recog_data_0.n_operands > ( int)v1 );', 'while ( recog_data_0.n_operands > ( int)v6 );']
['while ( recog_data_0.n_dups > ( int)v4 );']
['v6 = recog_data_0.dup_loc[v4];']
['*v6 = alter_subreg( recog_data_0.dup_loc[v4]);']
['*v6 = walk_alter_subreg( recog_data_0.dup_loc[v4]);']
['if ( ( unsigned int)( mode_class_0[v6] - 5) <= 1 )']
['if ( *( _WORD *)v14 == 140 || *( _WORD *)v14 == 134 || !v15 )', 'if ( *( _WORD *)v14 == 140 || *( _WORD *)v14 == 134 || !v15 )', 'if ( *( _WORD *)src != 61 && *( _WORD *)src != 75 )', 'if ( *( _WORD *)src != 61 && *( _WORD *)src != 75 )']
['if ( *( _OWORD *)&x == 0LL )']
['*( _QWORD *)( v11 + 24) = v10;']
['*( _QWORD *)( v11 + 24) = v10;']
['for ( flow_edges = entry_exit_blocks[0].succ; succ; edge_info_0[edge_index] = succ )']
['*( _QWORD *)&src->end[4] = v15;']
['*( _QWORD *)&v14[1] = rtx;', '*( _QWORD *)&v10[1] = v8;', '*( _QWORD *)&v10[1] = v11;', '*( _QWORD *)&v11[1] = v10;']
['*( _QWORD *)&src->end[4] = v15;']
['v28 = ( tree_node *)i[4];']
['v10 = ( ( unsigned int)( mode_class_0[mode] - 5) < 2) + 1;']
['v29 = ( ( unsigned int)( mode_class_0[v22] - 5) < 2) + 1;']
['tree v11; // r12']
['tree v20; // rax', 'tree v23; // rax', 'tree v24; // rax', 'tree v17; // rax', 'tree v22; // rax', 'tree v23; // rax', 'tree v24; // rax', 'tree v25; // rax', 'tree v17; // rax']
['tree v20; // rax', 'tree v23; // rax', 'tree v24; // rax', 'tree v22; // rax', 'tree v23; // rax', 'tree v24; // rax', 'tree v25; // rax']
['tree v35; // rdi']
['targeta = gen_reg_rtx( ( machine_mode)*( ( unsigned __int8 *)target + 2));', 'targeta = gen_reg_rtx( ( machine_mode)*( ( unsigned __int8 *)target + 2));', 'subtarget = gen_reg_rtx( ( machine_mode)*( ( unsigned __int8 *)value + 2));']
['htab_empty( hash_table_0);']
['|| ( v11 = ix86_hard_regno_mode_ok( rtuint, ( machine_mode)*( ( unsigned __int8 *)v15 + 2))) != 0 )']
['rtx v19; // rbx', 'rtx v39; // rbx']
['rtx v13; // rbx']
['rtx v21; // rax']
['reg_last_set_mode = ( machine_mode *)xmalloc( 4LL * nregs);']
['v4 = f;']
['v141 = v143->fld[0].rtint;']
['subst_insn = v4;']
['v12 = *( _WORD *)v13;', 'v10 = *( _DWORD *)v9;']
['if ( rtx_class[*( _WORD *)v4] == 105 )']
['rtx v11; // rcx', 'rtx v72; // rcx', 'rtx v12; // rdx']
['rtx v20; // rax', 'rtx v20; // rax', 'rtx v20; // rdi', 'rtx v20; // rbx', 'rtx v20; // rax', 'rtx v26; // rdx', 'rtx v21; // rdx', 'rtx v20; // rax', 'rtx v10; // rdx']
['v11 = rtx;', 'v2 = rtx;', 'v2 = rtx;', 'v2 = rtx;']
['v14 = ( unsigned __int64)v13 | pos;']
['( machine_mode)*( ( unsigned __int8 *)rtx + 2),']
['( machine_mode)*( ( unsigned __int8 *)v11 + 2));', '( machine_mode)*( ( unsigned __int8 *)v11 + 2));', '( machine_mode)*( ( unsigned __int8 *)v13 + 2));']
['( machine_mode)*( ( unsigned __int8 *)v11 + 2));', '( machine_mode)*( ( unsigned __int8 *)v11 + 2));', '( machine_mode)*( ( unsigned __int8 *)v13 + 2));']
['v13 = ( ( unsigned int)( mode_class_0[v11] - 5) < 2) + 1;', 'v17 = ( ( unsigned int)( mode_class_0[v15] - 5) < 2) + 1;', 'v18 = ( ( unsigned int)( mode_class_0[v4] - 5) < 2) + 1;', 'v10 = ( ( unsigned int)( mode_class_0[v6] - 5) < 2) + 1;', 'v16 = ( ( unsigned int)( mode_class_0[v18] - 5) < 2) + 1;', 'v15 = ( ( unsigned int)( mode_class_0[v11] - 5) < 2) + 1;']
['v16 = v9;', 'v16 = v9;', 'v10 = v7;', 'v10 = v7;', 'v10 = v7;', 'v10 = v7;', 'v10 = v5;', 'v10 = v5;', 'v10 = v5;', 'v10 = v5;']
['v14 = ( unsigned __int64)v13 | pos;']
['( machine_mode)*( ( unsigned __int8 *)v9 + 2),', '( machine_mode)*( ( unsigned __int8 *)v9 + 2),']
['( machine_mode)*( ( unsigned __int8 *)v11 + 2));', '( machine_mode)*( ( unsigned __int8 *)v11 + 2));', '( machine_mode)*( ( unsigned __int8 *)v20 + 2),', '( machine_mode)*( ( unsigned __int8 *)v13 + 2));', '( machine_mode)*( ( unsigned __int8 *)v2 + 2))]', '( machine_mode)*( ( unsigned __int8 *)v4 + 2));']
['if ( mode_class_0[*( unsigned __int8 *)( v3.rtwint + 2)] == MODE_CC )']
['return gen_rtx_fmt_ee( ( rtx_code)v7, mode, rtx->fld[0].rtx, *( rtx *)&rtx[1]);']
['rtx v13; // r12', 'rtx v13; // r12', 'rtx v13; // r12', 'rtx v153; // r12', 'rtx v10; // r14']
['if ( memory_address_p( ( machine_mode)*( ( unsigned __int8 *)memref + 2), global_rtl[2]) )']
['v8 = ( tree_node *)high[4];', 'v9 = ( tree_node *)high[4];']
['v1 = lang_hooks_0.expand_constant( exp);']
['rtx *v23; // rax', 'rtx v21; // rax', 'rtx *v31; // rax', 'rtx *v61; // rax', 'rtx *v71; // rax']
['v5 = group_leader( *( rtx *)( i + 8));']
['v7 = v11;']
['remove_note( v16, reg_note);']
['v2 = *( _OWORD *)&scale.base;']
['change_stack( src->end, &tmpstack, v5, ( emit_where)( *( _WORD *)src->end == 33));']
['i = ( tree_node *)high[3];', 'v8 = ( tree_node *)high[4];', 'v9 = ( tree_node *)high[4];']
['rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax']
['rtx v4; // rbp', 'rtx v4; // rbp']
['rtx v6; // rax', 'rtx v6; // rax', 'rtx v6; // rax']
['rtx v70; // rbx', 'rtx v47; // rbx', 'rtx v67; // rbx', 'rtx v77; // rbx']
['rtx v8; // rax']
['rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rdi', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax']
['if ( rtx_class[*( _WORD *)i] == 105 )']
['delete_insn( insns[1].fld[0].rtx);']
['delete_insn( insns[1].fld[0].rtx);']
['if ( ( !nonnote_insn']
['v6 = nonnote_insn;', 'v5 = nonnote_insn;']
['v6 = nonnote_insn;', 'v5 = nonnote_insn;']
['nonnote_insn = next_nonnote_insn( ( rtx)v6);']
['nonnote_insn = next_nonnote_insn( ( rtx)v6);']
['reg_avail_info_0 = 0LL;']
['free( reg_avail_info_0);']
['reg_avail_info_0 = 0LL;']
['rtx insn; // [rsp+18h] [rbp-20h] BYREF', 'rtx insns; // [rsp+8h] [rbp-20h] BYREF']
['insn = insns;']
['for_each_rtx( &insn, insns_for_mem_walk, &ifmwi);']
['rtx = insn[1].fld[0].rtx;']
['insn = rtx;']
['rtx v18; // rax']
['reg_set_0 *v23; // rdx', 'reg_set_0 *v23; // rdx']
['reg_set_0 *v23; // rdx', 'reg_set_0 *v23; // rdx']
['rtx insns; // rbx']
['reg_set_0 *v23; // rdx', 'reg_set_0 *v23; // rdx']
['reg_set_0 *v23; // rdx', 'reg_set_0 *v23; // rdx']
['rtx v35; // rax', 'rtx v35; // rax', 'rtx v35; // rax', 'rtx v35; // rbx', 'rtx v35; // rax', 'rtx v35; // rax', 'rtx v35; // rbx']
['v15 = reg_set_table[rtuint];']
['if ( v23 )', 'if ( v19 )', 'if ( v2 )']
['insna = insn;', 'insn = insns;', 'insna = insn;']
['insna = insn;', 'insn = insns;', 'insna = insn;']
['v23 = v23->next;', 'v23 = v23->next;']
['v23 = v23->next;', 'v23 = v23->next;']
['v17 = bmap[*( int *)( v16->data.l[v15->insn->fld[0].rtint] + 88)];', 'v25 = bmap[*( int *)( v24->data.l[v23->insn->fld[0].rtint] + 88)];']
['while ( v23 );', 'while ( v9 );']
['v15 = reg_set_table[rtuint];']
['if ( ( unsigned int)( mode_class_0[v10] - 5) > 1 )']
['rtx v20; // rax', 'rtx v27; // rax', 'rtx v26; // rax', 'rtx v26; // rax', 'rtx v20; // rax', 'rtx v25; // rax', 'rtx v28; // rax', 'rtx v21; // rax', 'rtx v22; // rax', 'rtx v25; // rax', 'rtx v27; // rax', 'rtx v25; // rax', 'rtx v28; // rax', 'rtx v9; // rax', 'rtx v26; // rax', 'rtx v28; // rax', 'rtx v39; // rax', 'rtx v79; // rax', 'rtx v25; // rax', 'rtx v22; // rax', 'rtx v26; // rax', 'rtx v25; // rax', 'rtx v19; // rax', 'rtx v20; // rax', 'rtx v23; // rax', 'rtx v24; // rax', 'rtx v25; // rax', 'rtx v25; // rax', 'rtx v39; // rax', 'rtx v20; // rax', 'rtx v9; // rax']
['rtx v29; // [rsp+32h] [rbp-D0h]']
['rtx v30; // [rsp+3Ah] [rbp-C8h]']
['rtx *add_vala; // [rsp+B2h] [rbp-50h]']
['rtx src_rega[2]; // [rsp+BAh] [rbp-48h] BYREF']
['src_rega[0] = src_reg;']
['add_vala = add_val;']
['v6 = v5;', 'v6 = v5;', 'v14 = v25;', 'v5 = v10;', 'v5 = v10;', 'v15 = v14;', 'v15 = v14;', 'v6 = v10;', 'v9 = v10;', 'v10 = v5;', 'v10 = v5;', 'v10 = v5;', 'v10 = v5;', 'v12 = v7;', 'v7 = v11;']
['v11 = v26;', 'v5 = v10;', 'v5 = v10;', 'v15 = v14;', 'v15 = v14;', 'v6 = v10;', 'v7 = v6;', 'v9 = v10;', 'v11 = v6;', 'v11 = v6;', 'v7 = v11;', 'v4 = v6;']
['v28 = src_rega[0];']
['add_vala = add_val;']
['v60 = ( tree_node *)i[4];', 'v28 = ( tree_node *)i[4];']
['v14 = ( unsigned int)( mode_class_0[mode] - 5) <= 1;']
['*( _OWORD *)v28.r = *( _OWORD *)&i0[8];', '*( _OWORD *)v29.r = *( _OWORD *)&i0[8];']
['*( _OWORD *)v29.r = *( _OWORD *)&i0[8];']
['rtx v81; // rsi', 'rtx v25; // rsi', 'rtx v28; // rsi', 'rtx v22; // rsi', 'rtx v71; // rsi', 'rtx v41; // rsi']
['rtx v20; // rdi', 'rtx v22; // rsi']
['n_operands = recog_data_0.n_operands;', 'n_operands = recog_data_0.n_operands;', 'n_operands = recog_data_0.n_operands;', 'n_operands = recog_data_0.n_operands;']
['if ( recog_data_0.n_alternatives > 0 )']
['reg_values = varray_init( ( unsigned int)cselib_nregs, 8uLL, ( const char *)&insn.fld[0].rtwint + 1);']
['if ( const0_operand( operands[2], ( machine_mode)*( ( unsigned __int8 *)*operands + 2)) )', 'v4 = force_reg( ( machine_mode)*( ( unsigned __int8 *)*operands + 2), v4);', 'v4 = force_reg( ( machine_mode)*( ( unsigned __int8 *)*operands + 2), v4);']
['rtx = recog_data_0.operand[v30];']
['( machine_mode)*( unsigned __int8 *)( v2.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v2.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v2.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v2.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v9.rtwint + 2),']
['( machine_mode)*( ( unsigned __int8 *)rtx + 2));', '( machine_mode)*( ( unsigned __int8 *)rtx + 2));']
['v2 = recog_data_0.operand[v1];', 'v9 = recog_data_0.operand[v6];']
['v2 = recog_data_0.operand[v1];', 'v9 = recog_data_0.operand[v6];']
['v27 = recog_data_0.operand[v11];', 'v2 = recog_data_0.operand[v1];']
['fprintf( stderr, off_661611, x86_64_reg_class_name[*( unsigned int *)v10++]);']
['v7 = ( tree_node *)*slot;']
['rtx v18; // rax']
['rtx v17; // r12', 'rtx v27; // r15', 'rtx v67; // r12', 'rtx v29; // r12']
['rtx resume; // rsi']
['rtx label; // rsi']
['rtx continue_label; // rdx']
['rtx insns; // [rsp+8h] [rbp-20h] BYREF']
['insns = get_insns( );', 'insns = get_insns( );']
['convert_from_eh_region_ranges_1( &insns, v11, 0);']
['v4 = reg_note;', 'v4 = reg_note;']
['rtx v17; // rbp']
['v2 = rtx;', 'v2 = rtx;', 'v2 = rtx;', 'v4 = rtx;']
['v12 = *( _WORD *)v13;', 'v10 = *( _DWORD *)v9;']
['if ( *( _WORD *)v7 == 37 )']
['rtint = v4[2].fld[0].rtint;']
['v3 = ( __int64)v4[2];']
['if ( rtx == v7 )']
['delete_insn( v4);', 'delete_insn( v4);']
['v17 = find_reg_note( v9, REG_RETVAL, 0LL);']
['if ( *( _WORD *)v7 == 37 )']
['v8 = (  struct rtx_def *)v7[1];']
['v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v14 = v14[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;']
['v8[1].fld[0].rtwint = ( __int64)v10;']
['if ( *( _WORD *)v7 == 37 )']
['v11 = ( __int64)v5[1];', 'v3 = ( __int64)v4[2];']
['rtx j; // rdi', 'rtx i; // rdi']
['rtx x[2]; // [rsp+30h] [rbp-58h] BYREF']
['x[0] = *( rtx *)( v9 + 16);']
['if ( *( _WORD *)x[0] == 61 )']
['bitmap_set_bit( &head, x[0]->fld[0].rtint);']
['if ( *( _WORD *)x[0] == 61 )']
['for_each_rtx( x, mark_reg_in_phi, &head);']
['x[0] = ( rtx)v1;']
['x[0] = ( rtx)v1;', 'x[1] = ( rtx)v5;']
['for_each_successor_phi( v14, coalesce_reg_in_phi, x);']
['for ( j = *( rtx *)basic_block_info->data.l[v16]; ; j = j[1].fld[0].rtx )']
['if ( mode_class_0[mode] != MODE_INT )', 'if ( mode_class_0[mode] != MODE_INT )']
['if ( mode_class_0[mode] != MODE_INT )', 'if ( mode_class_0[mode] != MODE_INT )']
['if ( mode_class_0[oldmode] != MODE_INT']
['v5 = mode_class_0[v3];']
['return mode_class_0[*( ( unsigned __int8 *)op + 2)] == MODE_FLOAT;']
['v9 = mode_class_0[*( ( unsigned __int8 *)x + 2)];']
['v9 = gen_lowpart( ( machine_mode)v3, v7);']
['v9 = simplify_gen_subreg( ( machine_mode)v3, v9, ( machine_mode)*( ( unsigned __int8 *)v9 + 2), 0);', 'v9 = simplify_gen_subreg( ( machine_mode)v3, v9, ( machine_mode)*( ( unsigned __int8 *)v9 + 2), 0);', 'v6 = simplify_gen_subreg( ( machine_mode)v58, v6, ( machine_mode)*( ( unsigned __int8 *)v6 + 2), 0);', 'v6 = simplify_gen_subreg( ( machine_mode)v58, v6, ( machine_mode)*( ( unsigned __int8 *)v6 + 2), 0);']
['v9 = simplify_gen_subreg( ( machine_mode)v3, v9, ( machine_mode)*( ( unsigned __int8 *)v9 + 2), 0);', 'v9 = simplify_gen_subreg( ( machine_mode)v3, v9, ( machine_mode)*( ( unsigned __int8 *)v9 + 2), 0);', 'v6 = simplify_gen_subreg( ( machine_mode)v58, v6, ( machine_mode)*( ( unsigned __int8 *)v6 + 2), 0);', 'v6 = simplify_gen_subreg( ( machine_mode)v58, v6, ( machine_mode)*( ( unsigned __int8 *)v6 + 2), 0);']
['v9 = simplify_gen_subreg( ( machine_mode)v3, v9, ( machine_mode)*( ( unsigned __int8 *)v9 + 2), 0);', 'v9 = simplify_gen_subreg( ( machine_mode)v3, v9, ( machine_mode)*( ( unsigned __int8 *)v9 + 2), 0);']
['v9 = simplify_gen_subreg( ( machine_mode)v3, v9, ( machine_mode)*( ( unsigned __int8 *)v9 + 2), 0);', 'v9 = simplify_gen_subreg( ( machine_mode)v3, v9, ( machine_mode)*( ( unsigned __int8 *)v9 + 2), 0);']
['v18 = can_extend_p( ( machine_mode)v3, ( machine_mode)v58, 0);', 'v18 = can_extend_p( ( machine_mode)v3, ( machine_mode)v58, 0);']
['rtx end; // rbx', 'rtx end; // rsi', 'rtx end; // rax', 'rtx end; // rdi', 'rtx end; // rbx']
['rtx *v23; // rbp', 'rtx *v24; // rbp', 'rtx *v21; // rbp', 'rtx *v25; // rbp', 'rtx *v72; // rbp']
['rtx v27; // rax', 'rtx *v23; // rax', 'rtx v27; // rax']
['fprintf( file, off_6376D2, ( unsigned int)v15);']
['end = v34->end;']
['if ( *( _WORD *)end == 33 )']
['end = ( rtx)end[1];', 'end = ( rtx)end[1];']
['v19 = ( rtx *)( FP_mode_reg + 120);']
['v22 = gen_rtx_fmt_ee( SET, VOIDmode, *v19, nan);']
['nonnote_insn = emit_insns_after( insns, end);']
['nonnote_insn = emit_insns_after( insns, end);']
['subst_constants( &note, 0LL, map, 0);']
['v19 += 59;']
['( machine_mode)( BYTE5( type->block.abstract_origin) >> 1),', '( machine_mode)( BYTE5( type->block.abstract_origin) >> 1),']
['result = build1( ( tree_code)( ( flag_float_store == 0) + 114), type, expr);']
['return copy_to_mode_reg( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), x);']
['src = operand_sub*(short *)0xforce( v3, i / v16, ( machine_mode)*( ( unsigned __int8 *)v3 + 2));', 'src = operand_sub*(short *)0xforce( v3, i / v16, ( machine_mode)*( ( unsigned __int8 *)v3 + 2));']
['src = operand_sub*(short *)0xforce( v3, i / v16, ( machine_mode)*( ( unsigned __int8 *)v3 + 2));', 'src = operand_sub*(short *)0xforce( v3, i / v16, ( machine_mode)*( ( unsigned __int8 *)v3 + 2));']
['return build( ( tree_code)*( ( unsigned __int8 *)&exp->block.common + 16), exp->common.type, v10, v9);']
['return build1( ( tree_code)*( ( unsigned __int8 *)&exp->block.common + 16), exp->common.type, v5);']
['rtx v4; // rbp', 'rtx v4; // rbp']
['if ( reg_note )', 'if ( reg_note )', 'if ( reg_note )', 'if ( reg_note )']
['v4 = reg_note;', 'v4 = reg_note;']
['v4 = reg_note;', 'v4 = reg_note;']
['rtx[3].fld[0].rtwint = ( __int64)gen_rtx_fmt_ee( EXPR_LIST, XCmode, v4->fld[0].rtx, rtx[3].fld[0].rtx);']
['rtvec v12; // r15']
['rtx result; // rax', 'rtx result; // rax', 'rtx result; // rax', 'rtx result; // rax', 'rtx result; // rax', 'rtx result; // rax', 'rtx result; // rax']
['v2 = rtx_alloc( ( rtx_code)*( _WORD *)orig);']
['v12 = rtvec_alloc( rtvec->num_elem);']
['v4->fld[v9].rtwint = ( __int64)v12;']
['p_succ_next = &v21->succ_next;']
['if ( v12->num_elem > 0 )']
['return result;', 'return result;', 'return result;', 'return result;', 'return result;', 'return result;']
['rtx *v20; // r15']
['rtx v33; // rax', 'rtx v33; // rax', 'rtx v33; // rax']
['rtx v35; // rax', 'rtx v35; // rax', 'rtx v35; // rax', 'rtx v35; // rax', 'rtx v35; // rax']
['rtx v41; // r15', 'rtx v19; // r15', 'rtx v19; // r15', 'rtx v40; // r15', 'rtx v45; // r15']
['rtx v92; // rax', 'rtx v5; // rax', 'rtx v42; // rax', 'rtx v22; // rax', 'rtx v42; // rax', 'rtx v5; // rax', 'rtx v42; // rax', 'rtx v57; // rax', 'rtx v82; // rax', 'rtx v22; // rax', 'rtx v50; // rax', 'rtx v42; // rax', 'rtx v57; // rax', 'rtx v42; // rax', 'rtx v55; // rax', 'rtx v53; // rax', 'rtx v50; // rax', 'rtx v57; // rax', 'rtx v5; // rax', 'rtx v55; // rax']
['rtx sequence[3]; // [rsp+8h] [rbp-58h]']
['v10 = 0LL;', 'v10 = 0LL;', 'v21 = 0LL;', 'v2 = 0LL;', 'v2 = 0LL;', 'v10 = 0LL;']
['v12 = ( rtx)i[2];', 'v18 = ( rtx)i[2];', 'src = ( rtx)v3[1];', 'v4 = ( rtx)v4[1];']
['if ( ( *( _DWORD *)v5 & 0x8000FFFF) == -2147483587 )']
['if ( multiple_sets( this_insn_0) )']
['|| ( v25 = ( rtx)*( ( _QWORD *)v24 + 4), *( _WORD *)v25 != 47) && ( v25 = single_set_2( ( rtx)v24, v25)) == 0LL']
['rtx v127; // rbp', 'rtx v120; // rbp']
['rtx v13; // r12', 'rtx v13; // r12', 'rtx v13; // r12', 'rtx v10; // r14']
['rtx v16; // rax', 'rtx v16; // rax']
['rtx note; // [rsp+10h] [rbp-40h] BYREF']
['note = copy_rtx_and_substitute( rtx, map, 0);']
['subst_constants( &note, 0LL, map, 0);']
['v6 = note;']
['v6 = note;']
['v8[1].fld[0].rtwint = ( __int64)v10;']
['if ( v14 )', 'if ( v15 )', 'if ( !v27 )', 'if ( !v20 )', 'if ( v10 )', 'if ( !v5 )', 'if ( v13 )', 'if ( !v9 )', 'if ( v19 )', 'if ( v2 )', 'if ( v10 )', 'if ( v10 )', 'if ( !v9 )', 'if ( v10 )', 'if ( v17 )']
['v15 = v14;', 'v15 = v14;']
['v15 = v14;', 'v15 = v14;']
['y1 = ( rtx)v11[1];']
['v22 = *( ( _BYTE *)v15 + 2);']
['rtx last_insn; // r12']
['rtx v16; // rax', 'rtx v16; // rax']
['rtx insns; // rbx']
['rtx v11; // r12', 'rtx v13; // r12', 'rtx v17; // r12', 'rtx v8; // r12', 'rtx v13; // r12', 'rtx v14; // r12', 'rtx v12; // r12', 'rtx v13; // r12', 'rtx v19; // r12', 'rtx v15; // r12', 'rtx v15; // r12', 'rtx v12; // r12', 'rtx v14; // r12', 'rtx v10; // r12', 'rtx v12; // r12']
['rtx v19; // r15', 'rtx v19; // r15']
['rtx v20; // rax', 'rtx v20; // rax', 'rtx v20; // rax', 'rtx v20; // rax']
['rtx v24; // rcx']
['rtx v26; // rax', 'rtx v26; // rax', 'rtx v26; // rax', 'rtx v26; // rax']
['rtx label; // rsi', 'rtx new_reg; // rax', 'rtx base_term; // rbx', 'rtx base_value; // rax', 'rtx last_value; // rax', 'rtx mult_val; // rax']
['rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax']
['rtx v10; // r13', 'rtx v13; // r12', 'rtx v13; // r12', 'rtx v14; // r13', 'rtx v13; // r12', 'rtx v15; // r13', 'rtx v11; // r13', 'rtx v14; // r13', 'rtx *v26; // r13', 'rtx *v47; // r13', 'rtx *v47; // r13', 'rtx *v56; // r13']
['rtx v15; // rdi', 'rtx v14; // rsi', 'rtx v25; // rsi', 'rtx v18; // rsi', 'rtx v55; // rsi', 'rtx v5; // rsi', 'rtx v55; // rsi']
['rtx v16; // rdx']
['rtx *v26; // r14', 'rtx *v20; // r15', 'rtx *v50; // r14']
['rtx v28; // r14', 'rtx v21; // r14', 'rtx v28; // r14']
['rtx v26; // rax', 'rtx v26; // rax', 'rtx v26; // rax', 'rtx v26; // rax']
['rtx v28; // r14', 'rtx v28; // r14']
['rtx v33; // rax', 'rtx v33; // rax', 'rtx v33; // rax']
['rtx v35; // rax', 'rtx v35; // rax', 'rtx v35; // rax', 'rtx v35; // rax', 'rtx v35; // rax']
['v3 = ( tree_node *)ggc_alloc( v2);', 'v3 = ( tree_node *)ggc_alloc( v2);']
['rtx v13; // r12', 'rtx v13; // r12', 'rtx v34; // r12', 'rtx v32; // r12', 'rtx v13; // r12']
['rtx v34; // rax', 'rtx v34; // rax']
['rtx v40; // rax', 'rtx v40; // rax', 'rtx v40; // rax', 'rtx v40; // rax']
['rtx *v42; // r12']
['rtx v43; // rax']
['rtx v161; // rax', 'rtx *v61; // rax']
['rtx *v25; // rbp']
['v4 = rtx_alloc( ( rtx_code)v2);', 'v9 = rtx_alloc( ( rtx_code)v2);']
['v2 = gen_reg_rtx( ( machine_mode)*( ( unsigned __int8 *)x + 2));']
['n_operands = recog_data_0.n_operands;', 'n_operands = recog_data_0.n_operands;', 'n_operands = recog_data_0.n_operands;', 'n_operands = recog_data_0.n_operands;']
['v20 = ( reg_class *)( 32LL * v66 + 9844808);']
['if ( recog_data_0.operand_type[v54] == OP_OUT']
['recog_data_0.operand_type[v1] = OP_INOUT;']
['v13 = recog_data_0.operand[v11];', 'v13 = recog_data_0.operand[v11];']
['v27 = recog_data_0.operand[v11];', 'v2 = recog_data_0.operand[v1];']
['v6 = ( ( unsigned int)( mode_class_0[*( ( unsigned __int8 *)reg + 2)] - 5) < 2) + 1;']
['if ( ( unsigned int)( mode_class_0[mode] - 5) > 1 )']
['result = reg_class_subset_p( ( reg_class)class1, ( reg_class)class0);']
['v20 = ( reg_class *)( 32LL * v66 + 9844808);']
['if ( warning_message_3 )']
['warning_message_3 = 1;']
['v17 = ( ( unsigned int)( mode_class_0[v15] - 5) < 2) + 1;']
['v17 = ( ( unsigned int)( mode_class_0[v15] - 5) < 2) + 1;']
['if ( ( unsigned int)( mode_class_0[v92] - 5) > 1 )', 'if ( ( unsigned int)( mode_class_0[v10] - 5) > 1 )']
['v9 = ( ( unsigned int)( mode_class_0[v7] - 5) < 2) + 1;']
['while ( v12 != ( int *)( ( char *)&unk_9DF25C + 4 * ( v11 - ( unsigned int)( v7 - 1))) );']
['while ( v19 != ( const unsigned __int16 *)&unk_6E35BC );']
['while ( v4 != ( const  struct named_op *)&unk_64D130 );']
['return ( cpp_hashnode_0 *)ht_lookup( pfile->hash_table, str, len, HT_ALLOC);']
['if ( ( sch_istable[*v8] & 0x800) == 0 )']
['v20 = hex_value[v17];']
['if ( ( sch_istable[c] & 0xAC) != 0 )', 'if ( ( sch_istable[v8] & 0xAC) != 0 )']
['if ( ( sch_istable[*v8] & 0x800) == 0 )']
['v20 = hex_value[v17];']
['object_base = ( cpp_buffer_0 *)pfile->buffer_ob.object_base;']
['v1 = ( page_entry_0 **)( &G + 16);', 'v1 = ( page_entry_0 *)( &G + 2640);']
['if ( ( sch_istable[v8] & 0xAC) != 0 )']
['rtx v16; // rdx']
['v4 = head;', 'v7 = head;', 'v5 = head;']
['v9 = ( rtx)cond[1];', 'end = ( rtx)end[1];', 'v6 = ( rtx)op0[1];', 'v11 = ( rtx)y[1];', 'v6 = ( rtx)rtx[1];', 'end = ( rtx)end[1];']
['if ( reg_note->fld[0].rtx != v2 )', 'if ( rtint == v2[2].fld[0].rtint )']
['if ( reg_note->fld[0].rtx != v2 )', 'if ( rtint == v2[2].fld[0].rtint )']
['delete_insn( nonnote_insn);']
['rtx v21; // rax']
['rtx v25; // rax', 'rtx v25; // rax', 'rtx v25; // rax', 'rtx v25; // rax', 'rtx v25; // rax', 'rtx v25; // rax', 'rtx v25; // rax']
['rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax']
['if ( rtx == insn && ( nonnote_insn = prev_nonnote_insn( insn)) != 0LL && *( _WORD *)nonnote_insn == 35 )', 'if ( rtx == insn && ( nonnote_insn = prev_nonnote_insn( insn)) != 0LL && *( _WORD *)nonnote_insn == 35 )']
['rtx real_insn; // r15', 'rtx real_insn; // r12']
['rtx v36; // rax', 'rtx v36; // rax', 'rtx v36; // rbx', 'rtx v36; // rax', 'rtx v36; // rax']
['rtx v39; // rax', 'rtx v39; // rax']
['rtx reg; // rdx', 'rtx reg; // rdx']
['rtx v42; // rax', 'rtx v42; // rax', 'rtx v42; // rax', 'rtx v42; // rax', 'rtx v42; // rax']
['rtx v45; // rax']
['rtx v6; // rdx', 'rtx *v76; // rax', 'rtx v16; // rdx', 'rtx v48; // rdx', 'rtx *v48; // rbx', 'rtx v26; // rdx', 'rtx v46; // rax', 'rtx *v16; // rbx', 'rtx v76; // rdx']
['rtx old; // [rsp+8h] [rbp-50h]']
['rtx s2; // [rsp+8h] [rbp-40h]', 'rtx ya; // [rsp+8h] [rbp-70h]', 'rtx zb; // [rsp+8h] [rbp-70h]']
['rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax']
['rtx v91; // r14', 'rtx v21; // r14', 'rtx v10; // r14']
['rtx v10; // rax', 'rtx v10; // rax', 'rtx v10; // rax', 'rtx v31; // rax', 'rtx v31; // rax', 'rtx v31; // rax', 'rtx v10; // rax', 'rtx v10; // rax', 'rtx v10; // rax', 'rtx v10; // rax']
['rtx v32; // rbx', 'rtx v31; // rbx']
['rtx cont; // rax']
['rtx v19; // rdx']
['uid_cuid_0 = v7;']
['last = v13;', 'dest = v7->dest;']
['if ( !old_set )']
['v6 = v6[1].fld[0].rtx;', 'v6 = v6[1].fld[0].rtx;', 'v6 = v6[1].fld[0].rtx;', 'v6 = v6[1].fld[0].rtx;']
['v13 = cse_basic_block( last, val.last, val.path, after_loop == 0);']
['v6 = v10;']
['free( uid_cuid_0);']
['&& ( v19 = gen_lowpart_if_possible( ( machine_mode)*( ( unsigned __int8 *)v2 + 2), const_rtx)) != 0LL )']
['invalidate( *( rtx *)( v7.rtwint + 8), ( machine_mode)*( unsigned __int8 *)( v7.rtwint + 2));', 'invalidate( *( rtx *)( v2.rtwint + 8), ( machine_mode)*( unsigned __int8 *)( v2.rtwint + 2));']
['htab_delete( hash_table_0);']
['hash_table_0 = htab_create( 0x1FuLL, get_value_hash, entry_and_rtx_equal_p, 0LL);']
['v6 = ( ( unsigned int)( mode_class_0[mode] - 5) < 2) + 1;']
['v10 = ( unsigned int)( mode_class_0[mode] - 5) <= 1;']
['cselib_invalidate_regno( rtx->fld[0].rtuint, ( machine_mode)*( ( unsigned __int8 *)rtx + 2));']
['if ( push_operand( rtx, ( machine_mode)*( ( unsigned __int8 *)rtx + 2)) )', 'if ( push_operand( x, ( machine_mode)*( ( unsigned __int8 *)x + 2)) )']
['htab_traverse( hash_table_0, cselib_invalidate_mem_1, rtx);']
['if ( push_operand( rtx, ( machine_mode)*( ( unsigned __int8 *)rtx + 2)) )', 'if ( push_operand( x, ( machine_mode)*( ( unsigned __int8 *)x + 2)) )']
['v18 = ( ( unsigned int)( mode_class_0[v4] - 5) < 2) + 1;', 'v11 = ( ( unsigned int)( mode_class_0[v8] - 5) < 2) + 1;']
['v8 = new_cselib_val( ++next_unknown_value, ( machine_mode)v3);']
['*htab_find_slot_with_hash( hash_table_0, v9, value, INSERT) = elt;']
['slot_with_hash = htab_find_slot_with_hash( hash_table_0, v9, v7, ( insert_option)( create != 0));', 'slot_with_hash = htab_find_slot_with_hash( hash_table_0, v9, v7, ( insert_option)( create != 0));']
['if ( ( mode_class_0[*( ( unsigned __int8 *)x + 2)] & 0xFFFFFFFB) != 2', 'if ( ( mode_class_0[*( ( unsigned __int8 *)x + 2)] & 0xFFFFFFFB) != 2']
['|| mode_class_0[*( ( unsigned __int8 *)op0 + 2)] == MODE_VECTOR_FLOAT )']
['*htab_find_slot_with_hash( hash_table_0, v9, value, INSERT) = elt;']
['htab_traverse( hash_table_0, cselib_invalidate_mem_1, callmem);']
['htab_traverse( hash_table_0, discard_useless_locs, 0LL);']
['htab_traverse( hash_table_0, discard_useless_values, 0LL);']
['tree v19; // rax', 'rtvec v12; // r15', 'rtx v19; // rax']
['rtx i; // [rsp+0h] [rbp-58h]']
['v12 = rtvec_alloc( rtvec->num_elem);']
['rtx = v10;']
['v4->fld[v9].rtwint = ( __int64)v12;']
['v5 = v10;', 'v5 = v10;', 'v6 = v10;', 'v9 = v10;', 'v7 = v11;']
['v5 = v10;', 'v5 = v10;', 'v6 = v10;', 'v9 = v10;', 'v7 = v11;']
['v14 = *( rtx *)( v2.rtwint + 24);']
['rtx = v4;', 'rtx = v6;']
['if ( in_section_0 != in_data )']
['in_section_0 = in_data;']
['fprintf( asmfile, &off_6376D2[1], ( unsigned int)current_sym_value);']
['sprintf( v9, "%s.%d", "__compound_literal", ( unsigned int)var_labelno);']
['fprintf( asm_out_file, ".%s%u:\\n", ( const char *)&off_6F972E, ( unsigned int)labelno_17);', 'fprintf( asm_out_file, ".%s%u:\\n", ( const char *)&off_6F972E, ( unsigned int)labelno_17);']
['++var_labelno;']
['v2 = ( tree_node *)*( &global_trees + 27);', 'v20 = ( tree_node *)*( &global_trees + 25);']
['rtx y; // [rsp+18h] [rbp-30h] BYREF', 'rtx x; // [rsp+18h] [rbp-60h] BYREF']
['homea = home;']
['homea = alter_subreg( &homea);', 'homea = alter_subreg( &homea);']
['y = rtx;', 'v2 = rtx;', 'v2 = rtx;', 'v2 = rtx;', 'v4 = rtx;']
['if ( !initial || !strcmp( lang_hooks_0.name, "GNU C++") && initial == ( tree)global_trees )']
['v6 = (  struct rtx_def *)v5[1];', 'v8 = (  struct rtx_def *)v7[1];']
['v5 = ( ( unsigned int)( mode_class_0[v2] - 5) < 2) + 1;', 'v9 = ( ( unsigned int)( mode_class_0[v7] - 5) < 2) + 1;', 'v10 = ( ( unsigned int)( mode_class_0[v6] - 5) < 2) + 1;', 'v34 = ( ( unsigned int)( mode_class_0[v26] - 5) < 2) + 1;']
['v32 = nonzero_bits( *( rtx *)( v1->fld[0].rtwint + 8), ( machine_mode)v21);']
['v32 = nonzero_bits( *( rtx *)( v1->fld[0].rtwint + 8), ( machine_mode)v21);']
['fprintf( v1, "%ssecondary_in_icode = %s", "\\n\\t", insn_data_0[v8].name);']
['fprintf( v1, "%ssecondary_out_icode = %s", v9, insn_data_0[v10].name);']
['bitmap_element *v8; // r13', 'bitmap_element *v8; // r13']
['bitmap_element *v8; // r13', 'bitmap_element *v8; // r13']
['v8 = ( bitmap_element *)attribute_tables;', 'v8 = ( bitmap_element *)attribute_tables;']
['v8 = ( bitmap_element *)attribute_tables;', 'v8 = ( bitmap_element *)attribute_tables;']
['next = ( const char *)v8->next->next;']
['next = *( const char **)( ( char *)&v8->next->next + v10);']
['while ( ( sch_istable[( unsigned __int8)*v38] & 4) != 0 );']
['if ( !strcmp( v1, table_21[i].name) )', 'for ( i = insns; ; i = ( rtx)v17.rtwint )', 'for ( i = insns; ; i = ( rtx)v17.rtwint )']
['return table_21[( int)i].number;']
['v5 = mode_class_0[v3];']
['rtx v6; // r13', 'rtx v9; // r14', 'rtx v7; // r13']
['rtx v28; // rax', 'rtx v28; // rax', 'rtx v28; // rax']
['rtx v39; // rax', 'rtx v39; // rax']
['rtx v43; // rax']
['v9 = mode_class_0[*( ( unsigned __int8 *)x + 2)];']
['v57 = mode_class_0[v58];', 'v7 = mode_class_0[v6];']
['v14 = *( rtx *)( v2.rtwint + 24);']
['v10 = *( _DWORD *)v9;']
['rtx v109; // rsi']
['v12 = ( rtx)i[2];', 'v18 = ( rtx)i[2];']
['if ( *( _WORD *)v18 == 47 || ( v18 = single_set_2( i, v18)) != 0LL )', 'if ( *( _WORD *)v18 == 47 || ( v18 = single_set_2( i, v18)) != 0LL )', 'if ( *( _WORD *)v18 == 47 || ( v18 = single_set_2( i, v18)) != 0LL )']
['if ( *( _WORD *)v18 == 47 || ( v18 = single_set_2( i, v18)) != 0LL )', 'if ( *( _WORD *)v18 == 47 || ( v18 = single_set_2( i, v18)) != 0LL )', 'if ( *( _WORD *)v18 == 47 || ( v18 = single_set_2( i, v18)) != 0LL )']
['if ( *( _WORD *)v18 == 47 || ( v18 = single_set_2( i, v18)) != 0LL )', 'if ( *( _WORD *)v18 == 47 || ( v18 = single_set_2( i, v18)) != 0LL )', 'if ( *( _WORD *)v18 == 47 || ( v18 = single_set_2( i, v18)) != 0LL )']
['v20.rtwint = ( __int64)v19->fld[0];']
['if ( v67 >= 0 && ( v27 = recog_data_0.operand[v21], *( _WORD *)v27 == 61) )']
['if ( v67 >= 0 && ( v27 = recog_data_0.operand[v21], *( _WORD *)v27 == 61) )']
['rtx *v29; // rsi']
['rtx v34; // rsi', 'rtx v39; // rsi', 'rtx v43; // rsi']
['rtx output_reload_insn; // [rsp+8h] [rbp-50h]']
['output_reload_insn = spill_reg_store[last_reload_reg];']
['v12.rtwint = ( __int64)output_reload_insn[1].fld[0];']
['if ( ( unsigned int)( mode_class_0[v10] - 5) > 1 )']
['delete_address_reloads( output_reload_insn, insn);']
['delete_insn( output_reload_insn);']
['rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax']
['nonnote_insn = next_nonnote_insn( ( rtx)v6);']
['if ( nonnote_insn && *( _WORD *)nonnote_insn == 33 && ( unsigned __int16)( **( _WORD **)&nonnote_insn[2] - 44) <= 1u )', 'if ( nonnote_insn && *( _WORD *)nonnote_insn == 33 && ( unsigned __int16)( **( _WORD **)&nonnote_insn[2] - 44) <= 1u )', 'if ( nonnote_insn && *( _WORD *)nonnote_insn == 33 && ( unsigned __int16)( **( _WORD **)&nonnote_insn[2] - 44) <= 1u )']
['if ( nonnote_insn && *( _WORD *)nonnote_insn == 33 && ( unsigned __int16)( **( _WORD **)&nonnote_insn[2] - 44) <= 1u )', 'if ( nonnote_insn && *( _WORD *)nonnote_insn == 33 && ( unsigned __int16)( **( _WORD **)&nonnote_insn[2] - 44) <= 1u )', 'if ( nonnote_insn && *( _WORD *)nonnote_insn == 33 && ( unsigned __int16)( **( _WORD **)&nonnote_insn[2] - 44) <= 1u )']
['if ( nonnote_insn && *( _WORD *)nonnote_insn == 33 && ( unsigned __int16)( **( _WORD **)&nonnote_insn[2] - 44) <= 1u )', 'if ( nonnote_insn && *( _WORD *)nonnote_insn == 33 && ( unsigned __int16)( **( _WORD **)&nonnote_insn[2] - 44) <= 1u )', 'if ( nonnote_insn && *( _WORD *)nonnote_insn == 33 && ( unsigned __int16)( **( _WORD **)&nonnote_insn[2] - 44) <= 1u )']
['delete_related_insns( nonnote_insn);']
['v17 = ( ( unsigned int)( mode_class_0[v15] - 5) < 2) + 1;']
['if ( ( sch_istable[v17] & 0x88) != 0 )']
['rtx v15; // rdi', 'rtx v13; // rdi', 'rtx v20; // rdi', 'rtx v10; // rdx']
['v10 = last_insn;', 'v10 = last_insn;', 'v10 = last_insn;', 'v10 = last_insn;']
['if ( v10 )', 'if ( v10 )', 'if ( v10 )', 'if ( v10 )']
['rtwint = v14->fld[0].rtwint;']
['if ( *( ( _DWORD *)uid_cuid_1 + *( ( int *)v54 + 2)) < *( ( _DWORD *)uid_cuid_1 + rtint) )']
['rtx real_insn; // r15', 'rtx real_insn; // r12']
['rtx v27; // rax', 'rtx v27; // rax']
['rtx v32; // rdx', 'rtx v10; // rdx', 'rtx v34; // rdx']
['rtx *v42; // r12', 'rtx *v31; // rax', 'rtx *v61; // rax', 'rtx *v71; // rax', 'rtx *v48; // rbx', 'rtx *v21; // rbp', 'rtx *v11; // rbp', 'rtx *v47; // r13', 'rtx *v47; // r13', 'rtx *v51; // r15']
['rtx v43; // rax']
['rtx v48; // rax']
['rtx v5; // rbp', 'rtx v17; // rbp', 'rtx v53; // rbp', 'rtx v58; // rbp', 'rtx v59; // rbp']
['rtx v40; // rsi', 'rtx v71; // rsi', 'rtx v60; // rsi', 'rtx v76; // rsi']
['v10 = __CFADD__( ( _DWORD)rtuint, v9);']
['v2 = ( tree_node *)switch_stack;']
['if ( ( tree_node *)global_trees == v2 )']
['if ( mode_class_0[mode] != MODE_INT || can_compare_p( op, mode, ccp_jump) )']
['if ( !if_true_label && ( mode_class_0[mode] & 0xFFFFFFFB) != 2 && mode_class_0[mode] != MODE_VECTOR_FLOAT )', 'if ( !if_true_label && ( mode_class_0[mode] & 0xFFFFFFFB) != 2 && mode_class_0[mode] != MODE_VECTOR_FLOAT )']
['if ( !if_true_label && ( mode_class_0[mode] & 0xFFFFFFFB) != 2 && mode_class_0[mode] != MODE_VECTOR_FLOAT )', 'if ( !if_true_label && ( mode_class_0[mode] & 0xFFFFFFFB) != 2 && mode_class_0[mode] != MODE_VECTOR_FLOAT )']
['v8 = operand_sub*(short *)0xforce( op0, i, ( machine_mode)v4);', 'v8 = operand_sub*(short *)0xforce( op0, i, ( machine_mode)v4);']
['v8 = operand_sub*(short *)0xforce( op0, i, ( machine_mode)v4);', 'v8 = operand_sub*(short *)0xforce( op0, i, ( machine_mode)v4);']
['v9 = operand_sub*(short *)0xforce( op1, i, ( machine_mode)v4);', 'v9 = operand_sub*(short *)0xforce( op1, i, ( machine_mode)v4);']
['v9 = operand_sub*(short *)0xforce( op1, i, ( machine_mode)v4);', 'v9 = operand_sub*(short *)0xforce( op1, i, ( machine_mode)v4);']
['v5 = operand_sub*(short *)0xforce( op0, 0, ( machine_mode)*( ( unsigned __int8 *)op0 + 2));', 'v5 = operand_sub*(short *)0xforce( op0, 0, ( machine_mode)*( ( unsigned __int8 *)op0 + 2));']
['v5 = operand_sub*(short *)0xforce( op0, 0, ( machine_mode)*( ( unsigned __int8 *)op0 + 2));', 'v5 = operand_sub*(short *)0xforce( op0, 0, ( machine_mode)*( ( unsigned __int8 *)op0 + 2));']
['v7 = operand_sub*(short *)0xforce( op0, v6, ( machine_mode)*( ( unsigned __int8 *)op0 + 2));', 'v7 = operand_sub*(short *)0xforce( op0, v6, ( machine_mode)*( ( unsigned __int8 *)op0 + 2));']
['v7 = operand_sub*(short *)0xforce( op0, v6, ( machine_mode)*( ( unsigned __int8 *)op0 + 2));', 'v7 = operand_sub*(short *)0xforce( op0, v6, ( machine_mode)*( ( unsigned __int8 *)op0 + 2));']
['v15 = operand_sub*(short *)0xforce( op0, v17, ( machine_mode)*( ( unsigned __int8 *)op0 + 2));', 'v15 = operand_sub*(short *)0xforce( op0, v17, ( machine_mode)*( ( unsigned __int8 *)op0 + 2));']
['v15 = operand_sub*(short *)0xforce( op0, v17, ( machine_mode)*( ( unsigned __int8 *)op0 + 2));', 'v15 = operand_sub*(short *)0xforce( op0, v17, ( machine_mode)*( ( unsigned __int8 *)op0 + 2));']
['( machine_mode)( *( _BYTE *)( *( _QWORD *)( exp->int_cst.int_cst.low + 8) + 61LL) >> 1),']
['v30 = operand_sub*(short *)0xforce( v8, v27, mode);']
['v30 = operand_sub*(short *)0xforce( v8, v27, mode);', 'v7 = operand_sub*(short *)0xforce( x, i, mode);']
['if ( !can_compare_p( v14, ( machine_mode)v8, ccp_store_flag) )']
['if ( !only_cheap || *( ( unsigned __int16 *)insn_data_0[v15].operand + 8) == mode )']
['v9 = promote_mode( type, ( machine_mode)v8, unsignedp, 0);']
['v2 = gen_reg_rtx( ( machine_mode)*( ( unsigned __int8 *)x + 2));', 'v12 = gen_reg_rtx( ( machine_mode)*( ( unsigned __int8 *)v8 + 2));']
['v12 = lookup( v6, v11 & 0x1F, ( machine_mode)v8);']
['v28 = expand_shift( RSHIFT_EXPR, ( machine_mode)v6, v13, v27, 0LL, 1);', 'v7 = expand_shift( RSHIFT_EXPR, ( machine_mode)v11, v7, v22, v23, 1);']
['if ( mode_class_0[*( ( unsigned __int8 *)x + 2)] == MODE_FLOAT || v5 == 54 && !*( ( _QWORD *)v4 + 1) )']
['v23 = trunc_int_for_mode( 1LL << v15, ( machine_mode)*( ( unsigned __int8 *)v18 + 2));']
['frees = undobuf_0.frees;', 'frees = undobuf_0.frees;']
['if ( undobuf_0.frees )', 'if ( undobuf_0.frees )']
['undobuf_0.frees = undobuf_0.frees->next;', 'undobuf_0.frees = undobuf_0.frees->next;', 'undobuf_0.frees = undobuf_0.frees->next;', 'undobuf_0.frees = undobuf_0.frees->next;']
['undobuf_0.frees = undobuf_0.frees->next;', 'undobuf_0.frees = undobuf_0.frees->next;', 'undobuf_0.frees = undobuf_0.frees->next;', 'undobuf_0.frees = undobuf_0.frees->next;']
['frees = undobuf_0.frees;', 'frees->next = undobuf_0.undos;', 'frees = undobuf_0.frees;', 'frees->next = undobuf_0.undos;']
['undobuf_0.undos = frees;', 'undobuf_0.undos = frees;']
['if ( !warned_11 && do_warn )']
['warned_11 = 1;']
['( machine_mode)*( unsigned __int8 *)( v12.rtwint + 2),']
['v15 = swap_condition( ( rtx_code)aux[22]);']
['v17 = expand_binop( ( machine_mode)*( ( unsigned __int8 *)value + 2), v5, v23, v19, subtarget, 0, OPTAB_LIB_WIDEN);']
['( machine_mode)*( ( unsigned __int8 *)dest_reg + 2),']
['emit_cmp_and_jump_insns( v55, v58, ( rtx_code)( v57 == 0 ? EQ : LEU), 0LL, op1a, 0, v56);']
['( machine_mode)*( ( unsigned __int8 *)dest_reg + 2),']
['fwrite( &unk_6378FD, 1uLL, 0x11uLL, outf);']
['fprintf( file, off_6376D2, ( unsigned int)dest->index);']
['fprintf( file, &off_6376D2[1], ( unsigned int)v6);']
['fputs( bitnames_8[v6], file);']
['v23 = reg_set_table[v18];']
['fprintf( file, "; pref %s", reg_class_names_9[v10]);']
['fwrite( &unk_636F04, 1uLL, 9uLL, file);']
['fprintf( file, off_6376D2, ( unsigned int)v15);']
['fprintf( di_0->stream, asc_6F7DF3, 25LL, 6489631LL);']
['fprintf( di_0->stream, off_6F7DF4, 15 - v2, 6489631LL);']
['predictor_info_0[predictor].name,']
['fprintf( outf, off_6376D2, ( unsigned int)v5);']
['fprintf( file, &off_6376D2[1], ( bmap->elms[v6] >> v4++) & 1);']
['lang_hooks_0.print_statistics( );']
['v4 = gen_rtx_fmt_s( SYMBOL_REF, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), label);', 'v4 = gen_rtx_fmt_s( SYMBOL_REF, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), label);']
['fprintf( asm_out_file, ".%s%u:\\n", ( const char *)&off_6F972E, ( unsigned int)labelno_17);', 'fprintf( asm_out_file, ".%s%u:\\n", ( const char *)&off_6F972E, ( unsigned int)labelno_17);']
['fprintf( asm_out_file, ".%s%u:\\n", ( const char *)&off_6F972E, ( unsigned int)labelno_17);', 'fprintf( asm_out_file, ".%s%u:\\n", ( const char *)&off_6F972E, ( unsigned int)labelno_17);']
['fprintf( asm_out_file, ".%s%u:\\n", ( const char *)&off_6F972E, ( unsigned int)labelno_17);', 'fprintf( asm_out_file, ".%s%u:\\n", ( const char *)&off_6F972E, ( unsigned int)labelno_17);']
['fprintf( asm_out_file, ".%s%u:\\n", ( const char *)&off_6F972E, ( unsigned int)labelno_17);', 'fprintf( asm_out_file, ".%s%u:\\n", ( const char *)&off_6F972E, ( unsigned int)labelno_17);']
['fprintf( asm_out_file, ".%s%u:\\n", ( const char *)&off_6F972E, ( unsigned int)labelno_17);', 'fprintf( asm_out_file, ".%s%u:\\n", ( const char *)&off_6F972E, ( unsigned int)labelno_17);']
['v5 = gen_rtx_fmt_s( SYMBOL_REF, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), lab2);']
['v6 = gen_rtx_fmt_s( SYMBOL_REF, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), lab1);']
['v7 = gen_rtx_fmt_ee( MINUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v6, v5);']
['fprintf( asm_out_file, ".%s%u:\\n", ( const char *)&off_6F972E, ( unsigned int)labelno_17);', 'fprintf( asm_out_file, ".%s%u:\\n", ( const char *)&off_6F972E, ( unsigned int)labelno_17);']
['fprintf( asm_out_file, ".%s%u:\\n", ( const char *)&off_6F972E, ( unsigned int)labelno_17);', 'fprintf( asm_out_file, ".%s%u:\\n", ( const char *)&off_6F972E, ( unsigned int)labelno_17);']
['v9 = gen_rtx_fmt_ee( MINUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v4, global_rtl[0]);']
['fprintf( asm_out_file, ".%s%u:\\n", ( const char *)&off_6F972E, ( unsigned int)labelno_17);', 'fprintf( asm_out_file, ".%s%u:\\n", ( const char *)&off_6F972E, ( unsigned int)labelno_17);']
['v12 = &qty_0[v11];', 'v14 = &qty_0[v11];', 'v15 = &qty_0[v11];']
['v14 = byte_6551A0[( unsigned int)j];']
['if ( ( sch_istable[( unsigned __int8)v10] & 0x10) != 0 )', 'if ( ( sch_istable[( unsigned __int8)v14] & 0x88) == 0 )']
['fprintf( asm_out_file, ".%s%u:\\n", ( const char *)&off_6F972E, ( unsigned int)labelno_17);', 'fprintf( asm_out_file, ".%s%u:\\n", ( const char *)&off_6F972E, ( unsigned int)labelno_17);']
['v4 = gen_rtx_fmt_s( SYMBOL_REF, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), label);', 'v4 = gen_rtx_fmt_s( SYMBOL_REF, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), label);']
['fprintf( asm_out_file, ".%s%u:\\n", ( const char *)&off_6F972E, ( unsigned int)labelno_17);', 'fprintf( asm_out_file, ".%s%u:\\n", ( const char *)&off_6F972E, ( unsigned int)labelno_17);']
['v23 = ( tree_node *)v22[7];', 'v23 = ( tree_node *)v25;', 'v23 = ( tree_node *)v25;']
['fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");']
['if ( ( unsigned int)debug_info_level_0 > DINFO_LEVEL_TERSE )', 'if ( ( unsigned int)debug_info_level_0 > DINFO_LEVEL_TERSE )', 'if ( ( unsigned int)debug_info_level_0 > DINFO_LEVEL_TERSE )', 'if ( ( unsigned int)debug_info_level_0 > DINFO_LEVEL_TERSE )', 'if ( ( unsigned int)debug_info_level_0 > DINFO_LEVEL_TERSE )', 'if ( ( unsigned int)debug_info_level_0 > DINFO_LEVEL_TERSE )']
['sprintf( label, "*.%s%u", ( const char *)&a.dw_attr_next + 4, current_funcdef_number);']
['fprintf( asm_out_file, ".%s%u:\\n", ( const char *)&off_6F972E, ( unsigned int)labelno_17);', 'fprintf( asm_out_file, ".%s%u:\\n", ( const char *)&off_6F972E, ( unsigned int)labelno_17);']
['args_size_0 = 0LL;']
['if ( ( unsigned int)debug_info_level_0 > DINFO_LEVEL_TERSE )', 'if ( ( unsigned int)debug_info_level_0 > DINFO_LEVEL_TERSE )', 'if ( ( unsigned int)debug_info_level_0 > DINFO_LEVEL_TERSE )', 'if ( ( unsigned int)debug_info_level_0 > DINFO_LEVEL_TERSE )', 'if ( ( unsigned int)debug_info_level_0 > DINFO_LEVEL_TERSE )', 'if ( ( unsigned int)debug_info_level_0 > DINFO_LEVEL_TERSE )']
['v0 = label_num_59++;']
['sprintf( label_58, "*.%s%u", "LCFI", v0);']
['assemble_name( asm_out_file, label_58);']
['return label_58;']
['if ( ( unsigned int)debug_info_level_0 <= DINFO_LEVEL_TERSE )']
['fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");']
['&& ( unsigned int)debug_info_level_0 > DINFO_LEVEL_TERSE )']
['sprintf( label, "*.%s%u", ( const char *)&a.dw_attr_next + 4, current_funcdef_number);']
['rtx *v7; // rdi', 'rtx v7; // rdx']
['fancy_abort( ( const char *)&a, 1626, "dwarf2out_frame_debug");']
['fancy_abort( ( const char *)&a, 1009, "dwarf2out_stack_adjust");']
['v7 = -args_size_0;']
['v12 = ( rtx)i[2];', 'v18 = ( rtx)i[2];']
['v12 = *( _WORD *)v13;', 'v10 = *( _DWORD *)v9;']
['if ( *( _WORD *)v7 == 37 )']
['v12 = force_not_mem( v12);', 'v12 = force_not_mem( v12);']
['v9 = v10;']
['v9 = args_size_0 + v7;']
['args_size_0 = v9;']
['v7 = -args_size_0;']
['if ( in_section_0 != in_bss )']
['dwarf2out_args_size( v10, args_size_0);']
['fancy_abort( ( const char *)&a, 1309, "dwarf2out_frame_debug_expr");']
['fancy_abort( ( const char *)&a, 1603, "dwarf2out_frame_debug_expr");']
['fancy_abort( ( const char *)&a, 1479, "dwarf2out_frame_debug_expr");']
['fancy_abort( ( const char *)&a, 1549, "dwarf2out_frame_debug_expr");']
['fancy_abort( ( const char *)&a, 1513, "dwarf2out_frame_debug_expr");']
['fancy_abort( ( const char *)&a, 1555, "dwarf2out_frame_debug_expr");']
['fancy_abort( ( const char *)&a, 1490, "dwarf2out_frame_debug_expr");']
['fancy_abort( ( const char *)&a, 1495, "dwarf2out_frame_debug_expr");']
['fancy_abort( ( const char *)&a, 1561, "dwarf2out_frame_debug_expr");']
['fancy_abort( ( const char *)&a, 1528, "dwarf2out_frame_debug_expr");']
['fancy_abort( ( const char *)&a, 1538, "dwarf2out_frame_debug_expr");']
['fancy_abort( ( const char *)&a, 1588, "dwarf2out_frame_debug_expr");']
['fancy_abort( ( const char *)&a, 1457, "dwarf2out_frame_debug_expr");']
['fancy_abort( ( const char *)&a, 1386, "dwarf2out_frame_debug_expr");']
['fancy_abort( ( const char *)&a, 900, "initial_return_save");']
['fancy_abort( ( const char *)&a, 906, "initial_return_save");']
['fancy_abort( ( const char *)&a, 911, "initial_return_save");']
['fancy_abort( ( const char *)&a, 894, "initial_return_save");']
['fancy_abort( ( const char *)&a, 921, "initial_return_save");']
['fancy_abort( ( const char *)&a, 926, "initial_return_save");']
['*( _QWORD *)&v14[1] = rtx;', '*( _QWORD *)&v10[1] = v11;', '*( _QWORD *)&v11[1] = v10;']
['*( _QWORD *)&v14[1] = rtx;', '*( _QWORD *)&v10[1] = v11;', '*( _QWORD *)&v11[1] = v10;']
['while ( &unk_939F0A != ( _UNKNOWN *)v66 );', 'while ( &unk_939F08 != ( _UNKNOWN *)v67 );']
['if ( ( unsigned int)format > 0xFF || ( result = format_names_3[format]) == 0LL )']
['if ( *( _OWORD *)&idom != 0LL )']
['v12 = gen_reg_rtx( ( machine_mode)*( ( unsigned __int8 *)v11 + 2));']
['rtx v15; // rdi', 'rtx v13; // rdi', 'rtx v37; // rdi', 'rtx v42; // rax', 'rtx v20; // rdi', 'rtx v42; // rax', 'rtx v46; // rsi', 'rtx v42; // rax', 'rtx v5; // rdi', 'rtx v9; // rdi', 'rtx v12; // rdx', 'rtx v48; // rdx', 'rtx v40; // rsi', 'rtx v32; // rdx', 'rtx v22; // rsi', 'rtx v42; // rax', 'rtx v42; // rax', 'rtx v6; // rdi', 'rtx v43; // rsi', 'rtx v47; // rsi', 'rtx v41; // rsi']
['rtx v45; // rax']
['rtx v47; // rax', 'rtx v47; // rax']
['rtx v42; // rax', 'rtx v4; // rax', 'rtx v40; // rax', 'rtx v41; // rax', 'rtx v42; // rax', 'rtx v4; // rax', 'rtx v9; // rax', 'rtx v39; // rax', 'rtx v42; // rax', 'rtx v79; // rax', 'rtx v19; // rax', 'rtx v40; // rax', 'rtx v42; // rax', 'rtx v39; // rax', 'rtx v40; // rax', 'rtx v46; // rax', 'rtx v40; // rax', 'rtx v44; // rax', 'rtx v47; // rax', 'rtx v42; // rax', 'rtx v4; // rax', 'rtx v48; // rax', 'rtx v43; // rax', 'rtx v45; // rax', 'rtx v47; // rax', 'rtx v9; // rax']
['rtx v40; // rsi', 'rtx v55; // rsi', 'rtx v5; // rsi', 'rtx v60; // rsi', 'rtx v54; // rsi', 'rtx v55; // rsi']
['rtx v55; // rax', 'rtx v55; // rax']
['rtx v8; // rax', 'rtx v5; // rax', 'rtx v18; // rax', 'rtx v38; // rax', 'rtx v28; // rax', 'rtx v38; // rax', 'rtx v28; // rax', 'rtx v5; // rax', 'rtx v28; // rax', 'rtx v57; // rax', 'rtx v58; // rbx', 'rtx v38; // rax', 'rtx v50; // rax', 'rtx v38; // rax', 'rtx v57; // rax', 'rtx v38; // rax', 'rtx v55; // rax', 'rtx v58; // rbx', 'rtx v68; // rax', 'rtx v53; // rax', 'rtx v48; // rax', 'rtx v50; // rax', 'rtx v57; // rax', 'rtx v5; // rax', 'rtx v55; // rax']
['rtx v60; // rax', 'rtx v60; // rax']
['rtx v14; // rax']
['rtx v16; // r15', 'rtx v76; // r14', 'rtx v10; // r14']
['rtx v20; // rax', 'rtx v20; // rax', 'rtx *v23; // rax', 'rtx v20; // rdi', 'rtx *v50; // rcx', 'rtx *v30; // rax', 'rtx v20; // rbx', 'rtx v20; // rax', 'rtx v26; // rdx', 'rtx v21; // rdx', 'rtx *v20; // r15', 'rtx v20; // rax', 'rtx v10; // rdx', 'rtx *v70; // rax']
['rtx *v23; // rax']
['rtx v28; // rax', 'rtx *v23; // rax', 'rtx v28; // rbx', 'rtx v28; // rax', 'rtx v28; // rax', 'rtx v48; // rdx', 'rtx *v48; // rbx', 'rtx v26; // rdx', 'rtx v21; // rdx']
['rtx *v15; // rax', 'rtx v35; // rax', 'rtx v35; // rax', 'rtx v35; // rax', 'rtx v55; // rdx', 'rtx v35; // rbx', 'rtx v35; // rax', 'rtx *v30; // rax', 'rtx *v31; // rax', 'rtx v35; // rax', 'rtx v32; // rdx', 'rtx v35; // rbx', 'rtx v34; // rdx']
['rtx v40; // rbx', 'rtx v40; // rax', 'rtx *v50; // rcx', 'rtx *v30; // rax', 'rtx v48; // rdx', 'rtx *v48; // rbx', 'rtx v40; // rax', 'rtx v40; // rax', 'rtx v40; // rax', 'rtx v10; // rdx', 'rtx *v70; // rax']
['rtx v50; // rax', 'rtx v50; // rax']
['rtx return_rtx; // r12']
['rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax']
['rtx v123; // rdx']
['rtx v27; // rax', 'rtx v27; // rax']
['rtx v11; // rcx', 'rtx v31; // rax', 'rtx v31; // rbx', 'rtx v31; // rax', 'rtx v31; // rax']
['v11 = mode_class_0[4];']
['if ( rtx == scan_start || !rtx )']
['v23 = to;']
['v27 = v14->fld[0].rtx;', 'v21 = v21->fld[0].rtx;', 'v21 = v21->fld[0].rtx;']
['v12 = *( _WORD *)v13;']
['if ( *( _WORD *)v5 == 61 )', 'if ( *( _WORD *)v17 == 61 )']
['if ( significand_size( ( machine_mode)tempa) + 1 >= mode_bitsize[*( ( unsigned __int8 *)v12 + 2)] )']
['if ( reg_equiv_memory_loc[regno] == result )']
['rtwint = v14->fld[0].rtwint;']
['if ( rtx != scan_start )', 'while ( constructor_stack_0->implicit )', 'while ( constructor_stack_0->implicit )', 'while ( rtx != v10 && *( _WORD *)v10 == 37 );', 'while ( constructor_stack_0->implicit )', 'while ( v21 != align_tab );']
['*( _QWORD *)( v11 + 24) = v10;']
['if ( *( _OWORD *)v6->bits != 0LL )']
['tree v45; // r12']
['tree v22; // rax', 'tree v12; // rax']
['tree v23; // rax', 'tree v23; // rax']
['tree v46; // rdi']
['v4 = convert_to_mode( ( machine_mode)v7, v4, 1);']
['v4 = convert_to_mode( ( machine_mode)v7, v4, 1);']
['v4 = convert_to_mode( ( machine_mode)v7, v4, 1);']
['temp = convert_modes( mode, ( machine_mode)v16, temp, 1);']
['temp = convert_modes( mode, ( machine_mode)v16, temp, 1);']
['v4 = convert_to_mode( ( machine_mode)v7, v4, 1);']
['temp = convert_modes( mode, ( machine_mode)v16, temp, 1);']
['temp = convert_modes( mode, ( machine_mode)v16, temp, 1);']
['temp = convert_modes( mode, ( machine_mode)v16, temp, 1);']
['v11 = mode_class_0[mode];', 'v15 = mode_class_0[mode];', 'v15 = mode_class_0[mode];']
['v19 = *( ( unsigned __int16 *)insn_data_0[1203].operand + 8);']
['operand = insn_data_0[icode].operand;']
['if ( !operand->predicate( v14, ( machine_mode)*( ( unsigned __int16 *)operand + 8)) )']
['subtarget = gen_reg_rtx( ( machine_mode)*( ( unsigned __int16 *)operand + 8));']
['if ( !operand[2].predicate( op2a, ( machine_mode)*( ( unsigned __int16 *)&operand[2] + 8)) )']
['copy_to_mode_reg( ( machine_mode)*( ( unsigned __int16 *)&operand[2] + 8), op2a);']
['if ( !operand[3].predicate( x, ( machine_mode)*( ( unsigned __int16 *)&operand[3] + 8)) )']
['copy_to_mode_reg( ( machine_mode)*( ( unsigned __int16 *)&operand[3] + 8), x);']
['v17 = insn_data_0[v13].genfun( subtarget, v16);']
['v5 = assign_stack_local( ( machine_mode)v6, mode_size[v6], 0);']
['v9 = gen_reg_rtx( ( machine_mode)*( unsigned __int8 *)( v8 + 2));']
['v12 = gen_rtx_MEM( ( machine_mode)*( ( unsigned __int8 *)v12 + 2), fixed);', 'v24 = mask_rtx( ( machine_mode)*( ( unsigned __int8 *)v7 + 2), 0, bitsize, 0);', 'v34 = gen_rtx_REG( ( machine_mode)*( ( unsigned __int8 *)v30 + 2), v25);']
['v12 = gen_reg_rtx( ( machine_mode)*( ( unsigned __int8 *)v8 + 2));', 'v12 = gen_reg_rtx( ( machine_mode)*( ( unsigned __int8 *)v11 + 2));']
['if ( !insn_data_0[1159].operand->predicate( loc, ( ( target_flags & 0x2000000) != 0) + 4) )']
['v1 = copy_to_mode_reg( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), loc);']
['rtx v10; // rax', 'rtx v10; // rax', 'rtx v10; // rax', 'rtx v10; // rax', 'rtx v10; // rax', 'rtx v10; // rax', 'rtx v10; // rax']
['rtx i; // r12']
['rtx v14; // rdx', 'rtx v11; // rcx', 'rtx v24; // rcx', 'rtx v14; // rax', 'rtx v14; // rdx', 'rtx v14; // rbx', 'rtx v14; // rbx']
['rtx v16; // rbx', 'rtx v16; // rbx', 'rtx v17; // rbp', 'rtx v16; // rbx']
['rtx last_insn; // rbp', 'rtx last_insn; // rbp']
['rtx v23; // rbx']
['rtx v5; // r12', 'rtx v29; // r12', 'rtx v15; // r12', 'rtx v15; // r12']
['rtx v30; // rbp']
['if ( !memory_address_p( ( machine_mode)*( ( unsigned __int8 *)v3 + 2), v3->fld[0].rtx)']
['&& !push_operand( v3, ( machine_mode)*( ( unsigned __int8 *)v3 + 2))']
['if ( memory_address_p( ( machine_mode)*( ( unsigned __int8 *)v2 + 2), v2->fld[0].rtx) )']
['v5 = mode_class_0[v3];', 'v7 = mode_class_0[v6];']
['v6 = insn_data_0[insn_code].genfun( x, y);']
['if ( push_operand( x, ( machine_mode)*( ( unsigned __int8 *)x + 2)) )']
['( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),']
['v35 = gen_rtx_fmt_ee( PLUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), global_rtl[2], v34);', 'v39 = gen_rtx_fmt_ee( PLUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), global_rtl[2], v38);', 'v18 = gen_rtx_fmt_ee( PLUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), global_rtl[2], v17);', 'v24 = gen_rtx_fmt_ee( PLUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), global_rtl[2], v17);', 'v3 = gen_rtx_fmt_ee( PLUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), global_rtl[2], v2);', 'v3 = gen_rtx_fmt_ee( PLUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), global_rtl[2], v2);']
['v35 = gen_rtx_fmt_ee( PLUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), global_rtl[2], v34);']
['genfun = (  struct rtx_def *(  *)( rtx, rtx))insn_data_0[optab_table[30]->handlers[v19].insn_code].genfun;']
['v25 = (  struct rtx_def *(  *)( rtx, rtx))insn_data_0[optab_table[30]->handlers[v19].insn_code].genfun;']
['v52 = insn_data_0[optab_table[30]->handlers[v51].insn_code].genfun( v48, v49);']
['v52 = insn_data_0[optab_table[30]->handlers[v51].insn_code].genfun( v48, v49);']
['if ( ( unsigned int)( mode_class_0[*( ( unsigned __int8 *)reg + 2)] - 5) <= 1 )']
['induction_1 *biv; // rbx', 'induction_1 *biv; // rbx']
['induction_1 *biv; // rbx', 'induction_1 *biv; // rbx']
['induction_1 *v19; // rax', 'induction_1 *v19; // rax', 'induction_1 *v33; // rax', 'induction_1 *v33; // rax']
['induction_1 *v19; // rax', 'induction_1 *v19; // rax', 'induction_1 *v33; // rax', 'induction_1 *v33; // rax']
['induction_1 **p_giv; // rbx', 'induction_1 **p_giv; // rbx']
['induction_1 **p_giv; // rbx', 'induction_1 **p_giv; // rbx']
['induction_1 *v14; // rbx', 'induction_1 *v14; // rbx', 'induction_1 *v7; // rbp', 'induction_1 *v7; // rbp']
['induction_1 *v14; // rbx', 'induction_1 *v14; // rbx', 'induction_1 *v7; // rbp', 'induction_1 *v7; // rbp']
['induction_1 *v12; // rbx', 'induction_1 *v12; // rbx', 'induction_1 *v14; // rbx', 'induction_1 *v14; // rbx', 'induction_1 *v20; // rbx', 'induction_1 *v20; // rbx']
['induction_1 *v12; // rbx', 'induction_1 *v12; // rbx', 'induction_1 *v14; // rbx', 'induction_1 *v14; // rbx', 'induction_1 *v20; // rbx', 'induction_1 *v20; // rbx']
['induction_1 *biv; // r14', 'induction_1 *biv; // r14']
['induction_1 *biv; // r14', 'induction_1 *biv; // r14']
['biv = v2->biv;']
['if ( !biv )']
['v14 = v2->biv;']
['if ( *( _WORD *)biv->add_val != 54 )']
['if ( ( *( ( _BYTE *)biv + 100) & 0x20) != 0 )']
['add_vala = add_val;']
['v15 = v15->next;', 'v15 = v15->next;', 'v3 = v3->next;', 'v3 = v3->next;']
['v45 = gen_rtx_fmt_ee( PLUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), args_addr, args_so_far);']
['operand = insn_data_0[v51].operand;']
['v37 = insn_data_0[v39].genfun( v30, froma);', 'v13 = insn_data_0[v8].genfun( v10, xop0_0);', 'v16 = insn_data_0[v14].genfun( v8, v8);']
['v62 = construct_container( ( machine_mode)( BYTE5( type->block.abstract_origin) >> 1), type, 0, v13, v12, intreg_43, 0);', 'v62 = construct_container( ( machine_mode)( BYTE5( type->block.abstract_origin) >> 1), type, 0, v13, v12, intreg_43, 0);']
['( machine_mode)*( ( unsigned __int8 *)size + 2),']
['if ( *( _WORD *)v7 == 61 && mode_class_0[*( unsigned __int8 *)( v7 + 2)] == MODE_INT )']
['v30 = operand_sub*(short *)0xforce( v8, v27, mode);']
['v30 = operand_sub*(short *)0xforce( v8, v27, mode);']
['v25 = gen_rtx_fmt_ee( PLUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), args_addr, args_so_far);', 'v45 = gen_rtx_fmt_ee( PLUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), args_addr, args_so_far);']
['v14 = gen_rtx_fmt_e( PRE_DEC, ( machine_mode)( 4 - ( ( v6 == 0) - 1)), global_rtl[2]);']
['v18 = gen_rtx_fmt_ee( PLUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), global_rtl[2], v17);']
['v14 = gen_rtx_fmt_ee( PRE_MODIFY, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), global_rtl[2], v18);']
['predicate = insn_data_0[insn_code].operand->predicate;']
['v13 = insn_data_0[insn_code].genfun( x, ( rtx)v7);']
['v5 = assign_stack_local( ( machine_mode)v6, mode_size[v6], 0);']
['v5 = gen_reg_rtx( ( machine_mode)v6);']
['if ( v61 == ( ( target_flags & 0x2000000) == 0 ? 64 : 128) && mode_class_0[mode] == MODE_INT )']
['operand = insn_data_0[icode].operand;']
['v16 = insn_data_0[v14].genfun( v8, v8);']
['if ( code == GE && mode_class_0[v17] == MODE_INT && mode_bitsize[v17] == 1 )']
['if ( mode_class_0[v8] != MODE_INT )']
['v11 = gen_reg_rtx( ( machine_mode)*( ( unsigned __int8 *)target + 2));']
['operand = insn_data_0[icode].operand;']
['if ( !operand->predicate( v14, ( machine_mode)*( ( unsigned __int16 *)operand + 8)) )']
['if ( !operand->predicate( v14, ( machine_mode)*( ( unsigned __int16 *)operand + 8)) )']
['v12 = gen_reg_rtx( ( machine_mode)*( ( unsigned __int8 *)v8 + 2));']
['v11 = insn_data_0[icode].genfun( v12, v9);']
['v10 = insn_data_0[icode].genfun( v8, v9);']
['( machine_mode)*( ( unsigned __int8 *)dest_reg + 2),']
['v5 = gen_rtx_fmt_s( SYMBOL_REF, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), name);', 'v6 = gen_rtx_fmt_s( SYMBOL_REF, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), name);']
['v5 = gen_rtx_fmt_s( SYMBOL_REF, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), name);']
['exp = gen_lowpart_if_possible( ( machine_mode)*( ( unsigned __int8 *)exp + 2), const_rtx);']
['if ( mode_class_0[mode] != MODE_FLOAT )', 'if ( mode_class_0[mode] != MODE_FLOAT )']
['if ( mode_class_0[mode] != MODE_FLOAT )', 'if ( mode_class_0[mode] != MODE_FLOAT )']
['v3 = spelling_0;', 'v5 = spelling_0;', 'v1 = spelling_0;']
['if ( spelling_base >= spelling_0 )', 'if ( spelling_base >= spelling_0 )']
['rtx v21; // [rsp+10h] [rbp-68h]']
['rtx earliest; // [rsp+48h] [rbp-40h] BYREF']
['x[1] = ( rtx)v5;', 'q = ( rtx)v27;', 'q = ( rtx)v27;', 'v11 = ( rtx)y[1];']
['v9 = ( __int64)v11[1];']
['v9 = ( __int64)v11[1];']
['condition_0 = get_condition_0( v17, &earliest);']
['if ( ( mode_class_0[*( unsigned __int8 *)( v31.rtwint + 2)] & 0xFFFFFFFB) != 2']
['&& mode_class_0[*( unsigned __int8 *)( v31.rtwint + 2)] != MODE_VECTOR_FLOAT']
['if ( ( mode_class_0[*( unsigned __int8 *)( v31.rtwint + 2)] & 0xFFFFFFFB) != 2']
['&& mode_class_0[*( unsigned __int8 *)( v31.rtwint + 2)] != MODE_VECTOR_FLOAT']
['for ( i = insns; ; i = ( rtx)v17.rtwint )', 'for ( i = insns; ; i = ( rtx)v17.rtwint )']
['*( _OWORD *)&v6.r[1] = *( unsigned int *)&einv[4];']
['v2 = mode_class_0[mode];', 'v25 = mode_class_0[mode];']
['v8 = adjust_address_1( v3, ( machine_mode)v1, v6, 1, 1);', 'v8 = adjust_address_1( v8, ( machine_mode)v13, v11, 1, 1);']
['v13 = gen_lowpart_common( ( machine_mode)v9, out);']
['v34 = expand_expr( from, 0LL, ( machine_mode)*( ( unsigned __int8 *)v18 + 2), EXPAND_NORMAL);']
['( machine_mode)( BYTE5( sizetype_tab[0]->block.abstract_origin) >> 1),', '( machine_mode)( BYTE5( sizetype_tab[0]->block.abstract_origin) >> 1),']
['v20 = ( tree_node *)v14[1];']
['v21 = convert_modes( ( machine_mode)v7, ( machine_mode)( unsigned __int8)v8, v20, v6);', 'v21 = convert_modes( ( machine_mode)v7, ( machine_mode)( unsigned __int8)v8, v20, v6);', 'v23 = convert_modes( ( machine_mode)v7, ( machine_mode)( unsigned __int8)v8, v22, v6);', 'v23 = convert_modes( ( machine_mode)v7, ( machine_mode)( unsigned __int8)v8, v22, v6);']
['( machine_mode)( BYTE5( to->common.type->block.abstract_origin) >> 1),']
['( machine_mode)( BYTE5( from->common.type->block.abstract_origin) >> 1),']
['rtx ext_val; // [rsp+30h] [rbp-48h] BYREF']
['rtx valuea[8]; // [rsp+8h] [rbp-40h] BYREF']
['old_set = 0LL;']
['args_size_0 = 0LL;', 'old_set = 0LL;']
['v6 = gen_reg_rtx( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4));']
['v7 = gen_rtx_MEM( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), arguments);']
['emit_stack_restore( ( save_level)( x_block_stack->next == 0LL), next_label, 0LL);']
['v13 = bitpos % get_mode_alignment( ( machine_mode)v12) != 0 ? 0x33 : 0;']
['v6 = gen_rtx_REG( ( machine_mode)i, v5);', 'v30 = gen_rtx_MEM( ( machine_mode)v29, v26);']
['v8 = adjust_address_1( v8, ( machine_mode)v13, v11, 1, 1);']
['search_ofs_1 = v18;', 'reg_dead_flag = 0;', 'reg_dead_flag = 0;']
['v24 = adjust_address_1( v11, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v18, 1, 1);']
['htab_traverse( hash_table_0, discard_useless_values, 0LL);']
['v21 = adjust_address_1( to, v10, v9, 1, 1);']
['mode_alignment = get_mode_alignment( ( machine_mode)v4);']
['v6 = gen_rtx_REG( ( machine_mode)i, v5);']
['v8 = adjust_address_1( v3, ( machine_mode)v1, v6, 1, 1);']
['v9 = adjust_address_1( v1, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), 0LL, 1, 1);']
['v12 = adjust_address_1( v1, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v10, 1, 1);']
['v5 = *( tree_node **)( *high + 32LL);']
['v8 = ( tree_node *)high[4];', 'v9 = ( tree_node *)high[4];']
['return expand_expr( addr_tree, 0LL, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), EXPAND_NORMAL);']
['v8 = adjust_address_1( v3, ( machine_mode)v1, v6, 1, 1);']
['v5 = force_reg( ( machine_mode)v4, buf_addr);']
['v6 = gen_rtx_MEM( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v5);', 'v6 = gen_rtx_MEM( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v5);']
['v8 = gen_rtx_MEM( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v7);', 'v8 = gen_rtx_MEM( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v7);']
['( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),']
['( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),']
['( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),']
['( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),']
['v12 = *( tree_node **)( v6 + 72);']
['v6 = expand_expr( valist, 0LL, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), EXPAND_NORMAL);']
['if ( !insn_data_0[1316].operand->predicate( v6, *( ( unsigned __int16 *)insn_data_0[1316].operand + 8)) )', 'if ( !insn_data_0[1316].operand->predicate( v6, *( ( unsigned __int16 *)insn_data_0[1316].operand + 8)) )']
['if ( !insn_data_0[1316].operand->predicate( v6, *( ( unsigned __int16 *)insn_data_0[1316].operand + 8)) )', 'if ( !insn_data_0[1316].operand->predicate( v6, *( ( unsigned __int16 *)insn_data_0[1316].operand + 8)) )']
['v9 = force_reg( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v8);']
['v30 = memory_address( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v29);']
['v31 = gen_rtx_MEM( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v30);', 'v13 = gen_rtx_MEM( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v12);', 'v31 = gen_rtx_MEM( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v30);', 'v31 = gen_rtx_MEM( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v30);']
['return gen_rtx_MEM( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v4);']
['v2 = gen_reg_rtx( ( machine_mode)( BYTE5( integer_types[5]->block.abstract_origin) >> 1));']
['v4 = force_reg( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v3);']
['v5 = gen_rtx_MEM( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v4);']
['v7 = gen_rtx_MEM( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v6);']
['v8 = gen_rtx_fmt_u00( LABEL_REF, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), receiver_label);']
['v9 = force_reg( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v8);']
['stack_save = gen_rtx_MEM( ( machine_mode)v2, v11);']
['if ( !gave_help_9 )']
['gave_help_9 = 1;']
['v6 = gen_rtx_MEM( ( machine_mode)( BYTE5( type->block.abstract_origin) >> 1), v5);']
['v5 = mode_class_0[mode];', 'v5 = mode_class_0[mode];', 'v5 = mode_class_0[mode];', 'v5 = mode_class_0[mode];']
['operand = insn_data_0[insn_code].operand;', 'operand = insn_data_0[insn_code].operand;', 'operand = insn_data_0[insn_code].operand;', 'operand = insn_data_0[insn_code].operand;', 'operand = insn_data_0[insn_code].operand;', 'operand = insn_data_0[insn_code].operand;', 'operand = insn_data_0[insn_code].operand;']
['operand = insn_data_0[insn_code].operand;', 'operand = insn_data_0[insn_code].operand;', 'operand = insn_data_0[insn_code].operand;', 'operand = insn_data_0[insn_code].operand;', 'operand = insn_data_0[insn_code].operand;', 'operand = insn_data_0[insn_code].operand;', 'operand = insn_data_0[insn_code].operand;']
['v6 = insn_data_0[insn_code].genfun( x, y);', 'v11 = insn_data_0[icode].genfun( v12, v9);']
['v15 = gen_rtx_fmt_e( USE, ( machine_mode)*( ( unsigned __int8 *)x + 2), v11.rtx);']
['v16 = nonzero_bits( x->fld[0].rtx, ( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2));']
['v18 = gen_rtx_fmt_e( ZERO_EXTEND, ( machine_mode)*( ( unsigned __int8 *)x + 2), v17.rtx);']
['v32 = nonzero_bits( *( rtx *)( v1->fld[0].rtwint + 8), ( machine_mode)v21);']
['v7 = expand_shift( RSHIFT_EXPR, ( machine_mode)v11, v7, v22, v23, 1);']
['v11 = gen_rtx( ( rtx_code)*( _WORD *)v6, ( machine_mode)*( ( unsigned __int8 *)v6 + 2), v10, v4);', 'v11 = gen_rtx( ( rtx_code)*( _WORD *)v6, ( machine_mode)*( ( unsigned __int8 *)v6 + 2), v10, v4);']
['rtx v20; // rbx']
['rtx v28; // rax', 'rtx v28; // rax', 'rtx v28; // rax']
['rtx *v30; // rax']
['rtx v35; // rax', 'rtx v35; // rax', 'rtx v35; // rax', 'rtx v35; // rax', 'rtx v35; // rax']
['v27 = decl->decl.rtl;', 'v27 = decl->decl.rtl;', 'v20 = decl->decl.rtl;']
['if ( !v5 )']
['v27 = decl->decl.rtl;', 'v27 = decl->decl.rtl;', 'v20 = decl->decl.rtl;']
['regno_decl[*( unsigned int *)( *( _QWORD *)&v27[1] + 8LL)] = decl;']
['v20 = decl->decl.rtl;']
['v6 = gen_reg_rtx( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4));', 'v4 = gen_reg_rtx( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4));', 'v7 = gen_reg_rtx( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4));', 'v3 = gen_reg_rtx( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4));', 'v1 = gen_reg_rtx( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4));']
['addr_rtx = gen_reg_rtx( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4));']
['v0 = gen_rtx_REG( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), 2);']
['v7 = gen_reg_rtx( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4));']
['emit_stack_restore( ( save_level)( x_block_stack->next == 0LL), next_label, 0LL);']
['rtx v6; // r12', 'rtx v40; // r12', 'rtx v6; // r12', 'rtx v44; // r12', 'rtx v44; // r12']
['rtx v17; // r12', 'rtx v67; // r12', 'rtx v40; // r12', 'rtx v44; // r12', 'rtx v44; // r12']
['rtx v53; // rbx', 'rtx v58; // rbx', 'rtx v31; // rbx', 'rtx v58; // rbx', 'rtx v11; // rbx', 'rtx v61; // rbx']
['rtx v75; // rax']
['rtx v76; // r14', 'rtx v57; // r14']
['rtx v8; // r12', 'rtx v15; // r15', 'rtx v27; // r15', 'rtx v41; // r15', 'rtx v19; // r15', 'rtx v19; // r15', 'rtx v28; // r14', 'rtx v74; // r12', 'rtx v35; // r15', 'rtx v16; // r15', 'rtx v76; // r14', 'rtx v7; // r13', 'rtx v28; // r14', 'rtx v40; // r15', 'rtx v45; // r15']
['v5 = mode_class_0[v3];', 'v11 = mode_class_0[5];', 'v11 = mode_class_0[4];', 'v7 = mode_class_0[v6];']
['rtx = gen_rtx_fmt_e( USE, ( machine_mode)*( unsigned __int8 *)( v2.rtwint + 2), *( rtx *)( v2.rtwint + 8));']
['v28 = gen_lowpart_for_combine( ( machine_mode)v8, *( rtx *)&x[1]);']
['emit_cmp_and_jump_insns( v20, v16, GE, 0LL, ( machine_mode)*( ( unsigned __int8 *)v20 + 2), 0, v17);']
['( machine_mode)*( ( unsigned __int8 *)v20 + 2),', '( machine_mode)*( ( unsigned __int8 *)v7 + 2),', '( machine_mode)*( ( unsigned __int8 *)v17 + 2),', '( machine_mode)*( ( unsigned __int8 *)v17 + 2),', '( machine_mode)*( ( unsigned __int8 *)v7 + 2),']
['v23 = trunc_int_for_mode( 1LL << v15, ( machine_mode)*( ( unsigned __int8 *)v18 + 2));']
['( machine_mode)*( ( unsigned __int8 *)v20 + 2),', '( machine_mode)*( ( unsigned __int8 *)v5 + 2),', '( machine_mode)*( ( unsigned __int8 *)v5 + 2),', '( machine_mode)*( ( unsigned __int8 *)v5 + 2),']
['v28 = gen_rtx_fmt_e( UNSIGNED_FIX, ( machine_mode)*( ( unsigned __int8 *)v18 + 2), v27);']
['( machine_mode)*( ( unsigned __int8 *)v39 + 2),', '( machine_mode)*( ( unsigned __int8 *)v18 + 2),']
['( rtx_code)( unsignedp == 0 ? FIX : UNSIGNED_FIX),']
['( machine_mode)*( ( unsigned __int8 *)v39 + 2),', '( machine_mode)*( ( unsigned __int8 *)v18 + 2),']
['v12 = gen_reg_rtx( ( machine_mode)*( ( unsigned __int8 *)v11 + 2));']
['v11 = expand_unop( ( machine_mode)*( ( unsigned __int8 *)v11 + 2), optab_table[17], v11, v12, 0);']
['emit_unop_insn( fixed, v3, v11, ( rtx_code)( lab2 == 0 ? FIX : UNSIGNED_FIX));']
['emit_unop_insn( v6, v4, v8, ( rtx_code)( temp == 0 ? FLOAT : UNSIGNED_FLOAT));']
['emit_cmp_and_jump_insns( v12, const_int_rtx[64], GE, 0LL, ( machine_mode)*( ( unsigned __int8 *)v12 + 2), 0, v9);']
['( machine_mode)*( ( unsigned __int8 *)v1 + 2),', '( machine_mode)*( ( unsigned __int8 *)v12 + 2),', '( machine_mode)*( ( unsigned __int8 *)v18 + 2),', '( machine_mode)*( ( unsigned __int8 *)v10 + 2),', '( machine_mode)*( ( unsigned __int8 *)v5 + 2),', '( machine_mode)*( ( unsigned __int8 *)v17 + 2),', '( machine_mode)*( ( unsigned __int8 *)v17 + 2),', '( machine_mode)*( ( unsigned __int8 *)v5 + 2),', '( machine_mode)*( ( unsigned __int8 *)v5 + 2),']
['v30 = gen_rtx_fmt_e( FLOAT, ( machine_mode)*( ( unsigned __int8 *)v10 + 2), v23);']
['v28 = ( tree_node *)i[4];']
['v16 = ( tree_node *)i[4];', 'v9 = ( tree_node *)i[4];', 'v9 = ( tree_node *)high[4];']
['v16 = gen_reg_rtx( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4));']
['v38 = gen_rtx_MEM( ( machine_mode)LOBYTE( subr->decl.result->block.supercontext), v37);']
['v24->decl.rtl = gen_reg_rtx( ( machine_mode)*( ( unsigned __int8 *)v23 + 2));']
['v30 = memory_address( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v29);']
['v6 = gen_rtx_MEM( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v5);', 'v31 = gen_rtx_MEM( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v30);', 'v3 = gen_rtx_MEM( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v3);', 'v6 = gen_rtx_MEM( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v5);', 'v37 = gen_rtx_MEM( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v36);', 'v31 = gen_rtx_MEM( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v30);', 'v31 = gen_rtx_MEM( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v30);']
['rtx v10; // rax', 'rtx v10; // rax', 'rtx v10; // rax', 'rtx v10; // rax', 'rtx v10; // rax', 'rtx v10; // rax', 'rtx v10; // rax']
['rtx v15; // rax', 'rtx v15; // rax', 'rtx v15; // rax']
['rtx last_insn; // rbx', 'rtx last_insn; // rbx', 'rtx last_insn; // rbx']
['v4 = gen_rtx_fmt_u00( LABEL_REF, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v3);']
['v10 = copy_to_reg( v6->fld[0].rtx);']
['v5 = v10;', 'v5 = v10;', 'v15 = v14;', 'v15 = v14;', 'v6 = v10;', 'v9 = v10;', 'v12 = v7;']
['v11 = copy_rtx( rtx);', 'v11 = canon_rtx( v14);']
['v14 = v25;', 'v15 = v14;', 'v15 = v14;', 'v10 = v5;', 'v10 = v5;', 'v10 = v5;', 'v10 = v5;', 'v7 = v11;']
['last_insn = get_last_insn( );', 'last_insn = get_last_insn( );', 'last_insn = get_last_insn( );']
['if ( last_insn )', 'if ( last_insn )', 'if ( last_insn )', 'if ( last_insn )']
['while ( *( _WORD *)last_insn != 33 )']
['if ( *( _WORD *)last_insn != 34 )']
['last_insn = ( rtx)last_insn[1];']
['if ( last_insn )', 'if ( last_insn )', 'if ( last_insn )', 'if ( last_insn )']
['( machine_mode)*( ( unsigned __int8 *)target + 2),', '( machine_mode)*( ( unsigned __int8 *)target + 2),']
['operand = insn_data_0[insn_code].operand;', 'operand = insn_data_0[insn_code].operand;', 'operand = insn_data_0[insn_code].operand;', 'operand = insn_data_0[insn_code].operand;', 'operand = insn_data_0[insn_code].operand;', 'operand = insn_data_0[insn_code].operand;', 'operand = insn_data_0[insn_code].operand;']
['if ( operand->predicate( v8, ( machine_mode)v6) )']
['if ( operand[1].predicate( v8, ( machine_mode)v6) )']
['if ( operand[1].predicate( v8, ( machine_mode)v6) )']
['force_reg( ( machine_mode)v6, tempa);']
['v6 = insn_data_0[insn_code].genfun( x, y);']
['if ( general_operand( v8->fld[0].rtx, ( machine_mode)v6) )']
['v17 = force_reg( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v8->fld[0].rtx);']
['v19 = force_reg( ( machine_mode)*( ( unsigned __int8 *)v18 + 2), v18);']
['if ( operand[1].predicate( v8, ( machine_mode)v6) )']
['force_reg( ( machine_mode)v6, tempa);']
['( machine_mode)*( ( unsigned __int8 *)v39 + 2),', '( machine_mode)*( ( unsigned __int8 *)v4 + 2),', '( machine_mode)*( ( unsigned __int8 *)v4 + 2),', '( machine_mode)*( ( unsigned __int8 *)v4 + 2),']
['v6 = insn_data_0[insn_code].genfun( x, y);']
['rtx v34; // r12', 'rtx v35; // r15']
['rtx v39; // rax', 'rtx v39; // rax']
['rtx v41; // rax']
['rtx *v23; // rax', 'rtx v43; // rax']
['rtx *v15; // rax', 'rtx v45; // rax']
['rtx last_insn; // rbx', 'rtx last_insn; // rbx', 'rtx last_insn; // rbx']
['rtx v5; // r14', 'rtx v57; // r14']
['rtx v56; // r13', 'rtx v14; // r13', 'rtx v14; // r13']
['rtx v5; // r12', 'rtx v50; // r12', 'rtx v15; // r12', 'rtx v15; // r12']
['( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),']
['v4 = force_reg( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), const_int_rtx[64]);']
['if ( mode_class_0[*( ( unsigned __int8 *)op1 + 2)] != MODE_INT )']
['if ( mode_class_0[v2] == MODE_INT )']
['variant = basic_variant;', 'variant = basic_variant;', 'variant = basic_variant;', 'variant = basic_variant;']
['variant = basic_variant;', 'variant = basic_variant;', 'variant = basic_variant;', 'variant = basic_variant;']
['variant = basic_variant;', 'variant = basic_variant;', 'variant = basic_variant;', 'variant = basic_variant;']
['variant = basic_variant;', 'variant = basic_variant;', 'variant = basic_variant;', 'variant = basic_variant;']
['variant = negate_variant;']
['tree v14; // r12']
['tree v15; // rax']
['tree v17; // rax', 'tree v17; // rax']
['v12 = type_for_mode( ( machine_mode)v11, unsignedp);']
['v14 = make_tree( v10, mult);']
['v15 = make_tree( v10, x);']
['v16 = build( MULT_EXPR, v10, v15, v14);', 'v16 = build( MULT_EXPR, v10, v15, v14);']
['v16 = build( MULT_EXPR, v10, v15, v14);', 'v16 = build( MULT_EXPR, v10, v15, v14);']
['v17 = fold( v16);']
['v18 = build( PLUS_EXPR, v10, v17, tree);']
['v13 = gen_rtx_fmt_ee( ( rtx_code)v8, mode, adj_operand, v12);']
['v18 = gen_rtx_fmt_ee( ( rtx_code)v8, mode, v14, v17);']
['v4 = gen_rtx_fmt_u00( LABEL_REF, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v3);']
['v15 = expand_expr( ( tree)high, v14, ( machine_mode)*( ( unsigned __int8 *)v14 + 2), EXPAND_NORMAL);']
['tmpmode = operand_sub*(short *)0xforce( result_val, v30 / v18, BLKmode);']
['v4 = gen_reg_rtx( ( machine_mode)v3);']
['tree v19; // rax', 'tree v20; // rax', 'tree v23; // rax', 'tree v24; // rax', 'tree v22; // rax', 'tree v23; // rax', 'tree v24; // rax', 'tree v25; // rax', 'tree v9; // rax', 'tree v9; // rax']
['v43 = neg_const_int( mode, v43);', 'v43 = neg_const_int( mode, v43);']
['v18 = build( PLUS_EXPR, v10, v17, tree);']
['classa = mode_class_0[mode];']
['operand = insn_data_0[insn_code].operand;', 'operand = insn_data_0[insn_code].operand;', 'operand = insn_data_0[insn_code].operand;', 'operand = insn_data_0[insn_code].operand;', 'operand = insn_data_0[insn_code].operand;', 'operand = insn_data_0[insn_code].operand;', 'operand = insn_data_0[insn_code].operand;']
['v19 = insn_data_0[insn_code].genfun( targ0a, t0);']
['v7 = mode_class_0[mode];']
['operand = insn_data_0[insn_code].operand;', 'operand = insn_data_0[insn_code].operand;', 'operand = insn_data_0[insn_code].operand;', 'operand = insn_data_0[insn_code].operand;', 'operand = insn_data_0[insn_code].operand;', 'operand = insn_data_0[insn_code].operand;', 'operand = insn_data_0[insn_code].operand;']
['operand = insn_data_0[insn_code].operand;', 'operand = insn_data_0[insn_code].operand;', 'operand = insn_data_0[insn_code].operand;', 'operand = insn_data_0[insn_code].operand;', 'operand = insn_data_0[insn_code].operand;', 'operand = insn_data_0[insn_code].operand;', 'operand = insn_data_0[insn_code].operand;']
['v19 = insn_data_0[insn_code].genfun( targ0a, t0);']
['v30 = operand_sub*(short *)0xforce( v8, v27, mode);']
['rtx v5; // rax', 'rtx v5; // rax', 'rtx v5; // rax']
['rtx v6; // rax', 'rtx v6; // rax', 'rtx v6; // rax']
['v4 = pc_set( rtx);']
['v5 = canonicalize_condition( rtx, *( rtx *)( *( _QWORD *)&v4[1] + 8LL), 0, 0LL, v2);', 'v5 = canonicalize_condition( rtx, *( rtx *)( *( _QWORD *)&v4[1] + 8LL), 0, 0LL, v2);']
['v5 = canonicalize_condition( rtx, *( rtx *)( *( _QWORD *)&v4[1] + 8LL), 0, 0LL, v2);', 'v5 = canonicalize_condition( rtx, *( rtx *)( *( _QWORD *)&v4[1] + 8LL), 0, 0LL, v2);']
['if ( v6 )']
['if ( v5->fld[0].rtx == v2 )']
['v6 = (  struct rtx_def *)v5[1];', 'v8 = (  struct rtx_def *)v7[1];']
['v7 = gen_rtx_fmt_ee( ( rtx_code)*( _WORD *)v5, VOIDmode, *( rtx *)( v3 + 16), v6);', 'v7 = gen_rtx_fmt_ee( ( rtx_code)*( _WORD *)v5, VOIDmode, *( rtx *)( v3 + 16), v6);']
['v7 = gen_rtx_fmt_ee( ( rtx_code)*( _WORD *)v5, VOIDmode, *( rtx *)( v3 + 16), v6);', 'v7 = gen_rtx_fmt_ee( ( rtx_code)*( _WORD *)v5, VOIDmode, *( rtx *)( v3 + 16), v6);']
['( machine_mode)( BYTE5( sizetype_tab[0]->block.abstract_origin) >> 1),', '( machine_mode)( BYTE5( sizetype_tab[0]->block.abstract_origin) >> 1),']
['( machine_mode)( BYTE5( sizetype_tab[0]->block.abstract_origin) >> 1),', '( machine_mode)( BYTE5( sizetype_tab[0]->block.abstract_origin) >> 1),']
['return expand_expr( size_unit, 0LL, ( machine_mode)( BYTE5( sizetype_tab[0]->block.abstract_origin) >> 1), EXPAND_NORMAL);']
['rtx *add_vala; // [rsp+B2h] [rbp-50h]']
['add_vala = add_val;']
['v14 = gen_rtx_fmt_ee( MULT, ( machine_mode)*( ( unsigned __int8 *)add_val + 2), add_val->fld[0].rtx, v15))']
['v14 = gen_rtx_fmt_ee( MULT, ( machine_mode)*( ( unsigned __int8 *)add_val + 2), add_val->fld[0].rtx, v15))']
['v14 = gen_rtx_fmt_ee( MULT, ( machine_mode)*( ( unsigned __int8 *)add_val + 2), add_val->fld[0].rtx, v15))']
['v11 = gen_rtx_fmt_ee( PLUS, ( machine_mode)*( ( unsigned __int8 *)v3 + 2), v10, v9),']
['( rtx_code)*( _WORD *)ext_dependent,', '( rtx_code)*( _WORD *)ext_dependent,']
['( machine_mode)*( ( unsigned __int8 *)ext_dependent + 2),', '( machine_mode)*( ( unsigned __int8 *)ext_dependent + 2),']
['rtx v17; // rax', 'rtx v17; // rax', 'rtx v17; // rax', 'rtx v17; // rax']
['rtx fixed_bit_field; // r14']
['rtx v60; // rax', 'rtx v60; // rax']
['if ( recog_data_0.insn != insn || insn[2].fld[0].rtint < 0 )']
['recog_data_0.insn = insn;']
['fatal_insn_not_found( insn, "recog.c", 2063, "extract_constrain_insn_cached");']
['v9 = address_operand( v55, ( machine_mode)*( ( unsigned __int8 *)v55 + 2));']
['( machine_mode)*( ( unsigned __int8 *)v10 + 2),']
['v25 = force_reg( ( machine_mode)v11, v7);']
['LODWORD( v3) = recog_data_0.n_operands - 1;', 'LODWORD( v1) = recog_data_0.n_operands - 1;', 'LODWORD( v4) = recog_data_0.n_operands - 1;']
['recog_data_0.n_alternatives = 0;']
['recog_data_0.insn = 0LL;', 'recog_data_0.insn = 0LL;', 'recog_data_0.insn = 0LL;', 'recog_data_0.insn = 0LL;']
['recog_data_0.n_operands = v7;']
['fatal_insn_not_found( insn, "recog.c", 2139, "extract_insn");']
['recog_data_0.operand,']
['recog_data_0.operand_loc,']
['recog_data_0.constraints,']
['recog_data_0.operand_mode);']
['v8 = recog_data_0.constraints[0];', 'v15 = recog_data_0.constraints[i];']
['recog_data_0.n_alternatives = 1;']
['for ( i = *recog_data_0.constraints[0]; *v8; i = *v8 )']
['recog_data_0.n_alternatives = 0;', 'recog_data_0.n_alternatives = 1;']
['if ( recog_data_0.n_alternatives > 0 )']
['fatal_insn_not_found( insn, "recog.c", 2148, "extract_insn");']
['if ( recog_data_0.insn != insn || insn[2].fld[0].rtint < 0 )']
['recog_data_0.insn = insn;']
['( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),']
['( machine_mode)*( unsigned __int8 *)( op0->fld[0].rtwint + 2));', '( machine_mode)*( unsigned __int8 *)( op0->fld[0].rtwint + 2));']
['v15 = operand_sub*(short *)0xforce(', 'v15 = operand_sub*(short *)0xforce(']
['v15 = operand_sub*(short *)0xforce( op0, v21, ( machine_mode)*( ( unsigned __int8 *)op0 + 2));', 'v15 = operand_sub*(short *)0xforce( op0, v21, ( machine_mode)*( ( unsigned __int8 *)op0 + 2));']
['v15 = operand_sub*(short *)0xforce( op0, v21, ( machine_mode)*( ( unsigned __int8 *)op0 + 2));', 'v15 = operand_sub*(short *)0xforce( op0, v21, ( machine_mode)*( ( unsigned __int8 *)op0 + 2));']
['rtx v11; // rax', 'rtx v11; // rax', 'rtx v11; // rax']
['rtx i; // rdi']
['v4 = first;', 'v4 = first;', 'v4 = first;', 'v9 = first;']
['if ( *( _WORD *)v11 == 37 )']
['v10 = v9[2].fld[0].rtint;']
['v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v14 = v14[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;']
['v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v14 = v14[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;']
['if ( v14 )', 'if ( v15 )', 'if ( !v27 )', 'if ( !v20 )', 'if ( v10 )', 'if ( !v5 )', 'if ( v13 )', 'if ( !v9 )', 'if ( v19 )', 'if ( v10 )', 'if ( v10 )', 'if ( !v9 )', 'if ( v10 )', 'if ( v17 )']
['v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v14 = v14[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;']
['v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v14 = v14[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;']
['while ( v15 );']
['for ( i = first[1].fld[0].rtx; i; i = final_scan_insn( i, file, optimize, prescan, 0) )', 'for ( i = first[1].fld[0].rtx; i; i = final_scan_insn( i, file, optimize, prescan, 0) )', 'for ( i = first[1].fld[0].rtx; i; i = final_scan_insn( i, file, optimize, prescan, 0) )', 'for ( i = first[1].fld[0].rtx; i; i = final_scan_insn( i, file, optimize, prescan, 0) )']
['for ( i = first[1].fld[0].rtx; i; i = final_scan_insn( i, file, optimize, prescan, 0) )', 'for ( i = first[1].fld[0].rtx; i; i = final_scan_insn( i, file, optimize, prescan, 0) )', 'for ( i = first[1].fld[0].rtx; i; i = final_scan_insn( i, file, optimize, prescan, 0) )', 'for ( i = first[1].fld[0].rtx; i; i = final_scan_insn( i, file, optimize, prescan, 0) )']
['for ( i = first[1].fld[0].rtx; i; i = final_scan_insn( i, file, optimize, prescan, 0) )', 'for ( i = first[1].fld[0].rtx; i; i = final_scan_insn( i, file, optimize, prescan, 0) )', 'for ( i = first[1].fld[0].rtx; i; i = final_scan_insn( i, file, optimize, prescan, 0) )', 'for ( i = first[1].fld[0].rtx; i; i = final_scan_insn( i, file, optimize, prescan, 0) )']
['for ( i = first[1].fld[0].rtx; i; i = final_scan_insn( i, file, optimize, prescan, 0) )', 'for ( i = first[1].fld[0].rtx; i; i = final_scan_insn( i, file, optimize, prescan, 0) )', 'for ( i = first[1].fld[0].rtx; i; i = final_scan_insn( i, file, optimize, prescan, 0) )', 'for ( i = first[1].fld[0].rtx; i; i = final_scan_insn( i, file, optimize, prescan, 0) )']
['rtuint = reg->fld[0].rtuint;', 'rtuint = reg->fld[0].rtuint;']
['induction_1 *biv; // rbx', 'induction_1 *biv; // rbx', 'induction_1 *giv; // rax', 'induction_1 *giv; // rax', 'induction_1 *giv; // rax', 'induction_1 *giv; // rax']
['induction_1 *biv; // rbx', 'induction_1 *biv; // rbx', 'induction_1 *giv; // rax', 'induction_1 *giv; // rax', 'induction_1 *giv; // rax', 'induction_1 *giv; // rax']
['biv = bl_0->biv;']
['if ( mode_class_0[mode] != MODE_INT )', 'if ( mode_class_0[mode] != MODE_INT )']
['if ( mode_class_0[mode] != MODE_INT )', 'if ( mode_class_0[mode] != MODE_INT )']
['src_rega[0] = src_reg;']
['biv = bl_0->biv;']
['biv = bl_0->biv;']
['src_rega[0] = src_reg;']
['v9 = gen_reg_rtx( ( machine_mode)v8);']
['( machine_mode)*( ( unsigned __int8 *)v18 + 2),']
['rtx v38; // [rsp+0h] [rbp-40h] BYREF']
['rtx i; // [rsp+0h] [rbp-58h]']
['if ( ( unsigned int)( debug_info_level_0 - 2) <= 1', 'if ( ( unsigned int)( debug_info_level_0 - 2) <= 1']
['if ( ( unsigned int)( debug_info_level_0 - 2) <= 1', 'if ( ( unsigned int)( debug_info_level_0 - 2) <= 1']
['( const char *)&stru_634008.block.supercontext,']
['i = v5;']
['i = v5;']
['mode_alignment = get_mode_alignment( ( machine_mode)v4);']
['rtx v6; // rax', 'rtx v6; // rax', 'rtx v6; // rax']
['base_term = find_base_term( rtx);', 'v10 = find_base_value( v5);', 'v10 = find_base_value( v5);']
['if ( !v5 )', 'if ( v6 )', 'if ( !v9 )', 'if ( !v9 )']
['rtx base_term; // rbx']
['if ( ( unsigned __int16)( *( _WORD *)compound_operation - 120) > 1u || !subreg_lowpart_p( x) )']
['if ( ( unsigned __int16)( *( _WORD *)compound_operation - 120) > 1u || !subreg_lowpart_p( x) )']
['if ( ( unsigned __int16)( *( _WORD *)compound_operation - 120) > 1u || !subreg_lowpart_p( x) )']
['rtx base_value; // rax']
['rtx v11; // rax', 'rtx v11; // rax', 'rtx v11; // rax']
['base_value = find_base_value( src->fld[0].rtx);']
['if ( base_value )']
['v1 = base_value;']
['v10 = find_base_value( v5);', 'v10 = find_base_value( v5);']
['if ( v14 )', 'if ( v15 )', 'if ( v10 )', 'if ( v13 )', 'if ( v19 )', 'if ( v10 )', 'if ( v10 )', 'if ( v10 )', 'if ( v17 )']
['v7 = v11;']
['rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax']
['timevar_push( TV_CFG_0);']
['nonnote_insn = next_nonnote_insn( v23);']
['|| *( _WORD *)nonnote_insn != 33']
['if ( ( !nonnote_insn']
['|| ( unsigned __int16)( **( _WORD **)&nonnote_insn[2] - 44) > 1u)']
['timevar_pop( TV_CPP_0);']
['rtx v7; // r13']
['v6 = *startp;']
['if ( biv->mult_val != const_int_rtx[65] )']
['v9 = ( rtx)rtx[1];', 'v5 = ( rtx)src[1];', 'v6 = ( rtx)op0[1];', 'v9 = ( rtx)rtx[1];', 'v6 = ( rtx)rtx[1];', 'v4 = ( rtx)v4[1];']
['if ( const_int_rtx[64] != constant_term']
['v11 = safe_hash( v6, ( machine_mode)v8);']
['v12 = lookup( v6, v11 & 0x1F, ( machine_mode)v8);']
['rtx v23; // rbx', 'rtx v28; // rbx', 'rtx v21; // rax', 'rtx v22; // rbx', 'rtx v20; // rbx', 'rtx v31; // rbx', 'rtx v21; // rdx', 'rtx v11; // rbx', 'rtx v61; // rbx']
['rtx v22; // rbx', 'rtx v22; // rax', 'rtx v22; // rax', 'rtx v22; // rsi']
['rtx v27; // rax', 'rtx v27; // r15', 'rtx v27; // rax']
['rtx v39; // rax', 'rtx v39; // rax']
['rtx v16; // rax', 'rtx v5; // rax', 'rtx v26; // rax', 'rtx v26; // rax', 'rtx v36; // rax', 'rtx v36; // rax', 'rtx v5; // rax', 'rtx v26; // rax', 'rtx v76; // rax', 'rtx v57; // rax', 'rtx v26; // rax', 'rtx v6; // rax', 'rtx v50; // rax', 'rtx v86; // rax', 'rtx v36; // rax', 'rtx v46; // rax', 'rtx v57; // rax', 'rtx v16; // rax', 'rtx v6; // rax', 'rtx v36; // rax', 'rtx v55; // rax', 'rtx v53; // rax', 'rtx v50; // rax', 'rtx v57; // rax', 'rtx v5; // rax', 'rtx v6; // rax', 'rtx v86; // rax', 'rtx v55; // rax']
['rtx temp; // [rsp+20h] [rbp-48h]', 'rtx tem; // [rsp+30h] [rbp-68h]']
['rtx temp; // [rsp+20h] [rbp-48h]', 'rtx tem; // [rsp+30h] [rbp-68h]']
['rtx temp; // [rsp+20h] [rbp-48h]', 'rtx tem; // [rsp+30h] [rbp-68h]']
['if ( flag_float_store && mode_class_0[*( ( unsigned __int8 *)goal + 2)] == MODE_FLOAT )']
['if ( mode_class_0[*( unsigned __int8 *)( v3.rtwint + 2)] == MODE_CC )']
['return v23;', 'last = v13;']
['v21 = succ;', 'v21 = succ;']
['if ( ( *( ( _BYTE *)cfun + 425) & 1) != 0 && qty_0[qtyno].n_calls_crossed > 0 )']
['if ( !qty_0[qtyno].n_calls_crossed )']
['if ( ( unsigned int)( mode_class_0[mode] - 5) > 1 )']
['if ( &unk_939B74 == ( _UNKNOWN *)++v17 )']
['while ( &unk_6F4758 != ( _UNKNOWN *)v18 );', 'while ( &unk_939F0A != ( _UNKNOWN *)v66 );', 'while ( &unk_939F08 != ( _UNKNOWN *)v67 );']
['if ( !qty_0[qtyno].n_calls_crossed )']
['if ( !qty_0[qtyno].n_calls_crossed )']
['induction_1 *v12; // rbx', 'induction_1 *v12; // rbx']
['induction_1 *v12; // rbx', 'induction_1 *v12; // rbx']
['( machine_mode)*( ( unsigned __int8 *)x + 2)) )']
['v7 = ( induction_1 *)xmalloc( 0xA8uLL);', 'v7 = ( induction_1 *)xmalloc( 0xA8uLL);']
['v7 = ( induction_1 *)xmalloc( 0xA8uLL);', 'v7 = ( induction_1 *)xmalloc( 0xA8uLL);']
['v7,']
['v7->mem = x;']
['if ( ( unsigned int)( mode_class_0[*( ( unsigned __int8 *)reg + 2)] - 5) > 1 )']
['if ( ( unsigned int)( mode_class_0[*( ( unsigned __int8 *)reg + 2)] - 5) > 1 )']
['v11 = ( ( unsigned int)( mode_class_0[v8] - 5) < 2) + 1;']
['if ( ( unsigned int)( mode_class_0[mode] - 5) > 1 )']
['fancy_abort( ( const char *)&a, 7573, "modified_type_die");']
['fancy_abort( ( const char *)&a, 7573, "modified_type_die");']
['&& *( tree_node **)( *( _QWORD *)( v9.rtwint + 8) + 128LL) == section_name )']
['* *( int *)( ( char *)&qty_0->freq + v5)']
['v6 = ( char *)allocno_0 + v84;']
['v92 = *( ( _BYTE *)cfun->emit->x_regno_reg_rtx[*( int *)( ( char *)&allocno_0->reg + v84)] + 2);']
['if ( ix86_hard_regno_mode_ok( v5, ( machine_mode)i) )']
['if ( ( unsigned int)( mode_class_0[v92] - 5) > 1 )']
['v110 = allocno_0;', 'v125 = allocno_0;', 'v117 = allocno_0;']
['v6 = ( char *)allocno_0 + v84;', 'v14 = ( char *)allocno_0 + v84;']
['v15 = *( HARD_REG_ELT_TYPE *)( ( _BYTE *)&allocno_0->hard_reg_copy_preferences + v84) & ~v8;']
['*( HARD_REG_ELT_TYPE *)( ( char *)&allocno_0->hard_reg_copy_preferences + v84) = v15;']
['v10 = ( ( unsigned int)( mode_class_0[v6] - 5) < 2) + 1;', 'v11 = ( ( unsigned int)( mode_class_0[v8] - 5) < 2) + 1;']
['v5 = ( ( unsigned int)( mode_class_0[v2] - 5) < 2) + 1;']
['rtx v6; // rdi', 'rtx v76; // rsi', 'rtx v76; // rdx']
['rtx head; // rax', 'rtx new_reg; // rax', 'rtx mult_val; // rax']
['rtx v14; // rdx', 'rtx v14; // rdx', 'rtx v19; // rdx']
['rtx memloc; // rbx']
['rtx v37; // rdi', 'rtx v32; // rdx']
['rtx v33; // rax', 'rtx v33; // rax', 'rtx v33; // rax']
['rtx v5; // r12', 'rtx v34; // r12', 'rtx v32; // r12', 'rtx v15; // r12', 'rtx v35; // r15', 'rtx v15; // r12']
['rtx v42; // rax', 'rtx v42; // rax', 'rtx v42; // rax', 'rtx v42; // rax', 'rtx v42; // rax']
['rtx v48; // rax']
['rtx v19; // r12', 'rtx v29; // r12', 'rtx v40; // r12', 'rtx v44; // r12', 'rtx v44; // r12']
['rtx head; // [rsp+C8h] [rbp-40h] BYREF']
['v12 = force_not_mem( v12);', 'v12 = force_not_mem( v12);']
['rtx = v18->fld[0].rtx;', 'rtx = v17->fld[0].rtx;']
['v11 = v26;', 'v11 = rtx;', 'v11 = v6;', 'v11 = v6;']
['end = dest->end;', 'end = dest->end;']
['find_reloads_address( v4, 0LL, v9->fld[0].rtx, ( rtx *)v9->fld, opnum, ( reload_type)v11, 0, 0LL);']
['tem[0] = force_const_mem( ( machine_mode)*( ( unsigned __int8 *)v7 + 2), *( rtx *)&v7[1]);']
['v11 = v26;', 'v14 = v25;', 'v5 = v10;', 'v5 = v10;', 'v6 = v10;', 's1 = v26;', 's2 = v24;', 'v4 = v2;', 'v9 = v10;', 'rtx = v10;']
['rtx = v18->fld[0].rtx;', 'rtx = v17->fld[0].rtx;']
['end = dest->end;', 'end = dest->end;']
['rtx v15; // r15', 'rtx v14; // r12', 'rtx v19; // r15', 'rtx v14; // r13', 'rtx v19; // r15', 'rtx v16; // r15', 'rtx v14; // r13', 'rtx v14; // r12']
['rtx v15; // rax', 'rtx v15; // rax', 'rtx v15; // rax']
['rtx v17; // rax', 'rtx v17; // rax', 'rtx v17; // rax', 'rtx v17; // rax']
['rtx result; // rax', 'rtx result; // rax', 'rtx result; // rax', 'rtx result; // rax', 'rtx result; // rax', 'rtx result; // rax', 'rtx result; // rax']
['rtx note; // [rsp+10h] [rbp-40h] BYREF', 'rtx head; // [rsp+C8h] [rbp-40h] BYREF']
['emit_move_insn( rtx, v12);']
['v14 = v25;']
['v14 = v25;']
['v21 = force_operand( v20->fld[0].rtx, rtx);']
['if ( rtx_equal_p( v18, recog_data_0.operand[3])']
['result = x;']
['return result;', 'return result;', 'return result;', 'return result;', 'return result;', 'return result;']
['if ( replace_reloads && recog_data_0.operand[opnum] != arg0 )']
['( machine_mode)*( ( unsigned __int8 *)v39 + 2),', '( machine_mode)*( ( unsigned __int8 *)v53 + 2),']
['( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),']
['result = gen_lowpart_common( ( machine_mode)*( ( unsigned __int8 *)arg0 + 2), v20);', 'result = gen_lowpart_common( ( machine_mode)*( ( unsigned __int8 *)arg0 + 2), v22);']
['( machine_mode)*( unsigned __int8 *)( arg0->fld[0].rtwint + 2));']
['v17 = legitimate_address_p( ( machine_mode)*( ( unsigned __int8 *)rtx + 2), v16, 0);']
['result = gen_lowpart_common( ( machine_mode)*( ( unsigned __int8 *)arg0 + 2), v20);', 'result = gen_lowpart_common( ( machine_mode)*( ( unsigned __int8 *)arg0 + 2), v22);']
['return gen_rtx_fmt_ee( ( rtx_code)*( _WORD *)v12, ( machine_mode)*( ( unsigned __int8 *)v12 + 2), replacement, v11);', 'return gen_rtx_fmt_ee( ( rtx_code)*( _WORD *)v12, ( machine_mode)*( ( unsigned __int8 *)v12 + 2), replacement, v11);']
['return gen_rtx_fmt_ee( ( rtx_code)*( _WORD *)v12, ( machine_mode)*( ( unsigned __int8 *)v12 + 2), replacement, v11);', 'return gen_rtx_fmt_ee( ( rtx_code)*( _WORD *)v12, ( machine_mode)*( ( unsigned __int8 *)v12 + 2), replacement, v11);']
['( machine_mode)*( unsigned __int8 *)( v4->fld[0].rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v5->fld[0].rtwint + 2),']
['( machine_mode)*( ( unsigned __int8 *)v4 + 2));']
['return gen_rtx_REG( ( machine_mode)*( ( unsigned __int8 *)*loc + 2), v5 + v6);']
['( machine_mode)*( ( unsigned __int8 *)v18 + 2),']
['rtx *single_use; // rax']
['rtx v37; // rax', 'rtx v37; // rax', 'rtx v37; // rax', 'rtx v37; // rax']
['rtx v82; // rax']
['rtx v85; // r13']
['rtx v43; // rsi']
['rtx v16; // rax', 'rtx v92; // rax', 'rtx v26; // rax', 'rtx v26; // rax', 'rtx v36; // rax', 'rtx v36; // rax', 'rtx v9; // rax', 'rtx v26; // rax', 'rtx v76; // rax', 'rtx v26; // rax', 'rtx v6; // rax', 'rtx v86; // rax', 'rtx v90; // rax', 'rtx v36; // rax', 'rtx v46; // rax', 'rtx v16; // rax', 'rtx v6; // rax', 'rtx v36; // rax', 'rtx v90; // rax', 'rtx v9; // rax', 'rtx v6; // rax', 'rtx v86; // rax']
['rtx dest; // [rsp+18h] [rbp-58h]', 'rtx insna; // [rsp+0h] [rbp-58h]']
['v7 = ix86_register_move_cost( m1, ( reg_class)v3, dest_class);', 'v4 = ix86_register_move_cost( m1, ( reg_class)v3, dest_class);']
['v7 = ix86_register_move_cost( m1, ( reg_class)v3, dest_class);', 'v4 = ix86_register_move_cost( m1, ( reg_class)v3, dest_class);']
['v6 = gen_reg_rtx( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4));']
['v43 = gen_rtx_REG( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), 0);', 'v7 = gen_rtx_REG( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v4);']
['v43 = gen_rtx_REG( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), 0);']
['rtx rtl; // rax']
['v6 = ( tree_node *)*( &global_trees + 16);', 'v4 = ( tree_node *)*( &global_trees + 11);', 'v4 = ( tree_node *)*( &global_trees + 11);', 'v4 = ( tree_node *)*( &global_trees + 11);', 'v4 = ( tree_node *)*( &global_trees + 11);', 'v5 = ( tree_node *)*( &global_trees + 11);']
['elements = ( tree_node *)*( &global_trees + 11);']
['low = p_int_cst->low;', 'low = p_int_cst->low;']
['rtx = v14[1].fld[0].rtx;', 'rtint = v4[2].fld[0].rtint;', 'rtint = v11[2].fld[0].rtint;']
['v4->fld[v9].rtwint = ( __int64)v12;']
['if ( x[2].fld[0].rtint == -80 )']
['p_int_cst = &exp->int_cst.int_cst;', '*( _QWORD *)&v21[1] = *pnotes;']
['rtx[3].fld[0].rtwint = ( __int64)gen_rtx_fmt_ee( EXPR_LIST, XCmode, v4->fld[0].rtx, rtx[3].fld[0].rtx);']
['rtx[3].fld[0].rtwint = ( __int64)gen_rtx_fmt_ee( EXPR_LIST, XCmode, v4->fld[0].rtx, rtx[3].fld[0].rtx);']
['v0 = initializer_stack_0;']
['v2 = constructor_stack_0;', 'v2 = constructor_stack_0;', 'v2 = constructor_stack_0;']
['if ( constructor_range_stack_0 )', 'if ( constructor_range_stack_0 )', 'if ( constructor_range_stack_0 )', 'if ( constructor_range_stack_0 )', 'if ( constructor_range_stack_0 )']
['constructor_stack_0 = v0->constructor_stack;', 'v5->constructor_stack = constructor_stack_0;']
['constructor_stack_0 = v0->constructor_stack;', 'v5->constructor_stack = constructor_stack_0;']
['if ( constructor_range_stack_0 )', 'if ( constructor_range_stack_0 )', 'if ( constructor_range_stack_0 )', 'if ( constructor_range_stack_0 )', 'if ( constructor_range_stack_0 )']
['constructor_stack_0 = v0->constructor_stack;']
['constructor_range_stack_0 = v0->constructor_range_stack;']
['spelling_0 = v0->spelling;']
['initializer_stack_0 = v0->next;']
['v44 = ( tree_node *)*j;', 'v44 = ( tree_node *)j;']
['v44 = ( tree_node *)*j;', 'v44 = ( tree_node *)j;']
['v12 = memory_address( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), fixed);']
['v5 = gen_rtx_MEM( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v4);', 'v13 = gen_rtx_MEM( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v12);']
['error( "can\'t use \'%s\' as a %s register", name, what_option_2[fixed][call_used]);']
['if ( !memory_address_p( ( machine_mode)*( ( unsigned __int8 *)v4 + 2), v11.rtx) )']
['rtx *v29; // r12']
['rtx v28; // rbp']
['rtx v35; // rax', 'rtx v35; // rax', 'rtx v35; // rax', 'rtx v35; // rax', 'rtx v35; // rax']
['rtx v38; // rax', 'rtx v28; // rbx', 'rtx v35; // rbx', 'rtx v38; // rax', 'rtx v36; // rbx', 'rtx v58; // rbx', 'rtx v38; // rax', 'rtx v32; // rbx', 'rtx v31; // rbx', 'rtx v38; // rax', 'rtx v38; // rax', 'rtx v35; // rbx', 'rtx v58; // rbx', 'rtx v8; // rbx', 'rtx v39; // rbx']
['rtx v4; // rbp', 'rtx v5; // rbp', 'rtx v4; // rbp']
['rtx v41; // r15', 'rtx v40; // r15', 'rtx v45; // r15']
['rtx v55; // rdx', 'rtx v59; // rdx', 'rtx v50; // rax', 'rtx v50; // rax', 'rtx v10; // rdx']
['rtx v60; // rax', 'rtx v60; // rax']
['v32 = nonzero_bits( *( rtx *)( v1->fld[0].rtwint + 8), ( machine_mode)v21);']
['rtx basex; // [rsp+8h] [rbp-50h]']
['v18 = ( tree_node *)*( ( _QWORD *)v2 + 1);', 'v22 = ( tree_node *)*( ( _QWORD *)v2 + 3);']
['v4->fld[v9].rtwint = ( __int64)v12;']
['*( _QWORD *)&src->end[4] = v15;']
['*( _QWORD *)&src->end[4] = v15;']
['*( _QWORD *)&src->end[4] = v15;', '*( _QWORD *)object_base = *v5;']
['add_dependence_list( insn, v39->clobbers, ( reg_note)0);', 'add_dependence_list( insn, v48->clobbers, ( reg_note)0);']
['add_dependence_list( insn, v39->clobbers, ( reg_note)0);']
['rtx v53; // rax']
['rtx *v59; // rax']
['rtx *v19; // rbp', 'rtx *v23; // rbp', 'rtx *v19; // rbp', 'rtx v20; // rbp', 'rtx v20; // rbp', 'rtx v30; // rbp', 'rtx *v24; // rbp', 'rtx *v21; // rbp', 'rtx *v25; // rbp', 'rtx *v11; // rbp', 'rtx v64; // rbp', 'rtx *v72; // rbp']
['rtx v8; // r12', 'rtx v50; // r12', 'rtx v40; // r12', 'rtx v84; // r12', 'rtx v10; // r12']
['rtx v55; // rdx', 'rtx v9; // rdx']
['rtx v10; // rax', 'rtx v16; // rax', 'rtx v10; // rax', 'rtx v10; // rax', 'rtx v16; // rax', 'rtx v116; // rax', 'rtx v10; // rax', 'rtx v10; // rax', 'rtx v10; // rax', 'rtx v10; // rax', 'rtx v104; // rax', 'rtx v108; // rax', 'rtx v186; // rax']
['rtx v11; // rax', 'rtx v17; // rax', 'rtx v116; // rax', 'rtx v11; // rax', 'rtx v17; // rax', 'rtx v17; // rax', 'rtx v17; // rax', 'rtx v11; // rax']
['rtx v10; // rax', 'rtx v10; // rax', 'rtx v10; // rax', 'rtx v10; // rax', 'rtx v10; // rax', 'rtx v10; // rax', 'rtx v10; // rax']
['rtx v12; // r12', 'rtx v12; // r12', 'rtx v10; // r14', 'rtx v12; // r12']
['rtx exit_labels; // rax']
['rtx end; // rbx', 'rtx v4; // rbx', 'rtx v6; // rbx', 'rtx v70; // rbx', 'rtx v83; // rbx', 'rtx v19; // rbx', 'rtx v23; // rbx', 'rtx v28; // rbx', 'rtx v40; // rbx', 'rtx i; // rbx', 'rtx v22; // rbx', 'rtx v10; // rbx', 'rtx v16; // rbx', 'rtx v35; // rbx', 'rtx k; // rbx', 'rtx v16; // rbx', 'rtx v36; // rbx', 'rtx v47; // rbx', 'rtx v53; // rbx', 'rtx v67; // rbx', 'rtx v58; // rbx', 'rtx v85; // rbx', 'rtx i; // rbx', 'rtx v32; // rbx', 'rtx v16; // rbx', 'rtx v20; // rbx', 'rtx v31; // rbx', 'rtx v14; // rbx', 'rtx v13; // rbx', 'rtx v14; // rbx', 'rtx i; // rbx', 'rtx j; // rbx', 'rtx v35; // rbx', 'rtx v58; // rbx', 'rtx k; // rbx', 'rtx m; // rbx', 'rtx j; // rbx', 'rtx v11; // rbx', 'rtx v61; // rbx', 'rtx v8; // rbx', 'rtx end; // rbx', 'rtx v39; // rbx', 'rtx v64; // rbx', 'rtx v77; // rbx']
['rtx *v20; // r15']
['rtx v21; // [rsp+10h] [rbp-68h]']
['v14 = fncall( loop, insn_in_loop, v7, v4);']
['v12 = *( _WORD *)v13;']
['v5 = v10;', 'v5 = v10;', 'v15 = v14;', 'v15 = v14;', 'v6 = v10;', 'v9 = v10;', 'v12 = v7;']
['v5 = v10;', 'v5 = v10;', 'v15 = v14;', 'v15 = v14;', 'v6 = v10;', 'v9 = v10;', 'v12 = v7;']
['if ( *( _WORD *)v14 == 36 )']
['v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;']
['v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;']
['sprintf( label, "*.%s%u", ( const char *)&a.dw_attr_val, v13);', 'sprintf( label, "*.%s%u", ( const char *)&a.dw_attr_val, v6);']
['v22 = gen_rtx_fmt_s( SYMBOL_REF, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), low);', 'v21 = gen_rtx_fmt_s( SYMBOL_REF, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), l1);']
['rtx v37; // rdi', 'rtx v20; // rdi']
['edge succ; // rax']
['edge v21; // rdx']
['succ = entry_exit_blocks[0].succ;']
['if ( !succ )']
['if ( e == succ )']
['v21 = succ;', 'v21 = succ;']
['v21 = succ;', 'v21 = succ;']
['succ = succ->succ_next;', 'succ = succ->succ_next;']
['succ = succ->succ_next;', 'succ = succ->succ_next;']
['if ( !succ )']
['if ( e == succ )']
['p_succ_next = &v21->succ_next;']
['end = src->end;']
['end = src->end;']
['rtx v27; // rax', 'rtx v27; // rax']
['v9 = gen_reg_rtx( ( machine_mode)*( ( unsigned __int8 *)target + 2));']
['return expand_binop( ( machine_mode)*( ( unsigned __int8 *)value + 2), v5, v17, v18, target, 0, OPTAB_LIB_WIDEN);', 'return expand_binop( ( machine_mode)*( ( unsigned __int8 *)value + 2), v5, v24, v25, target, 0, OPTAB_LIB_WIDEN);']
['v19 = negate_rtx( ( machine_mode)*( ( unsigned __int8 *)value + 2), *( rtx *)&value[1]);']
['v19 = negate_rtx( ( machine_mode)*( ( unsigned __int8 *)value + 2), *( rtx *)&value[1]);']
['v7 = v6;', 'v4 = v2;', 'v7 = v8;', 'v7 = v11;']
['v17 = expand_binop( ( machine_mode)*( ( unsigned __int8 *)value + 2), v5, v23, v19, subtarget, 0, OPTAB_LIB_WIDEN);']
['return expand_binop( ( machine_mode)*( ( unsigned __int8 *)value + 2), v5, v17, v18, target, 0, OPTAB_LIB_WIDEN);']
['v10 = force_reg( ( machine_mode)*( unsigned __int8 *)( value->fld[0].rtwint + 2), v9);']
['return simplify_gen_subreg( ( machine_mode)*( ( unsigned __int8 *)value + 2), v10, ( machine_mode)v7, v8);', 'return simplify_gen_subreg( ( machine_mode)*( ( unsigned __int8 *)value + 2), v10, ( machine_mode)v7, v8);']
['return simplify_gen_subreg( ( machine_mode)*( ( unsigned __int8 *)value + 2), v10, ( machine_mode)v7, v8);', 'return simplify_gen_subreg( ( machine_mode)*( ( unsigned __int8 *)value + 2), v10, ( machine_mode)v7, v8);']
['return expand_mult( ( machine_mode)*( ( unsigned __int8 *)value + 2), v15, v16, target, 1);']
['rtx v27; // rax', 'rtx v27; // rax']
['rtx v33; // rax', 'rtx v33; // rax', 'rtx v33; // rax']
['rtx v36; // rax', 'rtx v36; // rax', 'rtx v36; // rax', 'rtx v36; // rax']
['rtx v57; // rax', 'rtx v57; // rax', 'rtx v57; // rax']
['rtx v75; // rax']
['return gen_rtx_fmt_ee( PLUS, ( machine_mode)v3, y, x);', 'return gen_rtx_fmt_ee( PLUS, ( machine_mode)v3, y, x);', 'return gen_rtx_fmt_ee( PLUS, ( machine_mode)v3, y, x);']
['return gen_rtx_fmt_ee( PLUS, ( machine_mode)v3, y, x);', 'return gen_rtx_fmt_ee( PLUS, ( machine_mode)v3, y, x);', 'return gen_rtx_fmt_ee( PLUS, ( machine_mode)v3, y, x);']
['return gen_rtx_fmt_ee( PLUS, ( machine_mode)v3, y, x);', 'return gen_rtx_fmt_ee( PLUS, ( machine_mode)v3, y, x);', 'return gen_rtx_fmt_ee( PLUS, ( machine_mode)v3, y, x);']
['return gen_rtx_fmt_ee( PLUS, ( machine_mode)v3, y, x);', 'return gen_rtx_fmt_ee( PLUS, ( machine_mode)v3, y, x);', 'return gen_rtx_fmt_ee( PLUS, ( machine_mode)v3, y, x);']
['v10 = gen_rtx_fmt_ee( PLUS, ( machine_mode)v3, y, x);']
['v14 = ( unsigned int)( mode_class_0[mode] - 5) <= 1;', 'v16 = ( unsigned int)( mode_class_0[mode] - 5) <= 1;', 'v10 = ( unsigned int)( mode_class_0[mode] - 5) <= 1;']
['v14 = ( unsigned int)( mode_class_0[mode] - 5) <= 1;', 'v16 = ( unsigned int)( mode_class_0[mode] - 5) <= 1;', 'v10 = ( unsigned int)( mode_class_0[mode] - 5) <= 1;']
['free( uid_cuid_1);']
['if ( in_section_0 != in_text )']
['in_section_0 = in_text;']
['v17 = immediate_operand( recog_data_0.operand[1], VOIDmode);']
['v17 = immediate_operand( recog_data_0.operand[1], VOIDmode);']
['v21 = q_regs_operand( recog_data_0.operand[0], QImode);']
['rtx v15; // r15', 'rtx v27; // r15', 'rtx v35; // r15', 'rtx *v22; // r15', 'rtx v45; // r15']
['rtx v240; // [rsp+58h] [rbp-80h]']
['if ( mode_class_0[i] == MODE_CC )']
['v4 = gen_rtx_REG( ( machine_mode)i, 58);']
['reg_set_table = ( reg_set_0 **)gmalloc( 8 * ( n_regs + 100));']
['ggc_add_rtx_root( &profiler_label, 1);']
['if ( *( ( _DWORD *)uid_cuid_1 + *( ( int *)v54 + 2)) < *( ( _DWORD *)uid_cuid_1 + rtint) )']
['v52 = insn_data_0[optab_table[30]->handlers[v51].insn_code].genfun( v48, v49);', 'v9 = insn_data_0[optab_table[41]->handlers[v7].insn_code].genfun( op1, op2);']
['if ( !operand->predicate( x, ( machine_mode)*( ( unsigned __int16 *)operand + 8))']
['|| !operand[1].predicate( x, ( machine_mode)*( ( unsigned __int16 *)&operand[1] + 8))']
['|| !operand[2].predicate( y, ( machine_mode)*( ( unsigned __int16 *)&operand[2] + 8)) )']
['genfun = insn_data_0[insn_code].genfun;']
['if ( !operand->predicate( r0, ( machine_mode)*( ( unsigned __int16 *)operand + 8)) )', 'if ( !operand->predicate( r0, ( machine_mode)*( ( unsigned __int16 *)operand + 8)) )']
['|| !operand[1].predicate( x, ( machine_mode)*( ( unsigned __int16 *)&operand[1] + 8))']
['if ( operand[2].predicate( c, ( machine_mode)*( ( unsigned __int16 *)&operand[2] + 8)) )', 'if ( operand[2].predicate( c, ( machine_mode)*( ( unsigned __int16 *)&operand[2] + 8)) )']
['fancy_abort( ( const char *)&a, 5026, "add_child_die");', 'fancy_abort( ( const char *)&a, 5026, "add_child_die");', 'fancy_abort( ( const char *)&a, 5026, "add_child_die");', 'fancy_abort( ( const char *)&a, 5026, "add_child_die");', 'fancy_abort( ( const char *)&a, 5026, "add_child_die");', 'fancy_abort( ( const char *)&a, 5026, "add_child_die");', 'fancy_abort( ( const char *)&a, 5026, "add_child_die");', 'fancy_abort( ( const char *)&a, 5026, "add_child_die");', 'fancy_abort( ( const char *)&a, 5026, "add_child_die");', 'fancy_abort( ( const char *)&a, 5026, "add_child_die");', 'fancy_abort( ( const char *)&a, 5026, "add_child_die");', 'fancy_abort( ( const char *)&a, 5026, "add_child_die");', 'fancy_abort( ( const char *)&a, 5026, "add_child_die");', 'fancy_abort( ( const char *)&a, 5026, "add_child_die");', 'fancy_abort( ( const char *)&a, 5026, "add_child_die");', 'fancy_abort( ( const char *)&a, 5026, "add_child_die");', 'fancy_abort( ( const char *)&a, 5026, "add_child_die");', 'fancy_abort( ( const char *)&a, 5026, "add_child_die");', 'fancy_abort( ( const char *)&a, 5026, "add_child_die");', 'fancy_abort( ( const char *)&a, 5026, "add_child_die");', 'fancy_abort( ( const char *)&a, 5026, "add_child_die");']
['v17 = ( tree_node *)rtl[7];']
['if ( !compiled_from_record_1++ )']
['rtx result; // rax', 'rtx result; // rax', 'rtx result; // rax', 'rtx result; // rax', 'rtx result; // rax', 'rtx result; // rax', 'rtx result; // rax']
['result = simplify_binary_operation( code, mode, op0, op1);']
['if ( result )', 'if ( result )']
['return result;', 'return result;', 'return result;', 'return result;', 'return result;', 'return result;']
['result = simplify_binary_operation( code, mode, rtx, v6);', 'result = simplify_binary_operation( code, mode, rtx, v6);']
['if ( result )', 'if ( result )']
['return result;', 'return result;', 'return result;', 'return result;', 'return result;', 'return result;']
['result = simplify_binary_operation( code, mode, op0, op1);']
['if ( result )', 'if ( result )']
['return result;', 'return result;', 'return result;', 'return result;', 'return result;', 'return result;']
['result = simplify_binary_operation( code, mode, rtx, v6);', 'result = simplify_binary_operation( code, mode, rtx, v6);']
['if ( !result )', 'if ( !result )']
['return result;', 'return result;', 'return result;', 'return result;', 'return result;', 'return result;']
['rtx v11; // rax', 'rtx v11; // rax', 'rtx v11; // rax']
['if ( !call_insn_operand( operand0->fld[0].rtx, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4)) )', 'if ( !call_insn_operand( operand0->fld[0].rtx, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4)) )', 'if ( !call_insn_operand( operand1->fld[0].rtx, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4)) )', 'if ( !call_insn_operand( operand1->fld[0].rtx, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4)) )']
['( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),']
['v13 = delete_insn( f);']
['v26 = ( rtx *)*v10 + v25;']
['rtx v10; // r13']
['rtx v11; // rax', 'rtx v11; // rax', 'rtx v11; // rax']
['if ( !call_insn_operand( operand0->fld[0].rtx, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4)) )', 'if ( !call_insn_operand( operand0->fld[0].rtx, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4)) )', 'if ( !call_insn_operand( operand1->fld[0].rtx, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4)) )', 'if ( !call_insn_operand( operand1->fld[0].rtx, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4)) )']
['( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),']
['v22 = gen_rtx_fmt_ee( SET, VOIDmode, *v19, nan);']
['v22 = gen_rtx_fmt_ee( SET, VOIDmode, *v19, nan);']
['v32 = gen_movsi( v3, v31);', 'v15 = genfun( v21, v14);']
['v32 = gen_movsi( v3, v31);', 'v15 = genfun( v21, v14);']
['rtx v15; // rax', 'rtx v15; // rax', 'rtx v15; // rax']
['if ( !call_insn_operand( operand0->fld[0].rtx, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4)) )', 'if ( !call_insn_operand( operand0->fld[0].rtx, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4)) )', 'if ( !call_insn_operand( operand1->fld[0].rtx, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4)) )', 'if ( !call_insn_operand( operand1->fld[0].rtx, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4)) )']
['( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),']
['v13 = delete_insn( f);', 'v5 = split_insn( i);']
['v26 = ( rtx *)*v10 + v25;']
['rtx v10; // r13', 'rtx v12; // r12', 'rtx v14; // r13', 'rtx v15; // r13', 'rtx v11; // r13', 'rtx v12; // r12', 'rtx v14; // r13', 'rtx v12; // r12']
['rtx v14; // rax']
['if ( !call_insn_operand( operand0->fld[0].rtx, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4)) )', 'if ( !call_insn_operand( operand0->fld[0].rtx, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4)) )', 'if ( !call_insn_operand( operand1->fld[0].rtx, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4)) )', 'if ( !call_insn_operand( operand1->fld[0].rtx, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4)) )']
['( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),']
['v22 = gen_rtx_fmt_ee( SET, VOIDmode, *v19, nan);']
['v22 = gen_rtx_fmt_ee( SET, VOIDmode, *v19, nan);']
['v15 = genfun( v21, v14);']
['v15 = genfun( v21, v14);']
['v8 = copy_to_mode_reg( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), operand1->fld[0].rtx);']
['v9 = copy_to_mode_reg( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), operand2->fld[0].rtx);']
['v9 = insn_data_0[optab_table[41]->handlers[v7].insn_code].genfun( op1, op2);']
['v2 = ix86_expand_compare( ( rtx_code)*( _WORD *)operand0, 0LL, 0LL);']
['if ( ( unsigned int)debug_info_level_0 <= DINFO_LEVEL_TERSE )']
['if ( ( unsigned int)debug_info_level_0 <= DINFO_LEVEL_TERSE )']
['fancy_abort( ( const char *)&a, 5026, "add_child_die");', 'fancy_abort( ( const char *)&a, 5026, "add_child_die");', 'fancy_abort( ( const char *)&a, 5026, "add_child_die");', 'fancy_abort( ( const char *)&a, 5026, "add_child_die");', 'fancy_abort( ( const char *)&a, 5026, "add_child_die");', 'fancy_abort( ( const char *)&a, 5026, "add_child_die");', 'fancy_abort( ( const char *)&a, 5026, "add_child_die");', 'fancy_abort( ( const char *)&a, 5026, "add_child_die");', 'fancy_abort( ( const char *)&a, 5026, "add_child_die");', 'fancy_abort( ( const char *)&a, 5026, "add_child_die");', 'fancy_abort( ( const char *)&a, 5026, "add_child_die");', 'fancy_abort( ( const char *)&a, 5026, "add_child_die");', 'fancy_abort( ( const char *)&a, 5026, "add_child_die");', 'fancy_abort( ( const char *)&a, 5026, "add_child_die");', 'fancy_abort( ( const char *)&a, 5026, "add_child_die");', 'fancy_abort( ( const char *)&a, 5026, "add_child_die");', 'fancy_abort( ( const char *)&a, 5026, "add_child_die");', 'fancy_abort( ( const char *)&a, 5026, "add_child_die");', 'fancy_abort( ( const char *)&a, 5026, "add_child_die");', 'fancy_abort( ( const char *)&a, 5026, "add_child_die");', 'fancy_abort( ( const char *)&a, 5026, "add_child_die");']
['if ( ( unsigned int)debug_info_level_0 <= DINFO_LEVEL_TERSE )']
['fancy_abort( ( const char *)&a, 10025, "gen_formal_parameter_die");']
['v2 = gen_rtx_fmt_ee( PLUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), global_rtl[5], operand0);']
['v4 = gen_rtx_MEM( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v3);']
['fwrite( ( char *)&stru_665A39._IO_write_ptr + 6, 1uLL, 4uLL, file);']
['fwrite( ( char *)&stru_665A39._IO_write_ptr + 6, 1uLL, 4uLL, file);']
['fwrite( ( char *)&stru_665A39._IO_write_ptr + 6, 1uLL, 4uLL, file);']
['fancy_abort( ( const char *)&a, 10025, "gen_formal_parameter_die");']
['fancy_abort( ( const char *)&a, 9459, "add_abstract_origin_attribute");', 'fancy_abort( ( const char *)&a, 9459, "add_abstract_origin_attribute");', 'fancy_abort( ( const char *)&a, 9459, "add_abstract_origin_attribute");']
['fancy_abort( ( const char *)&a, 8989, "add_location_or_const_value_attribute");']
['v4 = force_reg( ( machine_mode)*( ( unsigned __int8 *)x + 2), x);']
['rtx result; // rax', 'rtx result; // rax', 'rtx result; // rax', 'rtx result; // rax', 'rtx result; // rax', 'rtx result; // rax', 'rtx result; // rax']
['v5 = mode_class_0[v3];']
['v5 = mode_class_0[v3];']
['result = x;']
['return gen_rtx_fmt_e( ( rtx_code)v17, mode, x->fld[0].rtx);']
['return result;', 'return result;', 'return result;', 'return result;', 'return result;', 'return result;']
['return simplify_gen_subreg( mode, x, ( machine_mode)v3, 0);']
['result = x;']
['return result;', 'return result;', 'return result;', 'return result;', 'return result;', 'return result;']
['return gen_rtx_REG( ( machine_mode)v3, v2);']
['return gen_rtx_REG( ( machine_mode)v3, v2);']
['rtx result; // rax', 'rtx result; // rax', 'rtx result; // rax', 'rtx result; // rax', 'rtx result; // rax', 'rtx result; // rax', 'rtx result; // rax']
['result = x->fld[0].rtx;']
['if ( *( _WORD *)result == 66 )']
['if ( *( ( unsigned __int8 *)result + 2) == mode )']
['return result;', 'return result;', 'return result;', 'return result;', 'return result;', 'return result;']
['result = gen_lowpart_common( mode, rtx);']
['if ( result )', 'if ( result )']
['return result;', 'return result;', 'return result;', 'return result;', 'return result;', 'return result;']
['return gen_rtx_fmt_ee( ( rtx_code)v7, mode, rtx->fld[0].rtx, *( rtx *)&rtx[1]);']
['result = simplify_gen_subreg( mode, rtx, ( machine_mode)*( ( unsigned __int8 *)rtx + 2), v9);', 'result = simplify_gen_subreg( mode, rtx, ( machine_mode)*( ( unsigned __int8 *)rtx + 2), v9);']
['result = simplify_gen_subreg( mode, rtx, ( machine_mode)*( ( unsigned __int8 *)rtx + 2), v9);', 'result = simplify_gen_subreg( mode, rtx, ( machine_mode)*( ( unsigned __int8 *)rtx + 2), v9);']
['if ( !result )', 'if ( !result )']
['return result;', 'return result;', 'return result;', 'return result;', 'return result;', 'return result;']
['v3 = gen_reg_rtx( ( machine_mode)*( ( unsigned __int8 *)reg + 2));']
['v4 = gen_rtx_fmt_eit( ADDRESSOF, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v3, rtint, decl);']
['( machine_mode)*( ( unsigned __int8 *)reg + 2),', '( machine_mode)*( ( unsigned __int8 *)reg + 2),']
['v52 = insn_data_0[optab_table[30]->handlers[v51].insn_code].genfun( v48, v49);', 'v9 = insn_data_0[optab_table[41]->handlers[v7].insn_code].genfun( op1, op2);']
['return insn_data_0[optab_table[30]->handlers[v6].insn_code].genfun( v8, v9);']
['operands[4] = gen_rtx_REG( ( machine_mode)*( ( unsigned __int8 *)*operands + 2), 17);', 'operands[4] = gen_rtx_REG( ( machine_mode)*( ( unsigned __int8 *)*operands + 2), 17);']
['v11 = gen_rtx( ( rtx_code)*( _WORD *)v5, ( machine_mode)*( ( unsigned __int8 *)v5 + 2), v10, v9);', 'v11 = gen_rtx( ( rtx_code)*( _WORD *)v5, ( machine_mode)*( ( unsigned __int8 *)v5 + 2), v10, v9);', 'v11 = gen_rtx( ( rtx_code)*( _WORD *)v5, ( machine_mode)*( ( unsigned __int8 *)v5 + 2), v10, v9);', 'v11 = gen_rtx( ( rtx_code)*( _WORD *)v5, ( machine_mode)*( ( unsigned __int8 *)v5 + 2), v10, v9);']
['v11 = gen_rtx( ( rtx_code)*( _WORD *)v5, ( machine_mode)*( ( unsigned __int8 *)v5 + 2), v10, v9);', 'v11 = gen_rtx( ( rtx_code)*( _WORD *)v5, ( machine_mode)*( ( unsigned __int8 *)v5 + 2), v10, v9);', 'v11 = gen_rtx( ( rtx_code)*( _WORD *)v5, ( machine_mode)*( ( unsigned __int8 *)v5 + 2), v10, v9);', 'v11 = gen_rtx( ( rtx_code)*( _WORD *)v5, ( machine_mode)*( ( unsigned __int8 *)v5 + 2), v10, v9);']
['v11 = gen_rtx( ( rtx_code)*( _WORD *)v5, ( machine_mode)*( ( unsigned __int8 *)v5 + 2), v10, v9);', 'v11 = gen_rtx( ( rtx_code)*( _WORD *)v5, ( machine_mode)*( ( unsigned __int8 *)v5 + 2), v10, v9);', 'v11 = gen_rtx( ( rtx_code)*( _WORD *)v5, ( machine_mode)*( ( unsigned __int8 *)v5 + 2), v10, v9);', 'v11 = gen_rtx( ( rtx_code)*( _WORD *)v5, ( machine_mode)*( ( unsigned __int8 *)v5 + 2), v10, v9);']
['v11 = gen_rtx( ( rtx_code)*( _WORD *)v5, ( machine_mode)*( ( unsigned __int8 *)v5 + 2), v10, v9);', 'v11 = gen_rtx( ( rtx_code)*( _WORD *)v5, ( machine_mode)*( ( unsigned __int8 *)v5 + 2), v10, v9);', 'v11 = gen_rtx( ( rtx_code)*( _WORD *)v5, ( machine_mode)*( ( unsigned __int8 *)v5 + 2), v10, v9);', 'v11 = gen_rtx( ( rtx_code)*( _WORD *)v5, ( machine_mode)*( ( unsigned __int8 *)v5 + 2), v10, v9);']
['v11 = gen_rtx( ( rtx_code)*( _WORD *)v6, ( machine_mode)*( ( unsigned __int8 *)v6 + 2), v10, v4);', 'v11 = gen_rtx( ( rtx_code)*( _WORD *)v6, ( machine_mode)*( ( unsigned __int8 *)v6 + 2), v10, v4);']
['v11 = gen_rtx( ( rtx_code)*( _WORD *)v6, ( machine_mode)*( ( unsigned __int8 *)v6 + 2), v10, v4);', 'v11 = gen_rtx( ( rtx_code)*( _WORD *)v6, ( machine_mode)*( ( unsigned __int8 *)v6 + 2), v10, v4);']
['v11 = gen_rtx( ( rtx_code)*( _WORD *)v6, ( machine_mode)*( ( unsigned __int8 *)v6 + 2), v4, v10);', 'v11 = gen_rtx( ( rtx_code)*( _WORD *)v6, ( machine_mode)*( ( unsigned __int8 *)v6 + 2), v4, v10);']
['v11 = gen_rtx( ( rtx_code)*( _WORD *)v6, ( machine_mode)*( ( unsigned __int8 *)v6 + 2), v4, v10);', 'v11 = gen_rtx( ( rtx_code)*( _WORD *)v6, ( machine_mode)*( ( unsigned __int8 *)v6 + 2), v4, v10);']
['v3 = gen_rtx_REG( ( machine_mode)( ( *( ( _BYTE *)*operands + 2) == 5) + 4), v2);', 'v3 = gen_rtx_REG( ( machine_mode)( ( *( ( _BYTE *)*operands + 2) == 5) + 4), v2);']
['v3 = gen_rtx_REG( ( machine_mode)( ( *( ( _BYTE *)*operands + 2) == 5) + 4), v2);', 'v3 = gen_rtx_REG( ( machine_mode)( ( *( ( _BYTE *)*operands + 2) == 5) + 4), v2);']
['v1 = gen_rtx_fmt_e( PRE_DEC, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), global_rtl[2]);']
['v2 = gen_rtx_MEM( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v1);']
['if ( generating_concat_p && ( v2 = mode_class_0[mode], ( unsigned int)( v2 - 5) <= 1) )']
['rtx last_insn; // rbx', 'rtx last_insn; // rbx', 'rtx last_insn; // rbx']
['rtx v15; // rax', 'rtx v15; // rax', 'rtx v15; // rax']
['rtx *v20; // r15']
['rtx v23; // rax']
['rtx v29; // r12']
['rtx v11; // r12', 'rtx v34; // r12', 'rtx v32; // r12']
['rtx v37; // rax', 'rtx v37; // rax', 'rtx v37; // rax', 'rtx v37; // rax']
['rtx secondary_mem; // r13']
['rtx v40; // r12', 'rtx v10; // r14', 'rtx v40; // r15', 'rtx v44; // r14']
['return gen_rtx_REG( ( machine_mode)v3, v2);']
['if ( !MEMORY[0x10096D8DF] )']
['rtx v5; // r12', 'rtx v5; // rax', 'rtx v5; // r14', 'rtx v5; // rax', 'rtx v5; // rbp', 'rtx v5; // rdi', 'rtx v5; // rsi', 'rtx v5; // rax']
['rtx v6; // rax', 'rtx v6; // rax', 'rtx v6; // rax']
['rtx *v7; // rdi', 'rtx v7; // rdx']
['v5 = gen_rtx_fmt_E( SEQUENCE, VOIDmode, v4);']
['v6 = cfun->emit->x_first_insn;']
['if ( v6 )']
['rtuint = *( _DWORD *)( reg->fld[0].rtwint + 8);', 'rtuint = *( _DWORD *)( reg->fld[0].rtwint + 8);']
['rtuint = *( _DWORD *)( reg->fld[0].rtwint + 8);', 'rtuint = *( _DWORD *)( reg->fld[0].rtwint + 8);']
['v7 = v6;']
['v7 = v6;']
['v6 = v6[1].fld[0].rtx;', 'v6 = v6[1].fld[0].rtx;', 'v6 = v6[1].fld[0].rtx;', 'v6 = v6[1].fld[0].rtx;']
['v6 = v6[1].fld[0].rtx;', 'v6 = v6[1].fld[0].rtx;', 'v6 = v6[1].fld[0].rtx;', 'v6 = v6[1].fld[0].rtx;']
['x = v7;']
['while ( v6 );']
['return v5;']
['v9 = gen_lowpart( ( machine_mode)v20, v9);']
['v1 = trunc_int_for_mode( 1 << operands[2]->fld[0].rtwint, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4));', 'v1 = trunc_int_for_mode( 1 << operands[2]->fld[0].rtwint, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4));']
['v28 = gen_rtx_fmt_ee( MULT, ( machine_mode)v34, v27, v26);']
['v1 = gen_lowpart( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), operands[3]);', 'v1 = gen_lowpart( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), operands[3]);', 'v1 = gen_lowpart( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), operands[3]);', 'v1 = gen_lowpart( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), operands[3]);', 'v1 = gen_lowpart( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), operands[4]);', 'v1 = gen_lowpart( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), operands[4]);', 'v1 = gen_lowpart( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), operands[2]);']
['v1 = trunc_int_for_mode( 1 << operands[2]->fld[0].rtwint, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4));', 'v1 = trunc_int_for_mode( 1 << operands[2]->fld[0].rtwint, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4));']
['ix86_split_fp_branch( ( rtx_code)*( _WORD *)*operands, operands[1], operands[2], operands[3], operands[4], 0LL);']
['ix86_split_fp_branch( ( rtx_code)*( _WORD *)*operands, operands[1], operands[2], operands[3], operands[4], operands[5]);']
['v1 = ix86_force_to_memory( ( machine_mode)*( ( unsigned __int8 *)operands[1] + 2), operands[1]);', 'v1 = ix86_force_to_memory( ( machine_mode)*( ( unsigned __int8 *)operands[1] + 2), operands[1]);']
['v2 = gen_rtx_fmt_e( FLOAT, ( machine_mode)*( ( unsigned __int8 *)*operands + 2), v1);', 'v2 = gen_rtx_fmt_e( FLOAT, ( machine_mode)*( ( unsigned __int8 *)*operands + 2), v1);', 'v2 = gen_rtx_fmt_e( FLOAT, ( machine_mode)*( ( unsigned __int8 *)*operands + 2), v1);']
['v8 = gen_rtx( ( rtx_code)*( _WORD *)v3, ( machine_mode)*( ( unsigned __int8 *)v3 + 2), v7, v4);', 'v8 = gen_rtx( ( rtx_code)*( _WORD *)v3, ( machine_mode)*( ( unsigned __int8 *)v3 + 2), v7, v4);', 'v7 = gen_rtx( ( rtx_code)*( _WORD *)v4, ( machine_mode)*( ( unsigned __int8 *)v4 + 2), v2, v3);', 'v7 = gen_rtx( ( rtx_code)*( _WORD *)v4, ( machine_mode)*( ( unsigned __int8 *)v4 + 2), v2, v3);']
['v8 = gen_rtx( ( rtx_code)*( _WORD *)v3, ( machine_mode)*( ( unsigned __int8 *)v3 + 2), v7, v4);', 'v8 = gen_rtx( ( rtx_code)*( _WORD *)v3, ( machine_mode)*( ( unsigned __int8 *)v3 + 2), v7, v4);', 'v7 = gen_rtx( ( rtx_code)*( _WORD *)v4, ( machine_mode)*( ( unsigned __int8 *)v4 + 2), v2, v3);', 'v7 = gen_rtx( ( rtx_code)*( _WORD *)v4, ( machine_mode)*( ( unsigned __int8 *)v4 + 2), v2, v3);']
['ix86_free_from_memory( ( machine_mode)*( ( unsigned __int8 *)operands[1] + 2));', 'ix86_free_from_memory( ( machine_mode)*( ( unsigned __int8 *)operands[1] + 2));']
['v1 = ix86_force_to_memory( ( machine_mode)*( ( unsigned __int8 *)operands[2] + 2), operands[2]);']
['v2 = gen_rtx_fmt_e( FLOAT, ( machine_mode)*( ( unsigned __int8 *)*operands + 2), v1);', 'v2 = gen_rtx_fmt_e( FLOAT, ( machine_mode)*( ( unsigned __int8 *)*operands + 2), v1);', 'v2 = gen_rtx_fmt_e( FLOAT, ( machine_mode)*( ( unsigned __int8 *)*operands + 2), v1);']
['v8 = gen_rtx( ( rtx_code)*( _WORD *)v3, ( machine_mode)*( ( unsigned __int8 *)v3 + 2), v7, v4);', 'v8 = gen_rtx( ( rtx_code)*( _WORD *)v3, ( machine_mode)*( ( unsigned __int8 *)v3 + 2), v7, v4);']
['v8 = gen_rtx( ( rtx_code)*( _WORD *)v3, ( machine_mode)*( ( unsigned __int8 *)v3 + 2), v7, v4);', 'v8 = gen_rtx( ( rtx_code)*( _WORD *)v3, ( machine_mode)*( ( unsigned __int8 *)v3 + 2), v7, v4);']
['ix86_free_from_memory( ( machine_mode)*( ( unsigned __int8 *)operands[2] + 2));']
['v8 = gen_rtx( ( rtx_code)*( _WORD *)v2, ( machine_mode)*( ( unsigned __int8 *)v2 + 2), v4, const_int_rtx[64]);', 'v8 = gen_rtx( ( rtx_code)*( _WORD *)v2, ( machine_mode)*( ( unsigned __int8 *)v2 + 2), v4, const_int_rtx[64]);']
['v8 = gen_rtx( ( rtx_code)*( _WORD *)v2, ( machine_mode)*( ( unsigned __int8 *)v2 + 2), v4, const_int_rtx[64]);', 'v8 = gen_rtx( ( rtx_code)*( _WORD *)v2, ( machine_mode)*( ( unsigned __int8 *)v2 + 2), v4, const_int_rtx[64]);']
['v11 = gen_rtx( ( rtx_code)*( _WORD *)v6, ( machine_mode)*( ( unsigned __int8 *)v6 + 2), v4, v10);', 'v11 = gen_rtx( ( rtx_code)*( _WORD *)v6, ( machine_mode)*( ( unsigned __int8 *)v6 + 2), v4, v10);', 'v13 = gen_rtx( ( rtx_code)*( _WORD *)v2, ( machine_mode)*( ( unsigned __int8 *)v2 + 2), v12, v11);', 'v13 = gen_rtx( ( rtx_code)*( _WORD *)v2, ( machine_mode)*( ( unsigned __int8 *)v2 + 2), v12, v11);']
['v11 = gen_rtx( ( rtx_code)*( _WORD *)v6, ( machine_mode)*( ( unsigned __int8 *)v6 + 2), v4, v10);', 'v11 = gen_rtx( ( rtx_code)*( _WORD *)v6, ( machine_mode)*( ( unsigned __int8 *)v6 + 2), v4, v10);', 'v13 = gen_rtx( ( rtx_code)*( _WORD *)v2, ( machine_mode)*( ( unsigned __int8 *)v2 + 2), v12, v11);', 'v13 = gen_rtx( ( rtx_code)*( _WORD *)v2, ( machine_mode)*( ( unsigned __int8 *)v2 + 2), v12, v11);']
['v8 = gen_rtx( ( rtx_code)*( _WORD *)v3, ( machine_mode)*( ( unsigned __int8 *)v3 + 2), v7, v4);', 'v8 = gen_rtx( ( rtx_code)*( _WORD *)v3, ( machine_mode)*( ( unsigned __int8 *)v3 + 2), v7, v4);']
['v8 = gen_rtx( ( rtx_code)*( _WORD *)v3, ( machine_mode)*( ( unsigned __int8 *)v3 + 2), v7, v4);', 'v8 = gen_rtx( ( rtx_code)*( _WORD *)v3, ( machine_mode)*( ( unsigned __int8 *)v3 + 2), v7, v4);']
['*( _WORD *)operands[1] = swap_condition( ( rtx_code)*( _WORD *)operands[1]);']
['if ( const0_operand( operands[2], ( machine_mode)*( ( unsigned __int8 *)*operands + 2)) )']
['v11 = gen_rtx( ( rtx_code)*( _WORD *)v6, ( machine_mode)*( ( unsigned __int8 *)v6 + 2), v10, v4);', 'v11 = gen_rtx( ( rtx_code)*( _WORD *)v6, ( machine_mode)*( ( unsigned __int8 *)v6 + 2), v10, v4);', 'v11 = gen_rtx( ( rtx_code)*( _WORD *)v6, ( machine_mode)*( ( unsigned __int8 *)v6 + 2), v4, v10);', 'v11 = gen_rtx( ( rtx_code)*( _WORD *)v6, ( machine_mode)*( ( unsigned __int8 *)v6 + 2), v4, v10);']
['v11 = gen_rtx( ( rtx_code)*( _WORD *)v6, ( machine_mode)*( ( unsigned __int8 *)v6 + 2), v10, v4);', 'v11 = gen_rtx( ( rtx_code)*( _WORD *)v6, ( machine_mode)*( ( unsigned __int8 *)v6 + 2), v10, v4);', 'v11 = gen_rtx( ( rtx_code)*( _WORD *)v6, ( machine_mode)*( ( unsigned __int8 *)v6 + 2), v4, v10);', 'v11 = gen_rtx( ( rtx_code)*( _WORD *)v6, ( machine_mode)*( ( unsigned __int8 *)v6 + 2), v4, v10);']
['v9 = gen_rtx( ( rtx_code)*( _WORD *)v2, ( machine_mode)*( ( unsigned __int8 *)v2 + 2), v8, v6);', 'v9 = gen_rtx( ( rtx_code)*( _WORD *)v2, ( machine_mode)*( ( unsigned __int8 *)v2 + 2), v8, v6);']
['v9 = gen_rtx( ( rtx_code)*( _WORD *)v2, ( machine_mode)*( ( unsigned __int8 *)v2 + 2), v8, v6);', 'v9 = gen_rtx( ( rtx_code)*( _WORD *)v2, ( machine_mode)*( ( unsigned __int8 *)v2 + 2), v8, v6);']
['v1 = ix86_force_to_memory( ( machine_mode)*( ( unsigned __int8 *)operands[1] + 2), operands[1]);', 'v1 = ix86_force_to_memory( ( machine_mode)*( ( unsigned __int8 *)operands[1] + 2), operands[1]);']
['v2 = gen_rtx_fmt_e( FLOAT, ( machine_mode)*( ( unsigned __int8 *)*operands + 2), v1);', 'v2 = gen_rtx_fmt_e( FLOAT, ( machine_mode)*( ( unsigned __int8 *)*operands + 2), v1);', 'v2 = gen_rtx_fmt_e( FLOAT, ( machine_mode)*( ( unsigned __int8 *)*operands + 2), v1);']
['ix86_free_from_memory( ( machine_mode)*( ( unsigned __int8 *)operands[1] + 2));', 'ix86_free_from_memory( ( machine_mode)*( ( unsigned __int8 *)operands[1] + 2));']
['v9 = gen_lowpart( ( machine_mode)v20, v9);']
['v9 = gen_lowpart( ( machine_mode)v20, v9);']
['v9 = gen_lowpart( ( machine_mode)v3, v7);', 'v9 = gen_lowpart( ( machine_mode)v20, v9);']
['v10 = gen_rtx_fmt_ee( PLUS, ( machine_mode)v3, y, x);']
['v3 = gen_rtx_fmt_ee( PLUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v2, v1);', 'v3 = gen_rtx_fmt_ee( PLUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v2, v1);', 'v3 = gen_rtx_fmt_ee( PLUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v32, v31);']
['v1 = gen_lowpart( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), operands[3]);', 'v1 = gen_lowpart( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), operands[3]);', 'v1 = gen_lowpart( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), operands[3]);', 'v1 = gen_lowpart( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), operands[3]);', 'v1 = gen_lowpart( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), operands[4]);', 'v1 = gen_lowpart( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), operands[4]);', 'v1 = gen_lowpart( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), operands[2]);']
['v9 = gen_lowpart( ( machine_mode)v20, v9);']
['v9 = gen_lowpart( ( machine_mode)v20, v9);']
['v9 = gen_lowpart( ( machine_mode)v20, v9);']
['v9 = gen_lowpart( ( machine_mode)v20, v9);']
['v24 = gen_rtx_fmt_ee( MULT, ( machine_mode)v34, v23, v22);', 'v28 = gen_rtx_fmt_ee( MULT, ( machine_mode)v34, v27, v26);']
['v2 = gen_rtx_fmt_ee( PLUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v1, v0);']
['v1 = gen_lowpart( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), operands[3]);', 'v1 = gen_lowpart( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), operands[3]);', 'v1 = gen_lowpart( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), operands[3]);', 'v1 = gen_lowpart( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), operands[3]);', 'v1 = gen_lowpart( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), operands[4]);', 'v1 = gen_lowpart( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), operands[4]);', 'v1 = gen_lowpart( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), operands[2]);']
['v9 = gen_lowpart( ( machine_mode)v20, v9);']
['v9 = gen_lowpart( ( machine_mode)v20, v9);']
['v9 = gen_lowpart( ( machine_mode)v20, v9);']
['v9 = gen_lowpart( ( machine_mode)v3, v7);', 'v9 = gen_lowpart( ( machine_mode)v20, v9);']
['v3 = gen_rtx_fmt_ee( MULT, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v20, v19);']
['v4 = gen_rtx_fmt_ee( PLUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v3, v2);', 'v24 = gen_rtx_fmt_ee( PLUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v23, v20);']
['v5 = gen_rtx_fmt_ee( PLUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v4, v1);']
['v1 = gen_lowpart( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), operands[3]);', 'v1 = gen_lowpart( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), operands[3]);', 'v1 = gen_lowpart( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), operands[3]);', 'v1 = gen_lowpart( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), operands[3]);', 'v1 = gen_lowpart( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), operands[4]);', 'v1 = gen_lowpart( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), operands[4]);', 'v1 = gen_lowpart( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), operands[2]);']
['v9 = gen_lowpart( ( machine_mode)v20, v9);']
['v9 = gen_lowpart( ( machine_mode)v20, v9);']
['operands[1] = gen_lowpart( ( machine_mode)v3, operands[1]);']
['v9 = gen_lowpart( ( machine_mode)v3, v7);']
['v10 = gen_rtx_fmt_ee( PLUS, ( machine_mode)v3, y, x);']
['v1 = gen_lowpart( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), operands[3]);', 'v1 = gen_lowpart( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), operands[3]);', 'v1 = gen_lowpart( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), operands[3]);', 'v1 = gen_lowpart( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), operands[3]);', 'v1 = gen_lowpart( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), operands[4]);', 'v1 = gen_lowpart( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), operands[4]);', 'v1 = gen_lowpart( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), operands[2]);']
['v9 = gen_lowpart( ( machine_mode)v20, v9);']
['v12 = gen_rtx( ( rtx_code)*( _WORD *)operand1, VOIDmode, operand4, operand5);', 'v12 = gen_rtx( ( rtx_code)*( _WORD *)operand1, VOIDmode, operand4, operand5);']
['v12 = gen_rtx( ( rtx_code)*( _WORD *)operand1, VOIDmode, operand4, operand5);', 'v12 = gen_rtx( ( rtx_code)*( _WORD *)operand1, VOIDmode, operand4, operand5);']
['genfun = insn_data_0[insn_code].genfun;']
['if ( !operand->predicate( r0, ( machine_mode)*( ( unsigned __int16 *)operand + 8)) )', 'if ( !operand->predicate( r0, ( machine_mode)*( ( unsigned __int16 *)operand + 8)) )']
['|| !operand[1].predicate( x, ( machine_mode)*( ( unsigned __int16 *)&operand[1] + 8))']
['if ( operand[2].predicate( c, ( machine_mode)*( ( unsigned __int16 *)&operand[2] + 8)) )', 'if ( operand[2].predicate( c, ( machine_mode)*( ( unsigned __int16 *)&operand[2] + 8)) )']
['if ( ( unsigned int)debug_info_level_0 > DINFO_LEVEL_TERSE )', 'if ( ( unsigned int)debug_info_level_0 > DINFO_LEVEL_TERSE )', 'if ( ( unsigned int)debug_info_level_0 > DINFO_LEVEL_TERSE )', 'if ( ( unsigned int)debug_info_level_0 > DINFO_LEVEL_TERSE )', 'if ( ( unsigned int)debug_info_level_0 > DINFO_LEVEL_TERSE )', 'if ( ( unsigned int)debug_info_level_0 > DINFO_LEVEL_TERSE )']
['if ( ( unsigned int)debug_info_level_0 > DINFO_LEVEL_TERSE )', 'if ( ( unsigned int)debug_info_level_0 > DINFO_LEVEL_TERSE )', 'if ( ( unsigned int)debug_info_level_0 > DINFO_LEVEL_TERSE )', 'if ( ( unsigned int)debug_info_level_0 > DINFO_LEVEL_TERSE )', 'if ( ( unsigned int)debug_info_level_0 > DINFO_LEVEL_TERSE )', 'if ( ( unsigned int)debug_info_level_0 > DINFO_LEVEL_TERSE )']
['fancy_abort( ( const char *)&a, 10210, "gen_subprogram_die");']
['fancy_abort( ( const char *)&a, 9459, "add_abstract_origin_attribute");', 'fancy_abort( ( const char *)&a, 9459, "add_abstract_origin_attribute");', 'fancy_abort( ( const char *)&a, 9459, "add_abstract_origin_attribute");']
['if ( ( unsigned int)debug_info_level_0 <= DINFO_LEVEL_TERSE )']
['if ( ( unsigned int)debug_info_level_0 <= DINFO_LEVEL_TERSE )']
['fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");']
['( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),']
['v14 = concat( ret_val, &off_631D1E, 0LL);']
['fprintf( file, ( const char *)&stru_665A39._IO_write_end + 3, v6.rtwint, *( _QWORD *)&x[1]);']
['v16 = ( tree_node *)i[4];', 'v20 = ( tree_node *)v14[1];', 'v23 = ( tree_node *)v22[7];']
['if ( v29 == ( tree_node *)*( &global_trees + 27) )']
['v16 = ( tree_node *)i[4];', 'v20 = ( tree_node *)v14[1];', 'v23 = ( tree_node *)v22[7];']
['fwrite( ( char *)&stru_665A39._IO_write_ptr + 6, 1uLL, 4uLL, file);']
['fancy_abort( ( const char *)&a, 10121, "gen_type_die_for_member");']
['fancy_abort( ( const char *)&a, 9459, "add_abstract_origin_attribute");', 'fancy_abort( ( const char *)&a, 9459, "add_abstract_origin_attribute");', 'fancy_abort( ( const char *)&a, 9459, "add_abstract_origin_attribute");']
['fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");']
['fancy_abort( ( const char *)&a, 4387, "AT_flag");', 'fancy_abort( ( const char *)&a, 4387, "AT_flag");']
['fancy_abort( ( const char *)&a, 8989, "add_location_or_const_value_attribute");']
['if ( ( mode_class_0[mode] & 0xFFFFFFFD) != 1 )', 'if ( ( mode_class_0[mode] & 0xFFFFFFFD) != 1 )']
['v1 = trunc_int_for_mode( 1 << operands[2]->fld[0].rtwint, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4));', 'v1 = trunc_int_for_mode( 1 << operands[2]->fld[0].rtwint, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4));']
['if ( mode_class_0[v2] != MODE_FLOAT || ( result = 0, mode_size[v2] <= mode_size[*( unsigned __int8 *)( v4.rtwint + 2)]) )']
['v17 = legitimate_address_p( ( machine_mode)*( ( unsigned __int8 *)rtx + 2), v16, 0);']
['if ( !explained_1 )']
['explained_1 = 1;']
['for ( i = save_expr_list_5; i; i = i->common.chain )']
['v1 = lang_hooks_0.get_alias_set( i);']
['return ++last_alias_set_5;']
['v1 = lang_hooks_0.get_alias_set( i);']
['return ++last_alias_set_5;']
['fatal_insn_not_found( insn, "insn-attrtab.c", 12189, "get_attr_athlon_decode");']
['result = memory_operand( recog_data_0.operand[1], VOIDmode) != 0;', 'result = memory_operand( recog_data_0.operand[1], VOIDmode) != 0;']
['fatal_insn_not_found( insn, "insn-attrtab.c", 12189, "get_attr_athlon_decode");']
['if ( get_attr_type( insn) == TYPE_IMOV && register_operand( recog_data_0.operand[0], VOIDmode) )', 'if ( get_attr_type( insn) == TYPE_IMOV && register_operand( recog_data_0.operand[0], VOIDmode) )']
['if ( get_attr_type( insn) == TYPE_IMOV && register_operand( recog_data_0.operand[0], VOIDmode) )', 'if ( get_attr_type( insn) == TYPE_IMOV && register_operand( recog_data_0.operand[0], VOIDmode) )']
['if ( get_attr_type( insn) == TYPE_IMOV && register_operand( recog_data_0.operand[0], VOIDmode) )', 'if ( get_attr_type( insn) == TYPE_IMOV && register_operand( recog_data_0.operand[0], VOIDmode) )']
['if ( get_attr_type( insn) == TYPE_IMOV && register_operand( recog_data_0.operand[0], VOIDmode) )', 'if ( get_attr_type( insn) == TYPE_IMOV && register_operand( recog_data_0.operand[0], VOIDmode) )']
['if ( get_attr_type( insn) == TYPE_IMOV && register_operand( recog_data_0.operand[0], VOIDmode) )', 'if ( get_attr_type( insn) == TYPE_IMOV && register_operand( recog_data_0.operand[0], VOIDmode) )']
['if ( get_attr_type( insn) == TYPE_IMOV && register_operand( recog_data_0.operand[0], VOIDmode) )', 'if ( get_attr_type( insn) == TYPE_IMOV && register_operand( recog_data_0.operand[0], VOIDmode) )']
['if ( get_attr_type( insn) == TYPE_IMOV && register_operand( recog_data_0.operand[0], VOIDmode) )', 'if ( get_attr_type( insn) == TYPE_IMOV && register_operand( recog_data_0.operand[0], VOIDmode) )']
['if ( get_attr_type( insn) == TYPE_IMOV && register_operand( recog_data_0.operand[0], VOIDmode) )', 'if ( get_attr_type( insn) == TYPE_IMOV && register_operand( recog_data_0.operand[0], VOIDmode) )']
['if ( get_attr_type( insn) == TYPE_IMOV && register_operand( recog_data_0.operand[0], VOIDmode) )', 'if ( get_attr_type( insn) == TYPE_IMOV && register_operand( recog_data_0.operand[0], VOIDmode) )']
['if ( get_attr_type( insn) == TYPE_IMOV && register_operand( recog_data_0.operand[0], VOIDmode) )', 'if ( get_attr_type( insn) == TYPE_IMOV && register_operand( recog_data_0.operand[0], VOIDmode) )']
['v15 = mult_operator( recog_data_0.operand[3], SFmode);', 'v13 = mult_operator( recog_data_0.operand[3], SFmode);', 'v9 = mult_operator( recog_data_0.operand[3], DFmode);', 'v7 = mult_operator( recog_data_0.operand[3], XFmode);', 'v5 = mult_operator( recog_data_0.operand[3], TFmode);']
['v15 = mult_operator( recog_data_0.operand[3], SFmode);', 'v13 = mult_operator( recog_data_0.operand[3], SFmode);', 'v9 = mult_operator( recog_data_0.operand[3], DFmode);', 'v7 = mult_operator( recog_data_0.operand[3], XFmode);', 'v5 = mult_operator( recog_data_0.operand[3], TFmode);']
['v15 = mult_operator( recog_data_0.operand[3], SFmode);', 'v13 = mult_operator( recog_data_0.operand[3], SFmode);', 'v9 = mult_operator( recog_data_0.operand[3], DFmode);', 'v7 = mult_operator( recog_data_0.operand[3], XFmode);', 'v5 = mult_operator( recog_data_0.operand[3], TFmode);']
['v7 = mult_operator( recog_data_0.operand[3], XFmode);']
['v5 = mult_operator( recog_data_0.operand[3], TFmode);']
['fatal_insn_not_found( insn, "insn-attrtab.c", 13438, "get_attr_i387");']
['v15 = mult_operator( recog_data_0.operand[3], SFmode);', 'v13 = mult_operator( recog_data_0.operand[3], SFmode);', 'v9 = mult_operator( recog_data_0.operand[3], DFmode);', 'v7 = mult_operator( recog_data_0.operand[3], XFmode);', 'v5 = mult_operator( recog_data_0.operand[3], TFmode);']
['v9 = mult_operator( recog_data_0.operand[3], DFmode);']
['if ( get_attr_type( insn) == TYPE_IMOV && register_operand( recog_data_0.operand[0], VOIDmode) )', 'if ( get_attr_type( insn) == TYPE_IMOV && register_operand( recog_data_0.operand[0], VOIDmode) )']
['if ( get_attr_type( insn) == TYPE_IMOV && register_operand( recog_data_0.operand[0], VOIDmode) )', 'if ( get_attr_type( insn) == TYPE_IMOV && register_operand( recog_data_0.operand[0], VOIDmode) )']
['fatal_insn_not_found( insn, "insn-attrtab.c", 13072, "get_attr_imm_disp");']
['if ( ( !flag_pic || !symbolic_operand( recog_data_0.operand[1], SImode))', '&& ( !flag_pic || !symbolic_operand( recog_data_0.operand[1], SImode)) )']
['v47 = memory_displacement_operand( recog_data_0.operand[0], VOIDmode);', 'v46 = memory_displacement_operand( recog_data_0.operand[0], VOIDmode);', 'v44 = memory_displacement_operand( recog_data_0.operand[0], VOIDmode);', 'v40 = memory_displacement_operand( recog_data_0.operand[0], VOIDmode);', 'v38 = memory_displacement_operand( recog_data_0.operand[0], VOIDmode);']
['return immediate_operand( recog_data_0.operand[1], VOIDmode) != 0;', 'return immediate_operand( recog_data_0.operand[1], VOIDmode) != 0;', 'return immediate_operand( recog_data_0.operand[1], VOIDmode) != 0;', 'return immediate_operand( recog_data_0.operand[1], VOIDmode) != 0;']
['if ( !q_regs_operand( recog_data_0.operand[0], QImode) )']
['if ( ( !flag_pic || !symbolic_operand( recog_data_0.operand[1], SImode))', '&& ( !flag_pic || !symbolic_operand( recog_data_0.operand[1], SImode)) )']
['v3 = incdec_operand( recog_data_0.operand[2], HImode);', 'v3 = incdec_operand( recog_data_0.operand[2], QImode);']
['if ( !incdec_operand( recog_data_0.operand[2], SImode) )', 'if ( !incdec_operand( recog_data_0.operand[2], SImode) )']
['if ( !incdec_operand( recog_data_0.operand[2], HImode) )', 'if ( !incdec_operand( recog_data_0.operand[2], HImode) )', 'if ( !incdec_operand( recog_data_0.operand[2], HImode) )']
['if ( !incdec_operand( recog_data_0.operand[2], QImode) )']
['if ( !memory_operand( recog_data_0.operand[0], VOIDmode)']
['&& register_operand( recog_data_0.operand[0], VOIDmode) )']
['if ( !incdec_operand( recog_data_0.operand[2], SImode) )', 'if ( !incdec_operand( recog_data_0.operand[2], SImode) )']
['v47 = memory_displacement_operand( recog_data_0.operand[0], VOIDmode);', 'v46 = memory_displacement_operand( recog_data_0.operand[0], VOIDmode);', 'v44 = memory_displacement_operand( recog_data_0.operand[0], VOIDmode);', 'v40 = memory_displacement_operand( recog_data_0.operand[0], VOIDmode);', 'v38 = memory_displacement_operand( recog_data_0.operand[0], VOIDmode);']
['v17 = immediate_operand( recog_data_0.operand[1], VOIDmode);']
['if ( !incdec_operand( recog_data_0.operand[2], DImode) )', 'if ( !incdec_operand( recog_data_0.operand[2], DImode) )']
['fatal_insn_not_found( insn, "insn-attrtab.c", 13642, "get_attr_length_address");']
['v4 = constant_call_address_operand( recog_data_0.operand[1], VOIDmode);']
['fatal_insn_not_found( insn, "insn-attrtab.c", 14632, "get_attr_length_immediate");']
['if ( immediate_operand( recog_data_0.operand[1], VOIDmode) || ( unsigned int)attr_memory <= MEMORY_STORE )']
['if ( flag_pic && symbolic_operand( recog_data_0.operand[1], SImode) )']
['if ( aligned_operand( recog_data_0.operand[1], HImode) )', 'if ( aligned_operand( recog_data_0.operand[1], HImode) )']
['if ( !q_regs_operand( recog_data_0.operand[0], QImode) )']
['if ( ( !flag_pic || !symbolic_operand( recog_data_0.operand[1], SImode))', '&& ( !flag_pic || !symbolic_operand( recog_data_0.operand[1], SImode)) )']
['if ( immediate_operand( recog_data_0.operand[1], VOIDmode) || ( unsigned int)attr_memory <= MEMORY_STORE )']
['if ( flag_pic && symbolic_operand( recog_data_0.operand[1], DImode) )']
['if ( pic_symbolic_operand( recog_data_0.operand[2], DImode) )', 'if ( pic_symbolic_operand( recog_data_0.operand[2], DImode) )']
['if ( !incdec_operand( recog_data_0.operand[2], DImode) )', 'if ( !incdec_operand( recog_data_0.operand[2], DImode) )']
['if ( pic_symbolic_operand( recog_data_0.operand[2], SImode) )', 'if ( pic_symbolic_operand( recog_data_0.operand[2], SImode) )', 'if ( pic_symbolic_operand( recog_data_0.operand[2], SImode) )']
['if ( pic_symbolic_operand( recog_data_0.operand[2], SImode) )', 'if ( pic_symbolic_operand( recog_data_0.operand[2], SImode) )', 'if ( pic_symbolic_operand( recog_data_0.operand[2], SImode) )']
['if ( !incdec_operand( recog_data_0.operand[2], SImode) )', 'if ( !incdec_operand( recog_data_0.operand[2], SImode) )']
['if ( !incdec_operand( recog_data_0.operand[2], HImode) )', 'if ( !incdec_operand( recog_data_0.operand[2], HImode) )', 'if ( !incdec_operand( recog_data_0.operand[2], HImode) )']
['if ( !incdec_operand( recog_data_0.operand[2], HImode) )', 'if ( !incdec_operand( recog_data_0.operand[2], HImode) )', 'if ( !incdec_operand( recog_data_0.operand[2], HImode) )']
['if ( !incdec_operand( recog_data_0.operand[2], QImode) )']
['if ( !incdec_operand( recog_data_0.operand[2], QImode) )']
['if ( ix86_cpu != PROCESSOR_PENTIUMPRO || ( v3 = 3, !memory_operand( recog_data_0.operand[1], VOIDmode)) )']
['if ( ix86_cpu != PROCESSOR_PENTIUMPRO || ( v3 = 3, !memory_operand( recog_data_0.operand[1], VOIDmode)) )']
['if ( memory_operand( recog_data_0.operand[1], VOIDmode) )']
['v2 = recog_data_0.operand[v1];']
['fatal_insn_not_found( insn, "insn-attrtab.c", 15861, "get_attr_memory");']
['if ( !memory_operand( recog_data_0.operand[1], VOIDmode) )']
['if ( memory_operand( recog_data_0.operand[1], VOIDmode) )']
['if ( memory_operand( recog_data_0.operand[1], VOIDmode) )']
['if ( memory_operand( recog_data_0.operand[1], VOIDmode) )']
['v3 = symbolic_operand( recog_data_0.operand[1], SImode);']
['if ( ix86_cpu != PROCESSOR_PENTIUMPRO || ( v3 = 3, !memory_operand( recog_data_0.operand[1], VOIDmode)) )']
['if ( ix86_cpu != PROCESSOR_PENTIUMPRO || ( v3 = 3, !memory_operand( recog_data_0.operand[1], VOIDmode)) )']
['if ( memory_operand( recog_data_0.operand[1], VOIDmode) )']
['fatal_insn_not_found( insn, "insn-attrtab.c", 17669, "get_attr_mode");']
['v13 = aligned_operand( recog_data_0.operand[1], HImode);', 'v14 = aligned_operand( recog_data_0.operand[1], HImode);']
['if ( aligned_operand( recog_data_0.operand[1], HImode) )', 'if ( aligned_operand( recog_data_0.operand[1], HImode) )']
['if ( !q_regs_operand( recog_data_0.operand[0], QImode) )']
['fatal_insn_not_found( insn, "insn-attrtab.c", 16766, "get_attr_modrm");']
['result = memory_operand( recog_data_0.operand[1], VOIDmode) != 0;', 'result = memory_operand( recog_data_0.operand[1], VOIDmode) != 0;', 'return 2 * ( memory_operand( recog_data_0.operand[0], VOIDmode) != 0);']
['if ( flag_pic && symbolic_operand( recog_data_0.operand[1], SImode) )']
['if ( register_operand( recog_data_0.operand[0], VOIDmode) )', 'if ( register_operand( recog_data_0.operand[0], VOIDmode) )', 'if ( register_operand( recog_data_0.operand[0], VOIDmode) )']
['return immediate_operand( recog_data_0.operand[1], VOIDmode) == 0;', 'return immediate_operand( recog_data_0.operand[1], VOIDmode) == 0;', 'return immediate_operand( recog_data_0.operand[1], VOIDmode) == 0;', 'return immediate_operand( recog_data_0.operand[1], VOIDmode) == 0;', 'return immediate_operand( recog_data_0.operand[1], VOIDmode) == 0;', 'return immediate_operand( recog_data_0.operand[1], VOIDmode) == 0;']
['if ( !q_regs_operand( recog_data_0.operand[0], QImode) )']
['if ( flag_pic && symbolic_operand( recog_data_0.operand[1], DImode) )']
['result = memory_operand( recog_data_0.operand[1], VOIDmode) != 0;', 'result = memory_operand( recog_data_0.operand[1], VOIDmode) != 0;']
['if ( incdec_operand( recog_data_0.operand[2], DImode) )']
['if ( incdec_operand( recog_data_0.operand[2], SImode) )']
['if ( !incdec_operand( recog_data_0.operand[2], HImode) )', 'if ( !incdec_operand( recog_data_0.operand[2], HImode) )', 'if ( !incdec_operand( recog_data_0.operand[2], HImode) )']
['if ( !incdec_operand( recog_data_0.operand[2], QImode) )']
['if ( register_operand( recog_data_0.operand[0], VOIDmode) )', 'if ( register_operand( recog_data_0.operand[0], VOIDmode) )', 'if ( register_operand( recog_data_0.operand[0], VOIDmode) )']
['v15 = register_operand( recog_data_0.operand[0], QImode);', 'v17 = register_operand( recog_data_0.operand[0], QImode);', 'v19 = register_operand( recog_data_0.operand[0], QImode);', 'v7 = register_operand( recog_data_0.operand[0], DImode);', 'v6 = register_operand( recog_data_0.operand[0], SImode);']
['if ( which_alternative || pic_symbolic_operand( recog_data_0.operand[2], SImode) )']
['if ( which_alternative || pic_symbolic_operand( recog_data_0.operand[2], SImode) )']
['fatal_insn_not_found( insn, "insn-attrtab.c", 19810, "get_attr_pent_prefix");']
['if ( memory_operand( recog_data_0.operand[1], VOIDmode) )']
['if ( ( !flag_pic || !symbolic_operand( recog_data_0.operand[1], SImode))', '&& ( !flag_pic || !symbolic_operand( recog_data_0.operand[1], SImode)) )']
['if ( ( !flag_pic || !symbolic_operand( recog_data_0.operand[1], SImode))', '&& ( !flag_pic || !symbolic_operand( recog_data_0.operand[1], SImode)) )']
['if ( memory_operand( recog_data_0.operand[1], VOIDmode) )']
['if ( aligned_operand( recog_data_0.operand[1], HImode) )', 'if ( aligned_operand( recog_data_0.operand[1], HImode) )']
['if ( !q_regs_operand( recog_data_0.operand[0], QImode) )']
['if ( ( !flag_pic || !symbolic_operand( recog_data_0.operand[1], SImode))', '&& ( !flag_pic || !symbolic_operand( recog_data_0.operand[1], SImode)) )']
['if ( ( !flag_pic || !symbolic_operand( recog_data_0.operand[1], SImode))', '&& ( !flag_pic || !symbolic_operand( recog_data_0.operand[1], SImode)) )']
['if ( !memory_operand( recog_data_0.operand[1], VOIDmode) )']
['if ( pic_symbolic_operand( recog_data_0.operand[2], DImode) )', 'if ( pic_symbolic_operand( recog_data_0.operand[2], DImode) )']
['if ( pic_symbolic_operand( recog_data_0.operand[2], SImode) )', 'if ( pic_symbolic_operand( recog_data_0.operand[2], SImode) )', 'if ( pic_symbolic_operand( recog_data_0.operand[2], SImode) )']
['v3 = incdec_operand( recog_data_0.operand[2], HImode);']
['if ( !incdec_operand( recog_data_0.operand[2], HImode) )', 'if ( !incdec_operand( recog_data_0.operand[2], HImode) )', 'if ( !incdec_operand( recog_data_0.operand[2], HImode) )']
['v3 = incdec_operand( recog_data_0.operand[2], QImode);']
['if ( !incdec_operand( recog_data_0.operand[2], QImode) )']
['rtx v10; // rdx']
['fatal_insn_not_found( insn, "insn-attrtab.c", 20323, "get_attr_prefix_0f");']
['if ( aligned_operand( recog_data_0.operand[1], HImode) )', 'if ( aligned_operand( recog_data_0.operand[1], HImode) )']
['if ( !q_regs_operand( recog_data_0.operand[0], QImode) )']
['rtx = recog_data_0.operand[0];']
['if ( *( _WORD *)recog_data_0.operand[0] == 67 )', 'if ( *( _WORD *)recog_data_0.operand[0] == 67 )']
['rtx = recog_data_0.operand[0]->fld[0].rtx;']
['v12 = recog_data_0.operand[0];', 'v12 = recog_data_0.operand[0];']
['v12 = recog_data_0.operand[0];', 'v12 = recog_data_0.operand[0];']
['if ( *( _WORD *)recog_data_0.operand[0] == 67 )', 'if ( *( _WORD *)recog_data_0.operand[0] == 67 )']
['v12 = recog_data_0.operand[0]->fld[0].rtx;', 'v12 = recog_data_0.operand[0]->fld[0].rtx;']
['v12 = recog_data_0.operand[0]->fld[0].rtx;', 'v12 = recog_data_0.operand[0]->fld[0].rtx;']
['v12 = insn_addresses_->data.i[i->fld[0].rtint];']
['fatal_insn_not_found( insn, "insn-attrtab.c", 20460, "get_attr_prefix_data16");']
['fatal_insn_not_found( insn, "insn-attrtab.c", 20358, "get_attr_prefix_rep");']
['rtx v9; // rdx']
['fatal_insn_not_found( insn, "insn-attrtab.c", 21978, "get_attr_type");']
['if ( flag_pic && symbolic_operand( recog_data_0.operand[1], SImode) )']
['if ( aligned_operand( recog_data_0.operand[1], HImode) )', 'if ( aligned_operand( recog_data_0.operand[1], HImode) )']
['if ( register_operand( recog_data_0.operand[0], VOIDmode) )', 'if ( register_operand( recog_data_0.operand[0], VOIDmode) )', 'if ( register_operand( recog_data_0.operand[0], VOIDmode) )']
['if ( !q_regs_operand( recog_data_0.operand[0], QImode) )']
['if ( ( !flag_pic || !symbolic_operand( recog_data_0.operand[1], SImode))', '&& ( !flag_pic || !symbolic_operand( recog_data_0.operand[1], SImode)) )']
['if ( which_alternative || pic_symbolic_operand( recog_data_0.operand[2], SImode) )']
['if ( !incdec_operand( recog_data_0.operand[2], DImode) )', 'if ( !incdec_operand( recog_data_0.operand[2], DImode) )']
['if ( pic_symbolic_operand( recog_data_0.operand[2], SImode) )', 'if ( pic_symbolic_operand( recog_data_0.operand[2], SImode) )', 'if ( pic_symbolic_operand( recog_data_0.operand[2], SImode) )']
['if ( incdec_operand( recog_data_0.operand[2], SImode) )']
['if ( !incdec_operand( recog_data_0.operand[2], HImode) )', 'if ( !incdec_operand( recog_data_0.operand[2], HImode) )', 'if ( !incdec_operand( recog_data_0.operand[2], HImode) )']
['if ( !incdec_operand( recog_data_0.operand[2], QImode) )']
['if ( register_operand( recog_data_0.operand[0], VOIDmode) )', 'if ( register_operand( recog_data_0.operand[0], VOIDmode) )', 'if ( register_operand( recog_data_0.operand[0], VOIDmode) )']
['v15 = &qty_0[v11];']
['v7 = swap_condition( ( rtx_code)*v3);']
['result = gen_reg_rtx( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4));']
['v11 = value_2;']
['if ( !value_2 )']
['v12 = value_2 / 0x3EuLL;']
['v10[2] = letters_1[( ( unsigned __int64)( ( 0x8421084210842109LL * ( unsigned __int128)( v11 / 0x7C)) >> 64) >> 4)']
['v12 = value_2 / 0x3EuLL;']
['value_2 = v14;']
['v10[1] = letters_1[v12']
['v10[1] = letters_1[v12']
['v10[1] = letters_1[v12']
['v10[1] = letters_1[v12']
['v10[1] = letters_1[v12']
['v10[1] = letters_1[v12']
['if ( ( sch_istable[i] & 0x8C) == 0 && i != 46 )']
['result = x;', 'return set_2;']
['if ( set_2 == -1 )']
['return ++last_alias_set_5;']
['return result;', 'return result;', 'return result;', 'return result;', 'return result;', 'return result;']
['hard_reg_initial_vals->entries = ( initial_value_pair_0 *)xmalloc( 0x50uLL);']
['hard_reg_initial_vals->entries = ( initial_value_pair_0 *)xrealloc( hard_reg_initial_vals->entries, 16LL * v7);']
['v2 = ( tree_node *)*( &global_trees + 15);', 'v3 = ( tree_node *)*( &global_trees + 15);', 'v8 = ( tree_node *)*( &global_trees + 15);', 'v9 = ( tree_node *)*( &global_trees + 17);', 'v5 = ( tree_node *)*( &global_trees + 15);']
['v9 = ( tree_node *)*( &global_trees + 17);', 'v18 = ( tree_node *)*( &global_trees + 11);', 'v24 = ( tree_node *)*( &global_trees + 17);', 'v17 = ( tree_node *)*( &global_trees + 12);', 'v17 = ( tree_node *)*( &global_trees + 11);', 'v18 = ( tree_node *)*( &global_trees + 15);']
['v15 = *( tree_node **)( high + 40);']
['return insn_data_0[code].name;']
['return insn_data_0[code].name;']
['return ( const char *)output( &recog_data_0);']
['return gen_lowpart_for_combine( ( machine_mode)*( ( unsigned __int8 *)x + 2), last_value);']
['v17 = ( ( unsigned int)( mode_class_0[v15] - 5) < 2) + 1;']
['*loc = gen_rtx_fmt_e( CLOBBER, ( machine_mode)*( ( unsigned __int8 *)v5 + 2), const_int_rtx[64]);']
['if ( ( unsigned int)( mode_class_0[mode] - 5) <= 1 )', 'if ( ( unsigned int)( mode_class_0[mode] - 5) <= 1 )']
['v5 = mode_class_0[mode];', 'v5 = mode_class_0[mode];', 'v5 = mode_class_0[mode];', 'v5 = mode_class_0[mode];', 'v7 = mode_class_0[mode];', 'v2 = mode_class_0[mode];', 'v3 = mode_class_0[mode];']
['if ( ( mode_class_0[v4] & 0xFFFFFFFB) != 2 )']
['find_reloads_address( v4, 0LL, v9->fld[0].rtx, ( rtx *)v9->fld, opnum, ( reload_type)v11, 0, 0LL);']
['rtx v14; // rdx', 'rtx v6; // rdx', 'rtx v4; // rbx', 'rtx v4; // rax', 'rtx v4; // rax', 'rtx v14; // rdx', 'rtx v48; // rdx', 'rtx v4; // rax', 'rtx v7; // rdx', 'rtx v64; // rdx', 'rtx v34; // rdx', 'rtx v9; // rdx']
['if ( *( ( _DWORD *)v23 + 10) != 1 )', 'if ( ( *( ( _BYTE *)biv + 100) & 0x20) != 0 )']
['v14 = *( rtx *)( v2.rtwint + 24);']
['v14 = *( rtx *)( v2.rtwint + 24);']
['if ( *( tree_node **)( *( _QWORD *)( low + 8) + 8LL) != v14 )', '&& *( tree_node **)( *( _QWORD *)( v9.rtwint + 8) + 128LL) == section_name )']
['v14 = *( rtx *)( v2.rtwint + 24);']
['*( _QWORD *)( v11 + 24) = v10;']
['v28 = *( tree_node **)v6;']
['rtx v6; // r12', 'rtx v6; // r12']
['v2 = rtx;', 'v2 = rtx;', 'v2 = rtx;', 'v4 = rtx;']
['v2 = rtx;', 'v2 = rtx;', 'v2 = rtx;', 'v4 = rtx;']
['( machine_mode)*( unsigned __int8 *)( v15.rtwint + 2),']
['( machine_mode)*( ( unsigned __int8 *)rtx + 2));', '( machine_mode)*( ( unsigned __int8 *)rtx + 2));']
['result = x;', 'return set_3;']
['if ( set_3 == -1 )']
['return ++last_alias_set_5;']
['return result;', 'return result;', 'return result;', 'return result;', 'return result;', 'return result;']
['v0 = pwd_1;']
['if ( !pwd_1 )']
['v3 = failure_errno_0;']
['*v2 = failure_errno_0;']
['failure_errno_0 = v6;']
['pwd_1 = v0;']
['page_group_0 *v3; // rbx', 'page_group_0 *v3; // rbx']
['page_group_0 *v3; // rbx', 'page_group_0 *v3; // rbx']
['v7 = ( page_entry_0 *)( &G + 2640);', 'v1 = ( page_entry_0 *)( &G + 2640);']
['v3 = ( page_group_0 *)( &G + 2648);', 'v3 = ( page_group_0 *)( &G + 2648);']
['if ( length == 1 && ( sch_istable[*( unsigned __int8 *)contents] & 4) != 0 )']
['timevar_push( TV_GC_0);']
['timevar_pop( TV_GC_0);']
['v12 = ( tree_node *)*( ( _QWORD *)&v15->stmt + v11++);']
['rtl_op = first_rtl_op( ( tree_code)*( ( unsigned __int8 *)v22 + 16));']
['v1 = ( page_entry_0 **)( &G + 16);']
['rtx v21; // [rsp+10h] [rbp-68h]']
['from = eliminables_2[i].from;']
['*( _QWORD *)&v14[1] = rtx;', '*( _QWORD *)&v10[1] = v11;', '*( _QWORD *)&v11[1] = v10;']
['*( ( _BYTE *)v6 + 3) = v10;', '*( _QWORD *)( v11 + 24) = v10;']
['*( _QWORD *)( v11 + 24) = v10;']
['*( ( _BYTE *)v6 + 3) = v10;']
['*( _QWORD *)( v11 + 24) = v10;']
['*( ( _BYTE *)v6 + 3) = v10;', '*( _QWORD *)( v11 + 24) = v10;']
['*( ( _BYTE *)v6 + 3) = v10;', '*( _QWORD *)( v11 + 24) = v10;']
['v7 = ( tree_node *)( ( unsigned __int64)width | ( unsigned __int64)declarator);']
['v7 = grokdeclarator( declarator, declspecs, ( decl_context)v9, 0);']
['reg_set_0 *v3; // rax', 'reg_set_0 *v3; // rax']
['reg_set_0 *v3; // rax', 'reg_set_0 *v3; // rax']
['v3 = reg_set_table[regno];']
['if ( v3 )']
['v8 = uid_cuid_1;']
['rtint = v3->insn->fld[0].rtint;']
['v3 = v3->next;', 'v3 = v3->next;']
['v3 = v3->next;', 'v3 = v3->next;']
['while ( v3 );']
['v13 = ( ( unsigned int)( mode_class_0[v11] - 5) < 2) + 1;', 'v17 = ( ( unsigned int)( mode_class_0[v15] - 5) < 2) + 1;', 'v16 = ( ( unsigned int)( mode_class_0[v18] - 5) < 2) + 1;', 'v15 = ( ( unsigned int)( mode_class_0[v11] - 5) < 2) + 1;']
['( machine_mode)*( unsigned __int8 *)( v12.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( ( *loc)->fld[0].rtwint + 2),']
['( machine_mode)*( unsigned __int8 *)( v2.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v4.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v12.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v4.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v2.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v7.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v11.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v2.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v2.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v11.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v9.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v15.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v4->fld[0].rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v1.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v5->fld[0].rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v17.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v17.rtwint + 2),']
['v11 = cselib_lookup( x, ( machine_mode)*( ( unsigned __int8 *)x + 2), 0);']
['predicate = insn_data_0[insn_code].operand->predicate;']
['( machine_mode)*( ( unsigned __int8 *)*operands + 2),', '( machine_mode)*( ( unsigned __int8 *)*operands + 2),']
['|| !operand[1].predicate( x, ( machine_mode)*( ( unsigned __int16 *)&operand[1] + 8))']
['return gen_rtx_fmt_ee( PLUS, ( machine_mode)( 5 - ( ( target_flags & 0x2000000) == 0)), v7, result);']
['rtx v92; // rax', 'rtx v60; // rax', 'rtx v42; // rax', 'rtx v22; // rax', 'rtx v42; // rax', 'rtx v63; // rax', 'rtx v42; // rax', 'rtx v82; // rax', 'rtx v22; // rax', 'rtx v6; // rax', 'rtx v42; // rax', 'rtx v6; // rax', 'rtx v42; // rax', 'rtx v68; // rax', 'rtx v60; // rax', 'rtx v6; // rax', 'rtx v65; // rax']
['rtx v66; // rsi', 'rtx v60; // rsi', 'rtx v43; // rsi']
['rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax']
['rtx v10; // r13', 'rtx v7; // r13']
['rtx v76; // rax']
['rtx j; // rdi', 'rtx i; // rbx', 'rtx j; // r12', 'rtx k; // rbx', 'rtx i; // rdi', 'rtx i; // rbx', 'rtx j; // rax', 'rtx k; // rax', 'rtx m; // rax', 'rtx i; // rbx', 'rtx j; // rbx', 'rtx i; // rax', 'rtx k; // rbx', 'rtx m; // rbx', 'rtx j; // rbp', 'rtx j; // rbx', 'rtx i; // r12']
['rtx v13; // rdx', 'rtx v9; // rdx']
['rtx v92; // rax', 'rtx v5; // rax', 'rtx v35; // rax', 'rtx v35; // rax', 'rtx v25; // rax', 'rtx v35; // rax', 'rtx v25; // rax', 'rtx v35; // rax', 'rtx v25; // rax', 'rtx v5; // rax', 'rtx v9; // rax', 'rtx v85; // rax', 'rtx v25; // rax', 'rtx v15; // rax', 'rtx v25; // rax', 'rtx v35; // rax', 'rtx v90; // rax', 'rtx v25; // rax', 'rtx v25; // rax', 'rtx v55; // rax', 'rtx v90; // rax', 'rtx v75; // rax', 'rtx v15; // rax', 'rtx v45; // rax', 'rtx v9; // rax', 'rtx v5; // rax', 'rtx v65; // rax', 'rtx v55; // rax', 'rtx v15; // rax']
['rtx last_value; // rax']
['rtx temp; // [rsp+20h] [rbp-48h]', 'rtx op1; // [rsp+20h] [rbp-58h]', 'rtx opa; // [rsp+0h] [rbp-48h]', 'rtx next; // [rsp+70h] [rbp-68h]', 'rtx newa; // [rsp+20h] [rbp-78h]']
['rtx true1; // [rsp+40h] [rbp-48h] BYREF']
['rtx true1; // [rsp+40h] [rbp-48h] BYREF']
['rtx false1; // [rsp+30h] [rbp-58h] BYREF']
['rtx false0; // [rsp+38h] [rbp-50h] BYREF']
['if ( ( mode_class_0[mode] & 0xFFFFFFFD) != 1 )', 'if ( ( mode_class_0[mode] & 0xFFFFFFFD) != 1 )']
['*( _OWORD *)&v2.r[1] = *( _OWORD *)&exp->block.subblocks;', '*( _OWORD *)&v2.r[1] = *( _OWORD *)&exp->block.subblocks;']
['*( _OWORD *)&v2.r[1] = *( _OWORD *)&exp->block.subblocks;', '*( _OWORD *)&v2.r[1] = *( _OWORD *)&exp->block.subblocks;']
['return immed_real_const_1( ( machine_mode)( BYTE5( exp->common.type->block.abstract_origin) >> 1), v2);']
['if ( *( _DWORD *)( *( _QWORD *)&x[2] + 88LL) != ++v28 )']
['if ( *( _DWORD *)( *( _QWORD *)&x[2] + 88LL) != ++v28 )']
['x[1] = ( rtx)v5;']
['if ( *( ( _BYTE *)op + 2) || mode == VOIDmode || ( result = 0, ( mode_class_0[mode] & 0xFFFFFFFD) == 1) )']
['rtx v37; // rdi', 'rtx v37; // rax', 'rtx *v30; // rax', 'rtx *v31; // rax', 'rtx v32; // rdx', 'rtx *v7; // rdi', 'rtx v37; // rax', 'rtx v37; // rax', 'rtx v37; // rax', 'rtx v7; // rdx', 'rtx v34; // rdx']
['rtx v41; // rsi']
['rtx v55; // rdx', 'rtx v48; // rdx', 'rtx v45; // rax']
['rtx v47; // rax', 'rtx v47; // rax']
['rtx *v56; // r13']
['rtx note; // [rsp+38h] [rbp-40h]']
['v41->const_rtx = gen_lowpart_if_possible( ( machine_mode)*( ( unsigned __int8 *)x + 2), first_same_value->exp);']
['subst_insn = v4;']
['fprintf( asmfile, &off_6376D2[1], ( unsigned int)current_sym_value);']
['v29 = gen_rtx_REG( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v5);']
['v6[7] = gen_rtx_fmt_e( ADDRESS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), global_rtl[2]);']
['v14 = gen_rtx_fmt_e( PRE_DEC, ( machine_mode)( 4 - ( ( v6 == 0) - 1)), global_rtl[2]);']
['v14 = gen_rtx_fmt_e( PRE_DEC, ( machine_mode)( 4 - ( ( v6 == 0) - 1)), global_rtl[2]);']
['&& ix86_hard_regno_mode_ok( i, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4)) )']
['profiler_label = gen_rtx_fmt_s( SYMBOL_REF, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v8);', 'profiler_label = gen_rtx_fmt_s( SYMBOL_REF, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v8);']
['profiler_label = gen_rtx_fmt_s( SYMBOL_REF, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v8);', 'profiler_label = gen_rtx_fmt_s( SYMBOL_REF, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v8);']
['ggc_add_rtx_root( &profiler_label, 1);']
['*( _QWORD *)object_base = *v5;']
['*( _QWORD *)&src->end[4] = v15;']
['*( _QWORD *)&src->end[4] = v15;', '*( _QWORD *)object_base = *v5;']
['*( _QWORD *)&v14[1] = rtx;', '*( _QWORD *)&src->end[4] = v15;', '*( _QWORD *)object_base = *v5;', '*( _QWORD *)&v10[1] = v8;', '*( _QWORD *)&v10[1] = v11;', '*( _QWORD *)&v11[1] = v10;']
['*( _QWORD *)&v14[1] = rtx;', '*( _QWORD *)&src->end[4] = v15;', '*( _QWORD *)object_base = *v5;', '*( _QWORD *)&v10[1] = v8;', '*( _QWORD *)&v10[1] = v11;', '*( _QWORD *)&v11[1] = v10;']
['while ( v1 != ( const  struct builtin *)&unk_64D290 );']
['while ( v1 != ( const  struct builtin *)&unk_64D290 );']
['v29 = gen_rtx_REG( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v5);']
['address = gen_rtx_fmt_ee( PLUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v29, v10);']
['if ( !memory_address_p( v10, addr[0]) )']
['if ( use == sibcall_use_tail_recursion_0 )', 'if ( use != sibcall_use_normal_0 )']
['*( __m128i *)&cum->words = _mm_load_si128( ( const __m128i *)&zero_cum_47);', '*( __m128i *)&cum->words = _mm_load_si128( ( const __m128i *)&zero_cum_47);', '*( __m128i *)&cum->words = _mm_load_si128( ( const __m128i *)&zero_cum_47);']
['*( _QWORD *)&cum->sse_nregs = *( _QWORD *)&zero_cum_47.sse_nregs;', '*( _QWORD *)&cum->sse_nregs = *( _QWORD *)&zero_cum_47.sse_nregs;', '*( _QWORD *)&cum->sse_nregs = *( _QWORD *)&zero_cum_47.sse_nregs;']
['*( __m128i *)&cum->words = _mm_load_si128( ( const __m128i *)&zero_cum_47);', '*( __m128i *)&cum->words = _mm_load_si128( ( const __m128i *)&zero_cum_47);', '*( __m128i *)&cum->words = _mm_load_si128( ( const __m128i *)&zero_cum_47);']
['*( _QWORD *)&cum->sse_nregs = *( _QWORD *)&zero_cum_47.sse_nregs;', '*( _QWORD *)&cum->sse_nregs = *( _QWORD *)&zero_cum_47.sse_nregs;', '*( _QWORD *)&cum->sse_nregs = *( _QWORD *)&zero_cum_47.sse_nregs;']
['cum->maybe_vaarg = zero_cum_47.maybe_vaarg;', 'cum->maybe_vaarg = zero_cum_47.maybe_vaarg;', 'cum->maybe_vaarg = zero_cum_47.maybe_vaarg;']
['*( __m128i *)&cum->words = _mm_load_si128( ( const __m128i *)&zero_cum_47);', '*( __m128i *)&cum->words = _mm_load_si128( ( const __m128i *)&zero_cum_47);', '*( __m128i *)&cum->words = _mm_load_si128( ( const __m128i *)&zero_cum_47);']
['*( _QWORD *)&cum->sse_nregs = *( _QWORD *)&zero_cum_47.sse_nregs;', '*( _QWORD *)&cum->sse_nregs = *( _QWORD *)&zero_cum_47.sse_nregs;', '*( _QWORD *)&cum->sse_nregs = *( _QWORD *)&zero_cum_47.sse_nregs;']
['cum->maybe_vaarg = zero_cum_47.maybe_vaarg;', 'cum->maybe_vaarg = zero_cum_47.maybe_vaarg;', 'cum->maybe_vaarg = zero_cum_47.maybe_vaarg;']
['*( __m128i *)&cum->words = _mm_load_si128( ( const __m128i *)&zero_cum_47);', '*( __m128i *)&cum->words = _mm_load_si128( ( const __m128i *)&zero_cum_47);', '*( __m128i *)&cum->words = _mm_load_si128( ( const __m128i *)&zero_cum_47);']
['*( _QWORD *)&cum->sse_nregs = *( _QWORD *)&zero_cum_47.sse_nregs;', '*( _QWORD *)&cum->sse_nregs = *( _QWORD *)&zero_cum_47.sse_nregs;', '*( _QWORD *)&cum->sse_nregs = *( _QWORD *)&zero_cum_47.sse_nregs;']
['cum->maybe_vaarg = zero_cum_47.maybe_vaarg;', 'cum->maybe_vaarg = zero_cum_47.maybe_vaarg;', 'cum->maybe_vaarg = zero_cum_47.maybe_vaarg;']
['v11 = mode_class_0[5];']
['v11 = mode_class_0[4];']
['v4 = gen_rtx_fmt_u00( LABEL_REF, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v3);']
['v10 = gen_rtx_fmt_ee( PLUS, ( machine_mode)v3, y, x);']
['v4 = gen_rtx_fmt_u00( LABEL_REF, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v3);', 'v3 = gen_rtx_fmt_u00( LABEL_REF, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v2);']
['*v12 = gen_rtx_fmt_e( ADDRESS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v11);']
['v4 = gen_rtx_fmt_u00( LABEL_REF, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v3);']
['v10 = gen_rtx_fmt_ee( PLUS, ( machine_mode)v3, y, x);']
['v22 = gen_rtx_fmt_e( ZERO_EXTEND, ( machine_mode)v34, v31);', 'v23 = gen_rtx_fmt_e( ZERO_EXTEND, ( machine_mode)v34, v31);', 'v26 = gen_rtx_fmt_e( ZERO_EXTEND, ( machine_mode)v34, v31);', 'v27 = gen_rtx_fmt_e( ZERO_EXTEND, ( machine_mode)v34, v31);']
['if ( ix86_hard_regno_mode_ok( v5, ( machine_mode)i) )']
['v6 = gen_rtx_REG( ( machine_mode)i, v5);']
['if ( initialized_12 )']
['initialized_12 = 1;']
['*v13++ = sch_tolower[i];']
['v18 = gen_rtx_fmt_s( SYMBOL_REF, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v17);', 'v18 = gen_rtx_fmt_s( SYMBOL_REF, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v17);']
['$B50C8071A5A789E219D5EDC319094081 *handlers; // rax', '$B50C8071A5A789E219D5EDC319094081 *handlers; // rax']
['$B50C8071A5A789E219D5EDC319094081 *handlers; // rax', '$B50C8071A5A789E219D5EDC319094081 *handlers; // rax']
['$B50C8071A5A789E219D5EDC319094081 *handlers; // rax', '$B50C8071A5A789E219D5EDC319094081 *handlers; // rax']
['$B50C8071A5A789E219D5EDC319094081 *handlers; // rax', '$B50C8071A5A789E219D5EDC319094081 *handlers; // rax']
['$B50C8071A5A789E219D5EDC319094081 *handlers; // rax', '$B50C8071A5A789E219D5EDC319094081 *handlers; // rax']
['$B50C8071A5A789E219D5EDC319094081 *handlers; // rax', '$B50C8071A5A789E219D5EDC319094081 *handlers; // rax']
['$B50C8071A5A789E219D5EDC319094081 *handlers; // rax', '$B50C8071A5A789E219D5EDC319094081 *handlers; // rax']
['$B50C8071A5A789E219D5EDC319094081 *handlers; // rax', '$B50C8071A5A789E219D5EDC319094081 *handlers; // rax']
['$B50C8071A5A789E219D5EDC319094081 *handlers; // rax', '$B50C8071A5A789E219D5EDC319094081 *handlers; // rax']
['$B50C8071A5A789E219D5EDC319094081 *handlers; // rax', '$B50C8071A5A789E219D5EDC319094081 *handlers; // rax']
['$B50C8071A5A789E219D5EDC319094081 *handlers; // rax', '$B50C8071A5A789E219D5EDC319094081 *handlers; // rax']
['$B50C8071A5A789E219D5EDC319094081 *handlers; // rax', '$B50C8071A5A789E219D5EDC319094081 *handlers; // rax']
['$B50C8071A5A789E219D5EDC319094081 *handlers; // rax', '$B50C8071A5A789E219D5EDC319094081 *handlers; // rax']
['$B50C8071A5A789E219D5EDC319094081 *handlers; // rax', '$B50C8071A5A789E219D5EDC319094081 *handlers; // rax']
['$B50C8071A5A789E219D5EDC319094081 *handlers; // rax', '$B50C8071A5A789E219D5EDC319094081 *handlers; // rax']
['$B50C8071A5A789E219D5EDC319094081 *handlers; // rax', '$B50C8071A5A789E219D5EDC319094081 *handlers; // rax']
['$B50C8071A5A789E219D5EDC319094081 *handlers; // rax', '$B50C8071A5A789E219D5EDC319094081 *handlers; // rax']
['rtx v19; // rax']
['v19 = canon_rtx( rtx);']
['v16 = v9;', 'v16 = v9;', 'v5 = v10;', 'v5 = v10;', 'v15 = v14;', 'v15 = v14;', 'v6 = v10;', 'v10 = v7;', 'v10 = v7;', 'v10 = v7;', 'v10 = v7;', 'v9 = v10;', 'v10 = v5;', 'v10 = v5;', 'v10 = v5;', 'v10 = v5;', 'v7 = v11;']
['if ( ( *( ( _BYTE *)v19 + 3) & 4) == 0 )']
['v20.rtwint = ( __int64)v19->fld[0];']
['if ( *( _OWORD *)&scale.base == 0LL )']
['*( _QWORD *)&v14[1] = rtx;', '*( _QWORD *)&src->end[4] = v15;', '*( _QWORD *)&v10[1] = v8;', '*( _QWORD *)&v10[1] = v11;', '*( _QWORD *)&v11[1] = v10;']
['*( _QWORD *)&src->end[4] = v15;']
['reg_class ( *v16)[25]; // rdx', 'reg_class ( *v19)[25]; // rbx']
['reg_class ( *v16)[25]; // rdx', 'reg_class ( *v19)[25]; // rbx']
['reg_class ( *v67)[25]; // r14']
['reg_class ( *v16)[25]; // rdx', 'reg_class ( *v57)[25]; // rdx', 'reg_class ( *v60)[25]; // rdx']
['reg_class ( *v16)[25]; // rdx', 'reg_class ( *v57)[25]; // rdx', 'reg_class ( *v60)[25]; // rdx']
['reg_class ( *v84)[25]; // [rsp+30h] [rbp-98h]']
['v16 = real_in;', 'v28 = reg_dead_regno;']
['v11 = v26;', 'v15 = v14;', 'v15 = v14;', 'v9 = v10;', 'v11 = v6;', 'v11 = v6;']
['v11 = v26;', 'v15 = v14;', 'v15 = v14;', 'v9 = v10;', 'v11 = v6;', 'v11 = v6;']
['if ( v67 >= 0 && ( v27 = recog_data_0.operand[v21], *( _WORD *)v27 == 61) )']
['*( _QWORD *)&v10[1] = v8;']
['v1 = gen_rtx_REG( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), 58);']
['v2 = gen_rtx_fmt_ee( PLUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v1, v0);']
['v3 = gen_rtx_MEM( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v2);']
['v31 = gen_rtx_MEM( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v30);', 'v3 = gen_rtx_MEM( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v2);', 'v3 = gen_rtx_MEM( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v3);', 'v37 = gen_rtx_MEM( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v36);', 'v31 = gen_rtx_MEM( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v30);', 'v31 = gen_rtx_MEM( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v30);']
['v5 = gen_rtx_fmt_s( SYMBOL_REF, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), off_6E782A);', 'v5 = gen_rtx_fmt_s( SYMBOL_REF, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), off_6E782A);']
['v5 = gen_rtx_fmt_s( SYMBOL_REF, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), off_6E782A);', 'v5 = gen_rtx_fmt_s( SYMBOL_REF, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), off_6E782A);']
['v7 = gen_rtx_MEM( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v6);']
['v29 = gen_rtx_REG( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v5);']
['v8 = gen_rtx_REG( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), 6);', 'v9 = gen_rtx_REG( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), i);']
['v3 = gen_rtx_fmt_ee( PLUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v2, v1);', 'v3 = gen_rtx_fmt_ee( PLUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v2, v1);', 'v4 = gen_rtx_fmt_ee( PLUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v3, v2);', 'v5 = gen_rtx_fmt_ee( PLUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v4, v1);', 'v2 = gen_rtx_fmt_ee( PLUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v1, v0);', 'v9 = gen_rtx_fmt_ee( PLUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v8, v7);']
['while ( v2 != ( _WORD *)&unk_963802 );', 'while ( v3 != ( _WORD *)&unk_963802 );']
['ident_hash->alloc_node = alloc_node_0;']
['v16 = ( const char *)&off_6E0C7E;']
['v8 = ( const char *)&unk_6F613E;']
['v2 = rtx_alloc( ( rtx_code)*( _WORD *)notes);']
['v3 = lang_hooks_0.expand_constant( value);']
['if ( ( mode_class_0[v4] & 0xFFFFFFFB) != 2 )']
['if ( ( mode_class_0[v4] & 0xFFFFFFFB) != 2 )']
['v17 = ( tree_node *)*( &global_trees + 12);', 'v17 = ( tree_node *)*( &global_trees + 11);']
['if ( ( tree_node *)*( &global_trees + 14) != v7 )']
['v3 = lang_hooks_0.expand_constant( value);']
['v17 = ( tree_node *)*( &global_trees + 12);', 'v17 = ( tree_node *)*( &global_trees + 11);']
['if ( ( tree_node *)*( &global_trees + 14) != v7 )']
['$A887AD9C3C6C8CC7716950D571F57C9D *p_int_cst; // rax', '$A887AD9C3C6C8CC7716950D571F57C9D *p_int_cst; // rax', '$A887AD9C3C6C8CC7716950D571F57C9D *p_int_cst; // rax', '$A887AD9C3C6C8CC7716950D571F57C9D *p_int_cst; // rax', '$A887AD9C3C6C8CC7716950D571F57C9D *p_int_cst; // rax', '$A887AD9C3C6C8CC7716950D571F57C9D *p_int_cst; // rax']
['$A887AD9C3C6C8CC7716950D571F57C9D *p_int_cst; // rax', '$A887AD9C3C6C8CC7716950D571F57C9D *p_int_cst; // rax', '$A887AD9C3C6C8CC7716950D571F57C9D *p_int_cst; // rax', '$A887AD9C3C6C8CC7716950D571F57C9D *p_int_cst; // rax', '$A887AD9C3C6C8CC7716950D571F57C9D *p_int_cst; // rax', '$A887AD9C3C6C8CC7716950D571F57C9D *p_int_cst; // rax']
['if ( lang_hooks_0.tree_inlining.disregard_inline_limits( v16) )', 'v5 = lang_hooks_0.tree_inlining.disregard_inline_limits( v4);']
['if ( lang_hooks_0.tree_inlining.disregard_inline_limits( v16) )']
['v5 = lang_hooks_0.tree_inlining.disregard_inline_limits( v4);']
['v2 = lang_hooks_0.tree_inlining.cannot_inline_tree_fn( &fnp);']
['p_int_cst = &inlined_fns->int_cst.int_cst;']
['while ( p_int_cst->low != fns->data.l[0] )']
['p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);']
['p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);']
['p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);']
['if ( ( unsigned int)( mode_class_0[*( ( unsigned __int8 *)rtx + 2)] - 5) <= 1 )', 'if ( mode_class_0[*( ( unsigned __int8 *)rtx + 2)] == MODE_CC )']
['v31 = ( ( unsigned int)( mode_class_0[v29] - 5) < 2) + 1;', 'v33 = ( ( unsigned int)( mode_class_0[v31] - 5) < 2) + 1;']
['qty_0[v4].death = output_p + 2 * this_insn_number;']
['last_insn = get_last_insn( );', 'last_insn = get_last_insn( );', 'last_insn = get_last_insn( );', 'v5->spelling = spelling_0;']
['v14 = ( unsigned int)( mode_class_0[mode] - 5) <= 1;', 'v16 = ( unsigned int)( mode_class_0[mode] - 5) <= 1;', 'v10 = ( unsigned int)( mode_class_0[mode] - 5) <= 1;']
['reg_pref_0 = reg_pref_buffer;', 'reg_pref_0 = reg_pref_buffer;']
['v27 = *( ( _DWORD *)uid_cuid_0 + v26[1]);']
['if ( v27 <= cse_basic_block_end && *( ( _DWORD *)uid_cuid_0 + *v26) >= cse_basic_block_start']
['|| v27 <= *( ( _DWORD *)uid_cuid_0 + *( int *)( reg_n_info->data.l[first_reg] + 4)) )']
['fatal_insn_not_found( insn, "insn-attrtab.c", 29, "insn_current_length");']
['fatal_insn_not_found( insn, "insn-attrtab.c", 356, "insn_default_length");']
['if ( register_operand( recog_data_0.operand[0], VOIDmode) )', 'if ( register_operand( recog_data_0.operand[0], VOIDmode) )', 'if ( register_operand( recog_data_0.operand[0], VOIDmode) )']
['if ( register_operand( recog_data_0.operand[0], VOIDmode) )', 'if ( register_operand( recog_data_0.operand[0], VOIDmode) )', 'if ( register_operand( recog_data_0.operand[0], VOIDmode) )']
['if ( register_operand( recog_data_0.operand[0], VOIDmode) )', 'if ( register_operand( recog_data_0.operand[0], VOIDmode) )', 'if ( register_operand( recog_data_0.operand[0], VOIDmode) )']
['rtx v37; // rdi', 'rtx *v23; // rax', 'rtx v13; // rdx', 'rtx *v59; // rax', 'rtx v55; // rdx', 'rtx v59; // rdx', 'rtx v37; // rax', 'rtx *v50; // rcx', 'rtx *v30; // rax', 'rtx *v31; // rax', 'rtx v53; // rbx', 'rtx v57; // rax', 'rtx v32; // rdx', 'rtx *v7; // rdi', 'rtx v37; // rax', 'rtx v37; // rax', 'rtx v57; // rax', 'rtx v37; // rax', 'rtx v53; // rax', 'rtx v7; // rdx', 'rtx v57; // rax', 'rtx *v57; // r15', 'rtx v34; // rdx']
['rtx *v50; // rcx']
['rtx v55; // rdx']
['rtx *v50; // rcx']
['rtx v55; // rdx']
['rtx *v50; // rcx']
['rtx *v50; // rcx']
['rtx *v50; // rcx']
['rtx v59; // rdx']
['rtx *v23; // rax', 'rtx v73; // rax', 'rtx v13; // rdx', 'rtx *v59; // rax', 'rtx v55; // rdx', 'rtx v59; // rdx', 'rtx *v50; // rcx', 'rtx *v71; // rax', 'rtx *v76; // rax', 'rtx v53; // rbx', 'rtx v57; // rax', 'rtx v123; // rdx', 'rtx *v7; // rdi', 'rtx v57; // rax', 'rtx v53; // rax', 'rtx v7; // rdx', 'rtx v57; // rax', 'rtx *v57; // r15', 'rtx v71; // rdx', 'rtx v76; // rdx', 'rtx *v70; // rax']
['rtx *v59; // rax', 'rtx *v50; // rcx']
['rtx v8; // rax', 'rtx v5; // rax', 'rtx v18; // rax', 'rtx v38; // rax', 'rtx v28; // rax', 'rtx v161; // rax', 'rtx v21; // rax', 'rtx v38; // rax', 'rtx v41; // rax', 'rtx v28; // rax', 'rtx v5; // rax', 'rtx v28; // rax', 'rtx v85; // rax', 'rtx v83; // rax', 'rtx v84; // rax', 'rtx v87; // rax', 'rtx v57; // rax', 'rtx v58; // rbx', 'rtx v82; // rax', 'rtx v38; // rax', 'rtx v50; // rax', 'rtx v31; // rax', 'rtx v11; // rax', 'rtx v86; // rax', 'rtx v38; // rax', 'rtx v31; // rax', 'rtx v57; // rax', 'rtx v38; // rax', 'rtx v31; // rax', 'rtx v55; // rax', 'rtx v58; // rbx', 'rtx v68; // rax', 'rtx v53; // rax', 'rtx v11; // rax', 'rtx v48; // rax', 'rtx v50; // rax', 'rtx v57; // rax', 'rtx v5; // rax', 'rtx v86; // rax', 'rtx v55; // rax', 'rtx v186; // rax', 'rtx v11; // rax']
['rtx v54; // rsi']
['rtx *v50; // rcx']
['rtx *v59; // rax', 'rtx v59; // rdx', 'rtx *v191; // rax']
['rtx v53; // rax']
['fatal_insn_not_found( insn, "insn-attrtab.c", 46, "insn_variable_length_p");']
['rtx v13; // r12', 'rtx v13; // rax', 'rtx v13; // rdi', 'rtx v13; // r12', 'rtx v13; // rdx', 'rtx v13; // rax', 'rtx v13; // r12', 'rtx v13; // rbx', 'rtx v13; // rax']
['rtx v14; // rdx', 'rtx v14; // rsi', 'rtx v14; // r12', 'rtx v14; // r13', 'rtx v14; // rax', 'rtx v14; // rdx', 'rtx v14; // rbx', 'rtx v14; // rbx', 'rtx v14; // r13', 'rtx v14; // r12']
['rtx v15; // rax', 'rtx v15; // rax', 'rtx v15; // rax']
['rtx s1; // [rsp+0h] [rbp-48h]']
['rtx s1; // [rsp+0h] [rbp-48h]']
['rtx s2; // [rsp+8h] [rbp-40h]']
['v10 = 0LL;', 'v10 = 0LL;', 'v12 = 0LL;', 'v10 = 0LL;']
['rtx addr[4]; // [rsp+0h] [rbp-20h] BYREF']
['addr[0] = rtx;']
['addr[0] = copy_rtx( rtx);']
['instantiate_virtual_regs_1( addr, 0LL, 0);', 'instantiate_virtual_regs_1( addr, 0LL, 0);']
['v28 = src_rega[0];']
['if ( !memory_address_p( v8, addr[0]) )']
['v28 = src_rega[0];']
['v28 = src_rega[0];']
['instantiate_virtual_regs_1( addr, 0LL, 0);', 'instantiate_virtual_regs_1( addr, 0LL, 0);']
['v28 = src_rega[0];']
['rtx *v7; // rdi']
['v7 = &v5->x_parm_reg_stack_loc[v6];']
['if ( *v7 )']
['instantiate_virtual_regs_1( v7, 0LL, 0);']
['rtx *fld; // rbp', 'rtx *fld; // rbp']
['rtx *v19; // rbp', 'rtx *v19; // rbp', 'rtx *v24; // rbp', 'rtx *v11; // rbp']
['rtx v20; // rax', 'rtx v20; // rax', 'rtx v20; // rdi', 'rtx v20; // rbx', 'rtx v20; // rax', 'rtx v26; // rdx', 'rtx v21; // rdx', 'rtx v20; // rax', 'rtx v10; // rdx']
['rtx v23; // rax']
['rtx v28; // r14', 'rtx v21; // r14', 'rtx v28; // r14', 'rtx v44; // r14']
['rtx v32; // rdx', 'rtx v31; // rax', 'rtx v31; // rbx', 'rtx v31; // rax', 'rtx v21; // rdx', 'rtx v31; // rax', 'rtx v11; // rdx', 'rtx v71; // rdx', 'rtx v34; // rdx']
['rtx v46; // rax']
['rtx old; // [rsp+8h] [rbp-50h]']
['rtx src; // [rsp+10h] [rbp-48h] BYREF']
['v23 = to;', 'end = v9;', 'end = 0LL;', 'v9 = src;']
['if ( *( _OWORD *)&c->block.vars >= *( _OWORD *)&initial->block.vars )', 'if ( *( _OWORD *)&c->block.vars >= *( _OWORD *)&initial->block.vars )', 'if ( *( _OWORD *)&c->block.vars >= *( _OWORD *)&initial->block.vars )', 'if ( *( _OWORD *)&c->block.vars >= *( _OWORD *)&initial->block.vars )']
['if ( *( _OWORD *)&c->block.vars >= *( _OWORD *)&initial->block.vars )', 'if ( *( _OWORD *)&c->block.vars >= *( _OWORD *)&initial->block.vars )', 'if ( *( _OWORD *)&c->block.vars >= *( _OWORD *)&initial->block.vars )', 'if ( *( _OWORD *)&c->block.vars >= *( _OWORD *)&initial->block.vars )']
['if ( *( _OWORD *)&c->block.vars >= *( _OWORD *)&initial->block.vars )', 'if ( *( _OWORD *)&c->block.vars >= *( _OWORD *)&initial->block.vars )', 'if ( *( _OWORD *)&c->block.vars >= *( _OWORD *)&initial->block.vars )', 'if ( *( _OWORD *)&c->block.vars >= *( _OWORD *)&initial->block.vars )']
['if ( *( _OWORD *)&c->block.vars >= *( _OWORD *)&initial->block.vars )', 'if ( *( _OWORD *)&c->block.vars >= *( _OWORD *)&initial->block.vars )', 'if ( *( _OWORD *)&c->block.vars >= *( _OWORD *)&initial->block.vars )', 'if ( *( _OWORD *)&c->block.vars >= *( _OWORD *)&initial->block.vars )']
['if ( search_ofs_1 + v12 > 52 )']
['v2 = *( _OWORD *)&scale.base;']
['v3 = ( tree_node *)ggc_alloc( v2);', 'v3 = ( tree_node *)ggc_alloc( v2);']
['rtx v10; // rax', 'rtx v16; // rax', 'rtx v13; // rax', 'rtx v92; // rax', 'rtx v10; // rax', 'rtx v18; // rax', 'rtx v42; // rax', 'rtx v22; // rax', 'rtx v42; // rax', 'rtx v13; // rax', 'rtx v10; // rax', 'rtx v42; // rax', 'rtx v14; // rax', 'rtx v82; // rax', 'rtx v15; // rax', 'rtx v22; // rax', 'rtx v12; // rdx', 'rtx v19; // rax', 'rtx v11; // rax', 'rtx v42; // rax', 'rtx v16; // rax', 'rtx v17; // rax', 'rtx v13; // rax', 'rtx v42; // rax', 'rtx v10; // rax', 'rtx v10; // rax', 'rtx v10; // rax', 'rtx v11; // rax', 'rtx v15; // rax', 'rtx v17; // rax', 'rtx v10; // rax', 'rtx v17; // rax', 'rtx v15; // rax', 'rtx v17; // rax', 'rtx v11; // rax']
['v9 = canon_hash( x, ( machine_mode)*( ( unsigned __int8 *)x + 2)) & 0x1F;']
['v29 = ( ( unsigned int)( mode_class_0[v22] - 5) < 2) + 1;']
['v13 = ( ( unsigned int)( mode_class_0[v11] - 5) < 2) + 1;', 'v18 = ( ( unsigned int)( mode_class_0[v4] - 5) < 2) + 1;', 'v34 = ( ( unsigned int)( mode_class_0[v26] - 5) < 2) + 1;', 'v15 = ( ( unsigned int)( mode_class_0[v11] - 5) < 2) + 1;', 'v33 = ( ( unsigned int)( mode_class_0[v31] - 5) < 2) + 1;']
['v19 = canon_rtx( rtx);']
['v15 = v14;', 'v15 = v14;']
['( machine_mode)*( ( unsigned __int8 *)v12 + 2),']
['v15 = ( ( unsigned int)( mode_class_0[v11] - 5) < 2) + 1;']
['invalidate( *( rtx *)( v7.rtwint + 8), ( machine_mode)*( unsigned __int8 *)( v7.rtwint + 2));', 'invalidate( *( rtx *)( v2.rtwint + 8), ( machine_mode)*( unsigned __int8 *)( v2.rtwint + 2));']
['invalidate( v6->fld[0].rtx, ( machine_mode)*( ( unsigned __int8 *)v6 + 2));']
['v11 = gen_rtx( ( rtx_code)*( _WORD *)v6, ( machine_mode)*( ( unsigned __int8 *)v6 + 2), v4, v10);', 'v11 = gen_rtx( ( rtx_code)*( _WORD *)v6, ( machine_mode)*( ( unsigned __int8 *)v6 + 2), v4, v10);', 'v8 = gen_rtx( ( rtx_code)*( _WORD *)v3, ( machine_mode)*( ( unsigned __int8 *)v3 + 2), v7, v4);', 'v8 = gen_rtx( ( rtx_code)*( _WORD *)v3, ( machine_mode)*( ( unsigned __int8 *)v3 + 2), v7, v4);']
['v11 = gen_rtx_fmt_ee( PLUS, ( machine_mode)*( ( unsigned __int8 *)v3 + 2), v10, v9),']
['return build1( ( tree_code)*( ( unsigned __int8 *)&arg->block.common + 16), type, v27);']
['v11 = *( tree_node **)( elements->int_cst.int_cst.high + 40);']
['*( _OWORD *)&v2.r[1] = *( _OWORD *)&exp->block.subblocks;', '*( _OWORD *)&v2.r[1] = *( _OWORD *)&exp->block.subblocks;']
['output_asm_insn( v33, &v38);']
['LODWORD( v1) = recog_data_0.n_operands - 1;']
['v2 = recog_data_0.operand[v1];']
['LODWORD( v3) = recog_data_0.n_operands - 1;']
['v2 = recog_data_0.operand[v1];', 'v7 = recog_data_0.operand[v4];', 'v9 = recog_data_0.operand[v6];']
['fancy_abort( ( const char *)&stru_665A39, 9933, "ix86_attr_length_immediate_default");']
['v9 = size_11;', 'y1 = ( rtx)v11[1];', 'v14 = &qty_0[v11];', 'v4 = ( rtx)v4[1];', 'v20 = &align_tab[15];']
['if ( mode_class_0[*( ( unsigned __int8 *)op0 + 2)] == MODE_FLOAT )']
['rtx v46; // rsi', 'rtx v66; // rsi', 'rtx v60; // rsi', 'rtx v76; // rsi']
['rtx v13; // rdi', 'rtx v14; // rsi', 'rtx v18; // rsi', 'rtx v43; // rsi']
['rtx v14; // rdx', 'rtx v18; // rax', 'rtx v13; // rdx', 'rtx v12; // rdx', 'rtx v14; // rdx', 'rtx v16; // rdx', 'rtx v48; // rdx', 'rtx v19; // rdx', 'rtx v11; // rdx', 'rtx v10; // rdx']
['rtx v25; // rsi', 'rtx v28; // rsi', 'rtx v20; // rdi', 'rtx v40; // rsi', 'rtx v22; // rsi', 'rtx v60; // rsi']
['rtx v22; // rsi', 'rtx v34; // rsi', 'rtx v39; // rsi']
['rtx v34; // rsi', 'rtx v39; // rsi', 'rtx v43; // rsi']
['rtx v34; // rdx']
['rtx v46; // rsi', 'rtx v34; // rsi', 'rtx v39; // rsi', 'rtx v66; // rsi', 'rtx v76; // rsi']
['rtx v37; // rdi', 'rtx v34; // rsi', 'rtx v39; // rsi', 'rtx v47; // rsi']
['v7 = gen_rtx_MEM( ( machine_mode)v6, pointer);']
['v8 = adjust_address_1( v7, ( machine_mode)v6, offset, 1, 1);']
['v9 = gen_rtx_REG( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), i);']
['v4 = gen_rtx_REG( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), i);', 'v4 = gen_rtx_REG( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), i);']
['v6 = gen_rtx_MEM( ( machine_mode)v5, pointer);']
['v7 = adjust_address_1( v6, ( machine_mode)v5, offset, 1, 1);']
['if ( mode_class_0[*( ( unsigned __int8 *)v3 + 2)] == MODE_FLOAT )']
['v0 = gen_rtx_REG( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), 2);', 'v17 = gen_rtx_REG( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), 2);', 'v11 = gen_rtx_REG( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), 2);']
['v28 = gen_rtx_fmt_ee( MULT, ( machine_mode)v34, v27, v26);']
['v22 = gen_rtx_MEM( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), global_rtl[4]);']
['v10 = gen_rtx_fmt_ee( PLUS, ( machine_mode)v3, y, x);', 'v24 = gen_rtx_fmt_ee( MULT, ( machine_mode)v34, v23, v22);', 'v28 = gen_rtx_fmt_ee( MULT, ( machine_mode)v34, v27, v26);']
['*operands = force_reg( ( machine_mode)*( ( unsigned __int8 *)*operands + 2), *operands);', '*operands = force_reg( ( machine_mode)*( ( unsigned __int8 *)*operands + 2), *operands);']
['v4 = force_reg( ( machine_mode)*( ( unsigned __int8 *)*operands + 2), v4);', 'v4 = force_reg( ( machine_mode)*( ( unsigned __int8 *)*operands + 2), v4);']
['*operands = force_reg( ( machine_mode)*( ( unsigned __int8 *)*operands + 2), *operands);', '*operands = force_reg( ( machine_mode)*( ( unsigned __int8 *)*operands + 2), *operands);']
['v4 = force_reg( ( machine_mode)*( ( unsigned __int8 *)*operands + 2), v4);', 'v4 = force_reg( ( machine_mode)*( ( unsigned __int8 *)*operands + 2), v4);']
['v2 = reverse_condition_maybe_unordered( ( rtx_code)*( _WORD *)v1);', 'v2 = reverse_condition_maybe_unordered( ( rtx_code)*( _WORD *)v1);', 'v2 = reverse_condition_maybe_unordered( ( rtx_code)*( _WORD *)v1);']
['v31 = gen_reg_rtx( ( machine_mode)*( ( unsigned __int8 *)*operands + 2));', 'v32 = gen_reg_rtx( ( machine_mode)*( ( unsigned __int8 *)*operands + 2));']
['v31 = gen_reg_rtx( ( machine_mode)*( ( unsigned __int8 *)*operands + 2));', 'v32 = gen_reg_rtx( ( machine_mode)*( ( unsigned __int8 *)*operands + 2));']
['v8 = gen_rtx_fmt_eee( IF_THEN_ELSE, ( machine_mode)*( ( unsigned __int8 *)*operands + 2), v6, operands[2], operands[3]);']
['( machine_mode)*( ( unsigned __int8 *)*operands + 2),', '( machine_mode)*( ( unsigned __int8 *)*operands + 2),']
['( machine_mode)*( ( unsigned __int8 *)*operands + 2),', '( machine_mode)*( ( unsigned __int8 *)*operands + 2),']
['if ( ( ( mode_class_0[mode] & 0xFFFFFFFB) == 2 || mode_class_0[mode] == MODE_VECTOR_FLOAT)', 'if ( ( ( mode_class_0[mode] & 0xFFFFFFFB) == 2 || mode_class_0[mode] == MODE_VECTOR_FLOAT)']
['if ( ( ( mode_class_0[mode] & 0xFFFFFFFB) == 2 || mode_class_0[mode] == MODE_VECTOR_FLOAT)', 'if ( ( ( mode_class_0[mode] & 0xFFFFFFFB) == 2 || mode_class_0[mode] == MODE_VECTOR_FLOAT)']
['if ( general_operand( v8->fld[0].rtx, ( machine_mode)v6) )']
['v4 = force_reg( ( machine_mode)v6, v4);', 'v5 = force_reg( ( machine_mode)v6, v5);']
['v5 = gen_reg_rtx( ( machine_mode)v6);', 'v9 = gen_reg_rtx( ( machine_mode)v8);']
['v4 = gen_rtx_MEM( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v3);', 'v4 = gen_rtx_REG( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), i);', 'v7 = gen_rtx_REG( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v4);', 'v4 = gen_rtx_REG( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), i);']
['v17 = gen_rtx_fmt_s( SYMBOL_REF, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), "_alloca");']
['v2 = reverse_condition_maybe_unordered( ( rtx_code)*( _WORD *)v1);', 'v2 = reverse_condition_maybe_unordered( ( rtx_code)*( _WORD *)v1);', 'v2 = reverse_condition_maybe_unordered( ( rtx_code)*( _WORD *)v1);']
['v39 = gen_rtx_fmt_ee( PLUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), global_rtl[2], v38);']
['v1 = gen_rtx_fmt_e( PRE_DEC, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), global_rtl[2]);']
['v1 = gen_rtx_fmt_e( PRE_DEC, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), global_rtl[2]);']
['v3 = gen_rtx_fmt_ee( PLUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), global_rtl[2], v2);', 'v3 = gen_rtx_fmt_ee( PLUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), global_rtl[2], v2);']
['( machine_mode)v6,', '( machine_mode)v7,']
['return gen_rtx_REG( ( machine_mode)( BYTE5( valtype->block.abstract_origin) >> 1), 0);']
['v5 = mode_class_0[v3];']
['return gen_rtx_REG( ( machine_mode)v3, v2);']
['v2 = mode_class_0[mode];']
['v3 = mode_class_0[mode];']
['v6 = ( rtx)op0[1];']
['v11 = ( ( unsigned int)( mode_class_0[mode] - 5) < 2) + 1;', 'v11 = ( ( unsigned int)( mode_class_0[mode] - 5) < 2) + 1;']
['v14 = &qty_0[v11];']
['v14 = &qty_0[v11];']
['if ( ( unsigned int)( mode_class_0[mode] - 5) <= 1 )', 'if ( ( unsigned int)( mode_class_0[mode] - 5) <= 1 )']
['( machine_mode)( BYTE5( type->block.abstract_origin) >> 1),', '( machine_mode)( BYTE5( type->block.abstract_origin) >> 1),']
['if ( ( unsigned int)( mode_class_0[( BYTE5( type->block.abstract_origin) >> 1) & 0x7F] - 7) <= 1']
['return ( unsigned int)( mode_class_0[( BYTE5( type->block.abstract_origin) >> 1) & 0x7F] - 7) > 1;']
['v8 = gen_rtx_MEM( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v7);', 'v8 = gen_rtx_MEM( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v7);', 'v13 = gen_rtx_MEM( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v12);']
['v29 = gen_rtx_REG( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v5);']
['v3 = gen_rtx_fmt_u00( LABEL_REF, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v2);']
['v4 = gen_reg_rtx( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4));', 'v23 = gen_reg_rtx( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4));']
['v23 = gen_reg_rtx( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4));']
['v23 = gen_rtx_fmt_ee( MULT, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v14, v22);']
['v37 = gen_reg_rtx( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4));', 'v12 = gen_reg_rtx( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4));', 'v3 = gen_reg_rtx( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4));']
['rtx v35; // r15']
['rtx v10; // r13', 'rtx v40; // r12', 'rtx v40; // r15']
['rtx i; // [rsp+0h] [rbp-58h]']
['rtx second; // [rsp+18h] [rbp-40h] BYREF']
['rtx bypass; // [rsp+10h] [rbp-48h] BYREF']
['v11 = ix86_expand_fp_compare( code, op1, op2, tmp, &second, &bypass);', 'v11 = ix86_expand_fp_compare( code, op1, op2, tmp, &second, &bypass);']
['v11 = ix86_expand_fp_compare( code, op1, op2, tmp, &second, &bypass);', 'v11 = ix86_expand_fp_compare( code, op1, op2, tmp, &second, &bypass);']
['v13 = bypass;', 'v13 = bypass;']
['if ( !bypass )', 'if ( !bypass )']
['v10 = start;', 'v10 = start;', 'v9 = ( rtx)rtx[1];', 'v28 = src_rega[0];', 'v30 = etens[0];', 'v9 = ( rtx)rtx[1];', 'v13 = pos_rtx;', 'v13 = pos_rtx;', 'v13 = pos_rtx;', 'v23 = &costs_0[n];', 'v6 = ( rtx)rtx[1];', '*v27 = align_tab[0];']
['v5 = v10;', 'v5 = v10;', 'v6 = v10;', 'v4 = v2;', 'v9 = v10;', 'v12 = v7;', 'v4 = v6;']
['v22 = gen_rtx_fmt_ee( SET, VOIDmode, *v19, nan);']
['if ( !bypass )', 'if ( !bypass )']
['rtx v25; // [rsp+0h] [rbp-38h] BYREF']
['rtx old; // [rsp+8h] [rbp-50h]']
['rtx v21; // [rsp+10h] [rbp-68h]', 'rtx set; // [rsp+10h] [rbp-48h]', 'rtx x; // [rsp+10h] [rbp-48h]']
['rtx note; // [rsp+10h] [rbp-40h] BYREF']
['rtx q; // [rsp+20h] [rbp-48h]']
['rtx v240; // [rsp+58h] [rbp-80h]']
['v5 = ix86_split_to_parts( operands[1], part[1], ( machine_mode)*( ( unsigned __int8 *)*operands + 2));', 'v5 = ix86_split_to_parts( operands[1], part[1], ( machine_mode)*( ( unsigned __int8 *)*operands + 2));']
['v5 = ix86_split_to_parts( operands[1], part[1], ( machine_mode)*( ( unsigned __int8 *)*operands + 2));', 'v5 = ix86_split_to_parts( operands[1], part[1], ( machine_mode)*( ( unsigned __int8 *)*operands + 2));']
['ix86_split_to_parts( *operands, part[0], ( machine_mode)*( ( unsigned __int8 *)*operands + 2));', 'ix86_split_to_parts( *operands, part[0], ( machine_mode)*( ( unsigned __int8 *)*operands + 2));']
['ix86_split_to_parts( *operands, part[0], ( machine_mode)*( ( unsigned __int8 *)*operands + 2));', 'ix86_split_to_parts( *operands, part[0], ( machine_mode)*( ( unsigned __int8 *)*operands + 2));']
['v23 = to;']
['if ( memory_address_p( ( machine_mode)*( ( unsigned __int8 *)v2 + 2), v2->fld[0].rtx) )']
['if ( memory_address_p( ( machine_mode)*( ( unsigned __int8 *)v2 + 2), v2->fld[0].rtx) )']
['rtx v16; // rax', 'rtx v16; // rax']
['rtx pool_constant_mark; // rax']
['rtx x; // [rsp+18h] [rbp-60h] BYREF']
['if ( !push_operand( operanda, VOIDmode) )']
['v11 = copy_rtx( rtx);']
['v11 = copy_rtx( rtx);']
['*( ( _BYTE *)v6 + 3) = *( ( _BYTE *)memref + 3) & 1 | v10 & 0xFE;']
['last = v13;', 'rtx = v6;', 'value_2 = v14;', 'rtx = v10;']
['last = v13;', 'rtx = v6;', 's1 = v26;', 'part[1][1],', 'rtx = v10;']
['*pnotes = v21;']
['v11 = ( rtx *)rtx + v8;', 'sprintf( p, &off_6376D2[1], v6);']
['rtx cond_op0a; // [rsp+10h] [rbp-68h]']
['rtx dest; // [rsp+18h] [rbp-58h]', 'rtx arg0; // [rsp+60h] [rbp-78h]', 'rtx arg0a; // [rsp+60h] [rbp-78h]', 'rtx orig; // [rsp+40h] [rbp-58h]', 'rtx arg1; // [rsp+0h] [rbp-48h]']
['v62 = construct_container( ( machine_mode)( BYTE5( type->block.abstract_origin) >> 1), type, 0, v13, v12, intreg_43, 0);', 'v62 = construct_container( ( machine_mode)( BYTE5( type->block.abstract_origin) >> 1), type, 0, v13, v12, intreg_43, 0);']
['v62 = construct_container( ( machine_mode)( BYTE5( type->block.abstract_origin) >> 1), type, 0, v13, v12, intreg_43, 0);', 'v62 = construct_container( ( machine_mode)( BYTE5( type->block.abstract_origin) >> 1), type, 0, v13, v12, intreg_43, 0);']
['v6 = gen_reg_rtx( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4));', 'v13 = gen_reg_rtx( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4));', 'v4 = gen_reg_rtx( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4));', 'v7 = gen_reg_rtx( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4));', 'v37 = gen_reg_rtx( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4));', 'v12 = gen_reg_rtx( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4));', 'v13 = gen_reg_rtx( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4));', 'v23 = gen_reg_rtx( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4));', 'v16 = gen_reg_rtx( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4));', 'v3 = gen_reg_rtx( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4));', 'v1 = gen_reg_rtx( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4));']
['examine_argument( ( machine_mode)( BYTE5( type->block.abstract_origin) >> 1), type, 0, &needed_intregs, needed_sseregs);']
['int_addr_rtx = gen_reg_rtx( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4));']
['int_addr_rtx = gen_reg_rtx( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4));']
['v33 = expand_expr( v32, int_addr_rtx, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), EXPAND_NORMAL);']
['size_5 = 116;', 'subst_insn = v4;', 'last = v13;', 'old_set = v8;', 'rtx = v6;', 'explained_1 = 1;', 'value_2 = v14;', '*pnotes = v21;', 'rtx = v10;', 'stack_0 = v2;']
['addr[0] = rtx;']
['tree v20; // rax']
['tree v20; // rax', 'tree v23; // rax', 'tree v24; // rax', 'tree v22; // rax', 'tree v23; // rax', 'tree v24; // rax', 'tree v25; // rax']
['tree v22; // rax']
['tree v23; // rax', 'tree v23; // rax']
['v8 = uid_cuid_1;', 'v23 = ( __int64)j[2];', 'v23 = edge_info_0;', 'v2 = test_insn_13;']
['v20 = build( MODIFY_EXPR, fpr->common.type, fpr, v19);', 'v20 = build( MODIFY_EXPR, fpr->common.type, fpr, v19);']
['v20 = build( MODIFY_EXPR, fpr->common.type, fpr, v19);', 'v20 = build( MODIFY_EXPR, fpr->common.type, fpr, v19);', 'v9 = build( MODIFY_EXPR, valist->common.type, valist, tree);']
['*( ( _BYTE *)&v9->block.common + 17) |= 1u;']
['expand_expr( v9, const_int_rtx[64], VOIDmode, EXPAND_NORMAL);']
['v14 = make_tree( v10, mult);']
['v20 = build( MODIFY_EXPR, fpr->common.type, fpr, v19);', 'v20 = build( MODIFY_EXPR, fpr->common.type, fpr, v19);']
['return force_reg( ( machine_mode)*( ( unsigned __int8 *)x + 2), x);', 'return force_reg( ( machine_mode)*( ( unsigned __int8 *)x + 2), x);']
['v5 = gen_reg_rtx( ( machine_mode)v6);']
['( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),']
['( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2),']
['if ( ( unsigned int)( mode_class_0[v92] - 5) > 1 )', 'if ( ( unsigned int)( mode_class_0[v10] - 5) > 1 )']
['if ( ( unsigned int)( mode_class_0[mode] - 5) <= 1 )', 'if ( ( unsigned int)( mode_class_0[mode] - 5) <= 1 )']
['&& ( mode_class_0[*( ( unsigned __int8 *)x + 2)] & 0xFFFFFFFB) != 2']
['&& mode_class_0[*( ( unsigned __int8 *)x + 2)] != MODE_VECTOR_FLOAT']
['&& ( mode_class_0[*( ( unsigned __int8 *)val + 2)] & 0xFFFFFFFB) != 2']
['&& mode_class_0[*( ( unsigned __int8 *)val + 2)] != MODE_VECTOR_FLOAT )']
['( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2),']
['( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2));', '( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2));']
['if ( comparison_dominates_p( v5, ( rtx_code)v6) )']
['v21 = simplify_subreg( ( machine_mode)*( ( unsigned __int8 *)v4 + 2), v19, ( machine_mode)v18, *( _DWORD *)&v4[1]);', 'v21 = simplify_subreg( ( machine_mode)*( ( unsigned __int8 *)v4 + 2), v19, ( machine_mode)v18, *( _DWORD *)&v4[1]);']
['v21 = simplify_subreg( ( machine_mode)*( ( unsigned __int8 *)v4 + 2), v19, ( machine_mode)v18, *( _DWORD *)&v4[1]);', 'v21 = simplify_subreg( ( machine_mode)*( ( unsigned __int8 *)v4 + 2), v19, ( machine_mode)v18, *( _DWORD *)&v4[1]);']
['v26 = simplify_unary_operation( ZERO_EXTEND, ( machine_mode)*( ( unsigned __int8 *)v4 + 2), v25, ( machine_mode)v24);', 'v26 = simplify_unary_operation( ZERO_EXTEND, ( machine_mode)*( ( unsigned __int8 *)v4 + 2), v25, ( machine_mode)v24);']
['if ( mode_class_0[v2] == MODE_INT )', 'if ( mode_class_0[v8] != MODE_INT )']
['rtx v19; // rax']
['rtx v26; // rax', 'rtx v26; // rax', 'rtx v26; // rax', 'rtx v26; // rax']
['rtx v44; // rax']
['v20 = force_reg( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), x->fld[0].rtx);']
['v3 = gen_rtx_fmt_ee( MULT, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v20, v19);']
['v24 = force_reg( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), *( rtx *)( v3->fld[0].rtwint + 8));']
['( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),']
['v28 = force_reg( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), *( rtx *)( *( _QWORD *)&v3[1] + 8LL));']
['v17 = gen_rtx_fmt_ee( MULT, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v13, v16);', 'v23 = gen_rtx_fmt_ee( MULT, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v14, v22);']
['rtx v12; // r12', 'rtx v12; // r12', 'rtx v12; // r12']
['rtx v21; // rax']
['rtx *v30; // rax']
['rtx v36; // rax', 'rtx v36; // rax', 'rtx v36; // rax', 'rtx v36; // rax']
['|| ( v7 = operands[1], !symbolic_operand( v7, ( machine_mode)v5)) )']
['v29 = gen_rtx_fmt_Ei( UNSPEC, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v28, 15);']
['v30 = gen_rtx_fmt_e( CONST, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v29);']
['v31 = gen_rtx_MEM( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v30);', 'v31 = gen_rtx_MEM( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v30);', 'v31 = gen_rtx_MEM( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v30);']
['v31 = gen_rtx_MEM( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v30);', 'v31 = gen_rtx_MEM( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v30);', 'v31 = gen_rtx_MEM( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v30);']
['v24 = setreg;']
['*( ( _BYTE *)v31 + 3) |= 4u;']
['v11 = v26;', 'v23 = to;', 'v14 = v25;', 's2 = v24;', 'v4 = v2;', 'v7 = v11;']
['set_31 = new_alias_set( );']
['v24 = setreg;']
['v3 = gen_reg_rtx( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4));']
['v23 = ( tree_node *)*( &global_trees + 12);', 'v24 = ( tree_node *)*( &global_trees + 17);']
['if ( ( sch_istable[*( unsigned __int8 *)v3] & 4) != 0 )']
['v10 = sch_istable[( unsigned __int8)v8];']
['v15 = hex_value[( unsigned __int8)*i];']
['v15 = hex_value[( unsigned __int8)*i];']
['v5 = NOT_FLOAT;', 'v5 = NOT_FLOAT;']
['rtx insns; // rbx']
['rtx rtwint; // rax']
['v17 = gen_rtx_REG( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), 2);', 'v11 = gen_rtx_REG( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), 2);']
['diddle_return_value( mark_reg_0, global_live_at_start);']
['*( _QWORD *)object_base = *v5;']
['*( _QWORD *)&v14[1] = rtx;', '*( _QWORD *)&v10[1] = v8;', '*( _QWORD *)&v10[1] = v11;', '*( _QWORD *)&v11[1] = v10;']
['*( _QWORD *)&v14[1] = rtx;', '*( _QWORD *)&src->end[4] = v15;', '*( _QWORD *)&v10[1] = v8;', '*( _QWORD *)&v10[1] = v11;', '*( _QWORD *)&v11[1] = v10;']
['insns = get_insns( );', 'insns = get_insns( );']
['rtx = insns;']
['rtx = insns;']
['if ( insns )']
['v12 = *( _WORD *)v13;']
['v12.rtwint = ( __int64)insns[1].fld[0];', 'v24.rtwint = ( __int64)tailp[1].fld[0];']
['sprintf( label, "*.%s%u", ( const char *)&a.dw_attr_val, v13);', 'sprintf( label, "*.%s%u", ( const char *)&a.dw_attr_val, v6);']
['v2 = gen_rtx_fmt_s( SYMBOL_REF, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), pic_label_name);']
['fancy_abort( ( const char *)&a, 7976, "loc_descriptor");']
['return mem_loc_descriptor( rtl->fld[0].rtx, ( machine_mode)*( ( unsigned __int8 *)rtl + 2));']
['fancy_abort( ( const char *)&a, 8292, "loc_descriptor_from_tree");']
['rtx v19; // rax']
['rtx v34; // rax', 'rtx v34; // rax']
['rtx init_insns; // rax']
['rtx v16; // rax', 'rtx v13; // rax', 'rtx v36; // rax', 'rtx v36; // rax', 'rtx v13; // rax', 'rtx v36; // rax', 'rtx v16; // rax', 'rtx v13; // rax', 'rtx v36; // rax', 'rtx v116; // rax', 'rtx v186; // rax']
['rtx v134; // rbx', 'rtx v13; // rbx']
['rtx v145; // rax']
['rtx v16; // rbx', 'rtx v5; // rbp', 'rtx v16; // rbx', 'rtx v17; // rbp', 'rtx v16; // rbx', 'rtx v53; // rbp', 'rtx v127; // rbp', 'rtx v58; // rbp', 'rtx v59; // rbp', 'rtx v107; // rbp', 'rtx v120; // rbp']
['rtx hard_reg_initial_reg; // rax']
['rtx v5; // rax', 'rtx v5; // rax', 'rtx v5; // rax']
['v9 = insns;']
['rtwint = v14->fld[0].rtwint;']
['v12 = *( _WORD *)v13;', 'v10 = *( _DWORD *)v9;']
['v4 = v4[1].fld[0].rtx;', 'v4 = v4[1].fld[0].rtx;', 'v9 = v9[1].fld[0].rtx;', 'v9 = v9[1].fld[0].rtx;', 'v9 = v9[1].fld[0].rtx;', 'v9 = v9[1].fld[0].rtx;', 'v6 = v6[1].fld[0].rtx;', 'v6 = v6[1].fld[0].rtx;', 'v6 = v6[1].fld[0].rtx;', 'v6 = v6[1].fld[0].rtx;']
['v4 = v4[1].fld[0].rtx;', 'v4 = v4[1].fld[0].rtx;', 'v9 = v9[1].fld[0].rtx;', 'v9 = v9[1].fld[0].rtx;', 'v9 = v9[1].fld[0].rtx;', 'v9 = v9[1].fld[0].rtx;', 'v6 = v6[1].fld[0].rtx;', 'v6 = v6[1].fld[0].rtx;', 'v6 = v6[1].fld[0].rtx;', 'v6 = v6[1].fld[0].rtx;']
['if ( !v5 )']
['if ( rtx == scan_start || !rtx )']
['rtx v43; // rax']
['rtx v44; // r12', 'rtx v44; // r12']
['rtx v46; // rax']
['rtx *v59; // rax']
['rtx increment; // [rsp+10h] [rbp-58h]']
['induction_1 *v; // [rsp+8h] [rbp-70h]', 'induction_1 *v; // [rsp+8h] [rbp-70h]']
['induction_1 *v; // [rsp+8h] [rbp-70h]', 'induction_1 *v; // [rsp+8h] [rbp-70h]']
['if ( mode_class_0[v4] != MODE_INT )', 'if ( mode_class_0[v8] != MODE_INT )']
['v6 = expand_mult_add( b, reg, m, a, ( machine_mode)*( ( unsigned __int8 *)reg + 2), 1);']
['v6 = expand_mult_add( b, reg, m, a, ( machine_mode)*( ( unsigned __int8 *)reg + 2), 1);']
['v6 = expand_mult_add( b, reg, m, a, ( machine_mode)*( ( unsigned __int8 *)reg + 2), 1);']
['rtx v5; // rbp']
['rtx v19; // rbx', 'rtx v10; // rbx', 'rtx v16; // rbx', 'rtx v16; // rbx', 'rtx v17; // rbp', 'rtx v47; // rbx', 'rtx v67; // rbx', 'rtx v16; // rbx', 'rtx v14; // rbx', 'rtx v13; // rbx', 'rtx v14; // rbx', 'rtx v17; // rax', 'rtx v17; // rax', 'rtx v11; // rbx', 'rtx v17; // rax', 'rtx v17; // rax', 'rtx v77; // rbx']
['rtx i; // rbx', 'rtx i; // rdi', 'rtx i; // rbx', 'rtx i; // rbx', 'rtx i; // rax']
['rtx *v20; // r15']
['rtx real_insn; // r15', 'rtx real_insn; // r12']
['rtx v20; // rax', 'rtx v27; // rax', 'rtx v26; // rax', 'rtx v26; // rax', 'rtx v20; // rax', 'rtx v25; // rax', 'rtx v28; // rax', 'rtx v21; // rax', 'rtx v22; // rax', 'rtx v25; // rax', 'rtx v27; // rax', 'rtx v25; // rax', 'rtx v28; // rax', 'rtx v9; // rax', 'rtx v26; // rax', 'rtx v28; // rax', 'rtx v39; // rax', 'rtx v79; // rax', 'rtx v25; // rax', 'rtx v22; // rax', 'rtx v26; // rax', 'rtx v25; // rax', 'rtx v19; // rax', 'rtx v20; // rax', 'rtx v23; // rax', 'rtx v24; // rax', 'rtx v25; // rax', 'rtx v25; // rax', 'rtx v39; // rax', 'rtx v20; // rax', 'rtx v9; // rax']
['rtx v50; // r12', 'rtx v50; // rax', 'rtx v50; // rax']
['rtx v13; // rdx', 'rtx v55; // rdx', 'rtx v59; // rdx', 'rtx v53; // rbx', 'rtx v53; // rax']
['v8 = gen_rtx_REG( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), i);', 'v15 = gen_rtx_REG( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), i);']
['return gen_rtx_fmt_e( ( rtx_code)v17, mode, x->fld[0].rtx);']
['( machine_mode)*( unsigned __int8 *)( ( *loc)->fld[0].rtwint + 2),']
['v61 = gen_rtx_MEM( ( machine_mode)*( unsigned __int8 *)( orig->fld[0].rtwint + 2), v60);']
['if ( !ix86_hard_regno_mode_ok( v10, ( machine_mode)( BYTE5( type->block.abstract_origin) >> 1)) )']
['v13 = gen_rtx_fmt_i0( REG, ( machine_mode)LOBYTE( decl->block.supercontext), v10);']
['if ( ( unsigned int)( mode_class_0[v92] - 5) > 1 )', 'if ( ( unsigned int)( mode_class_0[v10] - 5) > 1 )']
['v22 = gen_rtx_fmt_s( SYMBOL_REF, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), low);']
['v23 = gen_rtx_MEM( ( machine_mode)LOBYTE( decl->block.supercontext), v22);']
['rtx v14; // r12', 'rtx v14; // r13', 'rtx v14; // r13', 'rtx v14; // r12', 'rtx v10; // r14', 'rtx v44; // r14']
['rtx v20; // rax', 'rtx v20; // rax', 'rtx v20; // rax', 'rtx v20; // rax']
['rtx *v30; // rax']
['rtx v11; // rcx', 'rtx v41; // rax', 'rtx v43; // rcx']
['rtx result; // rax', 'rtx result; // rax', 'rtx result; // rax', 'rtx result; // rax', 'rtx result; // rax', 'rtx result; // rax', 'rtx result; // rax']
['result = adjust_address_1( v3, ( machine_mode)*( ( unsigned __int8 *)ad + 2), 0LL, 0, 1);', 'result = adjust_address_1( v3, ( machine_mode)*( ( unsigned __int8 *)ad + 2), 0LL, 0, 1);']
['result = adjust_address_1( v3, ( machine_mode)*( ( unsigned __int8 *)ad + 2), 0LL, 0, 1);', 'result = adjust_address_1( v3, ( machine_mode)*( ( unsigned __int8 *)ad + 2), 0LL, 0, 1);']
['if ( reg_equiv_memory_loc[regno] == result )']
['return copy_rtx( result);']
['return result;', 'return result;', 'return result;', 'return result;', 'return result;', 'return result;']
['v3 = ( tree_node *)ggc_alloc( v2);', 'v3 = ( tree_node *)ggc_alloc( v2);']
['abstract_origin = type_for_mode( ( machine_mode)( BYTE5( type->block.abstract_origin) >> 1), 1)->decl.abstract_origin;']
['tree v14; // r12']
['tree v15; // rax']
['tree v16; // r12']
['tree v17; // rax', 'tree v17; // rax']
['tree v19; // rax', 'tree v15; // rax', 'tree v17; // rax', 'tree v12; // rax', 'tree v17; // rax']
['tree v20; // rax']
['rtx v5; // rbp']
['rtx v6; // r12', 'rtx v6; // r12']
['rtx v9; // rbp']
['v5 = gen_rtx_fmt_E( SEQUENCE, VOIDmode, v4);']
['get_block_head_tail( v9, &v25, &tailp);', 'get_block_head_tail( v9, &v25, &tailp);']
['if ( *( _DWORD *)( *( _QWORD *)&x[2] + 88LL) != ++v28 )']
['v5 = reg_note;', 'v5 = reg_note;']
['v5 = reg_note;', 'v5 = reg_note;']
['if ( reg_note )', 'if ( reg_note )', 'if ( reg_note )', 'if ( reg_note )']
['if ( ( unsigned int)( mode_class_0[v92] - 5) > 1 )', 'if ( ( unsigned int)( mode_class_0[v10] - 5) > 1 )']
['if ( ( unsigned int)( mode_class_0[v6] - 5) <= 1 )']
['v5 = ( ( unsigned int)( mode_class_0[v2] - 5) < 2) + 1;']
['if ( ( unsigned int)( mode_class_0[mode] - 5) > 1 )']
['if ( ( unsigned int)( mode_class_0[v10] - 5) > 1 )']
['if ( ( unsigned int)( mode_class_0[v92] - 5) > 1 )', 'if ( ( unsigned int)( mode_class_0[v10] - 5) > 1 )']
['v17 = ( ( unsigned int)( mode_class_0[v15] - 5) < 2) + 1;']
['v7 = ( ( unsigned int)( mode_class_0[mode] - 5) < 2) + 1;', 'v7 = ( ( unsigned int)( mode_class_0[mode] - 5) < 2) + 1;', 'v9 = ( ( unsigned int)( mode_class_0[mode] - 5) < 2) + 1;', 'v5 = ( ( unsigned int)( mode_class_0[mode] - 5) < 2) + 1;', 'v7 = ( ( unsigned int)( mode_class_0[mode] - 5) < 2) + 1;', 'v9 = ( ( unsigned int)( mode_class_0[mode] - 5) < 2) + 1;', 'v5 = ( ( unsigned int)( mode_class_0[mode] - 5) < 2) + 1;', 'v6 = ( ( unsigned int)( mode_class_0[mode] - 5) < 2) + 1;', 'v5 = ( ( unsigned int)( mode_class_0[mode] - 5) < 2) + 1;']
['rtx q; // [rsp+20h] [rbp-48h]', 'rtx x; // [rsp+10h] [rbp-48h]']
['( machine_mode)*( ( unsigned __int8 *)v1 + 2),', '( machine_mode)*( ( unsigned __int8 *)v9 + 2),', '( machine_mode)*( ( unsigned __int8 *)v9 + 2),', '( machine_mode)*( ( unsigned __int8 *)v7 + 2),', '( machine_mode)*( ( unsigned __int8 *)v5 + 2),', '( machine_mode)*( unsigned __int8 *)( v5 + 2),', '( machine_mode)*( ( unsigned __int8 *)v5 + 2),', '( machine_mode)*( ( unsigned __int8 *)v7 + 2),', '( machine_mode)*( ( unsigned __int8 *)v4 + 2),', '( machine_mode)*( ( unsigned __int8 *)v4 + 2),', '( machine_mode)*( ( unsigned __int8 *)v5 + 2),', '( machine_mode)*( ( unsigned __int8 *)v4 + 2),']
['( machine_mode)*( ( unsigned __int8 *)v4 + 2));']
['v5 = ( ( unsigned int)( mode_class_0[v2] - 5) < 2) + 1;', 'v9 = ( ( unsigned int)( mode_class_0[v7] - 5) < 2) + 1;', 'v18 = ( ( unsigned int)( mode_class_0[v4] - 5) < 2) + 1;', 'v31 = ( ( unsigned int)( mode_class_0[v29] - 5) < 2) + 1;', 'v11 = ( ( unsigned int)( mode_class_0[v8] - 5) < 2) + 1;']
['v14 = ( unsigned int)( mode_class_0[mode] - 5) <= 1;']
['s1 = v26;', 'x = v7;', 'y = rtx;', 'v7 = v6;', 'i = v5;', 'v4 = v6;']
['&& ya']
['rtx *v22; // r15']
['rtx mem_set_list; // r14']
['rtx *listp; // [rsp+10h] [rbp-48h]']
['rtx src; // [rsp+8h] [rbp-40h]', 'rtx rega; // [rsp+38h] [rbp-40h]', 'rtx y1; // [rsp+18h] [rbp-40h]']
['listp = &pbi->mem_set_list;']
['free_EXPR_LIST_list( listp);', 'free_EXPR_LIST_list( listp);']
['free_EXPR_LIST_list( listp);', 'free_EXPR_LIST_list( listp);']
['v9 = insns;']
['( machine_mode)*( ( unsigned __int8 *)v12 + 2),', '( machine_mode)*( ( unsigned __int8 *)v20 + 2),', '( machine_mode)*( ( unsigned __int8 *)v2 + 2))]']
['v9 = ( ( unsigned int)( mode_class_0[v7] - 5) < 2) + 1;']
['if ( mode_class_0[*( ( unsigned __int8 *)x + 2)] != MODE_FLOAT )', 'if ( mode_class_0[*( ( unsigned __int8 *)x + 2)] != MODE_FLOAT )']
['if ( mode_class_0[*( unsigned __int8 *)( x->fld[0].rtwint + 2)] != MODE_FLOAT )']
['if ( mode_class_0[*( unsigned __int8 *)( *( _QWORD *)&x[1] + 2LL)] != MODE_FLOAT )']
['if ( mode_class_0[*( ( unsigned __int8 *)x + 2)] == MODE_FLOAT || v5 == 54 && !*( ( _QWORD *)v4 + 1) )']
['if ( mode_class_0[*( ( unsigned __int8 *)x + 2)] != MODE_FLOAT )', 'if ( mode_class_0[*( ( unsigned __int8 *)x + 2)] != MODE_FLOAT )']
['v16 = ( const char *)&off_6E0C7E;']
['decode_asm_operands( v20, recog_data_0.operand, recog_data_0.operand_loc, constraints, operand_mode);', 'decode_asm_operands( v20, recog_data_0.operand, recog_data_0.operand_loc, constraints, operand_mode);']
['decode_asm_operands( v20, recog_data_0.operand, recog_data_0.operand_loc, constraints, operand_mode);', 'decode_asm_operands( v20, recog_data_0.operand, recog_data_0.operand_loc, constraints, operand_mode);']
['if ( ( sch_istable[*( unsigned __int8 *)*format] & 4) != 0 )']
['if ( ( sch_istable[v13] & 4) == 0 )']
['rtx v8; // rax']
['rtx pool_constant_mark; // rax']
['pool_constant_mark = get_pool_constant_mark( rtx, marked);']
['if ( *( _WORD *)pool_constant_mark != 68 )']
['rtx = pool_constant_mark;']
['if ( ( *( ( _BYTE *)pool_constant_mark + 3) & 4) == 0 )']
['get_pool_constant_mark( pool_constant_mark, marked);']
['v4 = mem_loc_descriptor( rtx->fld[0].rtx, ( machine_mode)*( ( unsigned __int8 *)rtx + 2));']
['return gen_rtx_fmt_e( ( rtx_code)v17, mode, x->fld[0].rtx);']
['v12 = *( _WORD *)v13;', 'v10 = *( _DWORD *)v9;']
['rtx = v4;', 'rtx = v6;']
['rtx constant_term; // [rsp+8h] [rbp-30h] BYREF']
['v3 = force_reg( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), x);']
['constant_term = const_int_rtx[64];']
['v8 = eliminate_constant_term( v3, &constant_term);']
['if ( const_int_rtx[64] != constant_term']
['&& ( v9 = constant_term,']
['v11 = gen_rtx_fmt_ee( PLUS, ( machine_mode)*( ( unsigned __int8 *)v3 + 2), v10, v9),']
['if ( general_operand( v3, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4)) )']
['v3 = force_reg( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v3);']
['rtx v9; // rbp']
['rtx v125; // rbx']
['rtx v10; // rax', 'rtx v20; // rax', 'rtx end; // rax', 'rtx v10; // rax', 'rtx v20; // rax', 'rtx v60; // rax', 'rtx v40; // rax', 'rtx v10; // rax', 'rtx *v30; // rax', 'rtx v50; // rax', 'rtx v20; // rax', 'rtx v40; // rax', 'rtx v90; // rax', 'rtx v40; // rax', 'rtx v40; // rax', 'rtx rtl; // rax', 'rtx v90; // rax', 'rtx v10; // rax', 'rtx v10; // rax', 'rtx v10; // rax', 'rtx v20; // rax', 'rtx v50; // rax', 'rtx v60; // rax', 'rtx v10; // rax', 'rtx *v70; // rax']
['rtx v22; // rax', 'rtx v22; // rax']
['rtx *v30; // rax']
['rtx old; // [rsp+8h] [rbp-50h]', 'rtx ya; // [rsp+8h] [rbp-70h]', 'rtx ina; // [rsp+8h] [rbp-90h]']
['rtx s1; // [rsp+0h] [rbp-48h]', 'rtx y1; // [rsp+18h] [rbp-40h]', 'rtx opa; // [rsp+0h] [rbp-48h]', 'rtx set; // [rsp+10h] [rbp-48h]', 'rtx x; // [rsp+10h] [rbp-48h]']
['rtx y1; // [rsp+18h] [rbp-40h]']
['rtx y1; // [rsp+18h] [rbp-40h]']
['v4 = f;']
['v5 = ( ( unsigned int)( mode_class_0[v2] - 5) < 2) + 1;', 'v29 = ( ( unsigned int)( mode_class_0[v22] - 5) < 2) + 1;']
['rtx head; // rax']
['rtx end; // rbx', 'rtx end; // rsi', 'rtx end; // rax', 'rtx end; // rdi', 'rtx end; // rbx']
['rtx v64; // rbp']
['rtx v13; // rax', 'rtx v13; // rax', 'rtx v13; // rax']
['head = end;']
['end = v34->end;', 'end = src->end;']
['end = v34->end;', 'end = src->end;']
['head = end;']
['head = end;']
['v30 = *( _WORD *)reg_note->fld[0].rtwint;']
['head = head[1].fld[0].rtx;', 'head = head[1].fld[0].rtx;']
['head = head[1].fld[0].rtx;', 'head = head[1].fld[0].rtx;']
['if ( x[2].fld[0].rtint == -80 )']
['if ( src->head != end )']
['if ( src->head != end )']
['if ( in_section_0 != in_bss )', 'if ( in_section_0 != in_text )']
['in_section_0 = in_bss;', 'in_section_0 = in_text;']
['if ( in_section_0 != in_bss )', 'if ( in_section_0 != in_text )']
['in_section_0 = in_bss;', 'in_section_0 = in_text;']
['usize = ( ( unsigned int)( mode_class_0[*( ( unsigned __int8 *)rtx + 2)] - 5) < 2) + 1;']
['fancy_abort( ( const char *)&a, 7381, "base_type_die");']
['fancy_abort( ( const char *)&a, 7573, "modified_type_die");']
['fancy_abort( ( const char *)&a, 7461, "is_base_type");']
['v7 = operand_sub*(short *)0xforce( x, i, mode);']
['rtx v10; // r13', 'rtx v17; // r12', 'rtx v14; // r13', 'rtx v15; // r13', 'rtx v11; // r13', 'rtx v14; // r13', 'rtx v7; // r13']
['genfun = insn_data_0[insn_code].genfun;']
['v10 = 0LL;', 'v10 = 0LL;', 'v12 = 0LL;', 'v10 = 0LL;']
['v21 = adjust_automodify_address_1( to, v10, to_addr, v9, 1);']
['v21 = adjust_address_1( to, v10, v9, 1, 1);']
['v15 = genfun( v21, v14);']
['rtx *v19; // rbp', 'rtx *v19; // rbp', 'rtx *v59; // rax', 'rtx *v42; // r12', 'rtx *v29; // r12', 'rtx *v29; // rsi', 'rtx *v48; // rbx', 'rtx *v47; // r13', 'rtx *v47; // r13']
['rtx *v50; // r14']
['rtx v57; // rax', 'rtx v57; // rax', 'rtx v57; // rax']
['rtx *v61; // rax', 'rtx *v76; // rax']
['rtx **v48; // r14']
['rtx ya; // [rsp+8h] [rbp-70h]', 'rtx zb; // [rsp+8h] [rbp-70h]']
['rtx ya; // [rsp+8h] [rbp-70h]', 'rtx zb; // [rsp+8h] [rbp-70h]']
['rtx note; // [rsp+38h] [rbp-40h]', 'rtx tem; // [rsp+30h] [rbp-68h]', 'rtx v21; // [rsp+10h] [rbp-68h]', 'rtx set; // [rsp+10h] [rbp-48h]', 'rtx next; // [rsp+70h] [rbp-68h]']
['rtx op0; // [rsp+18h] [rbp-60h]']
['rtx temp; // [rsp+20h] [rbp-48h]', 'rtx increment; // [rsp+10h] [rbp-58h]', 'rtx arg0a; // [rsp+60h] [rbp-78h]', 'rtx newa; // [rsp+20h] [rbp-78h]']
['rtx temp; // [rsp+20h] [rbp-48h]', 'rtx targeta; // [rsp+8h] [rbp-50h]', 'rtx increment; // [rsp+10h] [rbp-58h]', 'rtx arg0a; // [rsp+60h] [rbp-78h]', 'rtx newa; // [rsp+20h] [rbp-78h]']
['rtx temp; // [rsp+20h] [rbp-48h]', 'rtx increment; // [rsp+10h] [rbp-58h]', 'rtx arg0a; // [rsp+60h] [rbp-78h]', 'rtx newa; // [rsp+20h] [rbp-78h]']
['rtx v36; // rbx']
['rtx v44; // rax']
['rtx v4; // rbp', 'rtx v4; // rbp']
['rtx v48; // rax']
['rtx v16; // rax', 'rtx v5; // rax', 'rtx v26; // rax', 'rtx v26; // rax', 'rtx v36; // rax', 'rtx v36; // rax', 'rtx v5; // rax', 'rtx v26; // rax', 'rtx v76; // rax', 'rtx v57; // rax', 'rtx v26; // rax', 'rtx v6; // rax', 'rtx v50; // rax', 'rtx v86; // rax', 'rtx v36; // rax', 'rtx v46; // rax', 'rtx v57; // rax', 'rtx v16; // rax', 'rtx v6; // rax', 'rtx v36; // rax', 'rtx v55; // rax', 'rtx v53; // rax', 'rtx v50; // rax', 'rtx v57; // rax', 'rtx v5; // rax', 'rtx v6; // rax', 'rtx v86; // rax', 'rtx v55; // rax']
['rtx v57; // rax', 'rtx v57; // rax', 'rtx v57; // rax']
['rtx v5; // r12', 'rtx v50; // r12', 'rtx v19; // r12', 'rtx v29; // r12']
['rtx v60; // rax', 'rtx v60; // rax']
['rtx set_dest; // rbp']
['if ( !strcmp( v1, table_21[i].name) )']
['v2 = ( const char *)&unk_6E2DA4;']
['if ( in_section_0 != in_named || strcmp( name, in_named_name) )']
['in_section_0 = no_section;']
['in_section_0 = in_named;']
['return ++last_alias_set_5;']
['v13 = gen_rtx_fmt_ee( code, ( machine_mode)*( ( unsigned __int8 *)if_info->cond + 2), cmp_a, cmp_b);']
['v14 = gen_rtx_fmt_eee( IF_THEN_ELSE, ( machine_mode)*( ( unsigned __int8 *)x + 2), v13, vtrue, vfalse);']
['if ( general_operand( cmp_b, ( machine_mode)*( ( unsigned __int8 *)cmp_b + 2)) )']
['if ( general_operand( cmp_b, ( machine_mode)*( ( unsigned __int8 *)cmp_b + 2)) )']
['( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),']
['( machine_mode)*( unsigned __int8 *)( v2.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v2.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v2.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v2.rtwint + 2),']
['v10 = gen_rtx_fmt_ee( v8, ( machine_mode)*( ( unsigned __int8 *)x + 2), cond->fld[0].rtx, *( rtx *)&cond[1]);']
['rtx v10; // rbx']
['if ( *( _WORD *)v13.rtwint == 61 && mode_class_0[*( unsigned __int8 *)( v13.rtwint + 2)] == MODE_INT )']
['v14 = *earliest;']
['while ( rtx_class[*( _WORD *)v14] != 105 || !modified_in_p( v2, v14) )', 'while ( rtx_class[*( _WORD *)v14] != 105 || !modified_in_p( v2, v14) )']
['while ( rtx_class[*( _WORD *)v14] != 105 || !modified_in_p( v2, v14) )', 'while ( rtx_class[*( _WORD *)v14] != 105 || !modified_in_p( v2, v14) )']
['v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;']
['v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;']
['if ( rtx == v7 )', 'if ( rtx == v5 )']
['if ( mode_class_0[*( ( unsigned __int8 *)op1 + 2)] != MODE_INT )']
['v12 = reverse_condition( ( rtx_code)*v6);']
['if ( ( mode_class_0[mode] & 0xFFFFFFFD) != 1 )', 'if ( ( mode_class_0[mode] & 0xFFFFFFFD) != 1 )']
['rtx v21; // rdx']
['rtx v25; // rax', 'rtx v25; // rax', 'rtx v25; // rax', 'rtx v25; // rax', 'rtx v25; // rax', 'rtx v25; // rax', 'rtx v25; // rax']
['rtx v27; // rax', 'rtx v27; // rax']
['rtx v34; // rax', 'rtx v34; // rax']
['rtx v35; // rax', 'rtx v35; // rax', 'rtx v35; // rax', 'rtx v35; // rax', 'rtx v35; // rax']
['rtx v48; // rax']
['rtx v92; // rax', 'rtx v5; // rax', 'rtx v42; // rax', 'rtx v22; // rax', 'rtx v42; // rax', 'rtx v5; // rax', 'rtx v42; // rax', 'rtx v57; // rax', 'rtx v82; // rax', 'rtx v22; // rax', 'rtx v50; // rax', 'rtx v42; // rax', 'rtx v57; // rax', 'rtx v42; // rax', 'rtx v55; // rax', 'rtx v53; // rax', 'rtx v50; // rax', 'rtx v57; // rax', 'rtx v5; // rax', 'rtx v55; // rax']
['rtx v55; // rax', 'rtx v55; // rax']
['rtx v60; // rax', 'rtx v60; // rax']
['if ( ( mode_class_0[*( ( unsigned __int8 *)x + 2)] & 0xFFFFFFFB) != 2', 'if ( ( mode_class_0[*( ( unsigned __int8 *)x + 2)] & 0xFFFFFFFB) != 2']
['&& mode_class_0[*( ( unsigned __int8 *)x + 2)] != MODE_VECTOR_FLOAT']
['&& ( mode_class_0[mode] & 0xFFFFFFFB) != 2']
['&& mode_class_0[mode] != MODE_VECTOR_FLOAT )']
['|| mode_class_0[v12] == MODE_INT && mode_class_0[v2] == MODE_INT)', '|| mode_class_0[v12] == MODE_INT && mode_class_0[v2] == MODE_INT)']
['|| mode_class_0[v12] == MODE_INT && mode_class_0[v2] == MODE_INT)', '|| mode_class_0[v12] == MODE_INT && mode_class_0[v2] == MODE_INT)']
['v3 = nonzero_bits( x->fld[0].rtx, ( machine_mode)v4) & v38;']
['v3 = nonzero_bits( x->fld[0].rtx, ( machine_mode)v4) & v38;']
['v32 = nonzero_bits( *( rtx *)( v1->fld[0].rtwint + 8), ( machine_mode)v21);']
['v3 = nonzero_bits( x->fld[0].rtx, ( machine_mode)v4) & v38;']
['v3 = nonzero_bits( x->fld[0].rtx, ( machine_mode)v4) & v38;']
['v32 = nonzero_bits( *( rtx *)( v1->fld[0].rtwint + 8), ( machine_mode)v21);']
['v3 = nonzero_bits( x->fld[0].rtx, ( machine_mode)v4) & v38;']
['v3 = nonzero_bits( x->fld[0].rtx, ( machine_mode)v4) & v38;']
['v3 = nonzero_bits( x->fld[0].rtx, ( machine_mode)v4) & v38;']
['v3 = nonzero_bits( x->fld[0].rtx, ( machine_mode)v4) & v38;']
['else if ( ( unsigned int)( mode_class_0[v3] - 5) >= 2 )']
['if ( mode_class_0[*( unsigned __int8 *)( v3.rtwint + 2)] == MODE_CC )']
['if ( ( mode_class_0[v4] & 0xFFFFFFFB) != 2 )']
['if ( mode_class_0[v4] != MODE_VECTOR_FLOAT']
['if ( ( mode_class_0[v4] & 0xFFFFFFFB) != 2 )']
['&& mode_class_0[mode] != MODE_VECTOR_FLOAT )']
['v11 = safe_hash( v6, ( machine_mode)v8);']
['LODWORD( v4) = num_sign_bit_copies( x, ( machine_mode)v6)']
['LODWORD( v4) = num_sign_bit_copies( x, ( machine_mode)v6)']
['v3 = nonzero_bits( x->fld[0].rtx, ( machine_mode)v4) & v38;']
['v3 = nonzero_bits( x->fld[0].rtx, ( machine_mode)v4) & v38;']
['LODWORD( v4) = num_sign_bit_copies( x, ( machine_mode)v6)']
['v3 = nonzero_bits( x->fld[0].rtx, ( machine_mode)v4) & v38;']
['v3 = nonzero_bits( x->fld[0].rtx, ( machine_mode)v4) & v38;']
['if ( *( _OWORD *)&t1 == 0LL )']
['v5 = simplify_gen_binary( PLUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v4.rtx, offset);']
['if ( !memory_address_p( ( machine_mode)*( ( unsigned __int8 *)memref + 2), v5)']
['v12 = force_reg( ( machine_mode)*( unsigned __int8 *)( v4.rtwint + 2), v4.rtx);']
['v5 = simplify_gen_binary( PLUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v12, offset);']
['v15 = *( tree_node **)( v10 + 64);']
['v11 = gen_rtx_fmt_ee( LO_SUM, ( machine_mode)*( ( unsigned __int8 *)y + 2), y->fld[0].rtx, v14);']
['return offsettable_address_p( 1, ( machine_mode)*( ( unsigned __int8 *)op + 2), op->fld[0].rtx) != 0;']
['return offsettable_address_p( 0, ( machine_mode)*( ( unsigned __int8 *)op + 2), op->fld[0].rtx) != 0;']
['if ( *( _OWORD *)&c->block.vars >= *( _OWORD *)&initial->block.vars )', 'if ( *( _OWORD *)&c->block.vars >= *( _OWORD *)&initial->block.vars )', 'if ( *( _OWORD *)&c->block.vars >= *( _OWORD *)&initial->block.vars )', 'if ( *( _OWORD *)&c->block.vars >= *( _OWORD *)&initial->block.vars )']
['if ( *( _OWORD *)&c->block.vars >= *( _OWORD *)&initial->block.vars )', 'if ( *( _OWORD *)&c->block.vars >= *( _OWORD *)&initial->block.vars )', 'if ( *( _OWORD *)&c->block.vars >= *( _OWORD *)&initial->block.vars )', 'if ( *( _OWORD *)&c->block.vars >= *( _OWORD *)&initial->block.vars )']
['( machine_mode)*( unsigned __int8 *)( v2.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v2.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v2.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v2.rtwint + 2),']
['( machine_mode)*( ( unsigned __int8 *)rtx + 2));', '( machine_mode)*( ( unsigned __int8 *)rtx + 2));']
['( machine_mode)*( unsigned __int8 *)( v2.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v4.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v4.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v2.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v7.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v2.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v2.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v9.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v1.rtwint + 2),']
['( machine_mode)*( ( unsigned __int8 *)y + 2));', '( machine_mode)*( ( unsigned __int8 *)y + 2));']
['*( ( _DWORD *)uid_cuid_1 + insn->fld[0].rtint),', '*( ( _DWORD *)uid_cuid_1 + insn->fld[0].rtint),']
['v6 = &reg_avail_info_0[x->fld[0].rtuint];']
['v4 = *( ( _DWORD *)uid_cuid_1 + insn->fld[0].rtint);']
['*( ( _DWORD *)uid_cuid_1 + insn->fld[0].rtint),', '*( ( _DWORD *)uid_cuid_1 + insn->fld[0].rtint),']
['lang_hooks_0.tree_inlining.add_pending_fn_decls( &id, v5);']
['v13 = *( tree_node **)( low + 8);', 'v8 = *( tree_node **)( low + 40);']
['v23 = ( tree_node *)*( &global_trees + 12);']
['v2 = ( tree_node *)*( &global_trees + 19);', 'v23 = ( tree_node *)*( &global_trees + 12);', 'v2 = ( tree_node *)*( &global_trees + 16);', 'v2 = ( tree_node *)*( &global_trees + 15);', 'v4 = ( tree_node *)*( &global_trees + 11);', 'v4 = ( tree_node *)*( &global_trees + 11);', 'v4 = ( tree_node *)*( &global_trees + 11);', 'v4 = ( tree_node *)*( &global_trees + 11);', 'v5 = ( tree_node *)*( &global_trees + 11);', 'v18 = ( tree_node *)*( &global_trees + 11);', 'v24 = ( tree_node *)*( &global_trees + 17);', 'v17 = ( tree_node *)*( &global_trees + 11);']
['transp_0 = sbitmap_vector_alloc( n_basic_blocks, 1u);']
['comp_0 = sbitmap_vector_alloc( n_basic_blocks, 1u);']
['sbitmap_vector_ones( transp_0, n_basic_blocks);']
['transp_0[v2]->elms[0] &= ~1uLL;']
['note_stores( *( ( rtx *)v11 + 4), reg_becomes_live_0, live_at_edge);']
['sbitmap_vector_zero( comp_0, n_basic_blocks);']
['v31 = comp_0;']
['v5 = transp_0[src->index];']
['v18 = pre_edge_lcm( file, 1, transp_0, comp_0, antic, kill, &insert_0, &delete);', 'v18 = pre_edge_lcm( file, 1, transp_0, comp_0, antic, kill, &insert_0, &delete);', 'v18 = pre_edge_lcm( file, 1, transp_0, comp_0, antic, kill, &insert_0, &delete);']
['v18 = pre_edge_lcm( file, 1, transp_0, comp_0, antic, kill, &insert_0, &delete);', 'v18 = pre_edge_lcm( file, 1, transp_0, comp_0, antic, kill, &insert_0, &delete);', 'v18 = pre_edge_lcm( file, 1, transp_0, comp_0, antic, kill, &insert_0, &delete);']
['v18 = pre_edge_lcm( file, 1, transp_0, comp_0, antic, kill, &insert_0, &delete);', 'v18 = pre_edge_lcm( file, 1, transp_0, comp_0, antic, kill, &insert_0, &delete);', 'v18 = pre_edge_lcm( file, 1, transp_0, comp_0, antic, kill, &insert_0, &delete);']
['free( insert_0);']
['transp_0[index]->elms[0] &= ~1uLL;']
['free( transp_0);']
['free( comp_0);']
['free( insert_0);']
['rtx v42; // rax', 'rtx v42; // rax', 'rtx v42; // rax', 'rtx v42; // rax', 'rtx v42; // rax']
['rtx v13; // r12', 'rtx v13; // r12', 'rtx v41; // r15', 'rtx v13; // r12', 'rtx v40; // r12', 'rtx v44; // r12', 'rtx v44; // r12', 'rtx v43; // rax', 'rtx v43; // rsi', 'rtx v40; // r15', 'rtx v44; // r14', 'rtx v45; // r15', 'rtx v43; // rcx']
['rtx v48; // rax']
['rtx v59; // rdx', 'rtx v48; // rdx', 'rtx v19; // rdx', 'rtx v9; // rdx']
['rtx v40; // rsi', 'rtx v55; // rsi', 'rtx v5; // rsi', 'rtx v60; // rsi', 'rtx v54; // rsi', 'rtx v55; // rsi']
['rtx v5; // rax', 'rtx v21; // rax', 'rtx v41; // rax', 'rtx v5; // rax', 'rtx v57; // rax', 'rtx v50; // rax', 'rtx v31; // rax', 'rtx v11; // rax', 'rtx v31; // rax', 'rtx v57; // rax', 'rtx v31; // rax', 'rtx v55; // rax', 'rtx v53; // rax', 'rtx v11; // rax', 'rtx v50; // rax', 'rtx v57; // rax', 'rtx v5; // rax', 'rtx v55; // rax', 'rtx v11; // rax']
['rtx v53; // rax']
['rtx v54; // rsi']
['rtx v55; // rdx']
['v22 = lang_hooks_0.expand_constant( exp);', 'v1 = lang_hooks_0.expand_constant( exp);', 'v4 = lang_hooks_0.expand_constant( exp);', 'v30 = lang_hooks_0.expand_constant( exp);']
['v8 = ( tree_node *)high[4];']
['( const char *)&stru_634008.block.supercontext,']
['|| insn_data_0[rtint].n_dups > 0) )']
['fprintf( asm_out_file, off_65D071, ( unsigned int)( which_alternative + 1));']
['p_chain = ( char *)&stru_665A39._chain + 3;', 'p_chain = ( char *)&stru_665A39._chain + 6;', 'p_chain = ( char *)&stru_665A39._fileno + 1;']
['v17 = gen_rtx_fmt_s( SYMBOL_REF, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v16->dw_fde_begin);']
['v18 = gen_rtx_fmt_s( SYMBOL_REF, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v17);', 'v18 = gen_rtx_fmt_s( SYMBOL_REF, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v17);']
['v5 = transp_0[src->index];']
['v14 = gen_rtx_fmt_e( PRE_DEC, ( machine_mode)( 4 - ( ( v6 == 0) - 1)), global_rtl[2]);']
['v12 = &qty_0[v11];', 'v14 = &qty_0[v11];', 'v15 = &qty_0[v11];']
['fancy_abort( ( const char *)&a, 1772, "output_cfi");']
['v1 = lang_hooks_0.expand_constant( exp);', 'v4 = lang_hooks_0.expand_constant( exp);']
['if ( in_section_0 == in_text )', 'if ( in_section_0 == in_text )']
['if ( in_section_0 != in_data )']
['in_section_0 = in_data;']
['if ( in_section_0 != in_data )']
['mergeable_constant_section( ( machine_mode)LOBYTE( v3->block.supercontext), v5, 0);']
['if ( in_section_0 == in_text )', 'if ( in_section_0 == in_text )']
['in_section_0 = in_bss;', 'in_section_0 = in_text;']
['fprintf( asm_out_file, ".%s%u:\\n", ( const char *)&a.dw_attr_val, ( unsigned int)labelno);']
['fprintf( asm_out_file, ".%s%u:\\n", ( const char *)&a.dw_attr_val, ( unsigned int)k->labelno);']
['force_reg( ( machine_mode)v6, tempa);']
['sprintf( buffer->digit_buffer, off_6544E1, *v12);']
['sprintf( buffer->digit_buffer, off_6544E5, *v18);']
['sprintf( buffer->digit_buffer, off_6544E1, *v12);', 'sprintf( buffer->digit_buffer, off_6544E5, *v18);']
['v18 = gen_rtx_fmt_s( SYMBOL_REF, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v17);', 'v18 = gen_rtx_fmt_s( SYMBOL_REF, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v17);', 'v11 = gen_rtx_fmt_s( SYMBOL_REF, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v10);']
['table_address = force_reg( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v11);']
['v12 = gen_rtx_fmt_s( SYMBOL_REF, ( machine_mode)identifier, "__bb_init_func");']
['v2 = ( tree_node *)*( &global_trees + 19);', 'v23 = ( tree_node *)*( &global_trees + 12);', 'v2 = ( tree_node *)*( &global_trees + 16);', 'v2 = ( tree_node *)*( &global_trees + 15);', 'v4 = ( tree_node *)*( &global_trees + 11);', 'v4 = ( tree_node *)*( &global_trees + 11);', 'v4 = ( tree_node *)*( &global_trees + 11);', 'v4 = ( tree_node *)*( &global_trees + 11);', 'v5 = ( tree_node *)*( &global_trees + 11);', 'v18 = ( tree_node *)*( &global_trees + 11);', 'v24 = ( tree_node *)*( &global_trees + 17);', 'v17 = ( tree_node *)*( &global_trees + 11);']
['v18 = ( tree_node *)*( ( _QWORD *)*htab_find_slot_with_hash(']
['v11 = *( tree_node **)( elements->int_cst.int_cst.high + 40);']
['if ( ( tree_node *)global_trees == v11 )']
['fancy_abort( ( const char *)&a, 2778, "output_loc_operands");']
['fancy_abort( ( const char *)&a, 2789, "output_loc_operands");']
['if ( ( sch_istable[( unsigned __int8)v10] & 0x10) != 0 )']
['safe_concat( buf, v16, ( const char *)&off_631D1E + 2);']
['if ( !strcmp( v14, processor_alias_table_49[v15].name) )', 'if ( !strcmp( v17, processor_alias_table_49[v18].name) )']
['flags = processor_alias_table_49[( int)v15].flags;', 'flags = processor_alias_table_49[( int)v15].flags;']
['flags = processor_alias_table_49[( int)v15].flags;', 'flags = processor_alias_table_49[( int)v15].flags;']
['ix86_arch = processor_alias_table_49[( int)v15].processor;']
['if ( ( flags & 4) != 0 )']
['if ( ( flags & 0x10) != 0 && ( target_flags & 0x200000) == 0 )']
['if ( ( flags & 0x40) != 0 && ( target_flags & 0x800000) == 0 )']
['if ( !already_0 )']
['if ( !already_0 )']
['already_0 = 1;']
['if ( ( sch_istable[v17] & 0x88) != 0 )']
['if ( ( sch_istable[( unsigned __int8)v4] & 0x204) == 0']
['if ( ( sch_istable[( unsigned __int8)v4] & 0x204) == 0']
['if ( ( sch_istable[( unsigned __int8)v15] & 0x88) == 0 )']
['if ( ( sch_istable[( unsigned __int8)v9] & 0xC00) == 0 )']
['v3 = spelling_0;', 'v5 = spelling_0;', 'v1 = spelling_0;']
['if ( spelling_base >= spelling_0 )', 'if ( spelling_base >= spelling_0 )']
['insn = peep2_insn_data_0[v27].insn;']
['insn = peep2_insn_data_0[v27].insn;']
['v21 = search_ofs_1 + v12;']
['if ( search_ofs_1 + v12 > 52 )']
['v21 = search_ofs_1 + v12;']
['v14 = ( unsigned int)( mode_class_0[mode] - 5) <= 1;', 'v16 = ( unsigned int)( mode_class_0[mode] - 5) <= 1;', 'v10 = ( unsigned int)( mode_class_0[mode] - 5) <= 1;']
['search_ofs_1 = 0;']
['v14 = ( unsigned int)( mode_class_0[mode] - 5) <= 1;', 'v16 = ( unsigned int)( mode_class_0[mode] - 5) <= 1;', 'v10 = ( unsigned int)( mode_class_0[mode] - 5) <= 1;']
['search_ofs_1 = v18;']
['result = peep2_insn_data_0[v1].insn;']
['if ( !peep2_insn_data_0[v2].insn )', 'if ( !peep2_insn_data_0[v2].insn )']
['v18 = ( ( unsigned int)( mode_class_0[v4] - 5) < 2) + 1;']
['if ( bitmap_bit_p( peep2_insn_data_0[v2].live_before, v7--) )']
['insn = peep2_insn_data_0[v27].insn;']
['recog_data_0.insn = 0LL;', 'recog_data_0.insn = 0LL;', 'recog_data_0.insn = 0LL;', 'recog_data_0.insn = 0LL;']
['recog_data_0.operand[0] = v5.rtx;', 'recog_data_0.operand[0] = v4.rtx;', 'recog_data_0.operand[0] = v3.rtx;']
['recog_data_0.operand[0] = v5.rtx;', 'recog_data_0.operand[0] = v4.rtx;', 'recog_data_0.operand[0] = v3.rtx;']
['result = gen_peephole2_1278( insn, recog_data_0.operand);', 'result = gen_peephole2_1293( insn, recog_data_0.operand);']
['recog_data_0.operand[0] = v5.rtx;', 'recog_data_0.operand[0] = v4.rtx;', 'recog_data_0.operand[0] = v3.rtx;']
['result = gen_peephole2_1278( insn, recog_data_0.operand);', 'result = gen_peephole2_1293( insn, recog_data_0.operand);']
['recog_data_0.operand[0] = v5.rtx;', 'recog_data_0.operand[0] = v4.rtx;', 'recog_data_0.operand[0] = v3.rtx;']
['result = gen_peephole2_1278( insn, recog_data_0.operand);', 'result = gen_peephole2_1293( insn, recog_data_0.operand);']
['recog_data_0.operand[0] = v5.rtx;', 'recog_data_0.operand[0] = v4.rtx;', 'recog_data_0.operand[0] = v3.rtx;']
['recog_data_0.operand[0] = v5.rtx;', 'recog_data_0.operand[0] = v4.rtx;', 'recog_data_0.operand[0] = v3.rtx;']
['result = gen_peephole2_1278( insn, recog_data_0.operand);', 'result = gen_peephole2_1293( insn, recog_data_0.operand);']
['recog_data_0.operand[0] = v5.rtx;', 'recog_data_0.operand[0] = v4.rtx;', 'recog_data_0.operand[0] = v3.rtx;']
['edge v21; // rdx']
['rtx note; // [rsp+38h] [rbp-40h]', 'tree fpr; // [rsp+8h] [rbp-40h]', 'rtx ya; // [rsp+8h] [rbp-70h]', 'rtx rega; // [rsp+38h] [rbp-40h]', 'rtx basex; // [rsp+8h] [rbp-50h]', 'rtx ina; // [rsp+8h] [rbp-90h]', 'rtx ptra; // [rsp+8h] [rbp-90h]']
['peep2_insn_data_0[0].insn = 0LL;']
['peep2_insn_data_0[1].insn = 0LL;']
['peep2_insn_data_0[2].insn = 0LL;']
['peep2_insn_data_0[4].insn = global_rtl[0];']
['peep2_insn_data_0[3].insn = 0LL;']
['bitmap_copy( peep2_insn_data_0[4].live_before, live);']
['peep2_insn_data_0[v25].insn = ( rtx)v23;']
['bitmap_copy( peep2_insn_data_0[peep2_current].live_before, live);']
['insn = peep2_insn_data_0[v27].insn;']
['if ( *( _WORD *)peep2_insn_data_0[v30].insn == 34 )']
['note = find_reg_note( peep2_insn_data_0[v6].insn, REG_EH_REGION, 0LL);']
['v2 = constructor_stack_0;', 'v2 = constructor_stack_0;', 'v2 = constructor_stack_0;']
['for ( i = constructor_stack_0; constructor_stack_0; i = constructor_stack_0 )', 'for ( i = constructor_stack_0; constructor_stack_0; i = constructor_stack_0 )', 'for ( i = constructor_stack_0; constructor_stack_0; i = constructor_stack_0 )']
['for ( i = constructor_stack_0; constructor_stack_0; i = constructor_stack_0 )', 'for ( i = constructor_stack_0; constructor_stack_0; i = constructor_stack_0 )', 'for ( i = constructor_stack_0; constructor_stack_0; i = constructor_stack_0 )']
['if ( constructor_range_stack_0 )', 'if ( constructor_range_stack_0 )', 'if ( constructor_range_stack_0 )', 'if ( constructor_range_stack_0 )', 'if ( constructor_range_stack_0 )']
['spelling_0 = &spelling_base[constructor_depth];']
['replacement_value = ( tree_node *)global_trees;', 'replacement_value = ( tree_node *)global_trees;']
['constructor_range_stack_0 = v2->range_stack;']
['spelling_0 = &spelling_base[depth];']
['constructor_stack_0 = v2->next;']
['if ( constructor_range_stack_0 )', 'if ( constructor_range_stack_0 )', 'if ( constructor_range_stack_0 )', 'if ( constructor_range_stack_0 )', 'if ( constructor_range_stack_0 )']
['if ( mode_class_0[*( unsigned __int8 *)( *( ( _QWORD *)aux + 6) + 2LL)] == MODE_FLOAT']
['|| ( v13 = *( ( _QWORD *)aux + 4), mode_class_0[*( unsigned __int8 *)( v13 + 2)] == MODE_FLOAT) )']
['hitrate = predictor_info_0[predictor].hitrate;', 'hitrate = predictor_info_0[predictor].hitrate;']
['if ( taken != TAKEN_0 )', 'if ( taken != TAKEN_0 )']
['v12 = &insn_data_0[icode].operand[opnum];']
['if ( !v12->predicate( v11, ( machine_mode)*( ( unsigned __int16 *)v12 + 8)) )']
['return copy_to_mode_reg( ( machine_mode)*( ( unsigned __int16 *)v12 + 8), v11);']
['if ( recog_data_0.n_operands > 0 )', 'if ( recog_data_0.n_operands > 0 )', 'if ( recog_data_0.n_operands > 0 )', 'if ( recog_data_0.n_operands > 0 )', 'if ( recog_data_0.n_operands > 0 )', 'if ( recog_data_0.n_operands > 0 )']
['v6 = recog_data_0.constraints[v1];']
['recog_data_0.n_alternatives = 0;', 'recog_data_0.n_alternatives = 1;']
['while ( recog_data_0.n_operands > ( int)v1 );', 'while ( recog_data_0.n_operands > ( int)v1 );']
['fprintf( outfile, off_661611, name->int_cst.int_cst.low);']
['fwrite( &unk_6E1B77, 1uLL, 0xCuLL, outfile);']
['fwrite( &off_66705A, 1uLL, 3uLL, file);']
['fwrite( &off_66705A, 1uLL, 3uLL, file);', 'fwrite( &off_6BD75B, 1uLL, 3uLL, file);']
['fwrite( &off_6BD75B, 1uLL, 3uLL, file);']
['fwrite( &unk_636F04, 1uLL, 9uLL, file);']
['fwrite( &off_66705A, 1uLL, 3uLL, file);', 'fwrite( &off_6BD75B, 1uLL, 3uLL, file);']
['put_condition_code( ( rtx_code)*( _WORD *)x, ( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2), 0, 0, file);', 'put_condition_code( ( rtx_code)*( _WORD *)x, ( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2), 0, 0, file);']
['put_condition_code( ( rtx_code)*( _WORD *)x, ( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2), 0, 0, file);', 'put_condition_code( ( rtx_code)*( _WORD *)x, ( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2), 0, 0, file);']
['if ( mode_class_0[v2] == MODE_INT )']
['*( _OWORD *)v28.r = *( _OWORD *)&i0[8];', '*( _OWORD *)v29.r = *( _OWORD *)&i0[8];']
['v2 = *( _OWORD *)&scale.base;']
['if ( *( _OWORD *)&scale.base == 0LL )']
['fprintf( file, off_66644D, v4);', 'fprintf( file, off_666451, v4);']
['fprintf( file, off_66644D, v4);', 'fprintf( file, off_666451, v4);']
['fprintf( file, off_66644D, v4);', 'fprintf( file, off_666451, v4);']
['v8 = ( const char *)&unk_6F613E;']
['fprintf( v29, off_6F973A, "object");']
['( const char *)&stru_634008.block.supercontext,']
['output_operand_lossage( ( const char *)&stru_665A39._IO_save_base + 6);']
['fwrite( ( char *)&stru_665A39._IO_write_ptr + 6, 1uLL, 4uLL, file);']
['fwrite( ( char *)&stru_665A39._IO_write_ptr + 6, 1uLL, 4uLL, file);']
['fwrite( ( char *)&stru_665A39._IO_write_ptr + 6, 1uLL, 4uLL, file);']
['fwrite( ( char *)&stru_665A39._IO_buf_base + 6, 1uLL, 0xFuLL, file);']
['fwrite( ( char *)&stru_665A39._IO_buf_base + 6, 1uLL, 0xFuLL, file);']
['fwrite( ( char *)&stru_665A39._IO_buf_base + 6, 1uLL, 0xFuLL, file);']
['fwrite( ( char *)&stru_665A39._IO_buf_base + 6, 1uLL, 0xFuLL, file);']
['output_operand_lossage( ( const char *)&stru_665A39._IO_save_base + 6);']
['output_operand_lossage( ( const char *)&stru_665A39._IO_save_base + 6);']
['fwrite( ( char *)&stru_665A39._IO_read_end + 7, 1uLL, 0xDuLL, stderr);']
['fwrite( ( char *)&stru_665A39._IO_write_ptr + 6, 1uLL, 4uLL, file);']
['fprintf( outfile, off_6376D2, ( unsigned int)v22, v11);', 'fprintf( outfile, off_6663DA, ( unsigned int)( v24 - 29));']
['fprintf( file, ( const char *)&stru_665A39._IO_write_end + 3, v6.rtwint, *( _QWORD *)&x[1]);']
['output_operand_lossage( ( const char *)&stru_665A39._IO_save_base + 6);']
['output_operand_lossage( ( const char *)&stru_665A39._IO_save_base + 6);']
['while ( spelling_0 > v1 );']
['fprintf( file, ( const char *)&stru_665A39._IO_write_end + 3, v6.rtwint, *( _QWORD *)&x[1]);']
['while ( spelling_0 > v1 );']
['fwrite( ( char *)&stru_665A39._IO_write_ptr + 6, 1uLL, 4uLL, file);']
['v3 = convert_to_mode( ( machine_mode)v5, size, 1);']
['v7 = gen_rtx( MINUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), global_rtl[2], v6);']
['v12 = gen_rtx_fmt_ee( MINUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), global_rtl[2], v11);', 'v14 = gen_rtx_fmt_ee( MINUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), global_rtl[2], v13);', 'v16 = gen_rtx_fmt_ee( MINUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), global_rtl[2], v15);', 'v19 = gen_rtx_fmt_ee( MINUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), global_rtl[2], v18);']
['v12 = gen_rtx_fmt_ee( MINUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), global_rtl[2], v11);', 'v14 = gen_rtx_fmt_ee( MINUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), global_rtl[2], v13);', 'v16 = gen_rtx_fmt_ee( MINUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), global_rtl[2], v15);', 'v19 = gen_rtx_fmt_ee( MINUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), global_rtl[2], v18);']
['v16 = gen_rtx_fmt_ee( MINUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), global_rtl[2], v15);']
['v12 = gen_rtx_fmt_ee( MINUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), global_rtl[2], v11);', 'v14 = gen_rtx_fmt_ee( MINUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), global_rtl[2], v13);', 'v16 = gen_rtx_fmt_ee( MINUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), global_rtl[2], v15);', 'v19 = gen_rtx_fmt_ee( MINUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), global_rtl[2], v18);']
['v17 = force_reg( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v17);']
['( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),']
['emit_cmp_and_jump_insns( v17, v20, GTU, 0LL, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), 1, v22);']
['if ( !constructor_stack_0->replacement_value )', 'if ( !constructor_stack_0->replacement_value )']
['v2 = constructor_stack_0;', 'v2 = constructor_stack_0;', 'v2 = constructor_stack_0;']
['if ( !constructor_stack_0->replacement_value )', 'if ( !constructor_stack_0->replacement_value )']
['v4 = copy_to_mode_reg( ( machine_mode)*( ( unsigned __int8 *)loc + 2), copy);']
['*( _OWORD *)i0 = ~*( _OWORD *)&v12;']
['fatal_insn( "Attempt to delete prologue/epilogue insn:", insn, ( const char *)&to, 1615, "propagate_one_insn");']
['rtx result; // rax', 'rtx result; // rax', 'rtx result; // rax', 'rtx result; // rax', 'rtx result; // rax', 'rtx result; // rax', 'rtx result; // rax']
['rtx v6; // rbx']
['rtx v7; // rax', 'rtx v7; // rax']
['rtx v10; // r13', 'rtx v12; // r12', 'rtx v14; // r13', 'rtx v15; // r13', 'rtx v11; // r13', 'rtx v12; // r12', 'rtx v14; // r13', 'rtx v12; // r12']
['rtx v13; // rax', 'rtx v13; // rax', 'rtx v13; // rax']
['rtx v14; // rbx', 'rtx v14; // rbx']
['rtx v15; // rax', 'rtx v15; // rax', 'rtx v15; // rax']
['v15 = gen_reg_rtx( ( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2));']
['v12 = protect_from_queue( x->fld[0].rtx, 0);']
['rtx note; // [rsp+8h] [rbp-90h] BYREF']
['for ( note = ( rtx)v3.rtwint; v3.rtwint; note = ( rtx)v3.rtwint )', 'for ( note = ( rtx)v3.rtwint; v3.rtwint; note = ( rtx)v3.rtwint )']
['for ( note = ( rtx)v3.rtwint; v3.rtwint; note = ( rtx)v3.rtwint )', 'for ( note = ( rtx)v3.rtwint; v3.rtwint; note = ( rtx)v3.rtwint )']
['if ( for_each_rtx( &note, is_addressof, 0LL) )']
['remove_note( rtx, note);']
['v3.rtwint = ( __int64)note[1];']
['rtx v18; // rax']
['rtx *fld; // rbp', 'rtx *fld; // rbp']
['rtx v59; // rdx', 'rtx v19; // rdx', 'rtx v26; // rdx', 'rtx v21; // rdx', 'rtx v9; // rdx']
['rtx v34; // r12', 'rtx v44; // r14']
['rtx v40; // rax', 'rtx v40; // rax', 'rtx v40; // rax', 'rtx v40; // rax']
['rtx v4; // rbx', 'rtx v40; // rbx', 'rtx v41; // rax', 'rtx v47; // rbx', 'rtx v31; // rbx', 'rtx v11; // rbx', 'rtx v61; // rbx']
['rtx v4; // rbx', 'rtx v83; // rbx', 'rtx v23; // rbx', 'rtx v40; // rbx', 'rtx v47; // rbx', 'rtx v53; // rbx', 'rtx v13; // rbx', 'rtx v43; // rax', 'rtx v43; // rcx']
['rtx y1; // [rsp+18h] [rbp-40h]']
['( machine_mode)*( unsigned __int8 *)( v5 + 2),']
['( machine_mode)*( unsigned __int8 *)( v2.rtwint + 2));']
['v1 = spelling_0;']
['v3 = spelling_0 - spelling_base;']
['spelling_0 = 0LL;', 'spelling_0 = 0LL;']
['v4 = convert_modes( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), ptr_mode, size, 1);']
['v10 = copy_to_mode_reg( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v4);']
['( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),']
['while ( constructor_stack_0->implicit )', 'while ( constructor_stack_0->implicit )', 'while ( constructor_stack_0->implicit )']
['v2 = constructor_stack_0;', 'v2 = constructor_stack_0;', 'v2 = constructor_stack_0;']
['constructor_stack_0 = v6;']
['constructor_depth = spelling_0 - spelling_base;', 'constructor_depth = spelling_0 - spelling_base;']
['v1->prev = constructor_range_stack_0;']
['constructor_range_stack_0 = 0LL;', 'constructor_range_stack_0 = 0LL;', 'constructor_range_stack_0 = 0LL;']
['v24 = ( tree_node *)*( &global_trees + 17);']
['v24 = ( tree_node *)*( &global_trees + 17);']
['if ( constructor_range_stack_0 )', 'if ( constructor_range_stack_0 )', 'if ( constructor_range_stack_0 )', 'if ( constructor_range_stack_0 )', 'if ( constructor_range_stack_0 )']
['v2 = constructor_stack_0;', 'v2 = constructor_stack_0;', 'v2 = constructor_stack_0;']
['constructor_range_stack_0 = v1;']
['rtx rtwint; // rax']
['rtx *v31; // rax', 'rtx *v51; // r15']
['rtx v46; // rsi', 'rtx v34; // rsi', 'rtx v39; // rsi', 'rtx v66; // rsi', 'rtx v76; // rsi']
['rtx v47; // rax', 'rtx v47; // rax']
['rtx *v22; // r15', 'rtx *v57; // r15', 'rtx *v51; // r15']
['rtx v59; // rdx', 'rtx v5; // rdi', 'rtx v9; // rdi']
['rtx *v42; // r12', 'rtx *v22; // r15']
['i = ( tree_node *)high[3];', 'v16 = ( tree_node *)i[4];', 'v60 = ( tree_node *)i[4];', 'v8 = ( tree_node *)high[4];', 'v17 = ( tree_node *)rtl[7];', 'v9 = ( tree_node *)i[4];', 'v9 = ( tree_node *)memref[1];', 'v9 = ( tree_node *)high[4];', 'v28 = ( tree_node *)i[4];', 'v6 = ( tree_node *)ref[1];']
['v4 = *( tree_node **)( v3.rtwint + 8);']
['( machine_mode)*( unsigned __int8 *)( v2.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v2.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v2.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v2.rtwint + 2),']
['( machine_mode)*( unsigned __int8 *)( v2.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v2.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v2.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v2.rtwint + 2),']
['v8 = ( const char *)&unk_6F6150;']
['v8 = ( const char *)&unk_6F6128;']
['v8 = ( const char *)&unk_6F6128;']
['v16 = ( const char *)&off_6E0C7E;']
['put_reg_into_stack( v6, rtl, decl->common.type, v5, ( machine_mode)supercontext_low, volatile_p, 0, v2, 0LL);']
['v3 = ( int)( ( double)( qty_0[v2].size * qty_0[v2].freq * floor_log2_wide( qty_0[v2].n_refs))', 'v3 = ( int)( ( double)( qty_0[v2].size * qty_0[v2].freq * floor_log2_wide( qty_0[v2].n_refs))', 'v3 = ( int)( ( double)( qty_0[v2].size * qty_0[v2].freq * floor_log2_wide( qty_0[v2].n_refs))']
['v3 = ( int)( ( double)( qty_0[v2].size * qty_0[v2].freq * floor_log2_wide( qty_0[v2].n_refs))', 'v3 = ( int)( ( double)( qty_0[v2].size * qty_0[v2].freq * floor_log2_wide( qty_0[v2].n_refs))', 'v3 = ( int)( ( double)( qty_0[v2].size * qty_0[v2].freq * floor_log2_wide( qty_0[v2].n_refs))']
['v3 = ( int)( ( double)( qty_0[v2].size * qty_0[v2].freq * floor_log2_wide( qty_0[v2].n_refs))', 'v3 = ( int)( ( double)( qty_0[v2].size * qty_0[v2].freq * floor_log2_wide( qty_0[v2].n_refs))', 'v3 = ( int)( ( double)( qty_0[v2].size * qty_0[v2].freq * floor_log2_wide( qty_0[v2].n_refs))']
['/ ( double)( qty_0[v2].death - qty_0[v2].birth)', '/ ( double)( qty_0[v2].death - qty_0[v2].birth)']
['/ ( double)( qty_0[v2].death - qty_0[v2].birth)', '/ ( double)( qty_0[v2].death - qty_0[v2].birth)']
['- ( int)( ( double)( qty_0[v4].size * qty_0[v4].freq * floor_log2_wide( qty_0[v4].n_refs))', '- ( int)( ( double)( qty_0[v4].size * qty_0[v4].freq * floor_log2_wide( qty_0[v4].n_refs))', '- ( int)( ( double)( qty_0[v4].size * qty_0[v4].freq * floor_log2_wide( qty_0[v4].n_refs))', '- ( int)( ( double)( qty_0[v6].size * qty_0[v6].freq * floor_log2_wide( qty_0[v6].n_refs))', '- ( int)( ( double)( qty_0[v6].size * qty_0[v6].freq * floor_log2_wide( qty_0[v6].n_refs))', '- ( int)( ( double)( qty_0[v6].size * qty_0[v6].freq * floor_log2_wide( qty_0[v6].n_refs))']
['- ( int)( ( double)( qty_0[v4].size * qty_0[v4].freq * floor_log2_wide( qty_0[v4].n_refs))', '- ( int)( ( double)( qty_0[v4].size * qty_0[v4].freq * floor_log2_wide( qty_0[v4].n_refs))', '- ( int)( ( double)( qty_0[v4].size * qty_0[v4].freq * floor_log2_wide( qty_0[v4].n_refs))', '- ( int)( ( double)( qty_0[v6].size * qty_0[v6].freq * floor_log2_wide( qty_0[v6].n_refs))', '- ( int)( ( double)( qty_0[v6].size * qty_0[v6].freq * floor_log2_wide( qty_0[v6].n_refs))', '- ( int)( ( double)( qty_0[v6].size * qty_0[v6].freq * floor_log2_wide( qty_0[v6].n_refs))']
['- ( int)( ( double)( qty_0[v4].size * qty_0[v4].freq * floor_log2_wide( qty_0[v4].n_refs))', '- ( int)( ( double)( qty_0[v4].size * qty_0[v4].freq * floor_log2_wide( qty_0[v4].n_refs))', '- ( int)( ( double)( qty_0[v4].size * qty_0[v4].freq * floor_log2_wide( qty_0[v4].n_refs))', '- ( int)( ( double)( qty_0[v6].size * qty_0[v6].freq * floor_log2_wide( qty_0[v6].n_refs))', '- ( int)( ( double)( qty_0[v6].size * qty_0[v6].freq * floor_log2_wide( qty_0[v6].n_refs))', '- ( int)( ( double)( qty_0[v6].size * qty_0[v6].freq * floor_log2_wide( qty_0[v6].n_refs))']
['/ ( double)( qty_0[v2].death - qty_0[v2].birth)', '/ ( double)( qty_0[v2].death - qty_0[v2].birth)', '/ ( double)( qty_0[v4].death - qty_0[v4].birth)', '/ ( double)( qty_0[v4].death - qty_0[v4].birth)', '/ ( double)( qty_0[v6].death - qty_0[v6].birth)', '/ ( double)( qty_0[v6].death - qty_0[v6].birth)']
['/ ( double)( qty_0[v2].death - qty_0[v2].birth)', '/ ( double)( qty_0[v2].death - qty_0[v2].birth)', '/ ( double)( qty_0[v4].death - qty_0[v4].birth)', '/ ( double)( qty_0[v4].death - qty_0[v4].birth)', '/ ( double)( qty_0[v6].death - qty_0[v6].birth)', '/ ( double)( qty_0[v6].death - qty_0[v6].birth)']
['LODWORD( v5) = ( int)( ( double)( *( int *)( ( char *)&qty_0->size + v5)']
['* *( int *)( ( char *)&qty_0->freq + v5)']
['* floor_log2_wide( *( int *)( ( char *)&qty_0->n_refs + v5)))']
['/ ( double)( *( int *)( ( char *)&qty_0->death + v5) - *( int *)( ( char *)&qty_0->birth + v5))', '/ ( double)( *( int *)( ( char *)&qty_0->death + v5) - *( int *)( ( char *)&qty_0->birth + v5))']
['/ ( double)( *( int *)( ( char *)&qty_0->death + v5) - *( int *)( ( char *)&qty_0->birth + v5))', '/ ( double)( *( int *)( ( char *)&qty_0->death + v5) - *( int *)( ( char *)&qty_0->birth + v5))']
['- ( int)( ( double)( qty_0[v6].size * qty_0[v6].freq * floor_log2_wide( qty_0[v6].n_refs))', '- ( int)( ( double)( qty_0[v6].size * qty_0[v6].freq * floor_log2_wide( qty_0[v6].n_refs))', '- ( int)( ( double)( qty_0[v6].size * qty_0[v6].freq * floor_log2_wide( qty_0[v6].n_refs))']
['- ( int)( ( double)( qty_0[v6].size * qty_0[v6].freq * floor_log2_wide( qty_0[v6].n_refs))', '- ( int)( ( double)( qty_0[v6].size * qty_0[v6].freq * floor_log2_wide( qty_0[v6].n_refs))', '- ( int)( ( double)( qty_0[v6].size * qty_0[v6].freq * floor_log2_wide( qty_0[v6].n_refs))']
['- ( int)( ( double)( qty_0[v6].size * qty_0[v6].freq * floor_log2_wide( qty_0[v6].n_refs))', '- ( int)( ( double)( qty_0[v6].size * qty_0[v6].freq * floor_log2_wide( qty_0[v6].n_refs))', '- ( int)( ( double)( qty_0[v6].size * qty_0[v6].freq * floor_log2_wide( qty_0[v6].n_refs))']
['/ ( double)( qty_0[v6].death - qty_0[v6].birth)', '/ ( double)( qty_0[v6].death - qty_0[v6].birth)']
['/ ( double)( qty_0[v6].death - qty_0[v6].birth)', '/ ( double)( qty_0[v6].death - qty_0[v6].birth)']
['v23 = ( tree_node *)*( &global_trees + 12);', 'v17 = ( tree_node *)*( &global_trees + 12);']
['v18 = ( tree_node *)*( &global_trees + 11);', 'v17 = ( tree_node *)*( &global_trees + 11);']
['aka = ( tree_node *)prev_try->aka;']
['v8 = ( tree_node *)prev_try->aka;']
['if ( ( sch_istable[( unsigned __int8)ch_0] & 0xC00) == 0 )']
['if ( v6 == -1 || ( sch_istable[( unsigned __int8)v6] & 0xC00) != 0 )']
['while ( ( sch_istable[v3] & 4) != 0 )']
['if ( ( sch_istable[( unsigned __int8)v9] & 0xC00) == 0 )']
['while ( v10 != -1 && ( sch_istable[( unsigned __int8)v10] & 1) != 0 );']
['if ( in_section_0 != in_bss )', 'if ( in_section_0 != in_text )']
['in_section_0 = in_bss;', 'in_section_0 = in_text;']
['v12 = lookup( v6, v11 & 0x1F, ( machine_mode)v8);']
['v12 = lookup( v6, v11 & 0x1F, ( machine_mode)v8);']
['constructor_stack_0 = v2;']
['constructor_depth = spelling_0 - spelling_base;', 'constructor_depth = spelling_0 - spelling_base;']
['v9 = ( tree_node *)*( &global_trees + 17);']
['rtx i; // rax']
['for ( i = cfun->expr->x_forced_labels; i; i = ( rtx)i[1] )', 'for ( i = cfun->expr->x_forced_labels; i; i = ( rtx)i[1] )', 'for ( i = cfun->expr->x_forced_labels; i; i = ( rtx)i[1] )']
['for ( i = cfun->expr->x_forced_labels; i; i = ( rtx)i[1] )', 'for ( i = cfun->expr->x_forced_labels; i; i = ( rtx)i[1] )', 'for ( i = cfun->expr->x_forced_labels; i; i = ( rtx)i[1] )']
['for ( i = cfun->expr->x_forced_labels; i; i = ( rtx)i[1] )', 'for ( i = cfun->expr->x_forced_labels; i; i = ( rtx)i[1] )', 'for ( i = cfun->expr->x_forced_labels; i; i = ( rtx)i[1] )']
['v6.rtwint = ( __int64)i->fld[0];']
['rtx v10; // rax', 'rtx v10; // rax', 'rtx v10; // rax', 'rtx v17; // rax', 'rtx v10; // rax', 'rtx v10; // rax', 'rtx v10; // rax', 'rtx v17; // rax', 'rtx v10; // rax', 'rtx v17; // rax', 'rtx v17; // rax']
['rtx v17; // rax', 'rtx v17; // rax', 'rtx v17; // rax', 'rtx v17; // rax']
['rtx v19; // rdx']
['rtx v27; // rax', 'rtx v27; // rax']
['rtx v27; // rax', 'rtx v27; // rax', 'rtx v79; // rax']
['rtx v12; // rdx']
['rtx v48; // rdx']
['rtx v55; // rdx']
['recog_data_0.insn = 0LL;', 'recog_data_0.insn = 0LL;', 'recog_data_0.insn = 0LL;', 'recog_data_0.insn = 0LL;']
['rtx s1; // [rsp+0h] [rbp-48h]', 'rtx op; // [rsp+0h] [rbp-48h]', 'rtx x; // [rsp+10h] [rbp-48h]']
['rtx s1; // [rsp+0h] [rbp-48h]', 'rtx op; // [rsp+0h] [rbp-48h]', 'rtx opa; // [rsp+0h] [rbp-48h]', 'rtx opb; // [rsp+0h] [rbp-48h]', 'rtx opc; // [rsp+0h] [rbp-48h]', 'rtx x; // [rsp+10h] [rbp-48h]']
['rtx opc; // [rsp+0h] [rbp-48h]']
['rtx opc; // [rsp+0h] [rbp-48h]']
['rtx opc; // [rsp+0h] [rbp-48h]']
['rtx opc; // [rsp+0h] [rbp-48h]']
['rtx s1; // [rsp+0h] [rbp-48h]', 'rtx op; // [rsp+0h] [rbp-48h]', 'rtx opa; // [rsp+0h] [rbp-48h]', 'rtx opb; // [rsp+0h] [rbp-48h]', 'rtx opc; // [rsp+0h] [rbp-48h]', 'rtx arg1; // [rsp+0h] [rbp-48h]', 'rtx x; // [rsp+10h] [rbp-48h]']
['recog_data_0.operand[0] = v17;', 'recog_data_0.operand[0] = v67;', 'recog_data_0.operand[0] = v67;']
['recog_data_0.operand[1] = ( rtx)v4;', 'recog_data_0.operand[1] = ( rtx)v4;', 'recog_data_0.operand[1] = ( rtx)v4;', 'recog_data_0.operand[1] = ( rtx)v4;', 'recog_data_0.operand[1] = ( rtx)v4;']
['recog_data_0.operand[1] = ( rtx)v54;', 'recog_data_0.operand[0] = ( rtx)v5;', 'recog_data_0.operand[2] = ( rtx)v24;', 'recog_data_0.operand[2] = ( rtx)v24;', 'recog_data_0.operand[0] = ( rtx)v4;', 'recog_data_0.operand[1] = ( rtx)v25;', 'recog_data_0.operand[1] = ( rtx)v25;', 'recog_data_0.operand[1] = ( rtx)v25;', 'recog_data_0.operand[1] = ( rtx)v25;']
['recog_data_0.operand[1] = v55;']
['recog_data_0.operand[2] = v33;']
['recog_data_0.operand[1] = ( rtx)v54;', 'recog_data_0.operand[0] = ( rtx)v5;', 'recog_data_0.operand[2] = ( rtx)v24;', 'recog_data_0.operand[2] = ( rtx)v24;', 'recog_data_0.operand[0] = ( rtx)v4;', 'recog_data_0.operand[1] = ( rtx)v25;', 'recog_data_0.operand[1] = ( rtx)v25;', 'recog_data_0.operand[1] = ( rtx)v25;', 'recog_data_0.operand[1] = ( rtx)v25;']
['recog_data_0.operand[1] = v278;', 'recog_data_0.operand[1] = v28;', 'recog_data_0.operand[1] = v28;']
['recog_data_0.operand[2] = v273;', 'recog_data_0.operand[2] = v26;']
['recog_data_0.operand[0] = v528;', 'recog_data_0.operand[0] = v528;', 'recog_data_0.operand[0] = v53;', 'recog_data_0.operand[1] = v52;', 'recog_data_0.operand[2] = v25;', 'recog_data_0.operand[2] = v282;', 'recog_data_0.operand[0] = v15;', 'recog_data_0.operand[0] = v5;', 'recog_data_0.operand[0] = v5;', 'recog_data_0.operand[0] = v82;', 'recog_data_0.operand[0] = v65;', 'recog_data_0.operand[0] = v82;', 'recog_data_0.operand[0] = v65;', 'recog_data_0.operand[0] = v276;', 'recog_data_0.operand[1] = v22;']
['recog_data_0.operand[0] = v528;', 'recog_data_0.operand[0] = v528;', 'recog_data_0.operand[0] = v53;', 'recog_data_0.operand[1] = v52;', 'recog_data_0.operand[2] = v25;', 'recog_data_0.operand[2] = v282;', 'recog_data_0.operand[0] = v15;', 'recog_data_0.operand[0] = v5;', 'recog_data_0.operand[0] = v5;', 'recog_data_0.operand[0] = v82;', 'recog_data_0.operand[0] = v65;', 'recog_data_0.operand[0] = v82;', 'recog_data_0.operand[0] = v65;', 'recog_data_0.operand[0] = v276;', 'recog_data_0.operand[1] = v22;']
['recog_data_0.operand[0] = v114;', 'recog_data_0.operand[2] = v118;', 'recog_data_0.operand[0] = v528;', 'recog_data_0.operand[0] = v528;', 'recog_data_0.operand[0] = v17;', 'recog_data_0.operand[2] = v16;', 'recog_data_0.operand[0] = v15;', 'recog_data_0.operand[0] = v8;', 'recog_data_0.operand[2] = v16;', 'recog_data_0.operand[2] = v16;', 'recog_data_0.operand[2] = v128;', 'recog_data_0.operand[1] = v16;', 'recog_data_0.operand[0] = v63;', 'recog_data_0.operand[0] = v65;', 'recog_data_0.operand[0] = v67;', 'recog_data_0.operand[0] = v194;', 'recog_data_0.operand[0] = v63;', 'recog_data_0.operand[0] = v65;', 'recog_data_0.operand[0] = v67;', 'recog_data_0.operand[0] = v14;', 'recog_data_0.operand[0] = v109;', 'recog_data_0.operand[0] = v123;', 'recog_data_0.operand[1] = v128;']
['if ( rtx_equal_p( *( rtx *)( v17 + 8), recog_data_0.operand[2]) )', 'if ( rtx_equal_p( *( rtx *)( v195 + 8), recog_data_0.operand[1]) )', 'if ( rtx_equal_p( *( rtx *)( v115 + 8), recog_data_0.operand[3]) )']
['recog_data_0.operand[0] = v8;']
['frees = undobuf_0.frees;', 'frees = undobuf_0.frees;']
['if ( undobuf_0.frees )', 'if ( undobuf_0.frees )']
['undobuf_0.frees = undobuf_0.frees->next;', 'undobuf_0.frees = undobuf_0.frees->next;', 'undobuf_0.frees = undobuf_0.frees->next;', 'undobuf_0.frees = undobuf_0.frees->next;']
['undobuf_0.frees = undobuf_0.frees->next;', 'undobuf_0.frees = undobuf_0.frees->next;', 'undobuf_0.frees = undobuf_0.frees->next;', 'undobuf_0.frees = undobuf_0.frees->next;']
['frees = undobuf_0.frees;', 'frees->next = undobuf_0.undos;', 'frees = undobuf_0.frees;', 'frees->next = undobuf_0.undos;']
['undobuf_0.undos = frees;', 'undobuf_0.undos = frees;']
['reg_dead_regno = v27;']
['reg_dead_flag = 0;', 'reg_dead_flag = 0;']
['reg_dead_endregno = v27 + 1;']
['v5 = ( ( unsigned int)( mode_class_0[v2] - 5) < 2) + 1;', 'v29 = ( ( unsigned int)( mode_class_0[v22] - 5) < 2) + 1;', 'v15 = ( ( unsigned int)( mode_class_0[v11] - 5) < 2) + 1;']
['reg_dead_flag = 0;', 'reg_dead_flag = 0;']
['reg_dead_endregno = v27 + 1;']
['if ( ++v28 >= reg_dead_endregno )']
['v28 = reg_dead_regno;']
['if ( reg_dead_flag )']
['if ( reg_dead_flag == 1 )']
['if ( find_regno_note( nonnote_insn, REG_DEAD, reg_dead_regno) )']
['v28 = reg_dead_regno;']
['v28 = reg_dead_regno;']
['v14 = &costs_0[x->fld[0].rtuint];']
['v9 = ix86_memory_move_cost( ( machine_mode)*( ( unsigned __int8 *)v5 + 2), dclass, 1);']
['v9 = ix86_memory_move_cost( ( machine_mode)*( ( unsigned __int8 *)v5 + 2), dclass, 1);']
['v5 += rtx_cost( x->fld[v6].rtx, ( rtx_code)v4);']
['v1 = lang_hooks_0.expand_constant( exp);', 'v30 = lang_hooks_0.expand_constant( exp);']
['v16 = ( tree_node *)i[4];', 'v60 = ( tree_node *)i[4];', 'v20 = ( tree_node *)v14[1];', 'v9 = ( tree_node *)i[4];', 'v23 = ( tree_node *)v22[7];', 'v28 = ( tree_node *)i[4];', 'v9 = ( tree_node *)v6[1];']
['v16 = ( tree_node *)i[4];', 'v60 = ( tree_node *)i[4];', 'v20 = ( tree_node *)v14[1];', 'v9 = ( tree_node *)i[4];', 'v23 = ( tree_node *)v22[7];', 'v28 = ( tree_node *)i[4];', 'v9 = ( tree_node *)v6[1];']
['v11 = ( ( unsigned int)( mode_class_0[v8] - 5) < 2) + 1;']
['rtx v19; // rax']
['rtx v20; // rbx']
['rtx rtwint; // rax']
['rtx v53; // rax']
['rtx dest; // [rsp+18h] [rbp-58h]', 'rtx targeta; // [rsp+8h] [rbp-50h]', 'rtx rega; // [rsp+38h] [rbp-40h]']
['rtx v30; // [rsp+3Ah] [rbp-C8h]', 'rtx q; // [rsp+20h] [rbp-48h]', 'rtx tem; // [rsp+30h] [rbp-68h]', 'rtx s1; // [rsp+0h] [rbp-48h]', 'rtx v21; // [rsp+10h] [rbp-68h]', 'rtx op; // [rsp+0h] [rbp-48h]', 'rtx opa; // [rsp+0h] [rbp-48h]', 'rtx opb; // [rsp+0h] [rbp-48h]', 'rtx opc; // [rsp+0h] [rbp-48h]', 'rtx set; // [rsp+10h] [rbp-48h]', 'rtx x; // [rsp+10h] [rbp-48h]']
['allocno_0[( __int64)v8].hard_reg_conflicts |= hard_regs_live;']
['v3 = allocno_0;']
['reg_set_0 **v5; // rax', 'reg_set_0 **v5; // rax']
['reg_set_0 **v5; // rax', 'reg_set_0 **v5; // rax']
['reg_set_table = ( reg_set_0 **)xrealloc( reg_set_table, ( unsigned int)( 8 * ( regno + 100)));']
['v5 = &reg_set_table[regno];']
['*( _QWORD *)object_base = *v5;']
['*v5 = ( reg_set_0 *)object_base;', '*v5 = ( reg_set_0 *)object_base;']
['*v5 = ( reg_set_0 *)object_base;', '*v5 = ( reg_set_0 *)object_base;']
['rtx valuea[8]; // [rsp+8h] [rbp-40h] BYREF']
['valuea[0] = value;']
['v11 = ( ( unsigned int)( mode_class_0[v8] - 5) < 2) + 1;']
['if ( valuea[0] )']
['if ( valuea[0] && insn && reg_overlap_mentioned_p( reg, valuea[0]) )', 'if ( valuea[0] && insn && reg_overlap_mentioned_p( reg, valuea[0]) )']
['v11 = value_2;', 'if ( valuea[0] )']
['if ( valuea[0] )']
['update_table_tick( valuea[0]);']
['v11 = value_2;', 'if ( valuea[0] )']
['v11 = value_2;', 'if ( valuea[0] )']
['v11 = value_2;', 'if ( valuea[0] )']
['v4 = gen_rtx_fmt_u00( LABEL_REF, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v3);', 'v11 = gen_rtx_fmt_u00( LABEL_REF, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v10);']
['rtx v21; // rax']
['v31 = ( ( unsigned int)( mode_class_0[v29] - 5) < 2) + 1;']
['v15 = ( ( unsigned int)( mode_class_0[v11] - 5) < 2) + 1;']
['if ( v67 >= 0 && ( v27 = recog_data_0.operand[v21], *( _WORD *)v27 == 61) )', 'if ( *( _DWORD *)( *( _QWORD *)&x[2] + 88LL) != ++v28 )']
['if ( *( rtx *)( i + 8) == v5 )', 'v26 = ( rtx *)*v10 + v25;']
['v21 = force_operand( v20->fld[0].rtx, rtx);']
['v16 = v9;', 'v16 = v9;', 'v21 = 0LL;', 'v11 = v6;', 'v11 = v6;']
['v31 = ( ( unsigned int)( mode_class_0[v29] - 5) < 2) + 1;', 'v29 = ( ( unsigned int)( mode_class_0[v22] - 5) < 2) + 1;']
['rtint = subreg_regno_offset( v14, ( machine_mode)*( unsigned __int8 *)( v13.rtwint + 2), v9, ( machine_mode)v6);', 'rtint = subreg_regno_offset( v14, ( machine_mode)*( unsigned __int8 *)( v13.rtwint + 2), v9, ( machine_mode)v6);']
['v13 = ( ( unsigned int)( mode_class_0[v11] - 5) < 2) + 1;', 'v17 = ( ( unsigned int)( mode_class_0[v15] - 5) < 2) + 1;', 'v10 = ( ( unsigned int)( mode_class_0[v6] - 5) < 2) + 1;', 'v16 = ( ( unsigned int)( mode_class_0[v18] - 5) < 2) + 1;', 'v15 = ( ( unsigned int)( mode_class_0[v11] - 5) < 2) + 1;']
['if ( reg_pref_0 )', 'if ( reg_pref_0 )', 'if ( reg_pref_0 )']
['return reg_pref_0[regno].altclass;']
['v13 = ( ( unsigned int)( mode_class_0[v11] - 5) < 2) + 1;']
['v17 = ( ( unsigned int)( mode_class_0[v15] - 5) < 2) + 1;']
['v14 = ( unsigned int)( mode_class_0[mode] - 5) <= 1;', 'v16 = ( unsigned int)( mode_class_0[mode] - 5) <= 1;', 'v10 = ( unsigned int)( mode_class_0[mode] - 5) <= 1;']
['v14 = ( unsigned int)( mode_class_0[mode] - 5) <= 1;', 'v16 = ( unsigned int)( mode_class_0[mode] - 5) <= 1;', 'v10 = ( unsigned int)( mode_class_0[mode] - 5) <= 1;']
['mark_life( rtint, ( machine_mode)*( ( unsigned __int8 *)reg + 2), 1);']
['post_mark_life( rtint, ( machine_mode)*( ( unsigned __int8 *)reg + 2), 1, birth, 2 * this_insn_number);']
['v1 = stack_0;']
['v10 = next_qty_0++;']
['v10 = next_qty_0++;']
['spelling_0 = v3 + 1;', 'spelling_0 = v5 + 1;', 'spelling_0 = v9 + 1;']
['recog_data_0.insn = 0LL;', 'recog_data_0.n_dups = 0;', 'recog_data_0.insn = 0LL;', 'recog_data_0.insn = 0LL;', 'reg_dead_flag = 0;', 'reg_dead_flag = 0;', 'reg_pref_0 = 0LL;', 'recog_data_0.insn = 0LL;']
['v14 = &qty_0[v11];']
['v12 = &qty_0[v11];', 'v14 = &qty_0[v11];', 'v15 = &qty_0[v11];']
['qty_0[v6].death = -1;']
['( machine_mode)*( unsigned __int8 *)( v11.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v11.rtwint + 2),']
['( machine_mode)*( ( unsigned __int8 *)rtx + 2));', '( machine_mode)*( ( unsigned __int8 *)rtx + 2));']
['v17 = ( ( unsigned int)( mode_class_0[v15] - 5) < 2) + 1;']
['( machine_mode)*( unsigned __int8 *)( v11.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v11.rtwint + 2),']
['( machine_mode)*( ( unsigned __int8 *)rtx + 2));', '( machine_mode)*( ( unsigned __int8 *)rtx + 2));']
['v13 = ( ( unsigned int)( mode_class_0[v11] - 5) < 2) + 1;', 'v17 = ( ( unsigned int)( mode_class_0[v15] - 5) < 2) + 1;', 'v16 = ( ( unsigned int)( mode_class_0[v18] - 5) < 2) + 1;', 'v15 = ( ( unsigned int)( mode_class_0[v11] - 5) < 2) + 1;']
['if ( reg_pref_0 )', 'if ( reg_pref_0 )', 'if ( reg_pref_0 )']
['return reg_pref_0[regno].prefclass;']
['if ( reg_note )', 'if ( reg_note )', 'if ( reg_note )', 'if ( reg_note )']
['v30 = *( _WORD *)reg_note->fld[0].rtwint;']
['v33 = ( ( unsigned int)( mode_class_0[*( ( unsigned __int8 *)v29 + 2)] - 5) < 2) + 1;', 'v20 = ( ( unsigned int)( mode_class_0[*( ( unsigned __int8 *)v22 + 2)] - 5) < 2) + 1;']
['v16 = ( ( unsigned int)( mode_class_0[*( ( unsigned __int8 *)v4 + 2)] - 5) < 2) + 1;', 'v33 = ( ( unsigned int)( mode_class_0[*( ( unsigned __int8 *)v29 + 2)] - 5) < 2) + 1;', 'v20 = ( ( unsigned int)( mode_class_0[*( ( unsigned __int8 *)v22 + 2)] - 5) < 2) + 1;']
['rtx = v4;', 'stack_0 = v2;']
['memset( costs_0, 0, 104LL * nregs);']
['reg_pref_0 = reg_pref_buffer;', 'reg_pref_0 = reg_pref_buffer;']
['v23 = reg_set_table[v18];', 'v5 = mode_class_0[v3];', 'v15 = mode_class_0[mode];', 'v15 = mode_class_0[mode];', 'v19 = reg_equiv_mem[rtint];']
['fprintf( dump, " MEM:%i\\n", ( unsigned int)costs_0[v6 / 0x68].mem_cost);']
['fprintf( dump, " MEM:%i\\n", ( unsigned int)costs_0[v6 / 0x68].mem_cost);']
['v23 = &costs_0[n];']
['v24 = &reg_pref_0[n];', 'v22 = &reg_pref_0[n];']
['fprintf( v1, "%s, ", reg_class_names_0[*( ( int *)v2 + 4)]);']
['v24 = &reg_pref_0[n];', 'v22 = &reg_pref_0[n];']
['fprintf( dump, " pref %s or none\\n", reg_class_names_1[v16]);']
['v24 = &reg_pref_0[n];', 'v22 = &reg_pref_0[n];']
['free( costs_0);']
['reg_pref_0 = 0LL;']
['if ( mode_class_0[v12] == MODE_FLOAT )']
['rtx regno_note; // rbp']
['rtx v22; // rax', 'rtx v22; // rax', 'rtx v122; // rbx']
['rtx v10; // r13', 'rtx v13; // r12', 'rtx v13; // r12', 'rtx v12; // r12', 'rtx v14; // r13', 'rtx v13; // r12', 'rtx v123; // rdx', 'rtx v15; // r13', 'rtx v153; // r12', 'rtx v11; // r13', 'rtx v12; // r12', 'rtx v14; // r13', 'rtx v121; // r12', 'rtx v12; // r12']
['rtx v125; // rbx']
['rtx real_insn; // r15', 'rtx real_insn; // r12']
['rtx v27; // rax', 'rtx v27; // rax', 'rtx v17; // rax', 'rtx v17; // rax', 'rtx v17; // rax', 'rtx v17; // rax']
['rtx v13; // rdi', 'rtx v14; // rsi', 'rtx v119; // rsi', 'rtx v40; // rsi', 'rtx v18; // rsi', 'rtx v34; // rsi', 'rtx v39; // rsi', 'rtx v109; // rsi', 'rtx v60; // rsi', 'rtx v43; // rsi']
['rtx v143; // rax', 'rtx v145; // rax', 'rtx v110; // r12', 'rtx v120; // rbp']
['rtx v14; // rsi', 'rtx v43; // rsi']
['v7 = ( ( unsigned int)( mode_class_0[mode] - 5) < 2) + 1;', 'v7 = ( ( unsigned int)( mode_class_0[mode] - 5) < 2) + 1;', 'v7 = ( ( unsigned int)( mode_class_0[mode] - 5) < 2) + 1;']
['closed_chains = 0LL;']
['open_chains = 0LL;']
['n_operands = recog_data_0.n_operands;', 'n_operands = recog_data_0.n_operands;', 'n_operands = recog_data_0.n_operands;', 'n_operands = recog_data_0.n_operands;']
['if ( recog_data_0.n_operands > 0 )', 'if ( recog_data_0.n_operands > 0 )', 'if ( recog_data_0.n_operands > 0 )', 'if ( recog_data_0.n_operands > 0 )', 'if ( recog_data_0.n_operands > 0 )', 'if ( recog_data_0.n_operands > 0 )']
['v2 = ( reg_class *)( 32LL * which_alternative + 9844808);']
['if ( recog_data_0.operand_type[v54] == OP_OUT']
['recog_data_0.operand_type[v1] = OP_INOUT;']
['v3 = recog_data_0.operand_loc[v1];']
['v47 = recog_data_0.operand_type[v54];']
['to[v5] = ( HARD_REG_ELT_TYPE)recog_data_0.operand[v5];']
['if ( *recog_data_0.constraints[v21] )', 'if ( *recog_data_0.constraints[v5] )']
['*recog_data_0.operand_loc[v5] = global_rtl[1];']
['n_operands = recog_data_0.n_operands;', 'n_operands = recog_data_0.n_operands;', 'n_operands = recog_data_0.n_operands;', 'n_operands = recog_data_0.n_operands;']
['page_group_0 *v3; // rbx', 'page_group_0 *v3; // rbx']
['page_group_0 *v3; // rbx', 'page_group_0 *v3; // rbx']
['v1 = ( page_entry_0 *)( &G + 2640);']
['v3 = ( page_group_0 *)( &G + 2648);', 'v3 = ( page_group_0 *)( &G + 2648);']
['v3 = ( page_group_0 *)( &G + 2648);', 'v3 = ( page_group_0 *)( &G + 2648);']
['v3 = page_groups;']
['v3->next = page_groups->next;']
['page_groups = v3->next;']
['while ( v3->next );']
['rtx *v19; // rbp', 'rtx *v23; // rbp', 'rtx *v19; // rbp', 'rtx *v24; // rbp', 'rtx *v21; // rbp', 'rtx *v25; // rbp']
['rtx v11; // r13']
['rtx *v26; // r14', 'rtx v5; // r14', 'rtx v35; // r15', 'rtx *v50; // r14']
['rtx v38; // rax', 'rtx v38; // rax', 'rtx v38; // rax', 'rtx v38; // rax', 'rtx v38; // rax']
['rtx v4; // rbx', 'rtx v40; // rbx', 'rtx v47; // rbx', 'rtx v14; // rbx', 'rtx v14; // rbx', 'rtx v44; // rax', 'rtx v64; // rbx']
['rtx i; // rbx', 'rtx k; // rbx', 'rtx i; // rbx', 'rtx i; // rbx', 'rtx j; // rbx', 'rtx k; // rbx', 'rtx m; // rbx', 'rtx j; // rbx']
['rtx v5; // r12', 'rtx v50; // r12', 'rtx v19; // r12', 'rtx v29; // r12']
['rtx v72; // rcx', 'rtx v92; // rax', 'rtx v7; // rax', 'rtx v73; // rax', 'rtx v42; // rax', 'rtx v22; // rax', 'rtx v42; // rax', 'rtx v42; // rax', 'rtx v76; // rax', 'rtx v79; // rax', 'rtx v82; // rax', 'rtx v22; // rax', 'rtx v42; // rax', 'rtx v7; // rax', 'rtx v42; // rax', 'rtx v75; // rax']
['rtx *v19; // rbp', 'rtx v19; // rbx', 'rtx *v19; // rbp', 'rtx *v48; // rbx', 'rtx v14; // rbx', 'rtx v14; // rbx', 'rtx *v16; // rbx']
['rtx v161; // rax']
['rtx v40; // rax', 'rtx v40; // rax', 'rtx v40; // rax', 'rtx v40; // rax']
['rtx v43; // rax']
['rtx v4; // rbp', 'rtx v5; // rbp', 'rtx v4; // rbp']
['rtx v6; // r13', 'rtx v56; // r13']
['rtx v19; // rbx', 'rtx v40; // rbx', 'rtx v41; // r15', 'rtx v42; // rax', 'rtx v59; // rdx', 'rtx v19; // r15', 'rtx v40; // rax', 'rtx v41; // rax', 'rtx v42; // rax', 'rtx v19; // r12', 'rtx v46; // rsi', 'rtx v29; // r12', 'rtx v39; // rax', 'rtx v40; // r12', 'rtx v42; // rax', 'rtx v47; // rbx', 'rtx v79; // rax', 'rtx v19; // r15', 'rtx v48; // rdx', 'rtx v40; // rsi', 'rtx v19; // rax', 'rtx v40; // rax', 'rtx v42; // rax', 'rtx v19; // rdx', 'rtx v39; // rax', 'rtx v40; // rax', 'rtx v44; // r12', 'rtx v46; // rax', 'rtx v40; // rax', 'rtx v44; // rax', 'rtx v47; // rax', 'rtx v39; // rsi', 'rtx v42; // rax', 'rtx v44; // r12', 'rtx v48; // rax', 'rtx v43; // rax', 'rtx v45; // rax', 'rtx v47; // rax', 'rtx v43; // rsi', 'rtx v40; // r15', 'rtx v44; // r14', 'rtx v45; // r15', 'rtx v47; // rsi', 'rtx v41; // rsi', 'rtx v59; // rbp', 'rtx v39; // rbx', 'rtx v43; // rcx']
['rtx v20; // rbp', 'rtx v20; // rbp', 'rtx v30; // rbp', 'rtx v5; // rbp', 'rtx v53; // rbp', 'rtx v58; // rbp', 'rtx v59; // rbp']
['rtx v53; // rax']
['rtx v54; // rsi']
['rtx *v70; // rax']
['rtx *v11; // rbp']
['$46E27178171750CEF28E8B43DEBEAD96 *v26; // r8', '$46E27178171750CEF28E8B43DEBEAD96 *v26; // r8']
['$46E27178171750CEF28E8B43DEBEAD96 *v26; // r8', '$46E27178171750CEF28E8B43DEBEAD96 *v26; // r8']
['rtx v20; // rdi']
['v14 = ( unsigned int)( mode_class_0[mode] - 5) <= 1;', 'v16 = ( unsigned int)( mode_class_0[mode] - 5) <= 1;', 'v10 = ( unsigned int)( mode_class_0[mode] - 5) <= 1;']
['if ( ( unsigned int)( mode_class_0[v6] - 5) <= 1 )']
['v15 = reg_set_table[rtuint];']
['v15 = v15->next;', 'v15 = v15->next;']
['value_2 = v14;']
['old_set = v8;', 'v16 = v9;', 'v16 = v9;', 'v7->mem = x;']
['value_2 = v14;']
['if ( rtx_equal_p( v6, reg_state[( int)rtuint].offset) )']
['rtx last_insn; // rbx', 'rtx last_insn; // rbx', 'rtx last_insn; // rbx']
['rtx *v21; // rbp']
['$46E27178171750CEF28E8B43DEBEAD96 *v26; // r8', '$46E27178171750CEF28E8B43DEBEAD96 *v26; // r8']
['$46E27178171750CEF28E8B43DEBEAD96 *v26; // r8', '$46E27178171750CEF28E8B43DEBEAD96 *v26; // r8']
['rtx v40; // rax', 'rtx v40; // rax', 'rtx v40; // rax', 'rtx v40; // rax']
['rtx v4; // rbx', 'rtx v40; // rbx', 'rtx v41; // rax', 'rtx v47; // rbx', 'rtx v31; // rbx', 'rtx v11; // rbx', 'rtx v61; // rbx']
['rtx v42; // rax', 'rtx v42; // rax', 'rtx v42; // rax', 'rtx v42; // rax', 'rtx v42; // rax']
['rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax']
['rtx v6; // r13', 'rtx v6; // r12', 'rtx v34; // r12', 'rtx v67; // r12', 'rtx v14; // r12', 'rtx v14; // r13', 'rtx v6; // r12', 'rtx v74; // r12', 'rtx v44; // r12', 'rtx v14; // r13', 'rtx v84; // r12', 'rtx v14; // r12', 'rtx v44; // r12', 'rtx v44; // r14', 'rtx v64; // rbp', 'rtx v64; // rdx', 'rtx v64; // rbx']
['rtx v66; // rsi']
['v9 = ix86_memory_move_cost( ( machine_mode)*( ( unsigned __int8 *)v5 + 2), dclass, 1);']
['( machine_mode)*( ( unsigned __int8 *)v4 + 2),', '( machine_mode)*( ( unsigned __int8 *)v4 + 2),', '( machine_mode)*( ( unsigned __int8 *)v4 + 2),']
['v10 = cselib_lookup( v5, ( machine_mode)*( unsigned __int8 *)( set->fld[0].rtwint + 2), 0);']
['( machine_mode)*( ( unsigned __int8 *)loc + 2),']
['*( _QWORD *)&src->end[4] = v15;']
['*( _QWORD *)&v14[1] = rtx;', '*( _QWORD *)&v10[1] = v8;', '*( _QWORD *)&v10[1] = v11;', '*( _QWORD *)&v11[1] = v10;']
['*( _QWORD *)&src->end[4] = v15;']
['if ( *( _OWORD *)v6->bits != 0LL )']
['v19 = ( tree_node *)v9[13];']
['v15 = *( tree_node **)( v10 + 64);']
['v23 = ( tree_node *)v25;', 'v23 = ( tree_node *)v25;']
['if ( use == sibcall_use_tail_recursion_0 )']
['else if ( use == sibcall_use_sibcall_0 )']
['if ( use != sibcall_use_normal_0 )']
['rtx v4; // rbx', 'rtx v4; // rbp', 'rtx v4; // rax', 'rtx v4; // rax', 'rtx v4; // rax', 'rtx v4; // rbp']
['rtx v5; // rax', 'rtx v5; // rax', 'rtx v5; // rax']
['if ( !rtx_equal_p( rtx, memref->fld[0].rtx) || ( v6 = memref, *( ( unsigned __int8 *)memref + 2) != v4) )']
['v6 = gen_rtx_MEM( v4, rtx);']
['*( _QWORD *)&v14[1] = rtx;', '*( _QWORD *)&v10[1] = v11;', '*( _QWORD *)&v11[1] = v10;']
['v6 = v5;', 'v6 = v5;', 'v4 = v2;', 'v4 = v6;']
['v6 = v5;', 'v6 = v5;', 'v4 = v2;', 'v4 = v6;']
['v7 = *( ( _BYTE *)memref + 3) & 8 | *( ( _BYTE *)v6 + 3) & 0xF7;']
['v7 = *( ( _BYTE *)memref + 3) & 8 | *( ( _BYTE *)v6 + 3) & 0xF7;']
['*( ( _BYTE *)v6 + 3) = v7;', '*( ( _BYTE *)v6 + 3) = v8;', '*( ( _BYTE *)v6 + 3) = v9;']
['*( ( _BYTE *)v6 + 3) = v7;', '*( ( _BYTE *)v6 + 3) = v8;', '*( ( _BYTE *)v6 + 3) = v9;']
['v7 = *( ( _BYTE *)memref + 3) & 8 | *( ( _BYTE *)v6 + 3) & 0xF7;']
['v7 = *( ( _BYTE *)memref + 3) & 8 | *( ( _BYTE *)v6 + 3) & 0xF7;']
['*( ( _BYTE *)v6 + 3) = v7;', '*( ( _BYTE *)v6 + 3) = v8;', '*( ( _BYTE *)v6 + 3) = v9;']
['*( ( _BYTE *)v6 + 3) = v7;', '*( ( _BYTE *)v6 + 3) = v8;', '*( ( _BYTE *)v6 + 3) = v9;']
['v7 = *( ( _BYTE *)memref + 3) & 8 | *( ( _BYTE *)v6 + 3) & 0xF7;']
['rtx v9; // rax', 'rtx v9; // rax']
['rtx *v16; // rbx']
['rtx v105; // rdx']
['rtx v16; // rdx']
['rtx v20; // rax', 'rtx v20; // rax', 'rtx v20; // rax', 'rtx v20; // rax']
['v8 = eliminate_constant_term( v3, &constant_term);']
['rtx = v4;', 'rtx = v6;']
['if ( rtx == v7 )', 'if ( rtx == v5 )']
['v19 = reg_equiv_mem[rtint];']
['v19 = reg_equiv_mem[rtint];']
['v19 = reg_equiv_mem[rtint];']
['v6 = v5;', 'v6 = v5;', 'last = v13;', 'head = v8;', 'end = v9;', 'v14 = v25;', 'v5 = v10;', 'v5 = v10;', 'v15 = v14;', 'v15 = v14;', 'v6 = v10;', 'v9 = v10;', 'v10 = v5;', 'v10 = v5;', 'v10 = v5;', 'v10 = v5;', 'i = v5;', 'v7 = v11;', 'rtx = v10;']
['*loc = gen_rtx_MEM( ( machine_mode)*( ( unsigned __int8 *)v12 + 2), v15);']
['*loc = gen_rtx_MEM( ( machine_mode)*( ( unsigned __int8 *)v12 + 2), v15);']
['if ( ( mode_class_0[v4] & 0xFFFFFFFB) != 2 )']
['( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),']
['( machine_mode)*( unsigned __int8 *)( v9.rtwint + 2),']
['( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),']
['( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2),']
['( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),']
['( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2));', '( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2));']
['rtx last_insn; // r12']
['rtx j; // r12']
['rtx v127; // rbp', 'rtx v120; // rbp']
['last_insn = get_last_insn( );', 'last_insn = get_last_insn( );', 'last_insn = get_last_insn( );']
['if ( last_insn )', 'if ( last_insn )', 'if ( last_insn )', 'if ( last_insn )']
['j = 0LL;']
['v12 = 0LL;']
['while ( *( _WORD *)last_insn != 33 )']
['if ( last_insn[2].fld[0].rtint == -89 )']
['j = last_insn;', 'j = last_insn;']
['j = last_insn;', 'j = last_insn;']
['last_insn = ( rtx)last_insn[1];']
['if ( last_insn )', 'if ( last_insn )', 'if ( last_insn )', 'if ( last_insn )']
['else if ( contains( last_insn, v8) )']
['v10 = last_insn;', 'v10 = last_insn;', 'v10 = last_insn;', 'v10 = last_insn;']
['v10 = last_insn;', 'v10 = last_insn;', 'v10 = last_insn;', 'v10 = last_insn;']
['if ( ( sch_istable[v13] & 4) == 0 )']
['while ( ( sch_istable[v9] & 4) != 0 );']
['v16 = ( tree_node *)i[4];', 'v28 = ( tree_node *)i[4];']
['sprintf( p, &off_6376D2[1], v6);']
['v6 = prefixes_18[v3][( BYTE2( decl->block.supercontext) & 8) != 0];']
['timevar_push( TV_REST_OF_COMPILATION_0);']
['timevar_push( TV_INTEGRATION_0);', 'timevar_push( TV_INTEGRATION_0);', 'timevar_push( TV_INTEGRATION_0);']
['timevar_pop( TV_INTEGRATION_0);', 'timevar_pop( TV_INTEGRATION_0);', 'timevar_pop( TV_INTEGRATION_0);', 'timevar_pop( TV_INTEGRATION_0);']
['timevar_push( TV_INTEGRATION_0);', 'timevar_push( TV_INTEGRATION_0);', 'timevar_push( TV_INTEGRATION_0);']
['timevar_pop( TV_INTEGRATION_0);', 'timevar_pop( TV_INTEGRATION_0);', 'timevar_pop( TV_INTEGRATION_0);', 'timevar_pop( TV_INTEGRATION_0);']
['timevar_push( TV_JUMP_0);', 'timevar_push( TV_JUMP_0);', 'timevar_push( TV_JUMP_0);']
['timevar_pop( TV_JUMP_0);', 'timevar_pop( TV_JUMP_0);', 'timevar_pop( TV_JUMP_0);']
['timevar_push( TV_JUMP_0);', 'timevar_push( TV_JUMP_0);', 'timevar_push( TV_JUMP_0);']
['timevar_pop( TV_JUMP_0);', 'timevar_pop( TV_JUMP_0);', 'timevar_pop( TV_JUMP_0);']
['timevar_push( TV_JUMP_0);', 'timevar_push( TV_JUMP_0);', 'timevar_push( TV_JUMP_0);']
['timevar_pop( TV_JUMP_0);', 'timevar_pop( TV_JUMP_0);', 'timevar_pop( TV_JUMP_0);']
['timevar_push( TV_TO_SSA_0);']
['timevar_pop( TV_TO_SSA_0);']
['timevar_push( TV_SSA_CCP_0);']
['timevar_pop( TV_SSA_CCP_0);']
['timevar_push( TV_SSA_DCE_0);']
['timevar_push( TV_VARCONST_0);']
['timevar_pop( TV_VARCONST_0);']
['timevar_push( TV_SYMOUT_0);', 'timevar_push( TV_SYMOUT_0);', 'timevar_push( TV_SYMOUT_0);']
['timevar_pop( TV_SYMOUT_0);', 'timevar_pop( TV_SYMOUT_0);', 'timevar_pop( TV_SYMOUT_0);']
['timevar_push( TV_SYMOUT_0);', 'timevar_push( TV_SYMOUT_0);', 'timevar_push( TV_SYMOUT_0);']
['timevar_pop( TV_SYMOUT_0);', 'timevar_pop( TV_SYMOUT_0);', 'timevar_pop( TV_SYMOUT_0);']
['timevar_pop( TV_SYMOUT_0);', 'timevar_pop( TV_SYMOUT_0);', 'timevar_pop( TV_SYMOUT_0);']
['rtx v4; // rax', 'rtx v4; // rax', 'rtx v4; // rax']
['rtx line_note; // r13']
['rtx v10; // rax', 'rtx v10; // rax', 'rtx v10; // rax', 'rtx v10; // rax', 'rtx v10; // rax', 'rtx v10; // rax', 'rtx v10; // rax']
['v4 = head;']
['if ( *( _WORD *)v4 == 37 && v4[2].fld[0].rtint > 0 )', 'if ( *( _WORD *)v4 == 37 && v4[2].fld[0].rtint > 0 )']
['if ( *( _WORD *)v4 == 37 && v4[2].fld[0].rtint > 0 )', 'if ( *( _WORD *)v4 == 37 && v4[2].fld[0].rtint > 0 )']
['v4 = ( rtx)v4[1];']
['while ( v4 );', 'while ( v4 );']
['v4 = 0LL;']
['v4 = v2;']
['line_note = h_i_d[rtint].line_note;']
['if ( line_note != v4', 'if ( line_note != v4']
['if ( line_note != v4', 'if ( line_note != v4']
['&& line_note']
['&& ( !v4 || line_note[2].fld[0].rtint != v4[2].fld[0].rtint || line_note[2] != v4[2]) )', '&& ( !v4 || line_note[2].fld[0].rtint != v4[2].fld[0].rtint || line_note[2] != v4[2]) )']
['&& ( !v4 || line_note[2].fld[0].rtint != v4[2].fld[0].rtint || line_note[2] != v4[2]) )', '&& ( !v4 || line_note[2].fld[0].rtint != v4[2].fld[0].rtint || line_note[2] != v4[2]) )']
['v12 = reverse_condition( ( rtx_code)*v6);']
['return size_11;']
['( rtx_code)*( _WORD *)comparison,']
['rtx v7; // rdx']
['rtx v9; // rax', 'rtx v9; // rax']
['v7 = head;']
['if ( *( _WORD *)v7 == 37 )']
['v4 = v4[1].fld[0].rtx;', 'v4 = v4[1].fld[0].rtx;', 'v9 = v9[1].fld[0].rtx;', 'v9 = v9[1].fld[0].rtx;', 'v9 = v9[1].fld[0].rtx;', 'v9 = v9[1].fld[0].rtx;', 'v6 = v6[1].fld[0].rtx;', 'v6 = v6[1].fld[0].rtx;', 'v6 = v6[1].fld[0].rtx;', 'v6 = v6[1].fld[0].rtx;']
['v4 = v4[1].fld[0].rtx;', 'v4 = v4[1].fld[0].rtx;', 'v9 = v9[1].fld[0].rtx;', 'v9 = v9[1].fld[0].rtx;', 'v9 = v9[1].fld[0].rtx;', 'v9 = v9[1].fld[0].rtx;', 'v6 = v6[1].fld[0].rtx;', 'v6 = v6[1].fld[0].rtx;', 'v6 = v6[1].fld[0].rtx;', 'v6 = v6[1].fld[0].rtx;']
['if ( rtx == v7 )']
['v8 = (  struct rtx_def *)v7[1];']
['v10 = v7;', 'v10 = v7;', 'v10 = v7;', 'v10 = v7;', 'v9 = v10;', 'v12 = v7;']
['v10 = v7;', 'v10 = v7;', 'v10 = v7;', 'v10 = v7;', 'v9 = v10;', 'v12 = v7;']
['v16 = v9;', 'v16 = v9;', 'v10 = v7;', 'v10 = v7;', 'v10 = v7;', 'v10 = v7;', 'v10 = v5;', 'v10 = v5;', 'v10 = v5;', 'v10 = v5;']
['v9 = v9[1].fld[0].rtx;', 'v9 = v9[1].fld[0].rtx;', 'v9 = v9[1].fld[0].rtx;', 'v9 = v9[1].fld[0].rtx;']
['v9 = v9[1].fld[0].rtx;', 'v9 = v9[1].fld[0].rtx;', 'v9 = v9[1].fld[0].rtx;', 'v9 = v9[1].fld[0].rtx;']
['if ( rtx == v7 )', 'if ( rtx == v5 )']
['if ( *( _WORD *)v9 == 37 )']
['v8[1].fld[0].rtwint = ( __int64)v10;']
['rtx v5; // rax', 'rtx v5; // rax', 'rtx v5; // rax']
['rtx v10; // rax', 'rtx v10; // rax', 'rtx v10; // rax', 'rtx v10; // rax', 'rtx v10; // rax', 'rtx v10; // rax', 'rtx v10; // rax']
['v5 = head;']
['if ( *( _WORD *)v5 == 37 )']
['v4 = v4[1].fld[0].rtx;', 'v4 = v4[1].fld[0].rtx;', 'v9 = v9[1].fld[0].rtx;', 'v9 = v9[1].fld[0].rtx;', 'v9 = v9[1].fld[0].rtx;', 'v9 = v9[1].fld[0].rtx;', 'v6 = v6[1].fld[0].rtx;', 'v6 = v6[1].fld[0].rtx;', 'v6 = v6[1].fld[0].rtx;', 'v6 = v6[1].fld[0].rtx;']
['v4 = v4[1].fld[0].rtx;', 'v4 = v4[1].fld[0].rtx;', 'v9 = v9[1].fld[0].rtx;', 'v9 = v9[1].fld[0].rtx;', 'v9 = v9[1].fld[0].rtx;', 'v9 = v9[1].fld[0].rtx;', 'v6 = v6[1].fld[0].rtx;', 'v6 = v6[1].fld[0].rtx;', 'v6 = v6[1].fld[0].rtx;', 'v6 = v6[1].fld[0].rtx;']
['if ( rtx == v5 )']
['v11 = ( __int64)v5[1];', 'v9 = ( __int64)v11[1];']
['v10 = v5;', 'v10 = v5;', 'v10 = v5;', 'v10 = v5;']
['v10 = v5;', 'v10 = v5;', 'v10 = v5;', 'v10 = v5;']
['v9.rtwint = ( __int64)v10;']
['v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;']
['v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;']
['*( _QWORD *)( v11 + 24) = v10;']
['if ( v10 )', 'if ( v10 )', 'if ( v10 )', 'if ( v10 )']
['*( _QWORD *)&v10[1] = v8;']
['if ( rtx == v7 )', 'if ( rtx == v5 )']
['( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),']
['v9 = expand_divmod( 0, TRUNC_DIV_EXPR, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v7, v8, 0LL, 1);']
['return expand_mult( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v9, v10, 0LL, 1);']
['v1 = gen_reg_rtx( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4));']
['( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),', '( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4),']
['return expand_simple_binop( ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), AND, v4, v3, v4, 0, OPTAB_LIB_WIDEN);']
['fancy_abort( ( const char *)&a, 8957, "rtl_for_decl_location");']
['if ( mode_class_0[v2] == MODE_INT )', 'if ( mode_class_0[v8] != MODE_INT )']
['if ( *( ( _BYTE *)op + 2) || v3 == VOIDmode || ( result = 0, ( mode_class_0[v3] & 0xFFFFFFFD) == 1) )']
['v11 = cselib_lookup( x, ( machine_mode)*( ( unsigned __int8 *)x + 2), 0);']
['v12 = cselib_lookup( y, ( machine_mode)*( ( unsigned __int8 *)y + 2), 0);']
['v6 = gen_lowpart_for_combine( ( machine_mode)*( unsigned __int8 *)( v5.rtwint + 2), x);']
['v4 = gen_lowpart_for_combine( ( machine_mode)*( unsigned __int8 *)( v3.rtwint + 2), y);']
['if ( *( _OWORD *)&x == 0LL )']
['rtx real_insn; // r15', 'rtx real_insn; // r12']
['rtx *v29; // r12']
['rtx v4; // rbp', 'rtx i; // rbx', 'rtx v9; // rbp', 'rtx v5; // rbp', 'rtx i; // rbx', 'rtx i; // rbx', 'rtx v2; // rbp', 'rtx j; // rbp', 'rtx v4; // rbp']
['rtx v27; // rax', 'rtx v27; // rax', 'rtx v26; // rdx', 'rtx v21; // rdx', 'rtx v7; // rdx']
['rtx v24; // rcx', 'rtx v28; // rax', 'rtx v28; // rbx', 'rtx v28; // rax', 'rtx v28; // rax']
['real_insn = next_real_insn( v2);']
['real_insn = next_real_insn( v2);']
['rtint = subreg_regno_offset( v14, ( machine_mode)*( unsigned __int8 *)( v13.rtwint + 2), v9, ( machine_mode)v6);', 'rtint = subreg_regno_offset( v14, ( machine_mode)*( unsigned __int8 *)( v13.rtwint + 2), v9, ( machine_mode)v6);']
['( machine_mode)*( unsigned __int8 *)( v2.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v12.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v2.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v2.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v2.rtwint + 2),']
['( machine_mode)*( ( unsigned __int8 *)v4 + 2));']
['return size_11;']
['rtx *v26; // r14', 'rtx v12; // r12', 'rtx *v42; // r12', 'rtx v12; // r12', 'rtx *v22; // r15', 'rtx v10; // r14', 'rtx v12; // r12', 'rtx *v50; // r14']
['v14 = *( rtx *)( v2.rtwint + 24);']
['if ( !warned_11 && do_warn )']
['if ( v10 == rtx )']
['rtx v16; // rax', 'rtx v16; // rax']
['save_expr_list_5 = 0LL;']
['for ( i = save_expr_list_5; i; i = i->common.chain )']
['v27 = decl->decl.rtl;', 'v27 = decl->decl.rtl;', 'v20 = decl->decl.rtl;']
['if ( *( _WORD *)v14 != 75 )', 'if ( *( _WORD *)v17 == 61 )', 'if ( *( _WORD *)v14 == 36 )', 'if ( *( _WORD *)v7 != 76 )', 'if ( *( _WORD *)v6 != 54 )']
['if ( *( _WORD *)v14 != 75 )', 'if ( *( _WORD *)v17 == 61 )', 'if ( *( _WORD *)v14 == 36 )', 'if ( *( _WORD *)v7 != 76 )', 'if ( *( _WORD *)v6 != 54 )']
['rtx = v18->fld[0].rtx;', 'rtx = v17->fld[0].rtx;']
['save_expr_list_5 = tree_cons( exp, 0LL, save_expr_list_5);', 'save_expr_list_5 = tree_cons( exp, 0LL, save_expr_list_5);']
['save_expr_list_5 = tree_cons( exp, 0LL, save_expr_list_5);', 'save_expr_list_5 = tree_cons( exp, 0LL, save_expr_list_5);']
['v10 = lang_hooks_0.safe_from_p( v3, ( tree)v4);']
['v2 = ( machine_mode *)( regno_save_mode + 4);']
['v31 = ( ( unsigned int)( mode_class_0[v29] - 5) < 2) + 1;']
['if ( ( unsigned int)( mode_class_0[v92] - 5) > 1 )', 'if ( ( unsigned int)( mode_class_0[v10] - 5) > 1 )']
['v13 = gen_realpart( ( machine_mode)*( unsigned __int8 *)( rtl->fld[0].rtwint + 2), rtl);']
['v14 = gen_imagpart( ( machine_mode)*( ( unsigned __int8 *)v13 + 2), rtl);']
['rtx v24; // rcx', 'rtx v43; // rcx']
['v8 = ( tree_node *)high[4];', 'v9 = ( tree_node *)high[4];']
['if ( line_note != v4', 'if ( line_note != v4']
['v4 = head;']
['( save_level)( x_block_stack->next == 0LL),']
['rtx v107; // rbp', 'rtx v120; // rbp']
['rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax', 'rtx nonnote_insn; // rax']
['rtx v13; // r12', 'rtx v13; // r12', 'rtx v13; // r12']
['rtx v14; // rax']
['rtx v17; // r12', 'rtx v17; // rbp', 'rtx v17; // rax', 'rtx v17; // rax', 'rtx v17; // rax', 'rtx v17; // rax']
['rtx v22; // rax', 'rtx v22; // rax']
['rtx v20; // rax', 'rtx v27; // rax', 'rtx v26; // rax', 'rtx v26; // rax', 'rtx v20; // rax', 'rtx v25; // rax', 'rtx v28; // rax', 'rtx v21; // rax', 'rtx v22; // rax', 'rtx v25; // rax', 'rtx v27; // rax', 'rtx v25; // rax', 'rtx v28; // rax', 'rtx v9; // rax', 'rtx v26; // rax', 'rtx v28; // rax', 'rtx v39; // rax', 'rtx v79; // rax', 'rtx v25; // rax', 'rtx v22; // rax', 'rtx v26; // rax', 'rtx v25; // rax', 'rtx v19; // rax', 'rtx v20; // rax', 'rtx v23; // rax', 'rtx v24; // rax', 'rtx v25; // rax', 'rtx v25; // rax', 'rtx v39; // rax', 'rtx v20; // rax', 'rtx v9; // rax']
['rtx cont; // rax']
['rtx v37; // rax', 'rtx v37; // rax', 'rtx v37; // rax', 'rtx v37; // rax']
['v13 = ( ( unsigned int)( mode_class_0[v11] - 5) < 2) + 1;', 'v15 = ( ( unsigned int)( mode_class_0[v11] - 5) < 2) + 1;']
['v31 = ( ( unsigned int)( mode_class_0[v29] - 5) < 2) + 1;', 'v29 = ( ( unsigned int)( mode_class_0[v22] - 5) < 2) + 1;', 'v34 = ( ( unsigned int)( mode_class_0[v26] - 5) < 2) + 1;']
['cselib_lookup( t->fld[0].rtx, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), 1);']
['if ( ( unsigned int)( mode_class_0[v10] - 5) > 1 )']
['rtx v16; // r15']
['rtx *p_pending_read_insns; // rbx']
['rtx *p_pending_read_insns; // rbx']
['rtx *p_pending_read_insns; // rbx']
['rtx i; // r12']
['rtx *p_pending_read_insns; // rbx']
['rtx v25; // rax', 'rtx v25; // rax', 'rtx v25; // rax', 'rtx v25; // rax', 'rtx v25; // rax', 'rtx v25; // rax', 'rtx v25; // rax']
['rtx v33; // rax', 'rtx v92; // rax', 'rtx v35; // rax', 'rtx v35; // rax', 'rtx v38; // rax', 'rtx v36; // rax', 'rtx v35; // rax', 'rtx v42; // rax', 'rtx v22; // rax', 'rtx v35; // rax', 'rtx v36; // rax', 'rtx v38; // rax', 'rtx v42; // rax', 'rtx v37; // rax', 'rtx v39; // rax', 'rtx v42; // rax', 'rtx v82; // rax', 'rtx v22; // rax', 'rtx v35; // rax', 'rtx v38; // rax', 'rtx v32; // rdx', 'rtx v31; // rax', 'rtx v32; // rbx', 'rtx v42; // rax', 'rtx v34; // rax', 'rtx v37; // rax', 'rtx v38; // rax', 'rtx v31; // rax', 'rtx v36; // rax', 'rtx v37; // rax', 'rtx v39; // rax', 'rtx v37; // rax', 'rtx v33; // rax', 'rtx v38; // rax', 'rtx v36; // rax', 'rtx v42; // rax', 'rtx v33; // rax', 'rtx v31; // rax', 'rtx v34; // rax']
['rtx *listp; // [rsp+10h] [rbp-48h]']
['rtx v25; // [rsp+0h] [rbp-38h] BYREF']
['rtx tailp; // [rsp+8h] [rbp-30h] BYREF']
['get_block_head_tail( v9, &v25, &tailp);', 'get_block_head_tail( v9, &v25, &tailp);']
['get_block_head_tail( v9, &v25, &tailp);', 'get_block_head_tail( v9, &v25, &tailp);']
['v11 = v26;']
['v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v13 = f[1].fld[0].rtx;', 'v14 = v14[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;', 'v10 = v10[1].fld[0].rtx;']
['if ( v10 == rtx )', 'if ( rtx == v7 )']
['rtx v4; // rbp', 'rtx v34; // rbp', 'rtx v17; // rbp', 'rtx v14; // rbx', 'rtx v14; // rbx', 'rtx v4; // rbp', 'rtx v64; // rbp']
['rtx *v50; // rcx']
['rtx *v19; // rbp', 'rtx *v19; // rbp', 'rtx *v11; // rbp']
['rtx v23; // rbp']
['rtx v57; // r14']
['rtx v4; // rbx', 'rtx v40; // rbx', 'rtx v35; // rbx', 'rtx v47; // rbx', 'rtx v85; // rbx', 'rtx v35; // rbx', 'rtx v45; // rax']
['rtx v6; // r12', 'rtx v40; // r12', 'rtx v6; // r12', 'rtx v44; // r12', 'rtx v44; // r12']
['deps_0 *v129; // rax', 'deps_0 *v129; // rax']
['deps_0 *v129; // rax', 'deps_0 *v129; // rax']
['deps_0 *v129; // rax', 'deps_0 *v129; // rax']
['deps_0 *v129; // rax', 'deps_0 *v129; // rax']
['deps_0 *v129; // rax', 'deps_0 *v129; // rax']
['deps_0 *v129; // rax', 'deps_0 *v129; // rax']
['deps_0 *v129; // rax', 'deps_0 *v129; // rax']
['deps_0 *v129; // rax', 'deps_0 *v129; // rax']
['deps_0 *v129; // rax', 'deps_0 *v129; // rax']
['deps_0 *v129; // rax', 'deps_0 *v129; // rax']
['rtx end; // [rsp+C0h] [rbp-48h] BYREF', 'rtx head; // [rsp+C8h] [rbp-40h] BYREF']
['rtx tailp; // [rsp+8h] [rbp-30h] BYREF']
['rtx v25; // [rsp+0h] [rbp-38h] BYREF']
['rtx v25; // [rsp+0h] [rbp-38h] BYREF']
['*( _QWORD *)( v11 + 24) = v10;']
['LODWORD( v5) = ( int)( ( double)( *( int *)( ( char *)&qty_0->size + v5)']
['fancy_abort( ( const char *)&a, 9575, "scope_die_for");']
['if ( ( unsigned int)debug_info_level_0 > DINFO_LEVEL_TERSE && ( *( ( _BYTE *)&rtl[1] + 1) & 0x40) == 0 )']
['fancy_abort( ( const char *)&a, 9604, "scope_die_for");']
['rtx v4; // rbp', 'rtx v4; // rbp']
['v4 = rtx;']
['if ( active_insn_p( end) )']
['if ( ( unsigned __int16)( *( _WORD *)v14 - 54) <= 0xEu )']
['if ( *( _WORD *)v4 == 36 )', 'if ( *( _WORD *)v9 == 37 )', 'if ( *( _WORD *)v7 == 37 )', 'if ( *( _WORD *)v5 == 37 )']
['rtint = v4[2].fld[0].rtint;']
['v3 = ( __int64)v4[2];']
['delete_insn( v4);', 'delete_insn( v4);']
['delete_insn( v4);', 'delete_insn( v4);']
['insn_scopes->data.l[v4->fld[0].rtint] = v3;']
['v13 = *( tree_node **)( low + 8);', 'v8 = *( tree_node **)( low + 40);']
['if ( v29 == ( tree_node *)*( &global_trees + 27) )']
['v8 = *( tree_node **)( low + 40);']
['if ( v25 != ( tree_node *)global_trees )']
['v8 = *( tree_node **)( low + 40);']
['if ( v25 != ( tree_node *)global_trees )']
['if ( initial != ( tree_node *)global_trees )', 'if ( initial != ( tree_node *)global_trees )']
['if ( initial != ( tree_node *)global_trees )', 'if ( initial != ( tree_node *)global_trees )']
['if ( constructor_range_stack_0 )', 'if ( constructor_range_stack_0 )', 'if ( constructor_range_stack_0 )', 'if ( constructor_range_stack_0 )', 'if ( constructor_range_stack_0 )']
['while ( constructor_stack_0->implicit )', 'while ( constructor_stack_0->implicit )', 'while ( constructor_stack_0->implicit )']
['if ( constructor_range_stack_0 )', 'if ( constructor_range_stack_0 )', 'if ( constructor_range_stack_0 )', 'if ( constructor_range_stack_0 )', 'if ( constructor_range_stack_0 )']
['if ( ( unsigned __int64)constructor_range_stack_0 | ( unsigned __int64)elements )']
['if ( constructor_range_stack_0 )', 'if ( constructor_range_stack_0 )', 'if ( constructor_range_stack_0 )', 'if ( constructor_range_stack_0 )', 'if ( constructor_range_stack_0 )']
['if ( constructor_range_stack_0 )', 'if ( constructor_range_stack_0 )', 'if ( constructor_range_stack_0 )', 'if ( constructor_range_stack_0 )', 'if ( constructor_range_stack_0 )']
['v20 = gen_rtx_REG( ( machine_mode)*( ( unsigned __int8 *)v17 + 2), v7);', 'v34 = gen_rtx_REG( ( machine_mode)*( ( unsigned __int8 *)v30 + 2), v25);']
['v6 = *( tree_node **)( v5 + 8);']
['v6 = ( tree_node *)ref[1];']
['if ( !lang_hooks_0.honor_readonly']
['if ( *( _WORD *)insns == 36 && insns[2] == ( ( *( ( _BYTE *)insns + 3) & 0x10) != 0) )', 'if ( *( _WORD *)insns == 36 && insns[2] == ( ( *( ( _BYTE *)insns + 3) & 0x10) != 0) )', 'if ( *( _WORD *)insns == 36 && insns[2] == ( ( *( ( _BYTE *)insns + 3) & 0x10) != 0) )']
['mem_attrs = get_mem_attrs( alias, v6, offseta, size_unit, align, ( machine_mode)*( ( unsigned __int8 *)ref + 2));']
['mem_attrs = get_mem_attrs( alias, v6, offseta, size_unit, align, ( machine_mode)*( ( unsigned __int8 *)ref + 2));']
['G.lookup[BYTE3( p)] = ( page_entry_0 **)xcalloc( 1LL << ( 24 - LOBYTE( G.lg_pagesize)), 8uLL);']
['if ( !ix86_hard_regno_mode_ok( v21, *( ( machine_mode *)&rld + 26 * v12 + 7)) )']
['if ( !v6 || ( result = ix86_hard_regno_mode_ok( v3, ( machine_mode)*( unsigned __int8 *)( v6 + 2))) != 0 )']
['reg_fusage = ix86_hard_regno_mode_ok( v32, ( machine_mode)*( unsigned __int8 *)( v22 + 2));']
['mark_set_1( pbi, ( rtx_code)v11, *( ( rtx *)v10 + 1), v7, insn, pbi->flags);']
['mark_set_1( pbi, ( rtx_code)v11, *( ( rtx *)v10 + 1), v7, insn, pbi->flags);']
['reg_note = gen_rtx_fmt_ee( EXPR_LIST, ( machine_mode)kind, datum, insn[3].fld[0].rtx);']
['v7 = ( ( unsigned int)( mode_class_0[mode] - 5) < 2) + 1;', 'v7 = ( ( unsigned int)( mode_class_0[mode] - 5) < 2) + 1;', 'v7 = ( ( unsigned int)( mode_class_0[mode] - 5) < 2) + 1;']
['v9 = ( ( unsigned int)( mode_class_0[v7] - 5) < 2) + 1;']
['rtx v9; // rax', 'rtx v9; // rax']
['rtx v10; // rax', 'rtx v10; // rax', 'rtx v10; // rax', 'rtx v10; // rax', 'rtx v10; // rax', 'rtx v10; // rax', 'rtx v10; // rax']
['return gen_rtx_fmt_ee( PLUS, ( machine_mode)*( ( unsigned __int8 *)x + 2), x, c);']
['v14 = gen_rtx_CONST_INT( VOIDmode, v13);']
['v6 = v10;']
['v5 = group_leader( *( rtx *)( i + 8));']
['rtx = v4;', 'rtx = v6;']
['rtx v4; // rbx', 'rtx v83; // rbx', 'rtx v23; // rbx', 'rtx v40; // rbx', 'rtx v47; // rbx', 'rtx v53; // rbx', 'rtx v13; // rbx', 'rtx v43; // rax', 'rtx v43; // rcx']
['rtx align_tab[16]; // [rsp+20h] [rbp-B8h] BYREF']
['memset( costs_0, 0, 104LL * nregs);']
['memset( costs_0, 0, 104LL * nregs);']
['*v27 = align_tab[0];']
['*v27 = align_tab[0];']
['*v27 = align_tab[v26];']
['align_tab[v28--] = last_insn;']
['if ( ( tree_node *)*( &global_trees + 10) == section_name )']
['if ( ( tree_node *)*( &global_trees + 9) == section_name )']
['if ( ( tree_node *)*( &global_trees + 8) == section_name )']
['if ( ( tree_node *)*( &global_trees + 7) == section_name )']
['if ( ( tree_node *)*( &global_trees + 6) == section_name )']
['if ( *( _OWORD *)&c->block.vars >= *( _OWORD *)&initial->block.vars )', 'if ( *( _OWORD *)&c->block.vars >= *( _OWORD *)&initial->block.vars )', 'if ( *( _OWORD *)&c->block.vars >= *( _OWORD *)&initial->block.vars )', 'if ( *( _OWORD *)&c->block.vars >= *( _OWORD *)&initial->block.vars )']
['if ( *( _OWORD *)&c->block.vars >= *( _OWORD *)&initial->block.vars )', 'if ( *( _OWORD *)&c->block.vars >= *( _OWORD *)&initial->block.vars )', 'if ( *( _OWORD *)&c->block.vars >= *( _OWORD *)&initial->block.vars )', 'if ( *( _OWORD *)&c->block.vars >= *( _OWORD *)&initial->block.vars )']
['v20 = ( tree_node *)*( &global_trees + 25);']
['if ( name == ( tree_node *)*( &global_trees + 50) )']
['v15 = simplify_and_const_int( 0LL, ( machine_mode)*( ( unsigned __int8 *)rtx + 2), *( rtx *)&rtx[1], v8);']
['v16 = simplify_and_const_int( 0LL, ( machine_mode)*( ( unsigned __int8 *)rtx + 2), rtx->fld[0].rtx, v8);']
['v17 = gen_binary( ( rtx_code)*( _WORD *)rtx, ( machine_mode)*( ( unsigned __int8 *)rtx + 2), v16, v15);', 'v17 = gen_binary( ( rtx_code)*( _WORD *)rtx, ( machine_mode)*( ( unsigned __int8 *)rtx + 2), v16, v15);']
['v17 = gen_binary( ( rtx_code)*( _WORD *)rtx, ( machine_mode)*( ( unsigned __int8 *)rtx + 2), v16, v15);', 'v17 = gen_binary( ( rtx_code)*( _WORD *)rtx, ( machine_mode)*( ( unsigned __int8 *)rtx + 2), v16, v15);']
['rtx compound_operation; // r14']
['rtx v58; // rbp']
['rtx v8; // rax', 'rtx v7; // rax', 'rtx v18; // rax', 'rtx v38; // rax', 'rtx v28; // rax', 'rtx v73; // rax', 'rtx v38; // rax', 'rtx v28; // rax', 'rtx v28; // rax', 'rtx v76; // rax', 'rtx v79; // rax', 'rtx v38; // rax', 'rtx v38; // rax', 'rtx v38; // rax', 'rtx v7; // rax', 'rtx v68; // rax', 'rtx v75; // rax', 'rtx v48; // rax']
['rtx v83; // rax']
['rtx v15; // rdi', 'rtx v15; // r15', 'rtx v15; // r12', 'rtx v15; // r13', 'rtx v15; // rax', 'rtx v15; // r12', 'rtx v15; // rax', 'rtx v15; // rax']
['rtx result; // rax', 'rtx result; // rax', 'rtx result; // rax', 'rtx result; // rax', 'rtx result; // rax', 'rtx result; // rax', 'rtx result; // rax']
['rtx v21; // rax']
['rtx v28; // rax', 'rtx v28; // rax', 'rtx v28; // rax']
['rtx v29; // r12']
['rtx v16; // rax', 'rtx v5; // rax', 'rtx v26; // rax', 'rtx v26; // rax', 'rtx v36; // rax', 'rtx v36; // rax', 'rtx v5; // rax', 'rtx v26; // rax', 'rtx v76; // rax', 'rtx v57; // rax', 'rtx v26; // rax', 'rtx v6; // rax', 'rtx v50; // rax', 'rtx v86; // rax', 'rtx v36; // rax', 'rtx v46; // rax', 'rtx v57; // rax', 'rtx v16; // rax', 'rtx v6; // rax', 'rtx v36; // rax', 'rtx v55; // rax', 'rtx v53; // rax', 'rtx v50; // rax', 'rtx v57; // rax', 'rtx v5; // rax', 'rtx v6; // rax', 'rtx v86; // rax', 'rtx v55; // rax']
['rtx v92; // rax', 'rtx v60; // rax', 'rtx v42; // rax', 'rtx v22; // rax', 'rtx v42; // rax', 'rtx v63; // rax', 'rtx v42; // rax', 'rtx v82; // rax', 'rtx v22; // rax', 'rtx v6; // rax', 'rtx v42; // rax', 'rtx v6; // rax', 'rtx v42; // rax', 'rtx v68; // rax', 'rtx v60; // rax', 'rtx v6; // rax', 'rtx v65; // rax']
['rtx v12; // r12', 'rtx v12; // r12', 'rtx v12; // r12']
['rtx v15; // rdi', 'rtx v13; // rdi', 'rtx v18; // rsi', 'rtx *v7; // rdi']
['rtx compound_operation; // r14', 'rtx compound_operation; // rbp']
['rtx v21; // rdx']
['rtx v34; // rdx']
['rtx v10; // rbx', 'rtx *v16; // rbx']
['rtx v10; // rbx', 'rtx *v16; // rbx']
['rtx v27; // rax', 'rtx *v23; // rax', 'rtx v27; // rax']
['rtx v27; // rax', 'rtx *v23; // rax', 'rtx v27; // rax']
['rtx *v26; // r14', 'rtx *v29; // r12']
['rtx *v26; // r14', 'rtx *v29; // r12']
['rtx *v30; // rax']
['rtx *v30; // rax']
['rtx *v51; // r15']
['rtx *v51; // r15']
['rtx v48; // rax']
['rtx *v25; // rbp']
['rtx *v25; // rbp']
['rtx *v61; // rax']
['rtx *v61; // rax']
['if ( mode_class_0[*( ( unsigned __int8 *)rtx + 2)] == MODE_CC )']
['v11 = mode_class_0[mode];', 'v15 = mode_class_0[mode];', 'v15 = mode_class_0[mode];']
['v3 = mode_class_0[mode];']
['if ( ( mode_class_0[*( ( unsigned __int8 *)x + 2)] & 0xFFFFFFFB) != 2', '&& ( mode_class_0[*( ( unsigned __int8 *)x + 2)] & 0xFFFFFFFB) != 2', '&& ( mode_class_0[*( ( unsigned __int8 *)val + 2)] & 0xFFFFFFFB) != 2', 'if ( ( mode_class_0[*( ( unsigned __int8 *)x + 2)] & 0xFFFFFFFB) != 2']
['&& mode_class_0[*( ( unsigned __int8 *)x + 2)] != MODE_VECTOR_FLOAT']
['if ( *( _WORD *)v7 == 61 && mode_class_0[*( unsigned __int8 *)( v7 + 2)] == MODE_INT )']
['result = simplify_gen_subreg( ( machine_mode)*( ( unsigned __int8 *)x + 2), v13, v12, v10);']
['return simplify_relational_operation( ( rtx_code)*( _WORD *)x, v9, v8.rtx, ( rtx)v7);']
['( rtx_code)*( _WORD *)x,', '( rtx_code)*( _WORD *)x,']
['( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),']
['( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2));', '( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2));']
['( rtx_code)*( _WORD *)x,', '( rtx_code)*( _WORD *)x,']
['( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),']
['( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2),']
['return simplify_relational_operation( ( rtx_code)*( _WORD *)x, v9, v8.rtx, ( rtx)v7);']
['varop = gen_rtx_fmt_e( ( rtx_code)( ( v13 != ASHIFTRT) + 120), shift_mode, v21);']
['if ( v61 == ( ( target_flags & 0x2000000) == 0 ? 64 : 128) && mode_class_0[mode] == MODE_INT )']
['res = simplify_subreg( outermode, v26.rtx, ( machine_mode)*( unsigned __int8 *)( v26.rtwint + 2), v27);']
['res = simplify_subreg( outermode, v26.rtx, ( machine_mode)*( unsigned __int8 *)( v26.rtwint + 2), v27);']
['if ( mode_class_0[v4] != MODE_INT )', 'if ( mode_class_0[v8] != MODE_INT )']
['if ( mode_class_0[v4] != MODE_INT )']
['decode_rtx_const( ( machine_mode)*( ( unsigned __int8 *)x + 2), x->fld[0].rtx, &val0);']
['decode_rtx_const( ( machine_mode)*( ( unsigned __int8 *)v1 + 2), *( rtx *)&v1[1], &val1);']
['|| ( mode_class_0[mode] & 0xFFFFFFFB) != 2 && mode_class_0[mode] != MODE_VECTOR_FLOAT)', '|| ( mode_class_0[mode] & 0xFFFFFFFB) != 2 && mode_class_0[mode] != MODE_VECTOR_FLOAT)']
['|| ( mode_class_0[mode] & 0xFFFFFFFB) != 2 && mode_class_0[mode] != MODE_VECTOR_FLOAT)', '|| ( mode_class_0[mode] & 0xFFFFFFFB) != 2 && mode_class_0[mode] != MODE_VECTOR_FLOAT)']
['|| ( mode_class_0[mode] & 0xFFFFFFFB) != 2 && mode_class_0[mode] != MODE_VECTOR_FLOAT)', '|| ( mode_class_0[mode] & 0xFFFFFFFB) != 2 && mode_class_0[mode] != MODE_VECTOR_FLOAT)']
['|| ( mode_class_0[mode] & 0xFFFFFFFB) != 2 && mode_class_0[mode] != MODE_VECTOR_FLOAT)', '|| ( mode_class_0[mode] & 0xFFFFFFFB) != 2 && mode_class_0[mode] != MODE_VECTOR_FLOAT)']
['v21 = simplify_relational_operation( ( rtx_code)*( _WORD *)op0, op0_mode, v19.rtx, *( rtx *)&op0[1]);']
['*( _OWORD *)v28.r = *( _OWORD *)&i0[8];', '*( _OWORD *)v29.r = *( _OWORD *)&i0[8];']
['*( _OWORD *)v28.r = *( _OWORD *)&i0[8];', '*( _OWORD *)v29.r = *( _OWORD *)&i0[8];']
['*( _OWORD *)v28.r = *( _OWORD *)&i0[8];', '*( _OWORD *)v29.r = *( _OWORD *)&i0[8];']
['v11 = mode_class_0[4];']
['if ( mode_class_0[v11] != MODE_FLOAT || v25 != MODE_INT || ( unsigned int)v8 - 1 > 0x3F )']
['v18 = ( tree_node *)*( &global_trees + 11);', 'v17 = ( tree_node *)*( &global_trees + 11);']
['v17 = ( tree_node *)*( &global_trees + 11);']
['if ( !size_htab_11 )']
['if ( !size_htab_11 )']
['size_htab_11 = htab_create( 0x400uLL, size_htab_hash, size_htab_eq, 0LL);']
['ggc_add_deletable_htab( size_htab_11, 0LL, 0LL);']
['new_const_10 = make_node( INTEGER_CST);', 'new_const_10 = make_node( INTEGER_CST);']
['ggc_add_tree_root( &new_const_10, 1);']
['if ( !size_htab_11 )']
['v3 = new_const_10;']
['v8 = *( tree_node **)( v7->int_cst.int_cst.low + 32);']
['v3 = new_const_10;']
['v3 = new_const_10;', 'v5 = new_const_10;', 'v7 = new_const_10;']
['*slot = new_const_10;']
['new_const_10 = make_node( INTEGER_CST);', 'new_const_10 = make_node( INTEGER_CST);']
['v19 = sch_istable[v17];', 'v14 = sch_istable[*v12];']
['v3 = cpp_trigraph_map[*( ( unsigned __int8 *)buffer->cur + 1)];']
['v7 = cpp_trigraph_map[v6];']
['fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");', 'fancy_abort( ( const char *)&a, 4588, "AT_ref");']
['fancy_abort( ( const char *)&a, 5055, "splice_child_die");']
['recog_data_0.operand[0] = v3.rtx;']
['recog_data_0.operand[1] = ( rtx)v54;', 'recog_data_0.operand[1] = ( rtx)v4;', 'recog_data_0.operand[1] = ( rtx)v4;', 'recog_data_0.operand[1] = ( rtx)v15;', 'recog_data_0.operand[1] = ( rtx)v4;', 'recog_data_0.operand[1] = ( rtx)v4;', 'recog_data_0.operand[1] = ( rtx)v4;', 'recog_data_0.operand[1] = ( rtx)v387;', 'recog_data_0.operand[1] = ( rtx)v387;', 'recog_data_0.operand[1] = ( rtx)v13;', 'recog_data_0.operand[1] = ( rtx)v19;', 'recog_data_0.operand[1] = ( rtx)v84;']
['return gen_split_1133( recog_data_0.operand);']
['recog_data_0.operand[1] = ( rtx)v4;', 'recog_data_0.operand[1] = ( rtx)v4;', 'recog_data_0.operand[1] = ( rtx)v4;', 'recog_data_0.operand[1] = ( rtx)v4;', 'recog_data_0.operand[1] = ( rtx)v4;', 'recog_data_0.operand[1] = ( rtx)v26;']
['return gen_split_1133( recog_data_0.operand);']
['recog_data_0.operand[0] = v3.rtx;']
['recog_data_0.operand[1] = v116;', 'recog_data_0.operand[1] = v114;', 'recog_data_0.operand[1] = v11;', 'recog_data_0.operand[1] = v11;']
['return gen_split_944( recog_data_0.operand);']
['recog_data_0.operand[0] = v3.rtx;']
['recog_data_0.operand[1] = ( rtx)v54;', 'recog_data_0.operand[1] = ( rtx)v21;', 'recog_data_0.operand[1] = ( rtx)v21;', 'recog_data_0.operand[1] = ( rtx)v21;', 'recog_data_0.operand[2] = ( rtx)v51;', 'recog_data_0.operand[1] = ( rtx)v5;', 'recog_data_0.operand[1] = ( rtx)v31;', 'recog_data_0.operand[1] = ( rtx)v31;', 'recog_data_0.operand[1] = ( rtx)v31;']
['rtx v6; // rax', 'rtx v6; // rax', 'rtx v6; // rax']
['v5 = split_insn( i);']
['if ( v6 )']
['while ( *( _WORD *)v21 == 63 );']
['v4 = ( rtx)v4[1];']
['v4 = v6;']
['recog_data_0.insn = 0LL;', 'recog_data_0.insn = 0LL;', 'recog_data_0.insn = 0LL;', 'recog_data_0.insn = 0LL;']
['recog_data_0.operand[0] = ( rtx)v5;']
['return gen_split_1178( recog_data_0.operand);']
['recog_data_0.operand[0] = ( rtx)v5;']
['return gen_split_1179( recog_data_0.operand);']
['recog_data_0.operand[0] = ( rtx)v4;']
['recog_data_0.operand[1] = v114;']
['recog_data_0.operand[2] = v16;', 'recog_data_0.operand[2] = v16;', 'recog_data_0.operand[2] = v16;']
['recog_data_0.operand[3] = v107;', 'recog_data_0.operand[2] = v118;', 'recog_data_0.operand[3] = v38;', 'recog_data_0.operand[2] = v128;', 'recog_data_0.operand[3] = v14;', 'recog_data_0.operand[3] = v106;', 'recog_data_0.operand[3] = v120;', 'recog_data_0.operand[1] = v128;']
['recog_data_0.operand[4] = v102;', 'recog_data_0.operand[2] = v10;', 'recog_data_0.operand[1] = v19;', 'recog_data_0.operand[0] = v194;', 'recog_data_0.operand[3] = v120;', 'recog_data_0.operand[1] = v10;', 'recog_data_0.operand[4] = v598;']
['return gen_split_944( recog_data_0.operand);']
['recog_data_0.operand[1] = v17;', 'recog_data_0.operand[1] = v10;']
['recog_data_0.operand[0] = ( rtx)v81;', 'recog_data_0.operand[0] = ( rtx)v4;', 'recog_data_0.operand[0] = ( rtx)v631;', 'recog_data_0.operand[0] = ( rtx)v631;', 'recog_data_0.operand[0] = ( rtx)v19;', 'recog_data_0.operand[0] = ( rtx)v19;']
['if ( !rtx_equal_p( *( rtx *)( v396 + 8), recog_data_0.operand[1]) )', 'if ( !rtx_equal_p( *( rtx *)( v402 + 8), recog_data_0.operand[1]) )']
['recog_data_0.operand[2] = v53;', 'recog_data_0.operand[2] = v53;', 'recog_data_0.operand[2] = v45;', 'recog_data_0.operand[2] = v45;']
['if ( recog_data_0.operand[2]->fld[0].rtint != 0x80000000 )']
['rtx v37; // rdi', 'rtx *v7; // rdi']
['rtx v48; // rdx']
['v2 = rtx;', 'v2 = rtx;', 'v2 = rtx;', 'v4 = rtx;']
['v2 = rtx;', 'v2 = rtx;', 'v2 = rtx;', 'v4 = rtx;']
['if ( *( _WORD *)v4 == 37 && v4[2].fld[0].rtint > 0 )', 'if ( *( _WORD *)v4 == 37 && v4[2].fld[0].rtint > 0 )']
['if ( *( _WORD *)v4 == 37 && v4[2].fld[0].rtint > 0 )', 'if ( *( _WORD *)v4 == 37 && v4[2].fld[0].rtint > 0 )']
['v7 = v8;']
['if ( rtx == v7 )', 'if ( rtx == v5 )']
['if ( rtx == v7 )', 'if ( rtx == v5 )']
['v2 = rtx;', 'v2 = rtx;', 'v2 = rtx;', 'v4 = rtx;']
['v9 = ( __int64)v11[1];']
['v11 = ( __int64)v5[1];']
['v8[1].fld[0].rtwint = ( __int64)v10;']
['v8[1].fld[0].rtwint = ( __int64)v10;']
['*( _QWORD *)&v10[1] = v8;']
['*( _QWORD *)( v11 + 24) = v10;']
['rtx m; // rbx', 'rtx j; // rbp']
['edge_info_0 = 0LL;']
['p_succ_next = &v21->succ_next;']
['v11 = edge_info_0;']
['v11 = edge_info_0;', 'v23 = edge_info_0;']
['for ( j = *( rtx *)basic_block_info->data.l[v16]; ; j = j[1].fld[0].rtx )', 'for ( k = get_insns( ); k; k = k[1].fld[0].rtx )']
['for ( j = *( rtx *)basic_block_info->data.l[v16]; ; j = j[1].fld[0].rtx )', 'for ( k = get_insns( ); k; k = k[1].fld[0].rtx )']
['for ( j = *( rtx *)basic_block_info->data.l[v16]; ; j = j[1].fld[0].rtx )', 'for ( k = get_insns( ); k; k = k[1].fld[0].rtx )']
['$B50C8071A5A789E219D5EDC319094081 *handlers; // rax', '$B50C8071A5A789E219D5EDC319094081 *handlers; // rax', '$46E27178171750CEF28E8B43DEBEAD96 *v26; // r8', '$46E27178171750CEF28E8B43DEBEAD96 *v26; // r8']
['$B50C8071A5A789E219D5EDC319094081 *handlers; // rax', '$B50C8071A5A789E219D5EDC319094081 *handlers; // rax', '$46E27178171750CEF28E8B43DEBEAD96 *v26; // r8', '$46E27178171750CEF28E8B43DEBEAD96 *v26; // r8']
['safe_concat( buf, v16, ( const char *)&off_631D1E + 2);']
['v2 = ( tokenrun_0 *)xmalloc( 0x20uLL);']
['v2 = ( tokenrun_0 *)xmalloc( 0x20uLL);']
['v7->mem = x;']
['dest = v7->dest;']
['last = v13;', 'rtx = v4;', 'rtx = v6;']
['fancy_abort( ( const char *)&a, 900, "initial_return_save");', 'fancy_abort( ( const char *)&a, 906, "initial_return_save");', 'fancy_abort( ( const char *)&a, 911, "initial_return_save");', 'fancy_abort( ( const char *)&a, 894, "initial_return_save");', 'fancy_abort( ( const char *)&a, 926, "initial_return_save");', 'fancy_abort( ( const char *)&a, 921, "initial_return_save");']
['fancy_abort( ( const char *)&a, 2789, "output_loc_operands");']
['fancy_abort( ( const char *)&a, 894, "initial_return_save");']
['fancy_abort( ( const char *)&a, 7381, "base_type_die");']
['v4 = build_binary_op( ( tree_code)subcode, v4, v20, 1);']
['if ( ( mode_class_0[v3] & 0xFFFFFFFB) == 2 || mode_class_0[v3] == MODE_VECTOR_FLOAT )', 'if ( ( mode_class_0[v3] & 0xFFFFFFFB) == 2 || mode_class_0[v3] == MODE_VECTOR_FLOAT )', 'if ( ( mode_class_0[v6] & 0xFFFFFFFB) == 2 || mode_class_0[v6] == MODE_VECTOR_FLOAT )', 'if ( ( mode_class_0[v6] & 0xFFFFFFFB) == 2 || mode_class_0[v6] == MODE_VECTOR_FLOAT )']
['if ( ( mode_class_0[v3] & 0xFFFFFFFB) == 2 || mode_class_0[v3] == MODE_VECTOR_FLOAT )', 'if ( ( mode_class_0[v3] & 0xFFFFFFFB) == 2 || mode_class_0[v3] == MODE_VECTOR_FLOAT )', 'if ( ( mode_class_0[v6] & 0xFFFFFFFB) == 2 || mode_class_0[v6] == MODE_VECTOR_FLOAT )', 'if ( ( mode_class_0[v6] & 0xFFFFFFFB) == 2 || mode_class_0[v6] == MODE_VECTOR_FLOAT )']
['v5->constructor_stack = constructor_stack_0;']
['v5->constructor_range_stack = constructor_range_stack_0;']
['v5->spelling = spelling_0;']
['v0 = initializer_stack_0;']
['initializer_stack_0 = v5;']
['constructor_stack_0 = 0LL;', 'constructor_stack_0 = 0LL;']
['constructor_range_stack_0 = 0LL;', 'constructor_range_stack_0 = 0LL;', 'constructor_range_stack_0 = 0LL;']
['spelling_0 = 0LL;', 'spelling_0 = 0LL;']
['spelling_0 = v3 + 1;']
['constructor_stack_0 = 0LL;', 'constructor_stack_0 = 0LL;']
['constructor_range_stack_0 = 0LL;', 'constructor_range_stack_0 = 0LL;', 'constructor_range_stack_0 = 0LL;']
['spelling_0 = 0LL;', 'spelling_0 = 0LL;']
['v3 = ( tree_node *)*( &global_trees + 15);']
['v24 = ( tree_node *)*( &global_trees + 17);']
['result = lang_hooks_0.staticp( arg);']
['result = lang_hooks_0.staticp( arg);']
['v5 = ( tree_node *)*( &global_trees + 15);']
['v6 = expand_expr( valist, 0LL, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), EXPAND_NORMAL);']
['tree v9; // rax', 'tree v9; // rax']
['v9 = build( MODIFY_EXPR, valist->common.type, valist, tree);']
['*( ( _BYTE *)&v9->block.common + 17) |= 1u;']
['expand_expr( v9, const_int_rtx[64], VOIDmode, EXPAND_NORMAL);']
['rtx v14; // r12', 'rtx v14; // r12']
['rtx last_insn; // rbx', 'rtx last_insn; // rbx', 'rtx last_insn; // rbx']
['rtx v46; // rax']
['rtx v43; // rcx']
['rtx const_rtx; // rax', 'rtx alt_condition; // rax', 'rtx pool_constant_mark; // rax']
['tree v66; // rdx', 'tree v60; // rcx', 'tree v14; // r12', 'tree v22; // rax', 'tree v8; // r12', 'tree v11; // r12', 'tree v12; // rax', 'tree v16; // r12', 'tree v45; // r12']
['mode_alignment = get_mode_alignment( ( machine_mode)v4);']
['rtx v48; // rax']
['rtx v4; // rbp', 'rtx v34; // rbp', 'rtx v5; // rbp', 'rtx v53; // rbp', 'rtx v4; // rbp', 'rtx v58; // rbp', 'rtx v64; // rbp', 'rtx v59; // rbp']
['rtx v5; // r14', 'rtx v57; // r14']
['v11 = gen_reg_rtx( ( machine_mode)*( ( unsigned __int8 *)target + 2));']
['v10 = expand_expr( exp, v9, ( machine_mode)*( ( unsigned __int8 *)target + 2), EXPAND_NORMAL);']
['v10 = expand_expr( exp, v9, ( machine_mode)*( ( unsigned __int8 *)target + 2), EXPAND_NORMAL);']
['( machine_mode)v12,', '( machine_mode)v6,', '( machine_mode)v7,', '( machine_mode)v15,']
['( machine_mode)v12,', '( machine_mode)v6,', '( machine_mode)v7,', '( machine_mode)v15,']
['v9 = gen_lowpart( ( machine_mode)*( ( unsigned __int8 *)op + 2), v7);']
['v25 = copy_to_mode_reg( ( machine_mode)*( ( unsigned __int8 *)v29 + 2), v25);']
['v8 = *( tree_node **)( v7->int_cst.int_cst.low + 32);']
['v28 = ( tree_node *)i[4];']
['v20 = ( tree_node *)*( &global_trees + 25);']
['v5 = operand_sub*(short *)0xforce( op0, 0, ( machine_mode)*( ( unsigned __int8 *)op0 + 2));', 'v5 = operand_sub*(short *)0xforce( op0, 0, ( machine_mode)*( ( unsigned __int8 *)op0 + 2));', 'v7 = operand_sub*(short *)0xforce( op0, v6, ( machine_mode)*( ( unsigned __int8 *)op0 + 2));', 'v7 = operand_sub*(short *)0xforce( op0, v6, ( machine_mode)*( ( unsigned __int8 *)op0 + 2));', 'v12 = operand_sub*(short *)0xforce( op0, i, ( machine_mode)*( ( unsigned __int8 *)op0 + 2));', 'v12 = operand_sub*(short *)0xforce( op0, i, ( machine_mode)*( ( unsigned __int8 *)op0 + 2));', 'v15 = operand_sub*(short *)0xforce( op0, v21, ( machine_mode)*( ( unsigned __int8 *)op0 + 2));', 'v15 = operand_sub*(short *)0xforce( op0, v21, ( machine_mode)*( ( unsigned __int8 *)op0 + 2));', 'v15 = operand_sub*(short *)0xforce( op0, v17, ( machine_mode)*( ( unsigned __int8 *)op0 + 2));', 'v15 = operand_sub*(short *)0xforce( op0, v17, ( machine_mode)*( ( unsigned __int8 *)op0 + 2));']
['v5 = operand_sub*(short *)0xforce( op0, 0, ( machine_mode)*( ( unsigned __int8 *)op0 + 2));', 'v5 = operand_sub*(short *)0xforce( op0, 0, ( machine_mode)*( ( unsigned __int8 *)op0 + 2));', 'v7 = operand_sub*(short *)0xforce( op0, v6, ( machine_mode)*( ( unsigned __int8 *)op0 + 2));', 'v7 = operand_sub*(short *)0xforce( op0, v6, ( machine_mode)*( ( unsigned __int8 *)op0 + 2));', 'v12 = operand_sub*(short *)0xforce( op0, i, ( machine_mode)*( ( unsigned __int8 *)op0 + 2));', 'v12 = operand_sub*(short *)0xforce( op0, i, ( machine_mode)*( ( unsigned __int8 *)op0 + 2));', 'v15 = operand_sub*(short *)0xforce( op0, v21, ( machine_mode)*( ( unsigned __int8 *)op0 + 2));', 'v15 = operand_sub*(short *)0xforce( op0, v21, ( machine_mode)*( ( unsigned __int8 *)op0 + 2));', 'v15 = operand_sub*(short *)0xforce( op0, v17, ( machine_mode)*( ( unsigned __int8 *)op0 + 2));', 'v15 = operand_sub*(short *)0xforce( op0, v17, ( machine_mode)*( ( unsigned __int8 *)op0 + 2));']
['( machine_mode)*( unsigned __int8 *)( op0->fld[0].rtwint + 2));', '( machine_mode)*( unsigned __int8 *)( op0->fld[0].rtwint + 2));']
['v15 = operand_sub*(short *)0xforce(', 'v15 = operand_sub*(short *)0xforce(']
['rtx v11; // r12', 'rtx v5; // r12', 'rtx v50; // r12']
['rtx v55; // rax', 'rtx v55; // rax']
['rtx v22; // rsi', 'rtx v66; // rsi', 'rtx v60; // rsi']
['rtx *v71; // rax']
['rtx v8; // rax', 'rtx v7; // rax', 'rtx v18; // rax', 'rtx v38; // rax', 'rtx v28; // rax', 'rtx v73; // rax', 'rtx v38; // rax', 'rtx v28; // rax', 'rtx v28; // rax', 'rtx v76; // rax', 'rtx v79; // rax', 'rtx v38; // rax', 'rtx v38; // rax', 'rtx v38; // rax', 'rtx v7; // rax', 'rtx v68; // rax', 'rtx v75; // rax', 'rtx v48; // rax']
['rtx *v30; // rax', 'rtx *v70; // rax']
['rtx v86; // rax', 'rtx v86; // rax']
['rtx v6; // rdx', 'rtx v16; // rdx', 'rtx v26; // rdx', 'rtx v76; // rdx', 'rtx v9; // rdx']
['rtx i; // rbx', 'rtx k; // rbx', 'rtx i; // rbx', 'rtx i; // rbx', 'rtx j; // rbx', 'rtx k; // rbx', 'rtx m; // rbx', 'rtx j; // rbx']
['rtx v119; // rsi']
['if ( check_mode && !ix86_hard_regno_mode_ok( v5, ( machine_mode)*( unsigned __int8 *)( v3.rtwint + 2)) )']
['( machine_mode)*( unsigned __int8 *)( v1.rtwint + 2),']
['( machine_mode)*( ( unsigned __int8 *)x + 2));', '( machine_mode)*( ( unsigned __int8 *)x + 2));']
['v18 = ( ( unsigned int)( mode_class_0[v4] - 5) < 2) + 1;']
['if ( ( unsigned int)( mode_class_0[v6] - 5) <= 1 )']
['if ( ( unsigned int)( mode_class_0[v10] - 5) > 1 )']
['if ( ( unsigned int)( mode_class_0[v6] - 5) <= 1 )']
['if ( ( unsigned int)( mode_class_0[ymode] - 5) > 1 )', 'if ( ( unsigned int)( mode_class_0[ymode] - 5) > 1 )']
['rtx v24; // rcx', 'rtx v27; // r15', 'rtx v34; // r12', 'rtx v14; // r12', 'rtx v14; // r13', 'rtx v29; // r12', 'rtx v28; // r14', 'rtx v74; // r12', 'rtx v24; // rax', 'rtx v21; // r14', 'rtx v44; // r12', 'rtx v14; // r13', 'rtx v84; // r12', 'rtx v14; // r12', 'rtx v44; // r12', 'rtx v28; // r14', 'rtx v44; // r14']
['rtx v28; // rsi']
['rtx *v29; // rsi']
['rtx v38; // rax', 'rtx v38; // rax', 'rtx v38; // rax', 'rtx v38; // rax', 'rtx v38; // rax']
['rtx v39; // rax', 'rtx v39; // rax']
['rtx v40; // rax', 'rtx v40; // rax', 'rtx v40; // rax', 'rtx v40; // rax']
['rtx v41; // rax']
['rtx v17; // r12']
['rtx *v26; // r13']
['rtx *v30; // rax']
['rtx v37; // rdi', 'rtx v34; // rsi', 'rtx v39; // rsi', 'rtx v47; // rsi']
['rtx v37; // rdi', 'rtx v9; // rdi', 'rtx *v29; // rsi', 'rtx *v7; // rdi', 'rtx v39; // rsi']
['rtx *v7; // rdi']
['rtx *v42; // r12', 'rtx **v48; // r14']
['rtx *v50; // rcx']
['rtx v55; // rsi', 'rtx v5; // rsi', 'rtx v43; // rsi', 'rtx v54; // rsi', 'rtx v55; // rsi']
['rtx v5; // r12', 'rtx v50; // r12', 'rtx *v42; // r12', 'rtx *v29; // r12', 'rtx v15; // r12', 'rtx v15; // r12', 'rtx *v57; // r15', 'rtx *v50; // r14', 'rtx *v51; // r15', 'rtx *v56; // r13']
['rtx v64; // rdx']
['rtx v70; // rbx', 'rtx v7; // rdx', 'rtx v71; // rdx', 'rtx v76; // rdx', 'rtx v10; // rdx']
['rtx v46; // rax']
['rtx op0; // [rsp+18h] [rbp-60h]']
['rtx op0; // [rsp+18h] [rbp-60h]', 'rtx old; // [rsp+8h] [rbp-50h]']
['rtx x; // [rsp+10h] [rbp-48h]']
['rtx op0; // [rsp+18h] [rbp-60h]']
['rtx inner; // [rsp+38h] [rbp-40h] BYREF']
['if ( *( _WORD *)v20 == 74 && mode_class_0[*( unsigned __int8 *)( v20 + 2)] == MODE_CC )']
['rtx *v29; // r12']
['rtx v40; // r12', 'rtx v10; // r14', 'rtx v40; // r15', 'rtx v44; // r14']
['rtx v14; // rsi', 'rtx v46; // rsi', 'rtx v40; // rsi', 'rtx v34; // rsi', 'rtx v43; // rsi', 'rtx v47; // rsi', 'rtx v41; // rsi', 'rtx v54; // rsi']
['rtx v25; // rsi', 'rtx v46; // rsi', 'rtx v40; // rsi', 'rtx v55; // rsi', 'rtx v5; // rsi', 'rtx v43; // rsi', 'rtx v47; // rsi', 'rtx v41; // rsi', 'rtx v55; // rsi']
['rtx *v48; // rbx', 'rtx *v16; // rbx']
['rtx *v42; // r12', 'rtx *v29; // r12']
['rtx regno_note; // rbp']
['rtx v5; // rax', 'rtx v21; // rax', 'rtx v41; // rax', 'rtx v5; // rax', 'rtx v57; // rax', 'rtx v50; // rax', 'rtx v31; // rax', 'rtx v11; // rax', 'rtx v31; // rax', 'rtx v57; // rax', 'rtx v31; // rax', 'rtx v55; // rax', 'rtx v53; // rax', 'rtx v11; // rax', 'rtx v50; // rax', 'rtx v57; // rax', 'rtx v5; // rax', 'rtx v55; // rax', 'rtx v11; // rax']
['rtx v67; // rbx']
['rtx v76; // rax']
['rtx flags_user; // rax']
['rtx v10; // rax', 'rtx v16; // rax', 'rtx v13; // rax', 'rtx v92; // rax', 'rtx v10; // rax', 'rtx v18; // rax', 'rtx v42; // rax', 'rtx v22; // rax', 'rtx v42; // rax', 'rtx v13; // rax', 'rtx v10; // rax', 'rtx v42; // rax', 'rtx v14; // rax', 'rtx v82; // rax', 'rtx v15; // rax', 'rtx v22; // rax', 'rtx v12; // rdx', 'rtx v19; // rax', 'rtx v11; // rax', 'rtx v42; // rax', 'rtx v16; // rax', 'rtx v17; // rax', 'rtx v13; // rax', 'rtx v42; // rax', 'rtx v10; // rax', 'rtx v10; // rax', 'rtx v10; // rax', 'rtx v11; // rax', 'rtx v15; // rax', 'rtx v17; // rax', 'rtx v10; // rax', 'rtx v17; // rax', 'rtx v15; // rax', 'rtx v17; // rax', 'rtx v11; // rax']
['flags_user = next_flags_user( insn);']
['rtx = flags_user;']
['if ( !flags_user )']
['v2 = ( __int64)flags_user[2];']
['v10 = next_flags_user( rtx);']
['rtx = v10;']
['if ( v14 )', 'if ( v15 )', 'if ( !v27 )', 'if ( !v20 )', 'if ( v10 )', 'if ( !v5 )', 'if ( v13 )', 'if ( !v9 )', 'if ( v19 )', 'if ( v2 )', 'if ( v10 )', 'if ( v10 )', 'if ( !v9 )', 'if ( v10 )', 'if ( v17 )']
['v2 = ( __int64)v10[2];']
['*( _WORD *)pat = swap_condition( ( rtx_code)v1);']
['if ( in_section_0 != in_text )']
['in_section_0 = in_text;']
['rtx end; // rbx', 'rtx end; // rsi', 'rtx end; // rax', 'rtx end; // rdi', 'rtx end; // rbx']
['rtx last_insn; // r12']
['rtx v28; // r14', 'rtx v21; // r14', 'rtx v28; // r14', 'rtx v44; // r14']
['rtx v15; // r15', 'rtx v27; // r15', 'rtx v35; // r15', 'rtx v45; // r15']
['rtx active_insn; // rax']
['rtx v57; // r14']
['rtx v48; // rdx']
['rtx v46; // rsi', 'rtx v40; // rsi', 'rtx v39; // rsi', 'rtx v43; // rsi', 'rtx v47; // rsi', 'rtx v41; // rsi']
['rtx *v61; // rax', 'rtx *v24; // rbp']
['rtx *v15; // rax', 'rtx *v61; // rax', 'rtx v65; // rax']
['v1 = stack_0;']
['if ( stack_0->timevar != &timevars[timevar] )']
['stack_0 = v1->next;']
['if ( stack_0 )', 'if ( stack_0 )']
['biv = bl_0->biv;', 'v1 = stack_0;', 'timevar = TV_LIFE_0;', 'timevar = TV_LIFE_0;']
['v1 = stack_0;']
['if ( stack_0 )', 'if ( stack_0 )']
['v1 = stack_0;']
['while ( constructor_stack_0->implicit );']
['v1 = stack_0;']
['stack_0 = v2;']
['for ( i = insns; ; i = ( rtx)v17.rtwint )', 'for ( i = insns; ; i = ( rtx)v17.rtwint )']
['lang_hooks_0.init_options( );']
['v10 = lang_hooks_0.safe_from_p( v3, ( tree)v4);']
['while ( &unk_6F4758 != ( _UNKNOWN *)v18 );']
['if ( &unk_939B74 == ( _UNKNOWN *)++v17 )']
['v8 = ( const char *)&unk_6F613E;']
['if ( !displayed_4 )']
['if ( !displayed_4 )']
['lang_hooks_0.name,']
['v10 = __CFADD__( ( _DWORD)rtuint, v9);']
['while ( ( sch_istable[v3] & 4) != 0 )']
['if ( ( sch_istable[v13] & 4) == 0 )']
['while ( ( sch_istable[v9] & 4) != 0 );', 'while ( ( sch_istable[v3] & 4) != 0 )']
['while ( &unk_939F0A != ( _UNKNOWN *)v66 );']
['rtx v10; // r12']
['v12 = assign_stack_local( ( machine_mode)i, v11, -( v11 != v9));']
['v12 = assign_stack_local( ( machine_mode)i, v11, -( v11 != v9));']
['v4->fld[v9].rtwint = ( __int64)v12;', 'v9.rtwint = ( __int64)v10;']
['v12 = assign_stack_local( ( machine_mode)i, v11, -( v11 != v9));']
['v12 = assign_stack_local( ( machine_mode)i, v11, -( v11 != v9));']
['v4->fld[v9].rtwint = ( __int64)v12;', 'v9.rtwint = ( __int64)v10;']
['rtx = v18->fld[0].rtx;', 'rtx = v17->fld[0].rtx;']
['*( _QWORD *)&src->end[4] = v15;']
['if ( *( _OWORD *)&scale.base == 0LL )']
['rtx base_term; // rbx']
['rtx v10; // rax', 'rtx v20; // rax', 'rtx end; // rax', 'rtx v10; // rax', 'rtx v20; // rax', 'rtx v60; // rax', 'rtx v40; // rax', 'rtx v10; // rax', 'rtx *v30; // rax', 'rtx v50; // rax', 'rtx v20; // rax', 'rtx v40; // rax', 'rtx v90; // rax', 'rtx v40; // rax', 'rtx v40; // rax', 'rtx rtl; // rax', 'rtx v90; // rax', 'rtx v10; // rax', 'rtx v10; // rax', 'rtx v10; // rax', 'rtx v20; // rax', 'rtx v50; // rax', 'rtx v60; // rax', 'rtx v10; // rax', 'rtx *v70; // rax']
['v10 = copy_to_reg( v6->fld[0].rtx);']
['rtx = v10;']
['base_term = find_base_term( rtx);']
['if ( !base_term )']
['if ( *( _WORD *)base_term == 25 && *( ( _BYTE *)base_term + 2) )', 'if ( *( _WORD *)base_term == 25 && *( ( _BYTE *)base_term + 2) )']
['if ( *( _WORD *)base_term == 25 && *( ( _BYTE *)base_term + 2) )', 'if ( *( _WORD *)base_term == 25 && *( ( _BYTE *)base_term + 2) )']
['v6 = base_alias_check( addr, mem_addr, ( machine_mode)*( ( unsigned __int8 *)x + 2), v4);']
['base_term = find_base_term( rtx);']
['if ( !base_term )']
['( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( x->fld[0].rtwint + 2),']
['( machine_mode)*( ( unsigned __int8 *)x + 2));', '( machine_mode)*( ( unsigned __int8 *)x + 2));']
['v11 = *( tree_node **)( elements->int_cst.int_cst.high + 40);']
['( tree_code)( ( *( ( _BYTE *)&expr->block.common + 17) & 1) == 0 ? TRUTH_ORIF_EXPR : TRUTH_OR_EXPR),']
['imag = ( tree_node *)*( &global_trees + 17);']
['rtx v24; // rax', 'rtx v44; // rax']
['rtx v27; // r15']
['rtx v27; // r15', 'rtx v28; // r14', 'rtx v74; // r12', 'rtx v21; // r14', 'rtx v76; // r14', 'rtx v28; // r14', 'rtx v44; // r14', 'rtx v57; // r14']
['rtx temp; // [rsp+20h] [rbp-48h]', 'rtx old_set; // [rsp+20h] [rbp-238h]', 'rtx equiva; // [rsp+10h] [rbp-68h]', 'rtx *listp; // [rsp+10h] [rbp-48h]', 'rtx orig_insn; // [rsp+0h] [rbp-68h]']
['rtx temp; // [rsp+20h] [rbp-48h]', 'rtx old_set; // [rsp+20h] [rbp-238h]', 'rtx equiva; // [rsp+10h] [rbp-68h]', 'rtx *listp; // [rsp+10h] [rbp-48h]', 'rtx orig_insn; // [rsp+0h] [rbp-68h]']
['rtx new_body; // [rsp+10h] [rbp-248h]', 'rtx dest; // [rsp+18h] [rbp-58h]', 'rtx next; // [rsp+70h] [rbp-68h]', 'rtx newa; // [rsp+20h] [rbp-78h]']
['rtx new_body; // [rsp+10h] [rbp-248h]', 'rtx dest; // [rsp+18h] [rbp-58h]', 'rtx next; // [rsp+70h] [rbp-68h]', 'rtx newa; // [rsp+20h] [rbp-78h]']
['rtx v109; // rsi']
['rtx v17; // rax', 'rtx v17; // rax', 'rtx v17; // rax', 'rtx v17; // rax']
['rtx src2_note; // [rsp+10h] [rbp-78h]']
['rtx x; // [rsp+18h] [rbp-60h] BYREF']
['rtx v21; // [rsp+10h] [rbp-68h]']
['v6 = cfun->emit->x_first_insn;']
['v9 = ( rtx)rtx[1];', 'v9 = ( rtx)rtx[1];', 'v6 = ( rtx)rtx[1];']
['if ( *( _WORD *)v18 == 47 || ( v18 = single_set_2( i, v18)) != 0LL )', 'if ( *( _WORD *)v18 == 47 || ( v18 = single_set_2( i, v18)) != 0LL )', 'if ( *( _WORD *)v18 == 47 || ( v18 = single_set_2( i, v18)) != 0LL )']
['if ( *( _WORD *)v18 == 47 || ( v18 = single_set_2( i, v18)) != 0LL )', 'if ( *( _WORD *)v18 == 47 || ( v18 = single_set_2( i, v18)) != 0LL )', 'if ( *( _WORD *)v18 == 47 || ( v18 = single_set_2( i, v18)) != 0LL )']
['if ( *( _WORD *)v18 == 47 || ( v18 = single_set_2( i, v18)) != 0LL )', 'if ( *( _WORD *)v18 == 47 || ( v18 = single_set_2( i, v18)) != 0LL )', 'if ( *( _WORD *)v18 == 47 || ( v18 = single_set_2( i, v18)) != 0LL )']
['v20.rtwint = ( __int64)v19->fld[0];']
['y = rtx;']
['rtx v11; // rax', 'rtx v11; // rax', 'rtx v11; // rax']
['v18 = find_reg_note( v16, REG_RETVAL, 0LL);', 'v17 = find_reg_note( v9, REG_RETVAL, 0LL);']
['reg_dead_endregno = v25;']
['if ( v14 )', 'if ( v15 )', 'if ( !v27 )', 'if ( !v20 )', 'if ( v10 )', 'if ( !v5 )', 'if ( v13 )', 'if ( !v9 )', 'if ( v19 )', 'if ( v10 )', 'if ( v10 )', 'if ( !v9 )', 'if ( v10 )', 'if ( v17 )']
['rtx = v18->fld[0].rtx;', 'rtx = v17->fld[0].rtx;']
['rtx v37; // rdi']
['rtx dest; // [rsp+18h] [rbp-58h]', 'rtx op1; // [rsp+20h] [rbp-58h]', 'rtx set; // [rsp+10h] [rbp-48h]', 'rtx orig; // [rsp+40h] [rbp-58h]', 'rtx *loca; // [rsp+10h] [rbp-78h]', 'rtx *loc; // [rsp+10h] [rbp-78h]']
['end = ( rtx)rtx[1];']
['( machine_mode)*( unsigned __int8 *)( v12.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v11.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v11.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v15.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v1.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v17.rtwint + 2),', '( machine_mode)*( unsigned __int8 *)( v17.rtwint + 2),']
['( machine_mode)( BYTE5( index_type->block.abstract_origin) >> 1),']
['( machine_mode)( BYTE5( range->common.type->block.abstract_origin) >> 1),']
['emit_cmp_and_jump_insns( v14, v17, GTU, 0LL, ( machine_mode)v18, 1, default_label);']
['v20 = gen_rtx_fmt_u00( LABEL_REF, ( machine_mode)v18, table_label);']
['v23 = gen_rtx_fmt_ee( MULT, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v14, v22);']
['v24 = gen_rtx_fmt_ee( PLUS, ( machine_mode)( ( ( target_flags & 0x2000000) != 0) + 4), v23, v20);']
['v26 = memory_address_noforce( ( machine_mode)v25, v24);']
['v28 = gen_reg_rtx( ( machine_mode)v27);']
['v30 = gen_rtx_MEM( ( machine_mode)v29, v26);']
['if ( *( _OWORD *)&args1 == 0LL )']
['frees = undobuf_0.frees;', 'frees->next = undobuf_0.undos;', 'frees = undobuf_0.frees;', 'frees->next = undobuf_0.undos;']
['if ( undobuf_0.frees )', 'if ( undobuf_0.frees )']
['frees = undobuf_0.frees;', 'frees = undobuf_0.frees;']
['undobuf_0.undos = frees;', 'undobuf_0.undos = frees;']
['undobuf_0.undos = 0LL;']
['rtx v12; // rdx']
['rtx v17; // rax', 'rtx v17; // rax', 'rtx v17; // rax', 'rtx v17; // rax']
['rtx v14; // rdx', 'rtx v18; // rax', 'rtx v13; // rdx', 'rtx v12; // rdx', 'rtx v14; // rdx', 'rtx v16; // rdx', 'rtx v48; // rdx', 'rtx v19; // rdx', 'rtx v11; // rdx', 'rtx v10; // rdx']
['rtx v33; // rax', 'rtx v92; // rax', 'rtx v35; // rax', 'rtx v35; // rax', 'rtx v38; // rax', 'rtx v36; // rax', 'rtx v35; // rax', 'rtx v42; // rax', 'rtx v22; // rax', 'rtx v35; // rax', 'rtx v36; // rax', 'rtx v38; // rax', 'rtx v42; // rax', 'rtx v37; // rax', 'rtx v39; // rax', 'rtx v42; // rax', 'rtx v82; // rax', 'rtx v22; // rax', 'rtx v35; // rax', 'rtx v38; // rax', 'rtx v32; // rdx', 'rtx v31; // rax', 'rtx v32; // rbx', 'rtx v42; // rax', 'rtx v34; // rax', 'rtx v37; // rax', 'rtx v38; // rax', 'rtx v31; // rax', 'rtx v36; // rax', 'rtx v37; // rax', 'rtx v39; // rax', 'rtx v37; // rax', 'rtx v33; // rax', 'rtx v38; // rax', 'rtx v36; // rax', 'rtx v42; // rax', 'rtx v33; // rax', 'rtx v31; // rax', 'rtx v34; // rax']
['rtx i; // r12']
['rtx v44; // rax']
['rtx v46; // rax']
['rtx *v59; // rax']
['rtx *x_regno_reg_rtx; // rdx']
['*( _QWORD *)&src->end[4] = v15;']
['v12 = ( tree_node *)*( ( _QWORD *)&v15->stmt + v11++);']
['v28 = ( tree_node *)i[4];']
['rtx v13; // rax', 'rtx v13; // rax', 'rtx v13; // rax']
['v11 = copy_rtx( rtx);']
['v8[1].fld[0].rtwint = ( __int64)v10;']
['if ( ( tree_node *)*( &global_trees + 5) == section_name )']
['if ( ( tree_node *)*( &global_trees + 4) == section_name )']
['if ( ( tree_node *)*( &global_trees + 3) == section_name )']
['if ( ( tree_node *)*( &global_trees + 2) == section_name )']
['if ( ( tree_node *)*( &global_trees + 1) == section_name )']
['timevar_push( TV_LIFE_0);']
['if ( ( flags & 2) != 0 && ( target_flags & 0x80000) == 0 )']
['timevar = TV_LIFE_0;', 'timevar = TV_LIFE_0;']
['timevar = TV_LIFE_0;', 'timevar = TV_LIFE_0;']
['timevar_push( TV_LIFE_UPDATE_0);']
['timevar = TV_LIFE_UPDATE_0;', 'timevar = TV_LIFE_UPDATE_0;', 'timevar = TV_LIFE_UPDATE_0;', 'timevar = TV_LIFE_UPDATE_0;']
['timevar = TV_LIFE_UPDATE_0;', 'timevar = TV_LIFE_UPDATE_0;', 'timevar = TV_LIFE_UPDATE_0;', 'timevar = TV_LIFE_UPDATE_0;']
['timevar = TV_LIFE_UPDATE_0;', 'timevar = TV_LIFE_UPDATE_0;', 'timevar = TV_LIFE_UPDATE_0;', 'timevar = TV_LIFE_UPDATE_0;']
['timevar = TV_LIFE_UPDATE_0;', 'timevar = TV_LIFE_UPDATE_0;', 'timevar = TV_LIFE_UPDATE_0;', 'timevar = TV_LIFE_UPDATE_0;']
['v34 = ( ( unsigned int)( mode_class_0[v26] - 5) < 2) + 1;']
['rtx v7; // rax', 'rtx v7; // rax']
['v3 = gen_rtx_fmt_ee( EXPR_LIST, ( machine_mode)v37, v36, *( rtx *)&v3[1]);']
['reg_dead_regno = v27;']
['addr[0] = rtx;']
['v29 = ( ( unsigned int)( mode_class_0[v22] - 5) < 2) + 1;']
['changes = ( change_t_0 *)xrealloc( changes, 32LL * v8);']
['rtx v33; // rax', 'rtx v33; // rax', 'rtx v33; // rax', 'rtx v43; // rcx']
['rtx op0; // [rsp+18h] [rbp-60h]']
['rtx op1; // [rsp+20h] [rbp-58h]']
['x = v7;']
['rtx = v4;', 'rtx = v6;', 'x = v7;', 'v10 = v7;', 'v10 = v7;', 'v10 = v7;', 'v10 = v7;', 'v12 = v7;']
['v5 = v10;', 'v5 = v10;', 'v15 = v14;', 'v15 = v14;', 'v6 = v10;', 'v4 = v2;', 'v9 = v10;', 'v7 = v11;']
['v23 = ( rtx *)( ( char *)data + 16 * v13);']
['v5 = v10;', 'v5 = v10;', 'v15 = v14;', 'v15 = v14;', 'v6 = v10;', 'v4 = v2;', 'v9 = v10;', 'v7 = v11;']
['if ( in_section_0 == in_text )', 'if ( in_section_0 == in_text )']
['if ( in_section_0 != in_data )']
['in_section_0 = in_data;']
['if ( in_section_0 != in_data )']
['if ( in_section_0 == in_text )', 'if ( in_section_0 == in_text )']
['in_section_0 = in_bss;', 'in_section_0 = in_text;']
['mergeable_constant_section( ( machine_mode)LOBYTE( v3->block.supercontext), v5, 0);']
['rtx v76; // r14', 'rtx v44; // r14']
['rtx x; // [rsp+10h] [rbp-48h]']
['x = get_insns( );']
['fatal_insn( "wrong insn in the fallthru edge", rtx, "cfgrtl.c", 1717, "verify_flow_info");']
['fatal_insn( "flow control insn inside a basic block", v21, "cfgrtl.c", 1829, "verify_flow_info");']
['if ( x )']
['v29 = *( _WORD *)x;']
['if ( x[2].fld[0].rtint == -80 )']
['if ( *( _DWORD *)( *( _QWORD *)&x[2] + 88LL) != ++v28 )']
['$A887AD9C3C6C8CC7716950D571F57C9D *p_int_cst; // r15', '$A887AD9C3C6C8CC7716950D571F57C9D *p_int_cst; // r15']
['$A887AD9C3C6C8CC7716950D571F57C9D *p_int_cst; // r15', '$A887AD9C3C6C8CC7716950D571F57C9D *p_int_cst; // r15']
['p_int_cst = &node->int_cst.int_cst;', 'p_int_cst = &node->int_cst.int_cst;']
['v8 = ( tree_node *)prev_try->aka;', 'v7 = ( tree_node *)*slot;']
['p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);', 'p_int_cst = ( $A887AD9C3C6C8CC7716950D571F57C9D *)( ( char *)p_int_cst + 8);']
['rtx v12; // rdx']
['rtx v14; // rax']
['rtx v35; // rax', 'rtx v35; // rax', 'rtx v35; // rax', 'rtx v55; // rdx', 'rtx v35; // rbx', 'rtx v35; // rax', 'rtx v35; // rax', 'rtx v32; // rdx', 'rtx v35; // rbx', 'rtx v34; // rdx']
['rtx v6; // r13', 'rtx v6; // r12', 'rtx v34; // r12', 'rtx v36; // rax', 'rtx v56; // r13', 'rtx v32; // r12', 'rtx v36; // rax', 'rtx v36; // rbx', 'rtx v6; // r12', 'rtx v35; // r15', 'rtx v16; // r15', 'rtx v36; // rax', 'rtx v36; // rax', 'rtx v76; // r14']
['rtx v40; // rax', 'rtx v40; // rax', 'rtx v40; // rax', 'rtx v40; // rax']
['rtx v59; // rdx', 'rtx v48; // rdx', 'rtx v19; // rdx', 'rtx v9; // rdx']
['rtx *v50; // rcx']
['edge_info_0[( int)v13] = flow_edges;']
['if ( statement_code_p( ( tree_code)v9) && ( *( ( _BYTE *)*v5 + 19) & 4) == 0 )']
['v4 = lang_hooks_0.tree_inlining.walk_subtrees( ( tree_node **)v5, walk_subtrees, func, data, htab_);', 'v4 = lang_hooks_0.tree_inlining.walk_subtrees( ( tree_node **)v5, walk_subtrees, func, data, htab_);']
['v4 = lang_hooks_0.tree_inlining.walk_subtrees( ( tree_node **)v5, walk_subtrees, func, data, htab_);', 'v4 = lang_hooks_0.tree_inlining.walk_subtrees( ( tree_node **)v5, walk_subtrees, func, data, htab_);']
['if ( v9 != 2 && !v8 && !lang_hooks_0.tree_inlining.tree_chain_matters_p( ( tree_node *)*v5) )', 'if ( v9 != 2 && !v8 && !lang_hooks_0.tree_inlining.tree_chain_matters_p( ( tree_node *)*v5) )']
['if ( v9 != 2 && !v8 && !lang_hooks_0.tree_inlining.tree_chain_matters_p( ( tree_node *)*v5) )', 'if ( v9 != 2 && !v8 && !lang_hooks_0.tree_inlining.tree_chain_matters_p( ( tree_node *)*v5) )']
['v1 = general_operand( x, ( machine_mode)*( ( unsigned __int8 *)x + 2));']
['v2 = test_insn_13;']
['if ( !test_insn_13 )']
['test_insn_13 = insn_raw;']
['ggc_add_rtx_root( &test_insn_13, 1);']
['v2 = test_insn_13;']
['v3 = spelling_0;', 'v5 = spelling_0;', 'v1 = spelling_0;']
['if ( spelling_base >= spelling_0 )', 'if ( spelling_base >= spelling_0 )']
['v9 = gen_lowpart( ( machine_mode)*( ( unsigned __int8 *)op + 2), v7);']
['if ( **( _WORD **)&this_insn_0[2] == 39 )']
['if ( multiple_sets( this_insn_0) )']
['v5 = **( _DWORD **)( *( _QWORD *)&this_insn_0[2] + 8LL) - 1;']
['v5 = **( _DWORD **)( *( _QWORD *)&this_insn_0[2] + 8LL) - 1;']
['if ( find_regno_note( this_insn_0, REG_INC, rtint) )']
['mark_life( rtint, ( machine_mode)*( ( unsigned __int8 *)reg + 2), 0);', 'mark_life( rtint, ( machine_mode)*( ( unsigned __int8 *)reg + 2), 0);']
['( machine_mode)*( ( unsigned __int8 *)reg + 2),', '( machine_mode)*( ( unsigned __int8 *)reg + 2),']
['mark_life( rtint, ( machine_mode)*( ( unsigned __int8 *)reg + 2), 0);', 'mark_life( rtint, ( machine_mode)*( ( unsigned __int8 *)reg + 2), 0);']
['qty_0[v4].death = output_p + 2 * this_insn_number;']
['rtx base_term; // rbx']
['base_term = find_base_term( rtx);']
['if ( !base_term )']
['if ( *( _WORD *)base_term == 25 && *( ( _BYTE *)base_term + 2) )', 'if ( *( _WORD *)base_term == 25 && *( ( _BYTE *)base_term + 2) )']
['if ( *( _WORD *)base_term == 25 && *( ( _BYTE *)base_term + 2) )', 'if ( *( _WORD *)base_term == 25 && *( ( _BYTE *)base_term + 2) )']
['( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),', '( machine_mode)*( ( unsigned __int8 *)x + 2),']
['( machine_mode)*( ( unsigned __int8 *)mem + 2)) )']
['if ( *( ( _BYTE *)op + 2) || v3 == VOIDmode || ( result = 0, ( mode_class_0[v3] & 0xFFFFFFFD) == 1) )']
['if ( *( ( _BYTE *)op + 2) || v3 == VOIDmode || ( result = 0, ( mode_class_0[v3] & 0xFFFFFFFD) == 1) )']
['if ( xexit_cleanup )']
['sprintf( xstrerror_buf, aUndocumentedEr, ( unsigned int)errnum);']
['if ( ( unsigned int)v2 <= 0xFF && ( sch_istable[( unsigned __int8)v2] & 0xAC) != 0 )']
['timevar_push( TV_LEX_0);']
['timevar_pop( TV_LEX_0);']
