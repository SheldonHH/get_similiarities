['new_buff']
['new_buff']
['new_buff']
['_cpp_get_buff']
['next_tokenrun']
['next_tokenrun']
['next_tokenrun']
['next_tokenrun']
['new_buff']
['loc_descriptor']
['add_bound_info']
['conditions_mutex_p']
['add_double']
['add_double']
['dwarf2out_cfi_label']
['add_fde_cfi']
['dwarf2out_cfi_label']
['dwarf2out_cfi_label']
['add_const_value_attribute']
['add_pending_init', 'splay_tree_insert']
['compute_argument_addresses', 'sge_plus_constant']
['adjust_address_1', 'adjust_address_1', 'emit_libcall_block', 'emit_libcall_block', 'expand_field_assignment', 'expand_function_end', 'extract_bit_field', 'legitimize_pic_address', 'make_extraction', 'mark_used_regs', 'noce_process_if_block', 'plus_constant_wide', 'sched_analyze_2', 'simplify_subreg', 'subst']
['memrefs_conflict_p']
['check_asm_stack_operands', 'emit_library_call_value_1', 'expand_function_end', 'noce_get_alt_condition']
['apply_distributive_law']
['convert_regs_1', 'expand_field_assignment', 'make_extraction', 'make_extraction']
['delete_output_reload', 'emit_library_call_value_1', 'expand_decl', 'instantiate_virtual_regs_1', 'subst']
['copy_loop_body', 'fixup_var_refs_1', 'for_each_successor_phi', 'memrefs_conflict_p', 'refers_to_regno_for_reload_p', 'set_label_offsets']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'dw2_asm_output_encoded_addr_rtx', 'emit_block_move', 'emit_push_insn', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'expand_builtin_prefetch', 'find_best_addr', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_expand_prologue', 'ix86_force_to_memory', 'ix86_force_to_memory', 'ix86_va_arg', 'legitimize_pic_address', 'legitimize_pic_address', 'load_pic_register', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'round_trampoline_addr', 'round_trampoline_addr']
['mark_effect']
['alloc_aux_for_blocks']
['alloc_aux_for_blocks']
['alloc_aux_for_edges']
['alloc_aux_for_edges']
['alloc_block']
['alloc_block']
['alloc_block']
['alloc_block']
['alloc_block']
['alloc_block']
['alloc_block']
['alloc_EXPR_LIST']
['apply_distributive_law', 'emit_input_reload_insns', 'unroll_loop']
['emit_libcall_block', 'record_value_for_reg', 'refers_to_regno_for_reload_p']
['named_section_flags']
['copy_rtx']
['load_mems']
['simplify_subreg']
['adjust_address_1', 'adjust_address_1', 'compute_argument_addresses', 'compute_argument_addresses', 'copy_insn_notes', 'express_from', 'find_reloads_address_part', 'find_reloads_address_part', 'insn_dead_p', 'insn_dead_p', 'mark_used_regs', 'offsettable_address_p', 'offsettable_address_p', 'protect_from_queue', 'simplify_relational_operation', 'simplify_relational_operation', 'store_split_bit_field', 'subst']
['make_tree_vec']
['init_propagate_block_info']
['set_diagnostic_context']
['allocate_dynamic_stack_space']
['allocate_dynamic_stack_space', 'expand_eh_region_end_cleanup']
['allocate_dynamic_stack_space']
['allocate_dynamic_stack_space']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'dw2_asm_output_encoded_addr_rtx', 'emit_block_move', 'emit_push_insn', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'expand_builtin_prefetch', 'find_best_addr', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_expand_prologue', 'ix86_force_to_memory', 'ix86_force_to_memory', 'ix86_va_arg', 'legitimize_pic_address', 'legitimize_pic_address', 'load_pic_register', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'round_trampoline_addr', 'round_trampoline_addr']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'dw2_asm_output_encoded_addr_rtx', 'emit_block_move', 'emit_push_insn', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'expand_builtin_prefetch', 'find_best_addr', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_expand_prologue', 'ix86_force_to_memory', 'ix86_force_to_memory', 'ix86_va_arg', 'legitimize_pic_address', 'legitimize_pic_address', 'load_pic_register', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'round_trampoline_addr', 'round_trampoline_addr']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'dw2_asm_output_encoded_addr_rtx', 'emit_block_move', 'emit_push_insn', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'expand_builtin_prefetch', 'find_best_addr', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_expand_prologue', 'ix86_force_to_memory', 'ix86_force_to_memory', 'ix86_va_arg', 'legitimize_pic_address', 'legitimize_pic_address', 'load_pic_register', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'round_trampoline_addr', 'round_trampoline_addr']
['allocate_reg_info']
['allocate_reg_info', 'reg_alternate_class', 'reg_preferred_class']
['allocate_reg_info']
['alter_reg']
['alter_reg']
['alter_reg']
['alter_subreg']
['dwarf_stack_op_name']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'dw2_asm_output_encoded_addr_rtx', 'emit_block_move', 'emit_push_insn', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'expand_builtin_prefetch', 'find_best_addr', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_expand_prologue', 'ix86_force_to_memory', 'ix86_force_to_memory', 'ix86_va_arg', 'legitimize_pic_address', 'legitimize_pic_address', 'load_pic_register', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'round_trampoline_addr', 'round_trampoline_addr']
['apply_args_size']
['apply_args_size']
['apply_args_size']
['apply_args_size']
['apply_args_size']
['apply_args_size']
['apply_args_size']
['apply_args_size', 'apply_args_size', 'apply_args_size']
['apply_args_size', 'apply_args_size', 'apply_args_size']
['apply_args_size']
['apply_args_size']
['apply_args_size']
['find_reloads', 'instantiate_virtual_regs_1', 'maybe_eliminate_biv_1', 'subst_constants']
['find_base_value', 'refers_to_regno_for_reload_p', 'restore_line_notes', 'sched_analyze_2', 'sge_plus_constant', 'simplify_if_then_else']
['unroll_loop']
['apply_change_group']
['copy_insn_list', 'cse_set_around_loop', 'hash_scan_set', 'merge_blocks_nomove', 'noce_process_if_block']
['identify_call_return_value']
['mark_all_labels']
['move_deaths']
['move_deaths']
['copy_insn_list', 'cse_set_around_loop', 'hash_scan_set', 'merge_blocks_nomove', 'noce_process_if_block']
['expand_decl', 'force_nonfallthru_and_redirect']
['expand_decl', 'force_nonfallthru_and_redirect']
['gen_mem_addressof']
['apply_distributive_law']
['apply_distributive_law']
['apply_distributive_law', 'apply_distributive_law', 'df_ref_record', 'emit_input_reload_insns', 'emit_libcall_block', 'expand_decl', 'gen_reload', 'subst_constants', 'unroll_loop']
['emit_libcall_block', 'legitimize_pic_address', 'make_extraction', 'noce_process_if_block', 'record_value_for_reg', 'subst_constants']
['apply_distributive_law']
['apply_distributive_law']
['apply_distributive_law']
['apply_distributive_law']
['apply_distributive_law']
['apply_distributive_law', 'apply_distributive_law']
['apply_distributive_law', 'apply_distributive_law']
['noce_try_abs']
['noce_try_abs']
['apply_result_size']
['apply_result_size']
['apply_result_size']
['apply_result_size']
['apply_result_size']
['apply_result_size', 'apply_result_size', 'apply_result_size']
['apply_result_size', 'apply_result_size', 'apply_result_size']
['apply_result_size']
['apply_result_size']
['apply_result_size']
['asm_fprintf']
['output_asm_insn']
['requires_inout']
['offsettable_nonstrict_memref_p']
['ereal_from_int', 'ereal_from_uint']
['dwarf2out_begin_prologue', 'gen_subprogram_die']
['dwarf2out_begin_prologue', 'gen_subprogram_die']
['dwarf2out_begin_prologue']
['dwarf2out_begin_prologue']
['text_section']
['text_section']
['print_rtx']
['add_byte_size_attribute', 'expand_call', 'expand_mult_add', 'expand_mult_add', 'find_base_value', 'num_sign_bit_copies', 'simplify_comparison']
['expand_call']
['set_decl_abstract_flags', 'set_decl_origin_self']
['check_case_value']
['find_placeholder', 'set_decl_abstract_flags', 'set_decl_origin_self']
['check_case_value']
['output_constructor', 'output_init_element']
['text_section']
['print_rtx']
['check_case_value']
['output_init_element', 'verify_tree']
['combine_simplify_rtx', 'expand_call', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'make_memloc', 'next_insn_in_loop', 'simplify_if_then_else', 'simplify_relational_operation']
['subst_stack_regs_pat']
['expand_mult_add']
['binary_op_error']
['bitmap_clear', 'bitmap_initialize']
['check_operand_nalternatives']
['bitmap_operation']
['expand_start_case']
['bitmap_equal_p']
['bitmap_clear', 'bitmap_initialize']
['bitmap_operation']
['expand_start_case']
['classify_argument']
['new_cselib_val']
['expand_start_case']
['new_cselib_val']
['biv_total_increment', 'biv_total_increment']
['biv_total_increment', 'biv_total_increment']
['biv_total_increment']
['biv_total_increment']
['biv_total_increment']
['loop_givs_reduce']
['biv_total_increment', 'biv_total_increment']
['biv_total_increment', 'biv_total_increment']
['biv_total_increment', 'biv_total_increment']
['biv_total_increment', 'biv_total_increment']
['biv_total_increment']
['adjust_address_1', 'check_asm_stack_operands', 'consec_sets_giv', 'copy_loop_body', 'eliminate_regs_in_insn', 'emit_library_call_value_1', 'expand_function_end', 'find_equiv_reg', 'noce_get_alt_condition', 'store_bit_field']
['count_error']
['get_frame_alias_set', 'get_varargs_alias_set', 'ix86_GOT_alias_set']
['safe_from_p']
['break_out_memory_refs']
['break_out_memory_refs']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'dw2_asm_output_encoded_addr_rtx', 'emit_block_move', 'emit_push_insn', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'expand_builtin_prefetch', 'find_best_addr', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_expand_prologue', 'ix86_force_to_memory', 'ix86_force_to_memory', 'ix86_va_arg', 'legitimize_pic_address', 'legitimize_pic_address', 'load_pic_register', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'round_trampoline_addr', 'round_trampoline_addr']
['break_out_memory_refs']
['tree_cons']
['set_decl_abstract_flags', 'set_decl_origin_self']
['get_narrower']
['array_size_for_constructor']
['check_format_info_recurse', 'string_constant']
['get_narrower']
['build_complex_type', 'print_mem_expr', 'print_operand', 'print_operand']
['build_complex_type', 'build_complex_type', 'print_operand', 'print_operand']
['build_complex_type', 'print_operand', 'print_operand']
['build_complex_type', 'print_mem_expr', 'print_operand', 'print_operand']
['build_complex_type', 'print_operand', 'print_operand']
['xstrerror']
['try_copy_prop']
['build_conditional_expr', 'dbxout_symbol', 'expand_decl_cleanup', 'self_promoting_args_p', 'self_promoting_args_p']
['set_decl_abstract_flags', 'set_decl_origin_self']
['get_narrower']
['build_index_type']
['find_dummy_reload']
['find_dummy_reload']
['ecleazs', 'prescan_loop']
['build_real', 'build_real']
['build_real', 'build_real']
['build_real_from_int_cst']
['build_real_from_int_cst', 'build_real_from_int_cst']
['build_real_from_int_cst', 'build_real_from_int_cst']
['ecleazs']
['output_constructor', 'output_init_element']
['can_throw_external', 'compute_hash_table', 'copy_eh_notes', 'delete_insn', 'fixup_reorder_chain', 'mark_all_labels', 'reg_scan_mark_refs']
['get_narrower']
['output_constructor', 'output_init_element']
['ecleazs']
['check_case_value']
['check_case_value']
['store_parm_decls']
['build_unary_op', 'layout_type']
['build_unary_op', 'std_expand_builtin_va_arg']
['layout_type', 'std_expand_builtin_va_arg']
['get_narrower']
['get_narrower']
['c_expand_asm_operands']
['c_expand_body', 'try_to_integrate']
['c_expand_body', 'try_to_integrate']
['c_expand_body', 'try_to_integrate']
['c_expand_body']
['c_expand_body']
['data_section', 'timevar_push']
['timevar_push', 'timevar_push']
['peep2_find_free_register', 'peep2_find_free_register', 'peep2_next_insn', 'peep2_reg_dead_p', 'peep2_regno_dead_p']
['set_decl_abstract_flags', 'set_decl_origin_self']
['compare_constant_1', 'compare_constant_1', 'decode_addr_const', 'get_memory_rtx', 'get_memory_rtx', 'optimize_minmax_comparison', 'record_constant_1', 'record_constant_1']
['get_memory_rtx']
['compare_constant_1', 'compare_constant_1', 'decode_addr_const', 'get_memory_rtx', 'get_memory_rtx', 'optimize_minmax_comparison', 'record_constant_1', 'record_constant_1']
['validate_change']
['timevar_push']
['timevar_pop']
['force_nonfallthru_and_redirect']
['timevar_pop']
['parse_identifier_slow']
['parse_identifier_slow']
['alloc_qty', 'reg_is_born', 'update_qty_class']
['timevar_pop', 'timevar_pop']
['timevar_pop', 'timevar_pop']
['c_lex']
['c_lex']
['c_lex']
['layout_type', 'layout_type']
['layout_type', 'std_expand_builtin_va_arg']
['cached_make_edge']
['cached_make_edge']
['cached_make_edge']
['cached_make_edge']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument', 'identify_call_return_value']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['call_insn_operand']
['calls_function_1']
['calls_function_1']
['calls_function_1']
['copy_insn_list', 'find_split_point']
['get_attr_type']
['find_equiv_reg', 'mark_referenced_regs', 'move_movables', 'move_movables', 'simplify_giv_expr', 'store_bit_field', 'subst', 'visit_expression', 'visit_expression']
['copy_rtx_and_substitute', 'load_mems', 'move_movables', 'schedule_block']
['find_equiv_reg', 'subst_stack_regs_pat', 'subst_stack_regs_pat']
['find_equiv_reg', 'instantiate_virtual_regs_1', 'subst_stack_regs_pat']
['ix86_split_long_move']
['load_mems', 'mark_set_1', 'record_giv', 'record_giv']
['def_reaches_here_p']
['def_reaches_here_p']
['cse_end_of_basic_block']
['can_throw_external', 'compute_hash_table', 'delete_insn', 'fixup_reorder_chain', 'mark_all_labels', 'reg_scan_mark_refs']
['can_throw_external']
['can_throw_external', 'compute_hash_table', 'delete_insn', 'fixup_reorder_chain', 'mark_all_labels', 'reg_scan_mark_refs']
['can_throw_external']
['canon_hash']
['emit_move_insn']
['hash_rtx']
['canon_hash']
['canon_reg']
['eliminate_constant_term']
['canon_true_dependence']
['general_operand']
['canonicalize_condition', 'canonicalize_condition', 'canonicalize_condition', 'canonicalize_condition']
['canonicalize_condition', 'canonicalize_condition', 'canonicalize_condition', 'canonicalize_condition']
['canonicalize_condition']
['emit_store_flag']
['canonicalize_condition']
['may_trap_p']
['copy_rtx_and_substitute', 'emit_libcall_block', 'get_attr_prefix_0f', 'ix86_split_long_move', 'noce_get_alt_condition', 'protect_from_queue', 'subst']
['fixup_reorder_chain']
['find_base_term', 'find_base_value', 'for_each_successor_phi', 'move_deaths', 'noce_try_abs']
['fixup_reorder_chain']
['fixup_reorder_chain']
['fixup_reorder_chain']
['gen_lowpart_common']
['dwarf2out_stack_adjust']
['cselib_lookup']
['convert_regs_1']
['change_address']
['dwarf2out_stack_adjust']
['gen_lowpart_common', 'gen_lowpart_common']
['gen_lowpart_common', 'gen_lowpart_common']
['squeeze_notes']
['size_int_type_wide', 'size_int_type_wide']
['int_vasprintf']
['bitmap_copy', 'def_cfa_1', 'def_cfa_1']
['bitmap_copy', 'def_cfa_1', 'def_cfa_1']
['change_address_1', 'compute_forward_dependences']
['change_address_1']
['fixup_reorder_chain', 'squeeze_notes']
['change_address_1']
['change_address_1']
['change_address_1']
['change_address_1']
['change_address_1']
['change_address_1']
['change_address_1']
['change_address_1']
['change_stack']
['change_stack']
['change_stack']
['check_asm_operands']
['express_from_1', 'find_split_point']
['constrain_operands', 'subst_asm_stack_regs']
['check_asm_stack_operands']
['check_asm_stack_operands', 'ix86_attr_length_address_default']
['check_asm_stack_operands']
['check_asm_stack_operands', 'cleanup_subreg_operands', 'constrain_operands', 'constrain_operands', 'preprocess_constraints', 'record_operand_costs', 'record_operand_costs', 'record_operand_costs', 'reload_cse_simplify_operands', 'reload_cse_simplify_operands']
['record_operand_costs', 'record_operand_costs']
['check_asm_stack_operands']
['check_asm_stack_operands']
['check_asm_stack_operands']
['check_asm_stack_operands']
['check_asm_stack_operands', 'check_asm_stack_operands', 'constrain_operands', 'constrain_operands', 'constrain_operands']
['check_asm_stack_operands', 'check_asm_stack_operands', 'constrain_operands', 'constrain_operands', 'constrain_operands']
['check_asm_stack_operands']
['rename_block']
['check_format_info_recurse']
['lex_number', 'lex_number', 'lex_number']
['asm_fprintf', 'asm_operand_ok', 'check_format_info_main', 'check_format_info_main', 'output_asm_insn', 'output_asm_insn', 'requires_inout']
['check_format_info_main']
['check_format_info_main']
['asm_operand_ok', 'requires_inout']
['lex_number', 'lex_number', 'lex_number']
['lex_number', 'lex_number', 'lex_number']
['asm_operand_ok', 'check_format_info_main']
['cse_insn', 'emit_libcall_block', 'expand_goto', 'force_nonfallthru_and_redirect', 'mark_used_regs', 'memrefs_conflict_p', 'move_movables', 'protect_from_queue', 'sched_analyze_2']
['combine_givs', 'combine_givs', 'combine_givs', 'combine_givs', 'combine_givs', 'combine_givs', 'consec_sets_giv', 'consec_sets_giv']
['combine_givs', 'combine_givs', 'combine_givs', 'combine_givs', 'combine_givs', 'combine_givs', 'consec_sets_giv', 'consec_sets_giv']
['combine_givs', 'combine_givs', 'copy_loop_body', 'copy_loop_body', 'maybe_eliminate_biv_1', 'maybe_eliminate_biv_1', 'maybe_eliminate_biv_1', 'maybe_eliminate_biv_1', 'maybe_eliminate_biv_1']
['combine_givs', 'combine_givs', 'copy_loop_body', 'copy_loop_body', 'maybe_eliminate_biv_1', 'maybe_eliminate_biv_1', 'maybe_eliminate_biv_1', 'maybe_eliminate_biv_1', 'maybe_eliminate_biv_1']
['cse_set_around_loop']
['ix86_split_to_parts']
['find_reloads_address_part', 'offsettable_address_p', 'simplify_plus_minus', 'skip_copy_to_return_value']
['check_insn_for_givs']
['check_insn_for_givs', 'thread_jump']
['convert_regs_exit', 'count_pseudo', 'mark_reg', 'mark_used_reg']
['aggregate_value_p', 'mark_referenced_regs']
['allocate_reload_reg', 'scan_rtx_reg']
['clear_reload_reg_in_use', 'compute_use_by_pseudos', 'mark_set_1']
['mark_effect', 'mark_reg_conflicts', 'mark_reg_death']
['choose_hard_reg_mode']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['emit_libcall_block', 'emit_no_conflict_block', 'expand_goto', 'find_dummy_reload', 'legitimize_pic_address', 'record_value_for_reg']
['emit_insns_after', 'scope_to_insns_initialize']
['convert_regs_1', 'expand_goto', 'legitimize_pic_address']
['commit_one_edge_insertion']
['check_asm_stack_operands', 'convert_regs_1', 'expand_function_end', 'expand_goto', 'legitimize_pic_address']
['scope_to_insns_initialize']
['memrefs_conflict_p']
['cse_end_of_basic_block']
['cse_end_of_basic_block']
['cleanup_cfg']
['cleanup_cfg']
['check_asm_stack_operands', 'cleanup_subreg_operands', 'constrain_operands', 'constrain_operands', 'preprocess_constraints', 'record_operand_costs', 'record_operand_costs', 'record_operand_costs', 'reload_cse_simplify_operands', 'reload_cse_simplify_operands']
['cleanup_subreg_operands']
['cleanup_subreg_operands']
['cleanup_subreg_operands']
['cleanup_subreg_operands']
['cleanup_subreg_operands']
['cleanup_subreg_operands']
['cleanup_subreg_operands']
['cleanup_subreg_operands']
['cleanup_subreg_operands']
['classify_argument']
['classify_argument']
['classify_argument']
['clear_dead_regs', 'count_or_remove_death_notes', 'df_ref_record', 'insert', 'insert_one_insn', 'mark_used_regs_combine', 'reg_bitfield_target_p', 'reload_combine_note_use', 'sched_analyze_1']
['strength_reduce', 'strength_reduce']
['div_and_round_double', 'mul_double']
['ecleazs']
['ecleazs']
['ecleazs', 'prescan_loop']
['ecleazs']
['free_edge']
['free_edge']
['free_edge']
['free_edge']
['clear_emit_caches']
['clear_emit_caches']
['clear_reload_reg_in_use', 'post_mark_life']
['compute_use_by_pseudos']
['clear_reload_reg_in_use']
['expand_mult_highpart']
['queue_to_ready']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['emit_block_move']
['emit_block_move', 'emit_block_move']
['emit_block_move', 'emit_block_move']
['change_address']
['combinable_i3pat']
['combine_givs', 'combine_givs', 'find_splittable_givs', 'find_splittable_givs', 'find_splittable_regs', 'find_splittable_regs', 'maybe_eliminate_biv_1', 'maybe_eliminate_biv_1']
['combine_givs', 'combine_givs', 'find_splittable_givs', 'find_splittable_givs', 'find_splittable_regs', 'find_splittable_regs', 'maybe_eliminate_biv_1', 'maybe_eliminate_biv_1']
['consec_sets_giv', 'consec_sets_giv', 'find_splittable_givs', 'find_splittable_givs']
['consec_sets_giv', 'consec_sets_giv', 'find_splittable_givs', 'find_splittable_givs']
['check_ext_dependent_givs']
['check_ext_dependent_givs']
['check_ext_dependent_givs']
['loop_givs_reduce', 'loop_givs_reduce']
['handle_rd_kill_set', 'handle_rd_kill_set']
['handle_rd_kill_set', 'handle_rd_kill_set']
['restore_line_notes']
['loop_givs_rescan']
['check_asm_stack_operands']
['check_ext_dependent_givs', 'check_ext_dependent_givs']
['check_ext_dependent_givs', 'check_ext_dependent_givs']
['check_ext_dependent_givs']
['emit_group_store', 'expand_asm_operands']
['check_dbra_loop', 'find_reloads_address_1', 'fold_rtx', 'force_nonfallthru_and_redirect']
['adjust_address_1', 'compute_argument_addresses', 'emit_libcall_block', 'emit_libcall_block', 'force_nonfallthru_and_redirect', 'mark_used_regs', 'memrefs_conflict_p', 'rm_line_notes', 'rm_other_notes', 'sched_analyze_2', 'sched_analyze_2', 'sge_plus_constant', 'subst']
['apply_distributive_law', 'check_dbra_loop', 'express_from', 'noce_get_condition']
['fixup_var_refs_insn', 'store_expr']
['consec_sets_giv', 'expand_decl', 'expand_function_end', 'make_extraction', 'subst_constants']
['expand_asm_operands']
['ix86_split_to_parts', 'simplify_relational_operation']
['oprs_not_set_p', 'oprs_unchanged_p']
['load_mems']
['apply_distributive_law', 'find_base_term']
['combine_regs', 'combine_regs']
['combine_regs', 'combine_regs']
['combine_regs']
['combine_regs', 'combine_regs']
['exp_equiv_p']
['combine_regs']
['update_qty_class']
['combine_regs']
['combine_regs']
['update_qty_class']
['update_qty_class']
['update_qty_class']
['plus_constant_wide', 'plus_constant_wide', 'plus_constant_wide']
['commit_one_edge_insertion']
['commit_one_edge_insertion', 'commit_one_edge_insertion']
['commit_one_edge_insertion', 'commit_one_edge_insertion']
['commit_one_edge_insertion']
['commit_one_edge_insertion']
['commit_one_edge_insertion']
['commit_one_edge_insertion', 'commit_one_edge_insertion']
['commit_one_edge_insertion', 'commit_one_edge_insertion']
['commit_one_edge_insertion']
['commit_one_edge_insertion']
['commit_one_edge_insertion']
['compare_constant_1', 'compare_constant_1', 'decode_addr_const', 'get_memory_rtx', 'record_constant_1', 'record_constant_1']
['compare_constant_1', 'compare_constant_1', 'decode_addr_const', 'get_memory_rtx', 'record_constant_1', 'record_constant_1']
['compare_constant_1']
['compare_constant_1']
['compare_constant_1']
['compare_constant_1']
['emit_no_conflict_block']
['apply_distributive_law', 'emit_libcall_block', 'gen_reload', 'record_giv', 'sched_analyze_2', 'subst_constants']
['subst_stack_regs_pat']
['copy_loop_body', 'cse_insn', 'eliminate_regs_in_insn', 'expand_function_end', 'expand_goto', 'expand_inline_function', 'find_dummy_reload', 'fixup_var_refs_insn', 'init_alias_analysis', 'legitimize_pic_address', 'move_movables', 'rm_line_notes', 'rm_other_notes', 'simplify_subreg']
['general_induction_var', 'get_attr_type']
['compute_forward_dependences', 'copy_eh_notes', 'copy_rtx_and_substitute', 'cse_insn', 'decompose', 'eliminate_regs_in_insn', 'expand_inline_function', 'expand_inline_function', 'find_reloads', 'force_to_mode', 'move_deaths', 'subst_asm_stack_regs']
['find_dummy_reload']
['get_true_reg']
['memory_address']
['compute_forward_dependences']
['find_dummy_reload']
['get_true_reg']
['invert_truthvalue', 'objects_must_conflict_p', 'print_operand_address']
['compensate_edge']
['expand_builtin_expect_jump', 'output_addressed_constants']
['eliminate_regs_in_insn', 'fixup_var_refs_insn', 'set_label_offsets']
['copy_eh_notes']
['protect_from_queue', 'record_operand_costs', 'swap_rtx_condition']
['eliminate_regs_in_insn', 'fixup_var_refs_insn', 'set_label_offsets']
['find_splittable_regs']
['skip_copy_to_return_value']
['skip_copy_to_return_value']
['cse_end_of_basic_block']
['cse_end_of_basic_block']
['check_operand_nalternatives', 'new_cselib_val', 'print_operand_address', 'wipe_dead_reg']
['skip_copy_to_return_value']
['emit_group_store']
['compute_forward_dependences']
['sge_plus_constant']
['sge_plus_constant']
['ix86_split_long_move']
['compute_hash_table']
['compute_hash_table', 'record_last_reg_set_info']
['handle_rd_kill_set']
['compute_hash_table', 'record_last_reg_set_info']
['compute_hash_table']
['add_subscript_info', 'gen_split_1010']
['compute_transp', 'compute_transp', 'compute_transp', 'compute_transp', 'handle_rd_kill_set', 'handle_rd_kill_set']
['compute_transp', 'compute_transp', 'compute_transp', 'compute_transp', 'handle_rd_kill_set', 'handle_rd_kill_set']
['compute_transp', 'compute_transp', 'compute_transp', 'compute_transp', 'handle_rd_kill_set', 'handle_rd_kill_set']
['compute_transp', 'compute_transp', 'compute_transp', 'compute_transp', 'handle_rd_kill_set', 'handle_rd_kill_set']
['compute_transp', 'compute_transp']
['compute_transp', 'compute_transp', 'deps_may_trap_p', 'for_each_successor_phi', 'handle_rd_kill_set', 'move_deaths', 'move_deaths']
['compute_transp', 'compute_transp']
['compute_transp', 'compute_transp', 'compute_transp', 'compute_transp', 'handle_rd_kill_set', 'handle_rd_kill_set']
['compute_transp', 'compute_transp', 'compute_transp', 'compute_transp', 'handle_rd_kill_set', 'handle_rd_kill_set']
['compute_transp', 'compute_transp', 'handle_rd_kill_set']
['compute_transp', 'compute_transp']
['move_deaths']
['compute_transp', 'compute_transp']
['compute_transp', 'compute_transp', 'compute_transp', 'compute_transp', 'handle_rd_kill_set', 'handle_rd_kill_set']
['compute_transp', 'compute_transp', 'compute_transp', 'compute_transp', 'handle_rd_kill_set', 'handle_rd_kill_set']
['compute_transp', 'compute_transp', 'handle_rd_kill_set', 'restore_line_notes']
['compute_transp', 'put_addressof_into_stack', 'put_addressof_into_stack']
['classify_argument']
['classify_argument']
['classify_argument']
['compute_use_by_pseudos']
['compute_use_by_pseudos']
['swap_sort']
['fixup_reorder_chain', 'simplify_set']
['loc_descriptor']
['express_from', 'find_reloads_address_part', 'simplify_plus_minus']
['queue_to_ready']
['rename_block']
['loc_descriptor']
['consec_sets_giv', 'expand_decl', 'expand_function_end', 'make_extraction', 'subst_constants']
['check_asm_stack_operands', 'expand_decl', 'store_expr']
['combine_givs', 'combine_givs', 'consec_sets_giv', 'consec_sets_giv', 'maybe_eliminate_biv_1', 'maybe_eliminate_biv_1', 'maybe_eliminate_biv_1']
['combine_givs', 'combine_givs', 'consec_sets_giv', 'consec_sets_giv', 'maybe_eliminate_biv_1', 'maybe_eliminate_biv_1', 'maybe_eliminate_biv_1']
['consec_sets_giv']
['check_insn_for_givs', 'check_insn_for_givs']
['check_insn_for_givs', 'check_insn_for_givs']
['consec_sets_giv']
['consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv']
['bitmap_clear', 'bitmap_initialize']
['new_cselib_val']
['new_cselib_val']
['new_cselib_val']
['const_hash']
['constant_subword', 'expand_complex_abs']
['rename_block']
['copy_insn_notes', 'replace_regs', 'subst_asm_stack_regs']
['subst_stack_regs_pat']
['constrain_operands', 'record_operand_costs']
['constrain_operands', 'constrain_operands']
['constrain_operands', 'constrain_operands']
['check_asm_stack_operands', 'cleanup_subreg_operands', 'constrain_operands', 'constrain_operands', 'preprocess_constraints', 'record_operand_costs', 'record_operand_costs', 'record_operand_costs', 'reload_cse_simplify_operands', 'reload_cse_simplify_operands']
['constrain_operands', 'record_operand_costs']
['record_operand_costs']
['constrain_operands', 'record_operand_costs']
['gen_split_1214']
['operands_match_p', 'reg_overlap_mentioned_for_reload_p']
['get_attr_imm_disp', 'get_attr_imm_disp']
['get_attr_imm_disp', 'get_attr_imm_disp']
['get_attr_athlon_fpunits', 'get_attr_prefix_0f', 'get_attr_prefix_0f', 'record_operand_costs', 'record_operand_costs']
['dump_flow_info']
['init_alias_analysis']
['combine_simplify_rtx', 'expand_call', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'make_memloc', 'next_insn_in_loop', 'simplify_if_then_else', 'simplify_relational_operation']
['check_dbra_loop', 'constrain_operands', 'delete_output_reload', 'fixup_var_refs_insn', 'nonzero_bits', 'rename_block', 'simplify_set', 'subst_stack_regs_pat']
['copy_insn_list']
['load_mems']
['load_mems']
['verify_flow_info']
['merge_blocks_nomove']
['can_throw_external', 'compute_hash_table', 'delete_insn', 'fixup_reorder_chain', 'mark_all_labels', 'reg_scan_mark_refs']
['apply_distributive_law', 'check_dbra_loop', 'combine_simplify_rtx', 'gen_reload', 'store_expr']
['copy_loop_body', 'memrefs_conflict_p']
['eliminate_regs', 'expand_field_assignment', 'find_split_point', 'gen_reload', 'simplify_subreg', 'unroll_loop']
['change_address_1', 'compute_forward_dependences', 'copy_loop_body', 'copy_loop_body', 'eliminate_regs_in_insn', 'expand_function_end', 'fixup_var_refs_1', 'fixup_var_refs_insn', 'fixup_var_refs_insn', 'fold_rtx', 'load_mems', 'loop_iterations', 'memrefs_conflict_p', 'print_rtx', 'protect_from_queue', 'simplify_comparison', 'simplify_giv_expr', 'simplify_giv_expr', 'store_expr', 'subst_constants']
['compute_insns_for_mem', 'plus_constant_wide', 'record_value_for_reg']
['cselib_record_sets']
['set_label_offsets']
['compute_insns_for_mem']
['ix86_split_to_parts']
['express_from', 'find_reloads_address_part', 'move_deaths', 'move_deaths', 'offsettable_address_p', 'store_split_bit_field']
['ereal_from_int', 'ereal_from_uint']
['convert_modes', 'convert_modes']
['convert_modes', 'convert_modes']
['constant_subword', 'convert_move', 'expand_complex_abs', 'gen_lowpart_common', 'get_secondary_mem', 'int_mode_for_mode', 'ix86_hard_regno_mode_ok', 'ix86_libcall_value']
['convert_move']
['convert_move']
['convert_move', 'convert_move']
['convert_move', 'convert_move']
['find_reg']
['convert_move', 'convert_move']
['convert_move', 'convert_move']
['print_operand_address', 'print_operand_address']
['print_operand_address', 'print_operand_address']
['print_operand_address', 'print_operand_address']
['print_operand_address', 'print_operand_address']
['print_operand_address', 'print_operand_address']
['print_operand_address', 'print_operand_address']
['print_operand_address', 'print_operand_address']
['print_operand_address', 'print_operand_address']
['store_fixed_bit_field']
['eval_subst']
['convert_to_real', 'convert_to_real']
['convert_to_real', 'convert_to_real']
['do_jump_by_parts_equality_rtx', 'do_jump_by_parts_equality_rtx']
['do_jump_by_parts_equality_rtx', 'do_jump_by_parts_equality_rtx']
['copy_insn_1']
['copy_insn_1']
['copy_insn_1']
['copy_insn_1']
['copy_insn_1']
['record_giv']
['apply_distributive_law']
['copy_insn_list']
['copy_insn_list', 'eliminate_regs', 'emit_input_reload_insns', 'emit_libcall_block', 'emit_no_conflict_block', 'legitimize_pic_address', 'mark_used_regs', 'noce_get_alt_condition', 'plus_constant_wide', 'unroll_loop']
['delete_output_reload', 'emit_library_call_value_1', 'expand_decl', 'instantiate_virtual_regs_1', 'subst']
['check_asm_stack_operands', 'check_dbra_loop', 'compute_forward_dependences', 'copy_rtx_and_substitute', 'copy_rtx_and_substitute', 'cse_end_of_basic_block', 'cse_insn', 'eliminate_regs', 'eliminate_regs_in_insn', 'eliminate_regs_in_insn', 'emit_library_call_value_1', 'expand_function_end', 'expand_inline_function', 'find_base_value', 'find_equiv_reg', 'find_equiv_reg', 'find_reloads_address_1', 'fixup_var_refs_1', 'fixup_var_refs_1', 'fixup_var_refs_1', 'move_movables', 'move_movables', 'move_movables', 'move_movables', 'noce_get_alt_condition', 'print_rtx', 'restore_line_notes', 'sge_plus_constant', 'simplify_comparison', 'simplify_giv_expr', 'simplify_giv_expr', 'simplify_plus_minus', 'skip_copy_to_return_value', 'store_bit_field', 'store_bit_field', 'subst', 'subst', 'subst_asm_stack_regs', 'subst_constants', 'subst_constants', 'visit_expression']
['copy_insn_list']
['copy_insn_list']
['decompose', 'force_nonfallthru_and_redirect', 'identify_call_return_value', 'mark_set_1', 'record_giv']
['record_constant_1', 'text_section']
['scope_to_insns_initialize', 'scope_to_insns_initialize']
['fold_rtx', 'mark_used_regs', 'unroll_loop']
['trampoline_address']
['copy_insn_notes', 'replace_regs']
['adjust_address_1', 'adjust_address_1', 'apply_distributive_law', 'check_asm_stack_operands', 'check_dbra_loop', 'check_dbra_loop', 'combine_simplify_rtx', 'compute_argument_addresses', 'compute_argument_addresses', 'copy_insn_list', 'copy_insn_notes', 'copy_loop_body', 'copy_rtx_and_substitute', 'cselib_record_sets', 'expand_decl', 'express_from', 'extract_bit_field', 'find_base_value', 'find_split_point', 'fold_rtx', 'gen_reload', 'hash_scan_set', 'identify_call_return_value', 'init_propagate_block_info', 'insn_dead_p', 'instantiate_virtual_regs_1', 'ix86_split_long_move', 'loop_iterations', 'noce_get_condition', 'noce_try_abs', 'protect_from_queue', 'protect_from_queue', 'record_giv', 'restore_line_notes', 'sge_plus_constant', 'sge_plus_constant', 'simplify_relational_operation', 'skip_copy_to_return_value', 'squeeze_notes', 'store_expr', 'subst']
['copy_insn_notes', 'find_reloads_address_part', 'offsettable_address_p']
['copy_insn_notes', 'offsettable_address_p']
['copy_insn_notes']
['noce_try_abs']
['mark_all_labels']
['copy_insn_notes']
['copy_node', 'make_node']
['make_tree_vec']
['adjust_address_1', 'adjust_address_1', 'copy_insn_list', 'emit_libcall_block', 'expand_field_assignment', 'find_reloads_address_1', 'find_split_point', 'legitimize_pic_address', 'legitimize_pic_address', 'make_extraction', 'mark_used_regs', 'move_movables', 'noce_process_if_block', 'plus_constant_wide', 'queue_to_ready', 'sched_analyze_2', 'subst']
['compute_argument_addresses', 'extract_bit_field', 'hash_scan_set', 'noce_try_abs']
['combine_givs', 'combine_givs', 'combine_givs', 'combine_givs', 'consec_sets_giv', 'consec_sets_giv', 'maybe_eliminate_biv_1', 'maybe_eliminate_biv_1']
['combine_givs', 'combine_givs', 'combine_givs', 'combine_givs', 'consec_sets_giv', 'consec_sets_giv', 'maybe_eliminate_biv_1', 'maybe_eliminate_biv_1']
['consec_sets_giv', 'expand_decl', 'expand_function_end', 'make_extraction', 'subst_constants']
['find_single_use_1']
['copy_loop_body', 'expand_function_end', 'fixup_var_refs_insn']
['copy_loop_body']
['adjust_address_1', 'adjust_address_1', 'check_dbra_loop', 'consec_sets_giv', 'copy_loop_body', 'copy_loop_body', 'copy_loop_body', 'copy_rtx_and_substitute', 'cselib_record_sets', 'delete_output_reload', 'eliminate_regs', 'eliminate_regs_in_insn', 'find_base_term', 'find_equiv_reg', 'find_equiv_reg', 'find_reloads', 'fold_rtx', 'gen_reload', 'insert', 'maybe_eliminate_biv_1', 'memrefs_conflict_p', 'memrefs_conflict_p', 'move_movables', 'move_movables', 'move_movables', 'record_giv', 'restore_line_notes', 'rm_line_notes', 'rm_other_notes', 'simplify_giv_expr', 'store_bit_field', 'store_bit_field', 'store_bit_field', 'subst', 'subst', 'subst', 'subst_asm_stack_regs', 'visit_expression']
['move_movables']
['eliminate_regs_in_insn', 'fixup_var_refs_insn', 'set_label_offsets']
['nonzero_bits']
['skip_copy_to_return_value', 'squeeze_notes']
['record_value_for_reg', 'refers_to_regno_for_reload_p']
['apply_distributive_law', 'check_dbra_loop', 'express_from', 'noce_get_condition']
['apply_distributive_law', 'apply_distributive_law', 'df_ref_record', 'emit_input_reload_insns', 'emit_libcall_block', 'expand_decl', 'gen_reload', 'subst_constants', 'unroll_loop']
['copy_loop_body', 'decompose', 'find_dummy_reload', 'make_extraction', 'record_giv']
['copy_insn_list', 'copy_loop_body', 'expand_decl']
['make_extraction']
['subst']
['copy_most_rtx']
['copy_node', 'make_node']
['fixup_var_refs_1']
['expand_inline_function']
['copy_rtx_and_substitute', 'copy_rtx_and_substitute', 'copy_rtx_and_substitute', 'emit_input_reload_insns', 'move_movables']
['copy_rtx_and_substitute', 'copy_rtx_and_substitute', 'copy_rtx_and_substitute', 'fold_rtx', 'move_movables']
['copy_rtx_and_substitute']
['copy_rtx_and_substitute']
['find_reloads_address_1']
['copy_insn_1', 'copy_rtx', 'copy_rtx_if_shared']
['compensate_edge', 'find_single_use_1']
['failed_reload']
['compensate_edge']
['failed_reload']
['compensate_edge']
['failed_reload']
['copy_to_reg']
['check_asm_stack_operands', 'ix86_attr_length_address_default']
['peephole2_1', 'peephole2_1', 'peephole2_1', 'peephole2_1', 'peephole2_1', 'peephole2_1', 'peephole2_1', 'peephole2_1', 'peephole2_2', 'peephole2_2', 'peephole2_2', 'peephole2_2', 'peephole2_2', 'peephole2_2', 'peephole2_2', 'peephole2_2', 'peephole2_2', 'peephole2_2', 'recog', 'recog', 'recog', 'recog', 'recog_17', 'recog_17', 'recog_17', 'recog_17', 'recog_17', 'recog_17', 'recog_17', 'recog_17', 'recog_18', 'recog_18', 'recog_18', 'recog_18', 'recog_18', 'recog_18', 'recog_18', 'recog_18', 'recog_18', 'recog_18', 'recog_18', 'recog_18', 'recog_18', 'recog_18', 'recog_19', 'recog_19', 'recog_19', 'recog_19', 'recog_19', 'recog_19', 'recog_19', 'recog_19', 'recog_19', 'recog_20', 'recog_20', 'recog_20', 'recog_20', 'recog_20', 'recog_20', 'recog_20', 'recog_20', 'recog_21', 'recog_21', 'recog_21', 'recog_21', 'recog_21', 'recog_21', 'recog_21', 'recog_21', 'recog_22', 'recog_22', 'recog_22', 'recog_22', 'recog_22', 'recog_22', 'recog_22', 'recog_22', 'recog_23', 'recog_23', 'recog_23', 'recog_23', 'recog_23', 'recog_23', 'recog_24', 'recog_24', 'recog_24', 'recog_24', 'recog_24', 'recog_24', 'recog_24', 'recog_24', 'recog_24', 'recog_25', 'recog_25', 'recog_25', 'recog_25', 'recog_25', 'recog_25', 'recog_25', 'recog_25', 'recog_25', 'recog_27', 'recog_27', 'recog_27', 'recog_27', 'recog_27', 'recog_27', 'recog_27', 'recog_27', 'recog_27', 'recog_27', 'recog_28', 'recog_28', 'recog_28', 'recog_28', 'recog_28', 'recog_28', 'recog_28', 'recog_28', 'recog_28', 'recog_28', 'recog_28', 'recog_4', 'recog_4', 'recog_4', 'recog_4', 'recog_4', 'recog_4', 'recog_4', 'recog_4', 'recog_4', 'split_1', 'split_1', 'split_1', 'split_1', 'split_1', 'split_1', 'split_2', 'split_2', 'split_2', 'split_2', 'split_3', 'split_3', 'split_3', 'split_3', 'split_3', 'split_3', 'split_3', 'split_3', 'split_3', 'split_3', 'split_4', 'split_4', 'split_4', 'split_4', 'split_4', 'split_4', 'split_4', 'split_4', 'split_4', 'split_4', 'split_4', 'split_4', 'split_4', 'split_4', 'split_4', 'split_insns', 'split_insns']
['find_reloads_subreg_address', 'find_reloads_toplev', 'get_attr_prefix_0f', 'get_attr_prefix_0f']
['check_asm_stack_operands', 'check_asm_stack_operands', 'check_asm_stack_operands', 'constrain_operands', 'constrain_operands', 'constrain_operands', 'get_attr_imm_disp', 'get_attr_imm_disp', 'get_attr_imm_disp', 'get_attr_imm_disp', 'get_attr_length_immediate', 'get_attr_length_immediate', 'get_attr_length_immediate', 'get_attr_modrm', 'get_attr_modrm', 'get_attr_modrm', 'get_attr_modrm', 'recog_18', 'recog_20', 'recog_20', 'recog_28', 'recog_28', 'record_operand_costs', 'record_operand_costs', 'record_reg_classes']
['check_asm_stack_operands', 'constrain_operands']
['clear_dead_regs', 'combine_regs', 'dead_or_set_regno_p', 'dead_or_set_regno_p', 'get_last_value_validate', 'insert', 'mark_home_live', 'mark_set_1', 'refers_to_regno_for_reload_p', 'reload_combine_note_use', 'update_table_tick']
['choose_hard_reg_mode', 'emit_reload_insns', 'mark_reg', 'move_deaths', 'refers_to_regno_for_reload_p']
['cse_end_of_basic_block']
['find_oldest_value_reg']
['extract_insn']
['check_asm_stack_operands', 'record_operand_costs', 'record_operand_costs', 'record_reg_classes']
['reload_cse_simplify_operands']
['cleanup_subreg_operands']
['record_operand_costs', 'record_operand_costs']
['count_one_set', 'df_bb_reg_info_compute']
['count_one_set']
['reg_overlap_mentioned_for_reload_p']
['count_one_set']
['count_or_remove_death_notes']
['count_pseudo']
['convert_regs_exit', 'count_pseudo']
['count_pseudo', 'count_spilled_pseudo']
['copy_value', 'count_spilled_pseudo']
['count_spilled_pseudo']
['parse_identifier']
['cpp_parse_escape']
['lex_number']
['cpp_parse_escape']
['lex_number']
['cpp_parse_escape']
['lex_number']
['cpp_parse_escape']
['parse_output_constraint']
['cpp_push_buffer']
['alloc_block', 'cpp_push_buffer']
['cached_make_edge', 'cpp_push_buffer']
['alloc_block']
['alloc_block', 'cached_make_edge']
['cpp_push_buffer']
['cpp_push_buffer']
['cpp_push_buffer']
['delete_output_reload', 'maybe_eliminate_biv_1']
['fixup_var_refs_1']
['eliminate_regs_in_insn', 'fixup_var_refs_insn', 'set_label_offsets']
['cse_end_of_basic_block', 'cse_end_of_basic_block']
['rm_line_notes', 'rm_line_notes', 'rm_other_notes', 'rm_other_notes']
['squeeze_notes']
['compute_transp']
['cse_end_of_basic_block', 'eliminate_regs_in_insn', 'find_equiv_reg', 'subst', 'subst_asm_stack_regs', 'subst_constants']
['cse_end_of_basic_block']
['cse_end_of_basic_block']
['cse_end_of_basic_block']
['cse_end_of_basic_block']
['cse_end_of_basic_block', 'cse_end_of_basic_block']
['emit_insns_after', 'scope_to_insns_initialize']
['rm_line_notes', 'rm_line_notes', 'rm_other_notes', 'rm_other_notes']
['rm_line_notes', 'rm_line_notes', 'rm_other_notes', 'rm_other_notes']
['expand_goto']
['expand_goto']
['copy_loop_body', 'init_propagate_block_info', 'insn_dead_p', 'record_giv', 'simplify_relational_operation']
['cse_insn', 'decompose', 'move_deaths']
['eliminate_regs_in_insn', 'force_to_mode']
['simplify_shift_const']
['find_reloads']
['find_base_value', 'protect_from_queue', 'restore_line_notes', 'sge_plus_constant']
['move_movables']
['move_movables']
['sched_analyze_2']
['ix86_split_long_move', 'protect_from_queue', 'subst']
['named_section_flags']
['force_nonfallthru_and_redirect']
['compute_forward_dependences', 'compute_forward_dependences', 'find_base_value', 'rm_line_notes', 'rm_line_notes', 'rm_other_notes', 'rm_other_notes', 'save_line_notes', 'squeeze_notes', 'squeeze_notes']
['allocate_reg_info', 'handle_rd_kill_set']
['cse_set_around_loop']
['cse_set_around_loop']
['cse_set_around_loop']
['cse_set_around_loop']
['cse_set_around_loop']
['df_ref_record']
['emit_group_store']
['canonicalize_condition', 'find_comparison_args', 'notreg_cost']
['canonicalize_condition', 'find_comparison_args', 'notreg_cost']
['gen_lowpart_for_combine']
['clear_table']
['cselib_finish']
['find_base_term', 'timevar_push']
['find_free_reg', 'peep2_find_free_register', 'peep2_find_free_register']
['compute_use_by_pseudos']
['cselib_invalidate_mem']
['cselib_invalidate_rtx']
['cselib_invalidate_rtx']
['cselib_lookup', 'cselib_lookup_mem']
['cselib_lookup']
['free_for_value_p']
['simplify_logical']
['cselib_lookup', 'cselib_lookup_mem']
['prepare_cmp_insn']
['rtx_equal_for_cselib_p']
['find_comparison_args', 'simplify_logical']
['cselib_lookup_mem']
['legitimize_pic_address']
['check_asm_stack_operands', 'emit_library_call_value_1', 'expand_function_end', 'noce_get_alt_condition']
['decompose']
['copy_insn_list', 'cselib_record_sets', 'simplify_subreg']
['clear_table']
['cselib_invalidate_mem']
['extract_fixed_bit_field', 'safe_from_p']
['rename_block']
['noce_emit_cmove']
['noce_emit_cmove']
['noce_emit_cmove']
['rtx_equal_for_cselib_p', 'rtx_equal_for_cselib_p']
['rtx_equal_for_cselib_p', 'rtx_equal_for_cselib_p']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'dw2_asm_output_encoded_addr_rtx', 'emit_block_move', 'emit_push_insn', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'expand_builtin_prefetch', 'find_best_addr', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_expand_prologue', 'ix86_force_to_memory', 'ix86_force_to_memory', 'ix86_va_arg', 'legitimize_pic_address', 'legitimize_pic_address', 'load_pic_register', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'round_trampoline_addr', 'round_trampoline_addr']
['cselib_lookup_mem']
['build_conditional_expr', 'dbxout_symbol']
['dbxout_finish_symbol']
['dbxout_finish_symbol']
['dbxout_finish_symbol']
['dbxout_symbol_location']
['dbxout_finish_symbol']
['add_subscript_info']
['dbxout_type']
['dbxout_type']
['dbxout_type']
['dead_or_set_p']
['combine_regs', 'dead_or_set_regno_p', 'dead_or_set_regno_p', 'get_last_value_validate', 'hard_reg_set_here_p', 'mark_home_live', 'mark_set_1', 'refers_to_regno_for_reload_p', 'update_table_tick']
['combine_regs', 'dead_or_set_regno_p']
['deallocate_reload_reg']
['deallocate_reload_reg']
['print_reg']
['print_reg']
['debug_reload_to_stream']
['debug_reload_to_stream']
['debug_reload_to_stream']
['declare_nonlocal_label']
['declare_weak']
['compare_constant_1', 'compare_constant_1', 'decode_addr_const', 'get_memory_rtx', 'record_constant_1', 'record_constant_1']
['decode_addr_const']
['decode_addr_const', 'decode_addr_const', 'decode_addr_const', 'decode_addr_const']
['decode_addr_const', 'decode_addr_const', 'decode_addr_const', 'decode_addr_const']
['decode_addr_const']
['decode_addr_const']
['decode_addr_const', 'decode_addr_const', 'decode_addr_const', 'decode_addr_const']
['decode_addr_const', 'decode_addr_const', 'decode_addr_const', 'decode_addr_const']
['lex_number']
['decode_rtx_const']
['decode_rtx_const']
['decode_rtx_const']
['decode_rtx_const']
['decode_rtx_const']
['decode_rtx_const']
['decode_rtx_const']
['decode_rtx_const']
['clear_dead_regs', 'insert', 'mark_used_regs_combine', 'sched_analyze_1']
['canon_rtx']
['emit_libcall_block', 'offset_address', 'store_expr']
['def_cfa_1']
['def_cfa_1', 'def_cfa_1']
['def_cfa_1', 'def_cfa_1']
['build_real_from_int_cst']
['insert_set_in_table']
['default_conversion']
['delete_address_reloads_1']
['delete_address_reloads_1']
['can_throw_external', 'compute_hash_table', 'delete_insn', 'fixup_reorder_chain', 'mark_all_labels', 'reg_scan_mark_refs']
['delete_insn']
['mark_all_labels']
['cse_end_of_basic_block', 'rtx_renumbered_equal_p']
['fixup_var_refs_1', 'fold_rtx', 'make_extraction', 'store_expr']
['can_throw_external', 'compute_hash_table', 'delete_insn', 'fixup_reorder_chain', 'mark_all_labels', 'reg_scan_mark_refs']
['copy_eh_notes', 'copy_eh_notes']
['copy_eh_notes', 'copy_eh_notes']
['protect_from_queue']
['rtx_renumbered_equal_p']
['protect_from_queue']
['protect_from_queue']
['legitimize_pic_address']
['try_to_integrate']
['delete_output_reload']
['delete_output_reload']
['adjust_address_1', 'adjust_address_1', 'emit_libcall_block', 'expand_field_assignment', 'legitimize_pic_address', 'make_extraction', 'mark_used_regs', 'memrefs_conflict_p', 'noce_process_if_block', 'plus_constant_wide', 'sched_analyze_2', 'subst']
['emit_no_conflict_block']
['copy_insn_list', 'copy_loop_body', 'expand_decl']
['cse_end_of_basic_block', 'eliminate_regs_in_insn', 'find_equiv_reg', 'subst', 'subst_asm_stack_regs', 'subst_constants']
['delete_output_reload']
['delete_output_reload']
['delete_output_reload']
['delete_output_reload']
['apply_distributive_law', 'find_base_term']
['delete_output_reload']
['eliminate_regs_in_insn', 'fixup_var_refs_insn', 'set_label_offsets']
['rtx_renumbered_equal_p', 'skip_copy_to_return_value']
['scope_to_insns_initialize', 'scope_to_insns_initialize']
['scope_to_insns_initialize', 'scope_to_insns_initialize']
['scope_to_insns_initialize', 'scope_to_insns_initialize']
['scope_to_insns_initialize']
['check_asm_stack_operands', 'consec_sets_giv', 'eliminate_regs_in_insn', 'expand_decl', 'expand_decl', 'expand_function_end', 'force_to_mode', 'make_extraction', 'store_expr', 'subst_constants']
['check_asm_stack_operands', 'expand_decl', 'loop_iterations', 'store_expr']
['delete_output_reload', 'emit_library_call_value_1', 'expand_decl', 'fixup_var_refs_insn', 'instantiate_virtual_regs_1', 'store_expr', 'subst']
['delete_output_reload', 'emit_library_call_value_1', 'emit_library_call_value_1', 'expand_decl', 'instantiate_virtual_regs_1', 'subst']
['df_insn_refs_unlink']
['df_reg_use_gen']
['df_reg_use_gen']
['df_reg_clobber_gen', 'expand_float']
['df_ref_record', 'emit_libcall_block', 'emit_no_conflict_block', 'expand_decl', 'gen_reload', 'protect_from_queue', 'protect_from_queue', 'protect_from_queue', 'purge_addressof_1', 'record_giv', 'record_value_for_reg', 'simplify_set', 'subst_constants', 'trampoline_address']
['mark_used_regs_combine', 'sched_analyze_1']
['df_ref_record']
['df_ref_record']
['df_ref_record']
['df_ref_record']
['df_ref_record']
['adjust_address_1', 'adjust_address_1', 'emit_libcall_block', 'emit_libcall_block', 'expand_field_assignment', 'expand_function_end', 'extract_bit_field', 'legitimize_pic_address', 'make_extraction', 'mark_used_regs', 'noce_process_if_block', 'plus_constant_wide', 'sched_analyze_2', 'simplify_subreg', 'subst']
['convert_regs_1', 'copy_insn_list', 'instantiate_virtual_regs_1', 'legitimize_pic_address', 'validate_replace_rtx_1']
['scope_to_insns_initialize']
['noce_process_if_block']
['output_do_verbatim']
['count_error']
['count_error']
['report_diagnostic', 'sorry']
['sorry']
['report_diagnostic', 'sorry']
['report_diagnostic', 'sorry']
['report_diagnostic', 'sorry']
['parse_output_constraint']
['compare_constant_1', 'compare_constant_1', 'decode_addr_const', 'get_memory_rtx', 'get_memory_rtx', 'optimize_minmax_comparison', 'record_constant_1', 'record_constant_1']
['decode_addr_const', 'decode_addr_const', 'decode_addr_const', 'decode_addr_const']
['decode_addr_const', 'decode_addr_const', 'decode_addr_const', 'decode_addr_const']
['get_memory_rtx']
['decode_addr_const']
['decode_addr_const', 'decode_addr_const', 'decode_addr_const', 'decode_addr_const']
['decode_addr_const', 'decode_addr_const', 'decode_addr_const', 'decode_addr_const']
['recog_19', 'recog_19']
['find_base_value', 'get_attr_prefix_0f', 'mark_referenced_regs', 'noce_get_alt_condition', 'restore_line_notes', 'sched_analyze_2', 'sge_plus_constant']
['cse_end_of_basic_block', 'emit_no_conflict_block', 'noce_process_if_block']
['apply_distributive_law']
['apply_distributive_law']
['rm_line_notes', 'rm_line_notes', 'rm_other_notes', 'rm_other_notes', 'squeeze_notes', 'squeeze_notes']
['rm_line_notes', 'rm_line_notes', 'rm_other_notes', 'rm_other_notes', 'squeeze_notes', 'squeeze_notes']
['check_asm_stack_operands']
['compute_argument_addresses', 'get_attr_prefix_0f', 'move_movables', 'noce_get_alt_condition', 'sge_plus_constant']
['apply_distributive_law', 'copy_eh_notes', 'cse_insn', 'emit_libcall_block', 'gen_reload', 'subst_constants']
['memrefs_conflict_p']
['cse_end_of_basic_block']
['check_asm_stack_operands', 'check_dbra_loop', 'emit_input_reload_insns', 'emit_insns_after', 'emit_libcall_block', 'emit_libcall_block', 'emit_no_conflict_block', 'emit_no_conflict_block', 'expand_decl', 'expand_goto', 'fold_rtx', 'record_value_for_reg', 'store_expr', 'visit_expression']
['eliminate_regs', 'extract_bit_field', 'instantiate_virtual_regs_1', 'mark_set_1', 'sched_analyze_2']
['copy_loop_body', 'eliminate_regs_in_insn', 'expand_function_end', 'fixup_var_refs_insn', 'visit_expression']
['eliminate_regs']
['force_nonfallthru_and_redirect', 'refers_to_regno_for_reload_p']
['change_address_1', 'cselib_record_sets', 'expand_mult_add', 'rename_block']
['force_nonfallthru_and_redirect', 'refers_to_regno_for_reload_p']
['set_decl_abstract_flags', 'set_decl_origin_self']
['do_cmp_and_jump']
['do_compare_and_jump']
['ix86_expand_move']
['do_jump_by_parts_equality', 'do_jump_by_parts_equality']
['do_jump_by_parts_equality', 'do_jump_by_parts_equality']
['do_jump_by_parts_equality', 'do_jump_by_parts_equality']
['do_jump_by_parts_equality', 'do_jump_by_parts_equality']
['do_jump_by_parts_equality_rtx', 'do_jump_by_parts_equality_rtx']
['do_jump_by_parts_equality_rtx', 'do_jump_by_parts_equality_rtx']
['do_jump_by_parts_equality_rtx', 'do_jump_by_parts_equality_rtx']
['do_jump_by_parts_equality_rtx', 'do_jump_by_parts_equality_rtx']
['do_jump_by_parts_equality_rtx', 'do_jump_by_parts_equality_rtx']
['do_jump_by_parts_equality_rtx', 'do_jump_by_parts_equality_rtx']
['do_jump_by_parts_greater_rtx']
['do_jump_by_parts_greater_rtx']
['output_constructor', 'output_init_element']
['do_store_flag']
['output_constructor', 'output_init_element']
['do_store_flag']
['do_store_flag']
['do_store_flag']
['do_store_flag']
['do_store_flag']
['store_fixed_bit_field']
['do_SUBST']
['do_SUBST']
['do_SUBST', 'do_SUBST_INT']
['do_SUBST', 'do_SUBST_INT']
['do_SUBST', 'do_SUBST', 'do_SUBST_INT', 'do_SUBST_INT']
['do_SUBST', 'do_SUBST', 'do_SUBST_INT', 'do_SUBST_INT']
['do_SUBST', 'do_SUBST_INT']
['do_SUBST', 'do_SUBST_INT']
['doing_eh']
['doing_eh']
['final_giv_value', 'known_cond', 'known_cond']
['final_giv_value', 'find_reloads_address', 'known_cond', 'known_cond']
['dump_bb']
['dump_edge_info']
['dump_edge_info']
['dump_edge_info']
['dump_flow_info']
['dump_flow_info']
['dump_flow_info']
['convert_regs_1']
['visualize_scheduled_insns']
['dequeue_and_dump', 'dequeue_and_dump', 'dequeue_and_dump', 'dequeue_and_dump', 'dequeue_and_dump']
['print_rtx']
['debug_reload_to_stream']
['dequeue_and_dump', 'dequeue_and_dump', 'dequeue_and_dump']
['dequeue_and_dump']
['dequeue_and_dump']
['dequeue_and_dump', 'dequeue_and_dump', 'dequeue_and_dump', 'dequeue_and_dump']
['dump_prediction']
['dump_regset']
['dump_regset']
['dump_sbitmap']
['dw2_asm_output_addr']
['dw2_asm_output_delta']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'dw2_asm_output_encoded_addr_rtx', 'emit_block_move', 'emit_push_insn', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'expand_builtin_prefetch', 'find_best_addr', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_expand_prologue', 'ix86_force_to_memory', 'ix86_force_to_memory', 'ix86_va_arg', 'legitimize_pic_address', 'legitimize_pic_address', 'load_pic_register', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'round_trampoline_addr', 'round_trampoline_addr']
['skip_line_comment']
['replace_regs']
['scope_to_insns_initialize']
['expand_field_assignment']
['optimize_bit_field']
['dw2_asm_output_addr']
['add_pure_or_virtual_attribute', 'dwarf2out_abstract_function', 'dwarf2out_source_line', 'gen_decl_die', 'gen_decl_die', 'gen_subprogram_die']
['dwarf2out_begin_prologue']
['dwarf2out_begin_prologue']
['dwarf2out_decl']
['dwarf2out_decl', 'gen_decl_die', 'gen_subprogram_die']
['get_cfa_from_loc_descr']
['dwarf2out_frame_debug']
['dwarf2out_cfi_label']
['dwarf2out_cfi_label']
['dwarf2out_cfi_label']
['dwarf2out_frame_debug']
['dwarf2out_stack_adjust']
['dwarf2out_stack_adjust']
['dwarf2out_stack_adjust']
['dwarf2out_cfi_label']
['dwarf2out_cfi_label']
['dwarf2out_cfi_label']
['dwarf2out_stack_adjust']
['dwarf2out_stack_adjust']
['apply_args_size']
['trampoline_address']
['expand_goto', 'memrefs_conflict_p']
['check_asm_stack_operands']
['dwarf2out_frame_debug_expr']
['dwarf2out_frame_debug_expr']
['skip_copy_to_return_value']
['skip_copy_to_return_value']
['copy_insn_list']
['emit_insns_after']
['dwarf2out_frame_debug_expr']
['gen_split_1214']
['gen_split_1214']
['dwarf2out_frame_debug_expr', 'dwarf2out_frame_debug_expr']
['add_pure_or_virtual_attribute', 'dwarf2out_abstract_function', 'dwarf2out_source_line', 'gen_decl_die', 'gen_decl_die', 'gen_subprogram_die']
['dwarf_stack_op_name']
['eh_data_format_name']
['decode_rtx_const', 'div_and_round_double', 'div_and_round_double', 'div_and_round_double', 'ecleaz', 'mul_double', 'mul_double', 'print_exp', 'print_exp']
['div_and_round_double', 'div_and_round_double', 'mul_double', 'mul_double', 'print_exp', 'print_exp']
['eliminate_constant_term']
['eliminate_constant_term']
['eliminate_constant_term']
['expand_asm_operands']
['merge_blocks_nomove']
['rename_block']
['mark_used_regs']
['check_asm_stack_operands', 'emit_library_call_value_1', 'expand_function_end', 'noce_get_alt_condition']
['express_from_1', 'find_split_point']
['find_single_use_1']
['combine_simplify_rtx', 'expand_call', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'make_memloc', 'next_insn_in_loop', 'simplify_if_then_else', 'simplify_relational_operation']
['compute_argument_addresses', 'extract_bit_field', 'hash_scan_set', 'noce_try_abs']
['cse_insn', 'decompose', 'find_dummy_reload', 'make_extraction', 'trampoline_address']
['copy_insn_list', 'copy_loop_body', 'eliminate_regs_in_insn', 'expand_decl', 'record_value_for_reg']
['compute_forward_dependences', 'expand_inline_function']
['fold_rtx']
['loop_iterations']
['eliminate_regs_in_insn', 'emit_insns_after']
['eliminate_regs_in_insn', 'fixup_var_refs_insn', 'set_label_offsets']
['expand_inline_function', 'expand_inline_function', 'queue_to_ready', 'store_expr']
['purge_addressof_1', 'simplify_set']
['check_dbra_loop', 'convert_regs_1', 'emit_insns_after', 'find_reloads_address_1', 'find_single_use_1', 'fold_rtx', 'init_alias_analysis', 'move_deaths', 'record_value_for_reg', 'refers_to_regno_for_reload_p', 'simplify_relational_operation', 'simplify_subreg', 'subst_stack_regs_pat', 'unroll_loop']
['refers_to_regno_for_reload_p']
['find_single_use_1']
['cse_end_of_basic_block', 'eliminate_regs_in_insn', 'find_equiv_reg', 'fixup_var_refs_insn', 'init_alias_analysis', 'subst', 'subst_asm_stack_regs', 'subst_constants', 'visit_expression']
['visit_expression']
['copy_insn_list', 'cse_end_of_basic_block', 'find_base_value', 'find_dummy_reload', 'find_dummy_reload', 'schedule_block']
['optimize_minmax_comparison', 'rm_line_notes', 'rm_line_notes', 'rm_other_notes', 'rm_other_notes']
['hash_scan_set', 'identify_call_return_value', 'noce_process_if_block', 'record_giv', 'rm_line_notes', 'rm_other_notes', 'verify_flow_info']
['hash_scan_set', 'identify_call_return_value', 'noce_process_if_block', 'record_giv', 'rm_line_notes', 'rm_other_notes', 'verify_flow_info']
['dwarf2out_frame_debug_expr']
['rm_line_notes', 'rm_line_notes', 'rm_other_notes', 'rm_other_notes']
['identify_call_return_value']
['identify_call_return_value']
['ecleaz']
['classify_argument']
['order_regs_for_reload']
['order_regs_for_reload']
['ldst_entry', 'prescan_loop', 'print_exp']
['print_exp']
['ecleazs', 'insert_set_in_table']
['emit_block_move', 'expand_call']
['emit_block_move', 'emit_block_move', 'make_tree']
['emit_block_move', 'emit_block_move', 'expand_call', 'std_expand_builtin_va_start']
['emit_case_nodes']
['prepare_cmp_insn', 'prepare_cmp_insn']
['prepare_cmp_insn']
['emit_cmp_and_jump_insn_1', 'prepare_cmp_insn', 'simplify_ternary_operation']
['allocate_dynamic_stack_space', 'do_tablejump', 'expand_fix']
['do_tablejump', 'expand_fix']
['emit_conditional_move', 'expand_builtin_strlen', 'push_secondary_reload']
['emit_conditional_move']
['emit_conditional_move']
['emit_conditional_move']
['emit_conditional_move']
['emit_conditional_move']
['emit_conditional_move']
['emit_conditional_move']
['sched_analyze_2']
['cse_set_around_loop']
['emit_group_store']
['emit_group_load']
['check_asm_stack_operands']
['emit_group_load']
['emit_group_load', 'emit_group_store', 'emit_group_store']
['check_asm_stack_operands']
['check_asm_stack_operands']
['change_address']
['noce_get_alt_condition', 'noce_get_condition', 'sched_analyze_2']
['emit_group_load', 'emit_group_store']
['emit_group_store']
['emit_group_load']
['emit_group_store']
['set_label_offsets']
['decompose', 'force_nonfallthru_and_redirect', 'identify_call_return_value', 'mark_set_1', 'record_giv']
['decompose', 'force_nonfallthru_and_redirect', 'identify_call_return_value', 'mark_set_1', 'record_giv']
['emit_group_store']
['emit_group_load', 'emit_group_store']
['emit_group_store']
['emit_indirect_jump']
['emit_indirect_jump']
['emit_insns_after']
['emit_insns_after']
['emit_insns_after']
['emit_insns_after']
['emit_insns_after', 'emit_insns_after']
['emit_insns_after', 'emit_insns_after']
['emit_insns_after']
['emit_insns_after']
['emit_insns_after']
['emit_insns_after']
['emit_insns_after']
['emit_insns_after']
['emit_insns_after']
['adjust_address_1', 'cselib_record_sets', 'emit_libcall_block', 'expand_field_assignment', 'find_dummy_reload', 'force_nonfallthru_and_redirect', 'gen_reload', 'legitimize_pic_address', 'mark_used_regs', 'memrefs_conflict_p', 'record_value_for_reg', 'refers_to_regno_for_reload_p', 'sched_analyze_2']
['adjust_address_1', 'sched_analyze_2', 'subst']
['emit_libcall_block', 'protect_from_queue', 'sched_analyze_2']
['gen_reload']
['record_value_for_reg']
['copy_insn_list', 'emit_input_reload_insns', 'emit_libcall_block', 'emit_no_conflict_block', 'legitimize_pic_address', 'noce_get_alt_condition']
['emit_libcall_block']
['can_throw_external', 'compute_hash_table', 'delete_insn', 'fixup_reorder_chain', 'mark_all_labels', 'reg_scan_mark_refs']
['compute_argument_addresses', 'extract_bit_field', 'hash_scan_set', 'noce_try_abs']
['emit_library_call_value_1']
['emit_library_call_value_1']
['delete_output_reload', 'emit_library_call_value_1', 'expand_decl', 'instantiate_virtual_regs_1', 'subst']
['emit_move_insn']
['emit_move_insn']
['emit_move_insn']
['emit_move_insn_1']
['nonzero_bits', 'num_sign_bit_copies', 'reversed_comparison_code_parts']
['emit_move_insn_1']
['emit_move_insn_1']
['emit_cmp_and_jump_insn_1', 'emit_move_insn_1']
['emit_move_insn_1']
['emit_no_conflict_block']
['emit_no_conflict_block']
['emit_no_conflict_block']
['consec_sets_giv', 'emit_libcall_block', 'emit_libcall_block', 'emit_no_conflict_block', 'expand_decl', 'expand_function_end', 'expand_goto', 'make_extraction', 'record_value_for_reg', 'scope_to_insns_initialize', 'subst_constants', 'unroll_loop']
['copy_insn_list', 'legitimize_pic_address']
['emit_no_conflict_block']
['emit_no_conflict_block', 'emit_no_conflict_block', 'emit_no_conflict_block']
['emit_no_conflict_block', 'emit_no_conflict_block', 'emit_no_conflict_block']
['emit_no_conflict_block']
['emit_no_conflict_block', 'emit_no_conflict_block', 'emit_no_conflict_block']
['emit_pop_insn']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'dw2_asm_output_encoded_addr_rtx', 'emit_block_move', 'emit_push_insn', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'expand_builtin_prefetch', 'find_best_addr', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_expand_prologue', 'ix86_force_to_memory', 'ix86_force_to_memory', 'ix86_va_arg', 'legitimize_pic_address', 'legitimize_pic_address', 'load_pic_register', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'round_trampoline_addr', 'round_trampoline_addr']
['expand_fix']
['emit_push_insn']
['emit_conditional_move', 'emit_push_insn', 'expand_builtin_strlen', 'gen_add2_insn', 'push_secondary_reload']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'dw2_asm_output_encoded_addr_rtx', 'emit_block_move', 'emit_push_insn', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'expand_builtin_prefetch', 'find_best_addr', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_expand_prologue', 'ix86_force_to_memory', 'ix86_force_to_memory', 'ix86_va_arg', 'legitimize_pic_address', 'legitimize_pic_address', 'load_pic_register', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'round_trampoline_addr', 'round_trampoline_addr']
['emit_single_push_insn']
['emit_single_push_insn']
['fixup_memory_subreg']
['emit_move_insn']
['emit_stack_save']
['emit_stack_save']
['emit_move_insn']
['rtl_for_decl_location']
['emit_store_flag_force']
['copy_insn_list', 'emit_input_reload_insns', 'emit_libcall_block', 'emit_no_conflict_block', 'legitimize_pic_address', 'noce_get_alt_condition']
['combine_regs', 'combine_regs']
['combine_regs', 'combine_regs']
['emit_insns_after', 'scope_to_insns_initialize']
['constrain_operands', 'find_dummy_reload', 'get_true_reg']
['find_dummy_reload', 'get_true_reg', 'known_cond']
['copy_insn_1']
['emit_unop_insn', 'prepare_operand']
['emit_unop_insn']
['force_not_mem']
['emit_unop_insn']
['equiv_constant']
['ereal_from_int', 'ereal_from_uint']
['ecleaz']
['ecleaz']
['ecleaz']
['ecleaz']
['ereal_from_int', 'ereal_from_uint']
['ecleaz']
['ecleaz']
['ecleaz']
['ecleaz']
['ereal_ldexp']
['emit_group_load', 'emit_insns_after']
['decompose', 'emit_no_conflict_block', 'emit_no_conflict_block', 'emit_no_conflict_block', 'ix86_split_to_parts', 'load_mems', 'timevar_push']
['emit_group_load']
['merge_blocks_nomove']
['constrain_operands']
['constrain_operands']
['emit_group_load']
['can_combine_p', 'can_combine_p']
['pedwarn_c99']
['def_cfa_1', 'def_cfa_1', 'def_cfa_1', 'def_cfa_1']
['def_cfa_1', 'def_cfa_1', 'def_cfa_1', 'def_cfa_1']
['warning_with_file_and_line']
['spelling_length']
['print_spelling', 'spelling_length']
['spelling_length']
['error_with_decl']
['pedwarn_c99']
['def_cfa_1', 'def_cfa_1', 'def_cfa_1', 'def_cfa_1']
['def_cfa_1', 'def_cfa_1', 'def_cfa_1', 'def_cfa_1']
['simplify_giv_expr']
['loop_iterations', 'simplify_comparison']
['expand_inline_function', 'expand_inline_function', 'instantiate_virtual_regs_1', 'merge_blocks_nomove', 'simplify_plus_minus', 'simplify_set', 'store_expr', 'subst_constants', 'subst_stack_regs_pat', 'subst_stack_regs_pat', 'validate_replace_rtx_1']
['expand_field_assignment', 'find_split_point', 'gen_reload', 'merge_blocks_nomove']
['cse_set_around_loop', 'instantiate_virtual_regs_1']
['noce_try_abs']
['instantiate_virtual_regs_1', 'subst_stack_regs_pat', 'subst_stack_regs_pat']
['rename_block']
['express_from_1', 'express_from_1']
['check_insn_for_givs', 'check_insn_for_givs', 'compute_argument_addresses', 'emit_group_load', 'emit_group_store', 'mark_set_1', 'memory_address', 'merge_blocks_nomove', 'offsettable_address_p', 'refers_to_regno_for_reload_p', 'refers_to_regno_for_reload_p', 'simplify_plus_minus', 'simplify_relational_operation']
['div_and_round_double', 'div_and_round_double', 'mul_double', 'mul_double', 'print_exp', 'print_exp']
['div_and_round_double', 'div_and_round_double', 'mul_double', 'mul_double', 'print_exp', 'print_exp']
['eval_subst', 'eval_subst']
['eval_subst']
['eval_subst']
['eval_subst']
['change_address_1', 'change_address_1', 'print_exp']
['exp_equiv_p']
['expand_abs']
['alloc_block', 'cpp_push_buffer']
['expand_assignment']
['expand_assignment', 'expand_assignment']
['expand_assignment']
['expand_assignment']
['clear_storage', 'expand_assignment', 'expr_size']
['expand_builtin_expect_jump']
['expand_builtin_expect_jump']
['expand_builtin_expect_jump']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'dw2_asm_output_encoded_addr_rtx', 'emit_block_move', 'emit_push_insn', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'expand_builtin_prefetch', 'find_best_addr', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_expand_prologue', 'ix86_force_to_memory', 'ix86_force_to_memory', 'ix86_va_arg', 'legitimize_pic_address', 'legitimize_pic_address', 'load_pic_register', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'round_trampoline_addr', 'round_trampoline_addr']
['expand_builtin_init_dwarf_reg_sizes']
['expand_builtin_longjmp']
['expand_builtin_return_addr']
['expand_builtin_longjmp', 'expand_builtin_setjmp_setup']
['apply_distributive_law', 'emit_libcall_block', 'expand_decl', 'gen_reload', 'subst_constants']
['expand_builtin_memset']
['expand_builtin_memset']
['expand_builtin_memset']
['find_reloads_address_part', 'identify_call_return_value', 'trampoline_address']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'dw2_asm_output_encoded_addr_rtx', 'emit_block_move', 'emit_push_insn', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'expand_builtin_prefetch', 'find_best_addr', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_expand_prologue', 'ix86_force_to_memory', 'ix86_force_to_memory', 'ix86_va_arg', 'legitimize_pic_address', 'legitimize_pic_address', 'load_pic_register', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'round_trampoline_addr', 'round_trampoline_addr']
['expand_builtin_return_addr']
['expand_builtin_longjmp', 'expand_builtin_return_addr', 'expand_builtin_setjmp_setup']
['expand_builtin_return_addr']
['expand_builtin_longjmp', 'expand_builtin_return_addr', 'expand_builtin_setjmp_setup']
['expand_builtin_setjmp_setup']
['expand_builtin_va_arg']
['expand_builtin_va_arg']
['expand_builtin_va_arg']
['eliminate_regs']
['combine_simplify_rtx', 'expand_call', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'make_memloc', 'next_insn_in_loop', 'simplify_if_then_else', 'simplify_relational_operation']
['emit_block_move', 'emit_block_move', 'expand_mult_add', 'ix86_va_start']
['emit_block_move', 'emit_block_move', 'expand_call']
['expand_call']
['make_tree', 'store_constructor']
['get_secondary_mem']
['expand_complex_abs', 'expand_increment', 'expand_twoval_binop', 'expand_unop']
['emit_move_insn_1']
['expand_complex_abs']
['expand_complex_abs']
['expand_complex_abs']
['expand_complex_abs']
['check_asm_stack_operands', 'expand_decl', 'store_expr']
['expand_field_assignment']
['expand_compound_operation']
['expand_field_assignment']
['simplify_logical']
['expand_compound_operation']
['find_reloads_address', 'noce_emit_cmove', 'replace_rtx', 'replace_rtx', 'write_dependence_p']
['expand_compound_operation']
['expand_compound_operation']
['copy_insn_notes', 'emit_no_conflict_block', 'expand_decl', 'gen_reload', 'protect_from_queue', 'protect_from_queue', 'record_giv', 'trampoline_address']
['adjust_address_1', 'consec_sets_giv', 'copy_loop_body', 'eliminate_regs_in_insn', 'find_equiv_reg', 'store_bit_field']
['expand_decl']
['check_asm_stack_operands', 'expand_decl', 'expand_decl', 'find_single_use_1', 'init_alias_analysis', 'mark_used_regs', 'set_label_offsets', 'store_expr']
['copy_insn_list', 'copy_loop_body', 'expand_decl']
['expand_decl', 'expand_function_start', 'ix86_va_arg', 'ix86_va_arg', 'round_trampoline_addr']
['expand_decl']
['expand_decl']
['expand_decl']
['expand_decl', 'noce_try_abs', 'rename_block']
['expand_decl']
['sge_plus_constant']
['save_stack_pointer']
['make_decl_rtl']
['expand_mult_add']
['expand_decl_cleanup']
['allocate_dynamic_stack_space', 'expand_builtin_apply', 'expand_eh_region_end_cleanup', 'round_trampoline_addr']
['expand_builtin_strlen', 'get_exception_pointer', 'noce_try_cmove_arith']
['ix86_expand_epilogue']
['adjust_address_1', 'adjust_address_1', 'copy_insn_list', 'emit_libcall_block', 'expand_field_assignment', 'find_reloads_address_1', 'find_split_point', 'legitimize_pic_address', 'legitimize_pic_address', 'make_extraction', 'mark_used_regs', 'move_movables', 'noce_process_if_block', 'plus_constant_wide', 'queue_to_ready', 'sched_analyze_2', 'subst']
['convert_regs_1', 'expand_goto', 'find_single_use_1', 'set_label_offsets']
['emit_libcall_block']
['copy_loop_body']
['allocate_dynamic_stack_space', 'expand_builtin_apply', 'expand_eh_region_end_cleanup', 'round_trampoline_addr']
['find_splittable_regs']
['check_ext_dependent_givs', 'loop_givs_rescan']
['expand_nl_handler_label']
['expand_nl_handler_label']
['handle_rd_kill_set', 'queue_to_ready', 'restore_line_notes']
['convert_regs_1']
['fixup_reorder_chain', 'offsettable_address_p']
['find_single_use_1', 'find_single_use_1']
['copy_insn_notes']
['expand_field_assignment']
['expand_field_assignment']
['expand_field_assignment']
['expand_field_assignment']
['expand_field_assignment']
['expand_field_assignment']
['expand_field_assignment']
['expand_field_assignment']
['expand_field_assignment']
['expand_field_assignment', 'expand_field_assignment']
['expand_field_assignment', 'expand_field_assignment']
['expand_field_assignment']
['dump_flow_info']
['can_fix_p']
['ereal_from_int', 'ereal_from_uint']
['can_fix_p']
['allocate_dynamic_stack_space', 'expand_fix']
['expand_asm_operands']
['ftruncify']
['expand_builtin_apply', 'expand_twoval_binop', 'expand_twoval_binop', 'expand_twoval_binop', 'ix86_expand_move']
['expand_float']
['ereal_from_int', 'ereal_from_uint']
['do_jump', 'expand_compound_operation', 'expand_fix']
['expand_fix', 'expand_fix']
['expand_float']
['invalidate_for_call']
['expand_float']
['expand_float', 'expand_float']
['expand_float']
['expand_float', 'expand_float']
['expand_compound_operation', 'expand_fix']
['expand_float']
['expand_mult_highpart']
['expand_float']
['emit_library_call_value_1']
['copy_loop_body', 'cse_insn']
['copy_loop_body', 'expand_function_end', 'fixup_var_refs_insn']
['eliminate_regs_in_insn', 'fixup_var_refs_insn', 'noce_process_if_block', 'set_label_offsets', 'simplify_set']
['apply_distributive_law', 'change_address_1', 'check_dbra_loop', 'combine_simplify_rtx', 'compute_forward_dependences', 'copy_insn_list', 'copy_loop_body', 'cse_end_of_basic_block', 'delete_output_reload', 'deps_may_trap_p', 'eliminate_regs', 'eliminate_regs', 'eliminate_regs', 'eliminate_regs_in_insn', 'expand_function_end', 'expand_inline_function', 'expand_inline_function', 'express_from', 'extract_bit_field', 'find_equiv_reg', 'find_split_point', 'fixup_var_refs_insn', 'get_attr_type', 'instantiate_virtual_regs_1', 'make_extraction', 'mark_set_1', 'maybe_eliminate_biv_1', 'move_deaths', 'noce_get_condition', 'sched_analyze_2', 'simplify_giv_expr', 'simplify_subreg', 'subst', 'subst_asm_stack_regs', 'subst_constants', 'verify_flow_info']
['copy_loop_body', 'memrefs_conflict_p']
['expand_function_end']
['eliminate_regs', 'load_mems', 'mark_referenced_regs', 'move_movables']
['expand_function_start']
['ix86_va_arg']
['expand_function_start']
['expand_function_start']
['expand_goto', 'expand_inline_function']
['expand_goto']
['find_oldest_value_reg', 'mark_all_labels']
['expand_goto', 'gen_reload', 'try_to_integrate']
['expand_goto', 'try_to_integrate']
['expand_goto', 'expand_goto']
['expand_goto', 'expand_goto']
['expand_goto']
['expand_goto']
['expand_goto', 'expand_goto']
['expand_goto', 'expand_goto']
['expand_goto']
['expand_goto']
['print_operand_address']
['expand_dec', 'expand_inc']
['expand_increment']
['expand_complex_abs', 'expand_increment', 'expand_twoval_binop', 'expand_unop']
['expand_increment', 'expand_increment']
['expand_increment', 'expand_increment']
['expand_increment']
['expand_increment']
['expand_increment', 'expand_increment']
['expand_increment', 'expand_increment']
['expand_increment', 'expand_increment']
['expand_increment', 'expand_increment']
['emit_move_insn_1']
['do_jump', 'expand_compound_operation', 'final_giv_value', 'known_cond', 'known_cond']
['expand_increment']
['expand_increment']
['expand_increment']
['eliminate_regs_in_insn', 'expand_function_end', 'expand_inline_function', 'extract_bit_field', 'find_split_point', 'gen_reload', 'move_movables', 'record_value_for_reg']
['expand_goto', 'expand_inline_function']
['copy_rtx_and_substitute']
['move_movables']
['loop_iterations']
['apply_distributive_law', 'check_dbra_loop', 'check_dbra_loop', 'combine_simplify_rtx', 'compute_forward_dependences', 'convert_regs_1', 'copy_insn_list', 'copy_insn_list', 'copy_loop_body', 'copy_rtx_and_substitute', 'emit_libcall_block', 'expand_inline_function', 'expand_inline_function', 'find_reloads', 'find_split_point', 'fixup_var_refs_1', 'gen_reload', 'gen_reload', 'insn_dead_p', 'loop_iterations', 'make_extraction', 'mark_all_labels', 'protect_from_queue', 'record_giv', 'simplify_comparison', 'simplify_relational_operation', 'store_bit_field', 'subst_constants']
['adjust_address_1', 'adjust_address_1', 'change_address_1', 'compute_forward_dependences', 'consec_sets_giv', 'copy_loop_body', 'cselib_record_sets', 'delete_output_reload', 'eliminate_regs_in_insn', 'eliminate_regs_in_insn', 'find_equiv_reg', 'fixup_var_refs_1', 'fold_rtx', 'fold_rtx', 'gen_reload', 'load_mems', 'loop_iterations', 'maybe_eliminate_biv_1', 'move_movables', 'simplify_comparison', 'simplify_giv_expr', 'store_bit_field']
['unroll_loop']
['expand_main_function']
['noce_get_condition']
['expand_mult_highpart', 'expand_mult_highpart']
['expand_mult_highpart', 'expand_mult_highpart']
['expand_mult_highpart', 'expand_mult_highpart']
['expand_mult_highpart', 'expand_mult_highpart']
['expand_mult_highpart', 'expand_mult_highpart']
['expand_mult_add']
['expand_mult_add']
['expand_mult_add']
['expand_mult_add']
['expand_mult_add']
['expand_mult_add']
['expand_mult_add']
['expand_mult_add']
['expand_mult_add', 'expand_mult_add']
['expand_mult_add', 'expand_mult_add']
['expand_mult_highpart']
['expand_mult_highpart']
['expand_mult_highpart']
['expand_mult_highpart']
['expand_mult_highpart']
['expand_mult_highpart']
['store_field']
['expand_mult_highpart']
['expand_mult_highpart']
['expand_mult_highpart', 'expand_mult_highpart']
['expand_mult_highpart', 'expand_mult_highpart']
['expand_return']
['expand_return']
['expand_call', 'expand_call', 'ix86_va_start', 'ix86_va_start', 'ix86_va_start', 'ix86_va_start', 'make_tree']
['ix86_va_start']
['express_from_1', 'express_from_1']
['check_asm_stack_operands']
['ix86_split_long_move']
['expand_mult_add', 'expand_mult_add']
['print_operand_address']
['expand_start_case']
['c_expand_asm_operands']
['genrtl_case_label']
['genrtl_case_label']
['expand_twoval_binop']
['expand_twoval_binop']
['expand_twoval_binop']
['expand_twoval_binop']
['expand_complex_abs', 'expand_increment', 'expand_twoval_binop', 'expand_unop']
['expand_twoval_binop', 'expand_twoval_binop']
['expand_twoval_binop', 'expand_twoval_binop']
['expand_twoval_binop']
['expand_twoval_binop']
['expand_twoval_binop']
['expand_twoval_binop']
['ix86_hard_regno_mode_ok', 'nonzero_bits', 'simplify_ternary_operation', 'simplify_ternary_operation']
['expand_complex_abs', 'expand_increment', 'expand_twoval_binop', 'expand_unop']
['emit_cmp_and_jump_insn_1']
['ix86_hard_regno_mode_ok', 'nonzero_bits', 'simplify_ternary_operation', 'simplify_ternary_operation']
['expand_unop']
['expand_unop']
['gen_split_1010', 'make_compound_operation', 'precompute_register_parameters', 'try_tablejump', 'try_tablejump']
['compute_forward_dependences', 'skip_copy_to_return_value']
['skip_copy_to_return_value', 'squeeze_notes']
['adjust_address_1', 'expand_field_assignment']
['noce_get_condition']
['noce_get_condition']
['compute_transp']
['delete_output_reload', 'delete_output_reload', 'queue_to_ready', 'squeeze_notes']
['memrefs_conflict_p']
['expand_mult_highpart_adjust']
['expand_mult_highpart_adjust']
['emit_insns_after']
['make_preds_opaque']
['compute_transp']
['emit_insns_after', 'expand_function_end', 'init_propagate_block_info']
['load_killed_in_block_p']
['merge_blocks_nomove', 'queue_to_ready', 'restore_line_notes']
['compute_transp']
['clear_storage', 'expand_assignment', 'expr_size']
['express_from_1', 'find_split_point']
['express_from']
['check_insn_for_givs', 'check_insn_for_givs', 'insert', 'insert', 'insert', 'insert']
['adjust_address_1', 'adjust_address_1', 'eliminate_regs_in_insn', 'emit_libcall_block', 'expand_field_assignment', 'legitimize_pic_address', 'make_extraction', 'mark_used_regs', 'noce_process_if_block', 'plus_constant_wide', 'record_value_for_reg', 'sched_analyze_2', 'sched_analyze_2', 'subst']
['offsettable_address_p']
['eliminate_constant_term']
['eliminate_constant_term']
['expunge_block_nocompact']
['expunge_block_nocompact']
['expunge_block_nocompact']
['expunge_block_nocompact']
['expunge_block_nocompact', 'merge_blocks_nomove']
['expunge_block_nocompact']
['expunge_block_nocompact']
['expunge_block_nocompact']
['expunge_block_nocompact']
['expunge_block_nocompact']
['expunge_block_nocompact']
['expunge_block_nocompact', 'merge_blocks_nomove']
['expunge_block_nocompact']
['expunge_block_nocompact']
['extend_value_for_giv', 'extend_value_for_giv']
['extend_value_for_giv', 'extend_value_for_giv']
['extend_value_for_giv', 'extend_value_for_giv']
['extend_value_for_giv', 'extend_value_for_giv']
['fixup_var_refs_insn', 'store_expr']
['delete_output_reload', 'emit_library_call_value_1', 'expand_decl', 'instantiate_virtual_regs_1', 'subst']
['move_deaths']
['find_split_point', 'move_movables']
['extract_insn_cached']
['extract_insn_cached']
['extract_constrain_insn_cached']
['expand_increment']
['expand_mult_highpart']
['invalidate']
['extract_insn', 'recog', 'split_insns']
['extract_insn']
['extract_insn']
['extract_insn']
['extract_insn']
['extract_insn']
['extract_insn']
['extract_insn']
['extract_insn']
['extract_insn']
['extract_insn']
['extract_insn']
['extract_insn']
['extract_insn']
['reload_cse_simplify_operands']
['extract_insn_cached']
['extract_insn_cached']
['extract_split_bit_field']
['expand_mult_highpart']
['expand_mult_highpart', 'expand_mult_highpart']
['sorry']
['sorry']
['sorry']
['report_diagnostic', 'sorry']
['report_diagnostic', 'sorry']
['sorry']
['report_diagnostic', 'sorry']
['report_diagnostic', 'sorry']
['field_byte_offset']
['fixup_reorder_chain', 'simplify_set']
['noce_get_alt_condition', 'noce_get_condition', 'sched_analyze_2']
['emit_insns_after']
['rm_line_notes', 'rm_other_notes']
['scope_to_insns_initialize']
['rm_line_notes', 'rm_line_notes', 'rm_other_notes', 'rm_other_notes', 'squeeze_notes', 'squeeze_notes']
['rm_line_notes', 'rm_line_notes', 'rm_other_notes', 'rm_other_notes', 'squeeze_notes', 'squeeze_notes']
['handle_rd_kill_set', 'queue_to_ready', 'restore_line_notes']
['find_oldest_value_reg']
['find_oldest_value_reg']
['find_oldest_value_reg']
['find_oldest_value_reg']
['memrefs_conflict_p']
['find_splittable_givs', 'find_splittable_givs', 'loop_givs_rescan', 'loop_givs_rescan']
['find_splittable_givs', 'find_splittable_givs', 'loop_givs_rescan', 'loop_givs_rescan']
['final_biv_value']
['loop_givs_reduce', 'loop_givs_reduce', 'loop_givs_reduce', 'loop_givs_reduce', 'loop_givs_rescan', 'loop_givs_rescan', 'loop_givs_rescan', 'loop_givs_rescan']
['loop_givs_reduce', 'loop_givs_reduce', 'loop_givs_reduce', 'loop_givs_reduce', 'loop_givs_rescan', 'loop_givs_rescan', 'loop_givs_rescan', 'loop_givs_rescan']
['loop_givs_reduce', 'loop_givs_reduce', 'loop_givs_reduce', 'loop_givs_reduce', 'loop_givs_rescan', 'loop_givs_rescan', 'loop_givs_rescan', 'loop_givs_rescan']
['loop_givs_reduce', 'loop_givs_reduce', 'loop_givs_reduce', 'loop_givs_reduce', 'loop_givs_rescan', 'loop_givs_rescan', 'loop_givs_rescan', 'loop_givs_rescan']
['biv_total_increment']
['loop_givs_reduce']
['biv_total_increment', 'biv_total_increment']
['biv_total_increment', 'biv_total_increment']
['update_giv_derive']
['find_reloads_address']
['instantiate_virtual_regs_1']
['final_scan_insn', 'final_scan_insn']
['final_scan_insn', 'final_scan_insn']
['dump_sbitmap']
['finalize_type_size']
['find_base_value', 'restore_line_notes', 'sge_plus_constant']
['find_base_term']
['expand_decl', 'expand_function_end', 'find_base_value', 'rename_block']
['apply_distributive_law', 'emit_group_store', 'find_base_term', 'set_label_offsets']
['find_base_term']
['plus_constant_wide']
['find_base_term']
['find_base_term']
['find_base_value']
['plus_constant_wide']
['decompose']
['eliminate_regs_in_insn', 'fixup_var_refs_insn', 'set_label_offsets']
['c_lex']
['decompose']
['pop_init_level', 'pop_init_level', 'process_init_element']
['scope_to_insns_initialize']
['wipe_dead_reg']
['set_label_offsets']
['get_narrower']
['scope_to_insns_initialize']
['find_reusable_reload']
['find_comparison_args']
['mark_used_regs', 'subst']
['move_deaths', 'move_deaths', 'store_split_bit_field']
['canonicalize_condition', 'find_comparison_args', 'nonzero_bits', 'notreg_cost', 'notreg_cost', 'rtl_for_decl_location']
['find_comparison_args']
['move_deaths', 'move_deaths', 'store_split_bit_field']
['move_deaths', 'move_deaths', 'store_split_bit_field']
['mark_used_regs']
['subst_stack_regs_pat']
['subst']
['df_bb_reg_info_compute', 'fixup_var_refs_insn']
['find_dummy_reload', 'find_dummy_reload']
['find_reloads_address_part']
['combine_regs', 'combine_regs']
['combine_regs', 'combine_regs']
['compute_forward_dependences', 'cse_insn', 'mark_all_labels']
['adjust_address_1', 'adjust_address_1', 'check_dbra_loop', 'consec_sets_giv', 'copy_loop_body', 'copy_loop_body', 'copy_loop_body', 'copy_rtx_and_substitute', 'cselib_record_sets', 'delete_output_reload', 'eliminate_regs', 'eliminate_regs_in_insn', 'find_base_term', 'find_equiv_reg', 'find_equiv_reg', 'find_reloads', 'fold_rtx', 'gen_reload', 'insert', 'maybe_eliminate_biv_1', 'memrefs_conflict_p', 'memrefs_conflict_p', 'move_movables', 'move_movables', 'move_movables', 'record_giv', 'restore_line_notes', 'rm_line_notes', 'rm_other_notes', 'simplify_giv_expr', 'store_bit_field', 'store_bit_field', 'store_bit_field', 'subst', 'subst', 'subst', 'subst_asm_stack_regs', 'visit_expression']
['instantiate_virtual_regs_1']
['may_trap_p']
['identify_call_return_value']
['compute_forward_dependences', 'compute_forward_dependences']
['merge_blocks_nomove']
['compute_forward_dependences', 'compute_forward_dependences']
['find_free_reg']
['find_free_reg']
['find_free_reg']
['find_free_reg']
['clear_reload_reg_in_use', 'cselib_invalidate_regno', 'ix86_register_move_cost', 'mark_life', 'mark_reg_live_nc', 'mark_reload_reg_in_use', 'post_mark_life', 'regno_clobbered_p', 'set_value_regno']
['cselib_invalidate_regno', 'mark_life', 'mark_reg_live_nc', 'peep2_find_free_register']
['expand_mult_highpart']
['classify_argument']
['classify_argument']
['make_extraction']
['eliminate_regs_in_insn', 'fixup_var_refs_insn', 'set_label_offsets']
['fold_rtx']
['emit_no_conflict_block']
['unroll_loop']
['compute_forward_dependences', 'copy_insn_notes', 'sched_analyze_2']
['simplify_shift_const']
['find_base_value', 'restore_line_notes', 'sge_plus_constant']
['constrain_operands', 'record_operand_costs']
['ix86_attr_length_immediate_default']
['split_2']
['ix86_attr_length_immediate_default']
['ix86_attr_length_immediate_default']
['constrain_operands', 'record_operand_costs']
['constrain_operands', 'record_operand_costs']
['fixup_reorder_chain']
['fixup_reorder_chain']
['fixup_reorder_chain']
['fixup_reorder_chain']
['find_mem_givs', 'find_mem_givs']
['find_mem_givs', 'find_mem_givs']
['find_mem_givs']
['find_mem_givs', 'find_mem_givs']
['find_mem_givs', 'find_mem_givs']
['find_mem_givs']
['find_mem_givs']
['find_reg']
['free_for_value_p']
['find_oldest_value_reg']
['optimize_minmax_comparison', 'optimize_minmax_comparison']
['optimize_minmax_comparison', 'optimize_minmax_comparison']
['get_memory_rtx']
['compare_constant_1', 'compare_constant_1', 'decode_addr_const', 'get_memory_rtx', 'optimize_minmax_comparison', 'record_constant_1', 'record_constant_1']
['find_placeholder']
['find_reg']
['find_reg']
['find_reg']
['find_reg']
['find_reg']
['find_reg']
['find_reg']
['choose_hard_reg_mode', 'insert_save', 'invalidate', 'reload_combine_note_use']
['record_conflicts']
['find_reg']
['find_reg_fusage']
['find_regno_fusage']
['clear_dead_regs', 'insert']
['adjust_address_1', 'cselib_record_sets', 'fixup_var_refs_insn', 'force_to_mode', 'gen_reload', 'protect_from_queue', 'store_expr']
['force_to_mode']
['fold_rtx', 'general_induction_var', 'record_value_for_reg', 'record_value_for_reg']
['find_single_use_1', 'find_split_point', 'memrefs_conflict_p', 'record_value_for_reg', 'record_value_for_reg', 'refers_to_regno_for_reload_p', 'subst_stack_regs_pat']
['change_address_1', 'compute_forward_dependences', 'compute_forward_dependences', 'deps_may_trap_p', 'find_base_term', 'protect_from_queue', 'record_operand_costs', 'restore_line_notes', 'rm_line_notes', 'rm_other_notes', 'simplify_set', 'skip_copy_to_return_value', 'skip_copy_to_return_value', 'squeeze_notes', 'swap_rtx_condition']
['cse_end_of_basic_block', 'eliminate_regs_in_insn', 'find_equiv_reg', 'subst', 'subst_asm_stack_regs', 'subst_constants']
['find_reloads_address_1']
['eliminate_regs_in_insn']
['apply_distributive_law', 'change_address_1', 'check_dbra_loop', 'combine_simplify_rtx', 'compute_forward_dependences', 'copy_insn_list', 'copy_loop_body', 'cse_end_of_basic_block', 'delete_output_reload', 'deps_may_trap_p', 'eliminate_regs', 'eliminate_regs', 'eliminate_regs', 'eliminate_regs_in_insn', 'expand_function_end', 'expand_inline_function', 'expand_inline_function', 'express_from', 'extract_bit_field', 'find_equiv_reg', 'find_split_point', 'fixup_var_refs_insn', 'get_attr_type', 'instantiate_virtual_regs_1', 'make_extraction', 'mark_set_1', 'maybe_eliminate_biv_1', 'move_deaths', 'noce_get_condition', 'sched_analyze_2', 'simplify_giv_expr', 'simplify_subreg', 'subst', 'subst_asm_stack_regs', 'subst_constants', 'verify_flow_info']
['memrefs_conflict_p']
['adjust_address_1']
['general_induction_var', 'refers_to_regno_for_reload_p']
['copy_loop_body', 'init_propagate_block_info', 'insn_dead_p', 'record_giv', 'simplify_relational_operation']
['record_value_for_reg']
['constrain_operands']
['unroll_loop']
['cse_end_of_basic_block', 'cse_end_of_basic_block', 'eliminate_regs_in_insn', 'find_equiv_reg', 'find_split_point', 'fold_rtx', 'general_induction_var', 'get_attr_type', 'init_alias_analysis', 'init_alias_analysis', 'mark_referenced_regs', 'mark_used_regs', 'record_value_for_reg', 'simplify_relational_operation', 'simplify_relational_operation', 'subst', 'subst_asm_stack_regs', 'subst_constants', 'visit_expression']
['find_reloads_address_1']
['copy_rtx_and_substitute']
['unroll_loop']
['ix86_split_long_move']
['find_reloads_address_part', 'find_reloads_address_part']
['emit_prefetch_instructions']
['simplify_subreg']
['find_reloads_address_part', 'find_reloads_address_part']
['emit_insns_after']
['find_reloads_address_part']
['find_reloads_address_part']
['expand_compound_operation', 'expand_fix']
['find_reloads_subreg_address']
['if_then_else_cond', 'if_then_else_cond', 'if_then_else_cond', 'if_then_else_cond', 'reload_cse_simplify_set']
['widen_operand']
['find_reloads_toplev']
['get_func_hard_reg_initial_val', 'widen_operand']
['emit_unrolled_add', 'ix86_expand_fp_movcc']
['find_reloads_subreg_address']
['find_reloads_toplev']
['simplify_rtx', 'simplify_rtx']
['compute_transp', 'put_addressof_into_stack', 'put_addressof_into_stack']
['force_operand']
['find_reloads_toplev']
['set_label_offsets']
['convert_regs_1', 'find_single_use_1']
['visit_expression']
['find_single_use_1']
['find_single_use_1']
['find_single_use_1', 'find_single_use_1']
['find_single_use_1', 'find_single_use_1']
['find_single_use_1']
['find_single_use_1']
['find_single_use_1']
['find_single_use_1', 'find_single_use_1']
['find_single_use_1', 'find_single_use_1']
['copy_insn_list', 'emit_input_reload_insns', 'emit_libcall_block', 'emit_no_conflict_block', 'legitimize_pic_address', 'noce_get_alt_condition']
['cse_end_of_basic_block', 'eliminate_regs_in_insn', 'find_equiv_reg', 'subst', 'subst_asm_stack_regs', 'subst_constants']
['move_deaths']
['copy_rtx_and_substitute', 'cse_end_of_basic_block', 'eliminate_regs', 'get_attr_type', 'visit_expression', 'visit_expression']
['find_split_point', 'simplify_set']
['find_equiv_reg', 'move_movables', 'simplify_giv_expr', 'store_bit_field', 'subst', 'visit_expression']
['memrefs_conflict_p']
['adjust_address_1', 'eliminate_regs', 'emit_input_reload_insns', 'emit_libcall_block', 'emit_no_conflict_block', 'simplify_subreg', 'unroll_loop']
['combine_simplify_rtx', 'expand_call', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'make_memloc', 'next_insn_in_loop', 'simplify_if_then_else', 'simplify_relational_operation']
['loop_iterations']
['find_valid_class']
['find_valid_class']
['get_exception_pointer']
['init_alias_analysis', 'ix86_emit_restore_regs_using_mov', 'ix86_emit_save_regs_using_mov']
['init_alias_analysis', 'ix86_emit_restore_regs_using_mov', 'ix86_emit_save_regs_using_mov', 'ix86_expand_epilogue', 'loop_regs_scan']
['init_alias_analysis', 'ix86_emit_restore_regs_using_mov', 'ix86_emit_save_regs_using_mov']
['truthvalue_conversion']
['truthvalue_conversion']
['pop_init_level']
['pop_init_level']
['pop_init_level']
['pop_init_level']
['pop_init_level']
['pop_init_level', 'process_init_element']
['pop_init_level']
['pop_init_level']
['pop_init_level']
['pop_init_level']
['elimination_effects']
['elimination_effects', 'elimination_effects']
['insn_dead_p']
['safe_from_p']
['fix_lexical_addr']
['fix_lexical_addr']
['fixup_abnormal_edges']
['fixup_memory_subreg']
['fixup_memory_subreg']
['fixup_memory_subreg']
['fixup_stack_1']
['loop_iterations']
['check_dbra_loop', 'combine_simplify_rtx', 'copy_insn_list', 'copy_loop_body', 'copy_loop_body', 'copy_rtx_and_substitute', 'eliminate_regs_in_insn', 'expand_decl', 'expand_inline_function', 'fixup_var_refs_1', 'fold_rtx', 'fold_rtx', 'force_to_mode', 'init_propagate_block_info', 'insn_dead_p', 'loop_iterations', 'loop_iterations', 'loop_iterations', 'loop_iterations', 'protect_from_queue', 'record_giv', 'record_operand_costs', 'simplify_comparison', 'simplify_giv_expr', 'simplify_relational_operation', 'skip_copy_to_return_value', 'squeeze_notes', 'subst', 'swap_rtx_condition', 'verify_flow_info']
['change_address_1', 'compute_forward_dependences', 'copy_loop_body', 'copy_loop_body', 'eliminate_regs_in_insn', 'expand_function_end', 'fixup_var_refs_1', 'fixup_var_refs_insn', 'fixup_var_refs_insn', 'fold_rtx', 'load_mems', 'loop_iterations', 'memrefs_conflict_p', 'print_rtx', 'protect_from_queue', 'simplify_comparison', 'simplify_giv_expr', 'simplify_giv_expr', 'store_expr', 'subst_constants']
['fixup_var_refs_1', 'gen_reload', 'mark_all_labels', 'mark_all_labels', 'subst_constants']
['extract_bit_field']
['copy_loop_body', 'copy_loop_body', 'expand_function_end', 'fixup_var_refs_insn', 'fixup_var_refs_insn', 'fold_rtx', 'fold_rtx', 'loop_iterations', 'memrefs_conflict_p', 'print_rtx', 'protect_from_queue', 'protect_from_queue', 'record_operand_costs', 'simplify_comparison', 'simplify_giv_expr', 'store_expr', 'subst_constants', 'swap_rtx_condition', 'unroll_loop']
['compute_argument_addresses', 'deps_may_trap_p', 'express_from_1', 'find_split_point', 'fixup_var_refs_1', 'fold_rtx', 'fold_rtx', 'fold_rtx', 'loop_iterations', 'move_deaths', 'protect_from_queue', 'record_operand_costs', 'sge_plus_constant', 'simplify_comparison', 'simplify_giv_expr', 'simplify_shift_const', 'swap_rtx_condition', 'unroll_loop']
['eliminate_regs_in_insn', 'fixup_var_refs_insn', 'set_label_offsets']
['check_dbra_loop', 'fixup_var_refs_insn']
['delete_output_reload', 'maybe_eliminate_biv_1']
['record_value_for_reg']
['fixup_var_refs_insn']
['emit_group_store', 'force_nonfallthru_and_redirect', 'refers_to_regno_for_reload_p', 'refers_to_regno_for_reload_p', 'try_to_integrate']
['flow_delete_block_noexpunge']
['dump_edge_info']
['lookup_cfa']
['free_edge']
['expunge_block_nocompact']
['get_cfa_from_loc_descr', 'lookup_cfa']
['expand_decl_cleanup', 'self_promoting_args_p']
['copy_loop_body', 'expand_function_end', 'fixup_var_refs_insn']
['fold_rtx']
['cse_insn']
['eliminate_regs', 'move_movables']
['loop_iterations']
['eliminate_regs_in_insn', 'instantiate_virtual_regs_1', 'queue_to_ready', 'record_value_for_reg', 'simplify_plus_minus', 'simplify_set', 'subst_constants', 'subst_stack_regs_pat', 'subst_stack_regs_pat', 'validate_replace_rtx_1']
['compute_forward_dependences', 'emit_libcall_block', 'fixup_var_refs_1', 'mark_all_labels']
['find_base_value', 'restore_line_notes', 'sge_plus_constant']
['adjust_address_1', 'adjust_address_1', 'copy_insn_list', 'eliminate_regs_in_insn', 'emit_libcall_block', 'expand_field_assignment', 'find_reloads_address_1', 'find_split_point', 'force_to_mode', 'legitimize_pic_address', 'legitimize_pic_address', 'make_extraction', 'mark_used_regs', 'move_movables', 'noce_process_if_block', 'plus_constant_wide', 'queue_to_ready', 'record_value_for_reg', 'sched_analyze_2', 'sched_analyze_2', 'subst', 'unroll_loop']
['simplify_set']
['check_dbra_loop', 'check_dbra_loop', 'cse_insn', 'eliminate_regs', 'eliminate_regs_in_insn', 'emit_insns_after', 'emit_libcall_block', 'emit_libcall_block', 'emit_no_conflict_block', 'expand_goto', 'expand_inline_function', 'find_dummy_reload', 'find_reloads_address_1', 'find_split_point', 'fold_rtx', 'fold_rtx', 'force_nonfallthru_and_redirect', 'init_alias_analysis', 'instantiate_virtual_regs_1', 'legitimize_pic_address', 'mark_used_regs', 'memrefs_conflict_p', 'move_movables', 'move_movables', 'noce_get_alt_condition', 'noce_get_condition', 'record_value_for_reg', 'rm_line_notes', 'rm_other_notes', 'sched_analyze_2', 'sched_analyze_2', 'scope_to_insns_initialize', 'simplify_comparison', 'simplify_subreg', 'unroll_loop', 'unroll_loop']
['adjust_address_1', 'copy_insn_notes', 'cselib_record_sets', 'expand_field_assignment', 'gen_reload', 'protect_from_queue', 'refers_to_regno_for_reload_p']
['commit_one_edge_insertion']
['emit_group_load']
['record_value_for_reg', 'simplify_comparison', 'visit_expression']
['cse_end_of_basic_block', 'eliminate_regs_in_insn', 'find_equiv_reg', 'fixup_var_refs_insn', 'init_alias_analysis', 'subst', 'subst_asm_stack_regs', 'subst_constants', 'visit_expression']
['expand_mult_add', 'expand_mult_add']
['verify_flow_info', 'verify_flow_info', 'verify_flow_info']
['expand_function_end', 'hash_scan_set', 'noce_process_if_block']
['rm_line_notes', 'rm_line_notes', 'rm_other_notes', 'rm_other_notes', 'squeeze_notes', 'squeeze_notes']
['rm_line_notes', 'rm_line_notes', 'rm_other_notes', 'rm_other_notes', 'squeeze_notes', 'squeeze_notes']
['check_dbra_loop', 'eliminate_regs', 'force_nonfallthru_and_redirect', 'scope_to_insns_initialize', 'simplify_comparison', 'subst', 'unroll_loop']
['merge_blocks_nomove', 'restore_line_notes', 'restore_line_notes', 'verify_flow_info']
['force_nonfallthru_and_redirect']
['dwarf2out_stack_adjust', 'emit_insns_after', 'find_base_term']
['mark_referenced_regs']
['merge_blocks_nomove', 'restore_line_notes', 'restore_line_notes', 'verify_flow_info']
['force_nonfallthru_and_redirect']
['squeeze_notes']
['legitimize_pic_address']
['force_not_mem']
['combine_simplify_rtx', 'expand_call', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'make_memloc', 'next_insn_in_loop', 'simplify_if_then_else', 'simplify_relational_operation']
['copy_insn_list', 'emit_libcall_block', 'gen_reload', 'gen_reload', 'protect_from_queue', 'record_giv', 'subst_constants']
['force_not_mem']
['force_operand']
['convert_regs_1', 'memrefs_conflict_p']
['gen_split_1214']
['squeeze_notes']
['find_base_term']
['force_operand']
['force_operand']
['expand_field_assignment']
['compute_argument_addresses', 'find_base_value', 'force_to_mode', 'restore_line_notes', 'sge_plus_constant', 'sge_plus_constant']
['compute_argument_addresses', 'extract_bit_field', 'hash_scan_set', 'noce_try_abs', 'protect_from_queue']
['distribute_notes']
['mark_used_regs']
['adjust_address_1', 'copy_insn_notes', 'cselib_record_sets', 'expand_field_assignment', 'gen_reload', 'protect_from_queue', 'refers_to_regno_for_reload_p']
['offsettable_address_p']
['simplify_relational_operation']
['memrefs_conflict_p']
['find_reloads_address_part', 'identify_call_return_value', 'trampoline_address']
['memrefs_conflict_p']
['form_sum']
['form_sum']
['memrefs_conflict_p']
['memrefs_conflict_p']
['do_tablejump']
['expunge_block_nocompact', 'free_edge']
['expunge_block_nocompact']
['expunge_block_nocompact']
['expunge_block_nocompact', 'expunge_block_nocompact']
['expunge_block_nocompact']
['build1']
['expunge_block_nocompact']
['bitmap_copy', 'expunge_block_nocompact', 'expunge_block_nocompact', 'free_edge']
['start_sequence']
['alloc_block']
['copy_value', 'cselib_lookup', 'find_free_reg', 'find_oldest_value_reg', 'free_for_value_p', 'ix86_register_move_cost', 'kill_value', 'reg_fits_class_p']
['reload_reg_free_for_value_p']
['handle_rd_kill_set']
['signed_type', 'store_parm_decls', 'unsigned_type']
['print_mem_expr', 'print_operand', 'print_operand']
['build_complex_type', 'build_complex_type', 'print_operand', 'print_operand']
['text_section']
['text_section']
['function_units_used']
['function_units_used']
['function_units_used']
['record_one_set', 'record_one_set']
['record_one_set', 'record_one_set']
['force_to_mode']
['compute_transp', 'compute_transp', 'compute_transp', 'compute_transp', 'handle_rd_kill_set', 'handle_rd_kill_set']
['compute_transp', 'compute_transp', 'compute_transp', 'compute_transp', 'handle_rd_kill_set', 'handle_rd_kill_set']
['handle_rd_kill_set', 'handle_rd_kill_set']
['handle_rd_kill_set', 'handle_rd_kill_set']
['compute_transp', 'compute_transp', 'compute_transp', 'compute_transp', 'handle_rd_kill_set', 'handle_rd_kill_set', 'record_one_set', 'record_one_set']
['compute_transp', 'compute_transp', 'compute_transp', 'compute_transp', 'handle_rd_kill_set', 'handle_rd_kill_set', 'record_one_set', 'record_one_set']
['adjust_address_1', 'combine_simplify_rtx', 'copy_insn_notes', 'copy_rtx_and_substitute', 'emit_input_reload_insns', 'get_attr_prefix_0f', 'identify_call_return_value', 'instantiate_virtual_regs_1', 'memrefs_conflict_p', 'noce_get_alt_condition', 'protect_from_queue', 'record_value_for_reg', 'visit_expression', 'visit_expression']
['adjust_address_1', 'adjust_address_1', 'copy_insn_list', 'emit_libcall_block', 'expand_field_assignment', 'expand_inline_function', 'expand_inline_function', 'find_reloads_address_1', 'find_split_point', 'force_to_mode', 'legitimize_pic_address', 'legitimize_pic_address', 'make_extraction', 'mark_used_regs', 'move_movables', 'noce_process_if_block', 'plus_constant_wide', 'queue_to_ready', 'sched_analyze_2', 'store_expr', 'subst']
['apply_distributive_law']
['force_to_mode']
['gen_move_insn', 'gen_move_insn']
['gen_add2_insn']
['gen_add2_insn']
['gen_add2_insn']
['gen_add2_insn']
['gen_add3_insn', 'gen_sub3_insn']
['gen_add3_insn', 'gen_sub3_insn']
['gen_add3_insn', 'gen_sub3_insn']
['gen_add3_insn', 'gen_sub3_insn']
['gen_add3_insn', 'gen_sub3_insn']
['add_subscript_info']
['gen_aux_info_record']
['combine_simplify_rtx', 'expand_call', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'make_memloc', 'next_insn_in_loop', 'simplify_if_then_else', 'simplify_relational_operation']
['gen_binary']
['gen_binary']
['gen_binary', 'gen_binary', 'gen_lowpart_for_combine']
['gen_binary', 'gen_binary', 'gen_lowpart_for_combine', 'make_memloc', 'next_insn_in_loop']
['gen_binary']
['gen_lowpart_for_combine']
['gen_binary', 'gen_binary', 'gen_lowpart_for_combine', 'make_memloc', 'next_insn_in_loop']
['gen_block_die']
['gen_inlined_subroutine_die', 'gen_lexical_block_die']
['gen_call']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'dw2_asm_output_encoded_addr_rtx', 'emit_block_move', 'emit_push_insn', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'expand_builtin_prefetch', 'find_best_addr', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_expand_prologue', 'ix86_force_to_memory', 'ix86_force_to_memory', 'ix86_va_arg', 'legitimize_pic_address', 'legitimize_pic_address', 'load_pic_register', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'round_trampoline_addr', 'round_trampoline_addr']
['gen_call_pop', 'gen_call_value_pop']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'dw2_asm_output_encoded_addr_rtx', 'emit_block_move', 'emit_push_insn', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'expand_builtin_prefetch', 'find_best_addr', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_expand_prologue', 'ix86_force_to_memory', 'ix86_force_to_memory', 'ix86_va_arg', 'legitimize_pic_address', 'legitimize_pic_address', 'load_pic_register', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'round_trampoline_addr', 'round_trampoline_addr']
['gen_call_value']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'dw2_asm_output_encoded_addr_rtx', 'emit_block_move', 'emit_push_insn', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'expand_builtin_prefetch', 'find_best_addr', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_expand_prologue', 'ix86_force_to_memory', 'ix86_force_to_memory', 'ix86_va_arg', 'legitimize_pic_address', 'legitimize_pic_address', 'load_pic_register', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'round_trampoline_addr', 'round_trampoline_addr']
['gen_call_pop', 'gen_call_value_pop']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'dw2_asm_output_encoded_addr_rtx', 'emit_block_move', 'emit_push_insn', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'expand_builtin_prefetch', 'find_best_addr', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_expand_prologue', 'ix86_force_to_memory', 'ix86_force_to_memory', 'ix86_va_arg', 'legitimize_pic_address', 'legitimize_pic_address', 'load_pic_register', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'round_trampoline_addr', 'round_trampoline_addr']
['gen_cmpstrsi']
['gen_cmpstrsi']
['gen_cond_trap']
['gen_conditional_trap']
['add_pure_or_virtual_attribute', 'dwarf2out_abstract_function', 'dwarf2out_source_line', 'gen_decl_die', 'gen_decl_die', 'gen_subprogram_die']
['dwarf2out_decl', 'gen_decl_die', 'gen_subprogram_die']
['dwarf2out_decl', 'gen_decl_die', 'gen_subprogram_die']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'dw2_asm_output_encoded_addr_rtx', 'emit_block_move', 'emit_push_insn', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'expand_builtin_prefetch', 'find_best_addr', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_expand_prologue', 'ix86_force_to_memory', 'ix86_force_to_memory', 'ix86_va_arg', 'legitimize_pic_address', 'legitimize_pic_address', 'load_pic_register', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'round_trampoline_addr', 'round_trampoline_addr']
['expand_builtin_longjmp']
['calls_function_1']
['gen_lowpart_common']
['gen_lexical_block_die']
['gen_lowpart']
['combine_simplify_rtx', 'expand_call', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'make_memloc', 'next_insn_in_loop', 'simplify_if_then_else', 'simplify_relational_operation']
['gen_lowpart_common']
['gen_lowpart_common']
['gen_lowpart_common']
['gen_lowpart_common']
['bitmap_element_link', 'gen_lowpart_common', 'gen_lowpart_common']
['bitmap_element_link', 'gen_lowpart_common', 'gen_lowpart_common']
['cselib_lookup']
['express_from']
['gen_lowpart_common']
['combine_simplify_rtx', 'expand_call', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'make_memloc', 'next_insn_in_loop', 'simplify_if_then_else', 'simplify_relational_operation']
['gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine']
['find_reloads_address_part', 'identify_call_return_value', 'trampoline_address']
['emit_group_store']
['gen_lowpart_for_combine']
['gen_binary', 'gen_binary', 'gen_lowpart_for_combine', 'make_memloc', 'next_insn_in_loop']
['gen_lowpart_for_combine']
['gen_binary', 'gen_binary', 'gen_lowpart_for_combine']
['gen_binary', 'gen_binary', 'gen_lowpart_for_combine', 'make_memloc', 'next_insn_in_loop']
['gen_lowpart_for_combine']
['gen_lowpart_for_combine', 'gen_lowpart_for_combine']
['gen_lowpart_for_combine', 'gen_lowpart_for_combine']
['gen_lowpart_for_combine']
['gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine']
['gen_mem_addressof']
['gen_move_insn']
['gen_move_insn', 'gen_move_insn']
['gen_move_insn', 'gen_move_insn']
['gen_peephole2_1164', 'gen_peephole2_1165']
['gen_peephole2_1164', 'gen_peephole2_1165']
['gen_peephole2_1262']
['gen_peephole2_1263']
['gen_peephole2_1264', 'gen_peephole2_1266']
['gen_peephole2_1264', 'gen_peephole2_1266']
['gen_reg_rtx']
['gen_reload']
['adjust_address_1', 'cselib_record_sets', 'gen_reload']
['sched_analyze_2']
['check_asm_stack_operands', 'emit_library_call_value_1', 'expand_function_end', 'noce_get_alt_condition']
['emit_library_call_value_1']
['gen_reload']
['compute_forward_dependences', 'cse_insn', 'fixup_var_refs_1', 'insert']
['expand_goto', 'gen_reload', 'try_to_integrate']
['gen_reload']
['compensate_edge']
['alloc_block']
['compensate_edge', 'set_label_offsets']
['alloc_block']
['compensate_edge']
['alloc_block']
['compensate_edge']
['alloc_block']
['compensate_edge']
['compensate_edge']
['alloc_block']
['compensate_edge']
['alloc_block']
['compensate_edge']
['alloc_block']
['compensate_edge']
['alloc_block']
['compensate_edge']
['combine_simplify_rtx', 'expand_call', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'make_memloc', 'next_insn_in_loop', 'simplify_if_then_else', 'simplify_relational_operation']
['copy_rtx_and_substitute', 'load_mems', 'visit_expression', 'visit_expression']
['mark_all_labels']
['start_sequence']
['skip_copy_to_return_value']
['squeeze_notes']
['squeeze_notes']
['squeeze_notes', 'squeeze_notes']
['squeeze_notes', 'squeeze_notes']
['handle_rd_kill_set', 'queue_to_ready', 'restore_line_notes']
['gen_binary', 'gen_binary', 'gen_lowpart_for_combine', 'make_memloc', 'next_insn_in_loop']
['gen_split_1010']
['gen_split_1010']
['gen_split_1010']
['gen_split_1087', 'gen_split_1088', 'gen_split_954', 'gen_split_955', 'gen_split_956', 'gen_split_957', 'gen_split_958', 'gen_split_959', 'gen_split_962']
['find_best_addr', 'gen_split_1087', 'gen_split_1088']
['gen_split_1087']
['gen_split_1087', 'gen_split_1088', 'gen_split_954', 'gen_split_955', 'gen_split_956', 'gen_split_957', 'gen_split_958', 'gen_split_959', 'gen_split_962']
['find_best_addr', 'gen_split_1087', 'gen_split_1088']
['gen_split_1157']
['gen_split_1158']
['gen_split_1181', 'gen_split_950']
['gen_split_1181', 'gen_split_1182', 'gen_split_950']
['gen_split_1181', 'gen_split_1182', 'gen_split_1236']
['gen_split_1181', 'gen_split_1182', 'gen_split_1236']
['gen_split_1181', 'gen_split_950']
['gen_split_1182']
['gen_split_1181', 'gen_split_1182', 'gen_split_950']
['gen_split_1181', 'gen_split_1182', 'gen_split_1236']
['gen_split_1181', 'gen_split_1182', 'gen_split_1236']
['gen_split_1182']
['gen_split_1214']
['gen_split_1214']
['gen_split_1214']
['gen_split_1230']
['gen_split_1232']
['gen_split_1232']
['gen_split_1181', 'gen_split_1182', 'gen_split_1236']
['gen_split_1181', 'gen_split_1182', 'gen_split_1236']
['gen_split_1181', 'gen_split_950']
['gen_split_1181', 'gen_split_1182', 'gen_split_950']
['gen_split_1181', 'gen_split_950']
['gen_split_1087', 'gen_split_1088', 'gen_split_954', 'gen_split_955', 'gen_split_956', 'gen_split_957', 'gen_split_958', 'gen_split_959', 'gen_split_962']
['gen_split_954', 'gen_split_955', 'gen_split_961']
['gen_split_954', 'gen_split_956', 'gen_split_958', 'gen_split_959']
['gen_split_1087', 'gen_split_1088', 'gen_split_954', 'gen_split_955', 'gen_split_956', 'gen_split_957', 'gen_split_958', 'gen_split_959', 'gen_split_962']
['gen_split_954', 'gen_split_955', 'gen_split_961']
['gen_split_955', 'gen_split_957']
['gen_split_1087', 'gen_split_1088', 'gen_split_954', 'gen_split_955', 'gen_split_956', 'gen_split_957', 'gen_split_958', 'gen_split_959', 'gen_split_962']
['gen_split_954', 'gen_split_956', 'gen_split_958', 'gen_split_959']
['gen_split_1087', 'gen_split_1088', 'gen_split_954', 'gen_split_955', 'gen_split_956', 'gen_split_957', 'gen_split_958', 'gen_split_959', 'gen_split_962']
['gen_split_955', 'gen_split_957']
['gen_split_1087', 'gen_split_1088', 'gen_split_954', 'gen_split_955', 'gen_split_956', 'gen_split_957', 'gen_split_958', 'gen_split_959', 'gen_split_962']
['gen_split_954', 'gen_split_956', 'gen_split_958', 'gen_split_959']
['gen_split_958']
['gen_split_1087', 'gen_split_1088', 'gen_split_954', 'gen_split_955', 'gen_split_956', 'gen_split_957', 'gen_split_958', 'gen_split_959', 'gen_split_962']
['gen_split_954', 'gen_split_956', 'gen_split_958', 'gen_split_959']
['gen_split_959']
['gen_split_961']
['gen_split_954', 'gen_split_955', 'gen_split_961']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'dw2_asm_output_encoded_addr_rtx', 'emit_block_move', 'emit_push_insn', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'expand_builtin_prefetch', 'find_best_addr', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_expand_prologue', 'ix86_force_to_memory', 'ix86_force_to_memory', 'ix86_va_arg', 'legitimize_pic_address', 'legitimize_pic_address', 'load_pic_register', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'round_trampoline_addr', 'round_trampoline_addr']
['gen_split_1087', 'gen_split_1088', 'gen_split_954', 'gen_split_955', 'gen_split_956', 'gen_split_957', 'gen_split_958', 'gen_split_959', 'gen_split_962']
['gen_split_962']
['gen_sse_movdfcc', 'gen_sse_movsfcc']
['gen_sse_movdfcc', 'gen_sse_movsfcc']
['gen_add3_insn', 'gen_sub3_insn']
['gen_add3_insn', 'gen_sub3_insn']
['gen_add3_insn', 'gen_sub3_insn']
['gen_add3_insn', 'gen_sub3_insn']
['gen_add3_insn', 'gen_sub3_insn']
['dwarf2out_decl', 'gen_decl_die', 'gen_subprogram_die']
['add_pure_or_virtual_attribute', 'dwarf2out_abstract_function', 'dwarf2out_source_line', 'gen_decl_die', 'gen_decl_die', 'gen_subprogram_die']
['dwarf2out_decl', 'gen_decl_die', 'gen_subprogram_die']
['gen_tablejump']
['gen_tablejump']
['compare_constant_1']
['build_conditional_expr', 'dbxout_symbol']
['compare_constant_1']
['build1']
['build1']
['general_induction_var']
['general_induction_var']
['general_induction_var']
['general_induction_var']
['general_operand']
['general_operand']
['fixup_stack_1']
['check_case_value']
['get_alias_set']
['new_alias_set']
['get_alias_set']
['new_alias_set']
['get_arg_pointer_save_area']
['get_attr_athlon_decode']
['get_attr_athlon_decode', 'get_attr_athlon_decode', 'get_attr_athlon_decode']
['get_attr_athlon_decode', 'get_attr_athlon_decode', 'get_attr_athlon_decode']
['get_attr_athlon_decode', 'get_attr_athlon_decode', 'get_attr_athlon_decode']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits', 'get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits', 'get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits', 'get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits', 'get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_length_immediate']
['get_attr_i387']
['get_attr_i387', 'get_attr_i387', 'get_attr_i387']
['get_attr_i387', 'get_attr_i387', 'get_attr_i387']
['get_attr_i387', 'get_attr_i387', 'get_attr_i387']
['get_attr_i387']
['get_attr_imm_disp']
['get_attr_imm_disp', 'get_attr_imm_disp', 'get_attr_pent_pair', 'get_attr_prefix_0f', 'get_attr_prefix_0f', 'recog_21', 'recog_21', 'recog_21']
['get_attr_imm_disp', 'get_attr_length_immediate', 'get_attr_modrm', 'get_attr_pent_pair', 'get_attr_type']
['get_attr_imm_disp', 'get_attr_imm_disp', 'get_attr_pent_pair', 'get_attr_prefix_0f', 'get_attr_prefix_0f', 'recog_21', 'recog_21', 'recog_21']
['get_attr_imm_disp']
['get_attr_imm_disp', 'get_attr_modrm']
['get_attr_imm_disp', 'get_attr_imm_disp', 'get_attr_imm_disp', 'get_attr_imm_disp', 'get_attr_length_immediate', 'get_attr_length_immediate', 'get_attr_length_immediate']
['get_attr_imm_disp', 'get_attr_imm_disp', 'get_attr_imm_disp', 'get_attr_imm_disp', 'get_attr_length_immediate', 'get_attr_length_immediate', 'get_attr_length_immediate']
['get_attr_imm_disp', 'get_attr_imm_disp', 'get_attr_imm_disp', 'get_attr_imm_disp', 'get_attr_length_immediate', 'get_attr_length_immediate', 'get_attr_length_immediate']
['get_attr_imm_disp', 'get_attr_imm_disp', 'get_attr_imm_disp', 'get_attr_imm_disp', 'get_attr_length_immediate', 'get_attr_length_immediate', 'get_attr_length_immediate']
['get_attr_imm_disp']
['get_attr_length_address']
['get_attr_length_address']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_imm_disp', 'get_attr_length_immediate', 'get_attr_modrm', 'get_attr_pent_pair', 'get_attr_type']
['get_attr_length_immediate', 'get_attr_length_immediate']
['get_attr_length_immediate']
['result_ready_cost']
['get_attr_length_immediate']
['get_attr_modrm', 'get_attr_modrm', 'get_attr_modrm', 'get_attr_modrm']
['get_attr_length_immediate', 'get_attr_length_immediate']
['get_attr_length_immediate', 'get_attr_length_immediate']
['get_attr_modrm', 'get_attr_modrm', 'get_attr_modrm', 'get_attr_modrm']
['get_attr_length_immediate']
['get_attr_modrm', 'get_attr_modrm', 'get_attr_modrm', 'get_attr_modrm']
['get_attr_memory']
['get_attr_memory', 'get_attr_memory', 'get_attr_memory']
['get_attr_memory']
['get_attr_memory', 'get_attr_modrm', 'result_ready_cost', 'result_ready_cost', 'result_ready_cost']
['get_attr_memory']
['get_attr_memory']
['get_attr_memory', 'get_attr_memory']
['get_attr_memory', 'get_attr_memory']
['get_attr_memory', 'get_attr_memory', 'get_attr_memory']
['get_attr_memory']
['result_ready_cost']
['get_attr_memory']
['get_attr_memory', 'get_attr_memory', 'get_attr_memory']
['get_attr_memory', 'get_attr_modrm', 'result_ready_cost', 'result_ready_cost', 'result_ready_cost']
['get_attr_memory', 'get_attr_memory', 'get_attr_memory']
['get_attr_mode']
['get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_type']
['get_attr_mode', 'get_attr_prefix_0f']
['get_attr_modrm']
['get_attr_imm_disp', 'get_attr_modrm']
['get_attr_modrm']
['get_attr_modrm', 'get_attr_modrm']
['get_attr_type']
['get_attr_athlon_fpunits', 'get_attr_athlon_fpunits']
['get_attr_imm_disp', 'get_attr_length_immediate', 'get_attr_modrm', 'get_attr_pent_pair', 'get_attr_type']
['get_attr_modrm', 'get_attr_modrm']
['get_attr_memory', 'get_attr_modrm', 'result_ready_cost', 'result_ready_cost', 'result_ready_cost']
['get_attr_modrm', 'get_attr_modrm', 'get_attr_modrm']
['get_attr_modrm', 'get_attr_modrm', 'get_attr_modrm']
['get_attr_modrm', 'get_attr_modrm', 'get_attr_modrm', 'get_attr_modrm']
['get_attr_modrm', 'get_attr_modrm', 'get_attr_modrm', 'get_attr_modrm']
['get_attr_modrm', 'get_attr_modrm', 'get_attr_modrm', 'get_attr_modrm']
['get_attr_pent_pair']
['get_attr_pent_pair']
['get_attr_pent_pair']
['get_attr_pent_pair']
['get_attr_pent_pair', 'get_attr_pent_pair', 'get_attr_type', 'recog_24', 'recog_25']
['get_attr_pent_pair']
['get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_imm_disp', 'get_attr_length_immediate', 'get_attr_modrm', 'get_attr_pent_pair', 'get_attr_type']
['get_attr_pent_pair']
['get_attr_pent_pair', 'get_attr_pent_pair', 'get_attr_type', 'recog_24', 'recog_25']
['cse_end_of_basic_block', 'get_attr_prefix_0f', 'noce_get_alt_condition', 'visit_expression']
['get_attr_prefix_0f']
['get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_mode', 'get_attr_prefix_0f']
['get_attr_prefix_0f']
['get_attr_prefix_0f', 'get_attr_prefix_0f']
['get_attr_prefix_0f']
['get_attr_prefix_0f', 'get_attr_prefix_0f']
['get_attr_prefix_0f', 'get_attr_prefix_0f']
['get_attr_prefix_0f', 'get_attr_prefix_0f']
['get_attr_prefix_0f', 'get_attr_prefix_0f']
['get_attr_prefix_0f', 'get_attr_prefix_0f']
['get_attr_prefix_0f']
['get_attr_prefix_data16']
['get_attr_prefix_rep']
['get_attr_type']
['get_attr_type']
['get_attr_pent_pair', 'get_attr_pent_pair', 'get_attr_type']
['get_attr_type']
['get_attr_type']
['get_attr_imm_disp', 'get_attr_length_immediate', 'get_attr_modrm', 'get_attr_pent_pair', 'get_attr_type']
['do_store_flag', 'validate_replace_rtx_1']
['get_exception_pointer']
['apply_args_size', 'emit_move_insn_1', 'find_base_value', 'num_sign_bit_copies', 'print_rtx', 'print_rtx']
['expand_builtin_va_arg']
['apply_args_size']
['print_rtx']
['apply_distributive_law', 'dump_flow_info']
['apply_distributive_law', 'dump_flow_info']
['print_rtx']
['apply_distributive_law', 'copy_blkmode_from_reg', 'memory_address']
['find_base_term']
['parse_number']
['get_frame_alias_set']
['get_frame_alias_set']
['new_alias_set']
['new_alias_set']
['get_frame_alias_set']
['get_frame_alias_set']
['get_func_hard_reg_initial_val']
['get_func_hard_reg_initial_val']
['get_func_hard_reg_initial_val']
['signed_or_unsigned_type', 'signed_or_unsigned_type']
['get_inner_reference', 'get_inner_reference']
['get_insn_name']
['plus_constant_wide']
['num_sign_bit_copies']
['get_last_value']
['record_value_for_reg']
['expand_function_end', 'find_base_value', 'mark_referenced_regs']
['combine_reversed_comparison_code', 'cse_end_of_basic_block']
['next_insn_in_loop']
['adjust_address_1', 'expand_field_assignment']
['adjust_address_1', 'expand_field_assignment']
['cse_end_of_basic_block']
['change_address_1', 'find_base_term', 'find_base_term', 'gen_binary', 'gen_binary', 'gen_lowpart_for_combine', 'make_memloc', 'next_insn_in_loop', 'offset_address', 'plus_constant_wide']
['find_regno_fusage']
['gen_lowpart_common']
['deallocate_reload_reg']
['deps_may_trap_p']
['emit_insns_after']
['expand_field_assignment']
['expand_field_assignment']
['find_placeholder']
['expand_field_assignment']
['prescan_loop']
['output_constructor', 'output_init_element']
['get_varargs_alias_set']
['get_varargs_alias_set']
['new_alias_set']
['new_alias_set']
['get_varargs_alias_set']
['get_varargs_alias_set']
['lookup_field']
['set_label_offsets']
['get_set_constructor_bits']
['set_page_table_entry']
['check_format_info_main']
['compute_transp', 'compute_transp', 'handle_rd_kill_set', 'handle_rd_kill_set']
['compute_transp', 'compute_transp', 'handle_rd_kill_set', 'handle_rd_kill_set']
['find_reloads_address_part', 'find_reloads_address_part']
['lookup_page_table_entry']
['ggc_mark_trees']
['ggc_mark_trees']
['lookup_page_table_entry']
['find_base_value', 'find_split_point', 'for_each_successor_phi', 'mark_used_regs', 'refers_to_regno_for_reload_p', 'restore_line_notes', 'sge_plus_constant']
['find_base_value', 'find_split_point', 'for_each_successor_phi', 'mark_used_regs', 'refers_to_regno_for_reload_p', 'restore_line_notes', 'sge_plus_constant']
['subst_stack_regs_pat']
['emit_input_reload_insns']
['adjust_address_1', 'consec_sets_giv', 'copy_loop_body', 'eliminate_regs_in_insn', 'find_equiv_reg', 'store_bit_field']
['delete_address_reloads_1', 'delete_address_reloads_1']
['expand_mult_add', 'memrefs_conflict_p', 'record_conflicts']
['compute_hash_table']
['force_nonfallthru_and_redirect', 'identify_call_return_value', 'mark_set_1', 'offsettable_address_p', 'record_giv']
['force_nonfallthru_and_redirect', 'identify_call_return_value', 'mark_set_1', 'record_giv']
['force_nonfallthru_and_redirect']
['adjust_address_1', 'adjust_address_1', 'force_nonfallthru_and_redirect', 'identify_call_return_value', 'mark_set_1', 'record_giv']
['compute_argument_addresses', 'decompose', 'force_nonfallthru_and_redirect', 'identify_call_return_value', 'mark_set_1', 'record_giv']
['identify_call_return_value']
['record_giv']
['force_nonfallthru_and_redirect']
['hard_reg_set_here_p']
['hash_expr_1']
['hash_expr_1']
['hash_expr_1']
['hash_rtx']
['hash_rtx']
['copy_insn_list', 'copy_loop_body', 'expand_decl']
['new_cselib_val']
['can_throw_external', 'compute_hash_table', 'delete_insn', 'fixup_reorder_chain', 'mark_all_labels', 'reg_scan_mark_refs']
['reg_scan_mark_refs']
['hash_scan_set', 'record_giv']
['hash_scan_set', 'identify_call_return_value', 'noce_process_if_block', 'record_giv']
['record_giv']
['have_add2_insn']
['have_add2_insn']
['have_add2_insn']
['ht_create']
['ht_create']
['ht_create']
['ht_create']
['ht_create']
['ht_create']
['find_reloads_address_1', 'fixup_var_refs_1', 'move_movables', 'simplify_plus_minus', 'store_bit_field']
['simplify_relational_operation']
['adjust_address_1', 'adjust_address_1', 'check_dbra_loop', 'consec_sets_giv', 'copy_loop_body', 'copy_rtx_and_substitute', 'cselib_record_sets', 'delete_output_reload', 'eliminate_regs_in_insn', 'eliminate_regs_in_insn', 'find_equiv_reg', 'fixup_var_refs_1', 'fold_rtx', 'fold_rtx', 'force_to_mode', 'gen_reload', 'loop_iterations', 'loop_iterations', 'loop_iterations', 'maybe_eliminate_biv_1', 'move_movables', 'simplify_giv_expr', 'skip_copy_to_return_value', 'squeeze_notes', 'store_bit_field']
['copy_rtx_and_substitute', 'copy_rtx_and_substitute', 'copy_rtx_and_substitute', 'fold_rtx', 'move_movables']
['find_single_use_1', 'find_split_point', 'subst_stack_regs_pat']
['loop_iterations']
['find_split_point', 'general_induction_var']
['find_reloads_address_1', 'find_split_point', 'find_split_point', 'refers_to_regno_for_reload_p', 'simplify_relational_operation', 'subst_asm_stack_regs']
['ix86_split_to_parts']
['simplify_plus_minus']
['immed_double_const']
['immed_real_const']
['immed_real_const']
['immed_real_const_1']
['immediate_operand']
['move_deaths']
['subst_asm_stack_regs']
['init_alias_analysis', 'ix86_emit_restore_regs_using_mov', 'ix86_emit_save_regs_using_mov']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'dw2_asm_output_encoded_addr_rtx', 'emit_block_move', 'emit_push_insn', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'expand_builtin_prefetch', 'find_best_addr', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_expand_prologue', 'ix86_force_to_memory', 'ix86_force_to_memory', 'ix86_va_arg', 'legitimize_pic_address', 'legitimize_pic_address', 'load_pic_register', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'round_trampoline_addr', 'round_trampoline_addr']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'dw2_asm_output_encoded_addr_rtx', 'emit_block_move', 'emit_push_insn', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'expand_builtin_prefetch', 'find_best_addr', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_expand_prologue', 'ix86_force_to_memory', 'ix86_force_to_memory', 'ix86_va_arg', 'legitimize_pic_address', 'legitimize_pic_address', 'load_pic_register', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'round_trampoline_addr', 'round_trampoline_addr']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'dw2_asm_output_encoded_addr_rtx', 'emit_block_move', 'emit_push_insn', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'expand_builtin_prefetch', 'find_best_addr', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_expand_prologue', 'ix86_force_to_memory', 'ix86_force_to_memory', 'ix86_va_arg', 'legitimize_pic_address', 'legitimize_pic_address', 'load_pic_register', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'round_trampoline_addr', 'round_trampoline_addr']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'dw2_asm_output_encoded_addr_rtx', 'emit_block_move', 'emit_push_insn', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'expand_builtin_prefetch', 'find_best_addr', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_expand_prologue', 'ix86_force_to_memory', 'ix86_force_to_memory', 'ix86_va_arg', 'legitimize_pic_address', 'legitimize_pic_address', 'load_pic_register', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'round_trampoline_addr', 'round_trampoline_addr']
['put_condition_code']
['declare_weak', 'print_operand_address', 'print_operand_address']
['init_cumulative_args']
['init_cumulative_args']
['init_deps']
['init_deps']
['init_deps']
['init_deps']
['alloc_aux_for_blocks']
['alloc_aux_for_blocks']
['insn_dead_p']
['init_propagate_block_info', 'insn_dead_p']
['check_asm_stack_operands', 'cpp_parse_escape', 'expand_function_end']
['expand_function_end']
['convert_regs_1', 'expand_goto']
['set_sched_group_p']
['squeeze_notes']
['insn_dead_p']
['change_address_1', 'mark_set_1']
['preprocess_constraints']
['gen_binary']
['init_cumulative_args']
['initial_reg_note_copy']
['initializer_constant_valid_p']
['convert_to_pointer', 'layout_type', 'push_init_level', 'signed_or_unsigned_type', 'signed_or_unsigned_type', 'std_expand_builtin_va_arg']
['store_parm_decls']
['store_parm_decls']
['rtx_cost']
['initializer_constant_valid_p', 'ix86_function_value', 'standard_80387_constant_p']
['copy_insn_notes', 'force_to_mode']
['adjust_address_1', 'adjust_address_1', 'eliminate_regs_in_insn', 'emit_libcall_block', 'emit_libcall_block', 'expand_field_assignment', 'expand_function_end', 'extract_bit_field', 'force_to_mode', 'legitimize_pic_address', 'make_extraction', 'mark_used_regs', 'noce_process_if_block', 'plus_constant_wide', 'record_value_for_reg', 'sched_analyze_2', 'sched_analyze_2', 'simplify_subreg', 'subst', 'unroll_loop']
['check_dbra_loop', 'copy_insn_notes', 'emit_libcall_block', 'expand_decl', 'fold_rtx', 'protect_from_queue', 'sched_analyze_2', 'trampoline_address']
['mark_used_regs_combine', 'sched_analyze_1']
['expand_compound_operation']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['insert_one_insn']
['make_new_qty']
['make_new_qty']
['cse_end_of_basic_block', 'cse_end_of_basic_block']
['make_regs_eqv']
['make_regs_eqv']
['insert_restore']
['insert_restore', 'insert_save']
['insert_restore', 'insert_save']
['insn_default_length']
['apply_distributive_law', 'check_dbra_loop', 'express_from', 'noce_get_condition']
['insn_dead_p']
['apply_distributive_law', 'emit_libcall_block', 'find_reloads', 'gen_reload', 'gen_reload', 'subst_constants']
['init_propagate_block_info', 'insn_dead_p']
['insn_dead_p']
['insn_dead_p']
['express_from']
['express_from']
['insn_dead_p']
['insn_dead_p']
['insn_dead_p']
['set_sched_group_p']
['insn_default_length']
['insn_default_length', 'insn_default_length', 'insn_default_length']
['insn_default_length', 'insn_default_length', 'insn_default_length']
['insn_default_length', 'insn_default_length', 'insn_default_length']
['memrefs_conflict_p']
['check_dbra_loop', 'copy_rtx_and_substitute']
['eliminate_regs']
['subst']
['print_rtx', 'simplify_giv_expr', 'subst_constants']
['move_movables']
['fixup_var_refs_1']
['check_dbra_loop', 'expand_decl', 'find_reloads_address_1', 'fixup_var_refs_1', 'fixup_var_refs_1', 'move_movables', 'simplify_plus_minus', 'store_bit_field', 'subst_stack_regs_pat']
['expand_inline_function']
['copy_rtx_and_substitute']
['insn_default_length']
['constrain_operands']
['emit_library_call_value_1']
['df_bb_reg_info_compute']
['expand_goto', 'noce_process_if_block']
['hash_scan_set', 'identify_call_return_value', 'noce_process_if_block', 'record_giv']
['noce_process_if_block', 'noce_process_if_block']
['noce_process_if_block', 'noce_process_if_block']
['decompose']
['convert_regs_1']
['identify_call_return_value']
['compute_insns_for_mem', 'ix86_split_to_parts', 'load_mems', 'plus_constant_wide', 'record_value_for_reg', 'try_to_integrate']
['cselib_record_sets']
['adjust_address_1', 'expand_field_assignment']
['convert_regs_1']
['fixup_memory_subreg']
['fixup_memory_subreg']
['convert_regs_1']
['legitimize_pic_address']
['sched_analyze_2']
['emit_libcall_block', 'legitimize_pic_address', 'make_extraction', 'noce_process_if_block', 'record_value_for_reg', 'subst_constants']
['subst']
['cse_insn', 'fixup_var_refs_1', 'move_deaths', 'subst_stack_regs_pat']
['instantiate_virtual_regs_1']
['cselib_record_sets']
['instantiate_virtual_regs_1']
['instantiate_virtual_regs_1']
['cse_set_around_loop']
['merge_blocks_nomove', 'queue_to_ready', 'restore_line_notes']
['convert_regs_1']
['apply_distributive_law']
['apply_distributive_law']
['copy_node', 'make_node', 'make_tree_vec']
['int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p']
['int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p']
['int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p']
['int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p']
['int_mode_for_mode', 'ix86_libcall_value']
['internal_error']
['pedwarn_c99']
['immed_real_const']
['immed_real_const']
['invalidate']
['emit_reload_insns']
['dead_or_set_regno_p']
['ldst_entry']
['combine_regs']
['ix86_expand_setcc']
['express_from_1']
['check_asm_stack_operands', 'ix86_attr_length_address_default']
['ix86_attr_length_address_default']
['ix86_attr_length_immediate_default']
['split_2']
['ix86_attr_length_immediate_default']
['ix86_attr_length_immediate_default']
['ix86_cc_mode']
['init_alias_analysis', 'ix86_emit_restore_regs_using_mov', 'ix86_emit_save_regs_using_mov']
['ix86_emit_restore_regs_using_mov']
['ix86_emit_restore_regs_using_mov']
['ix86_emit_restore_regs_using_mov', 'ix86_emit_save_regs_using_mov']
['ix86_emit_restore_regs_using_mov', 'ix86_emit_save_regs_using_mov']
['init_alias_analysis', 'ix86_emit_restore_regs_using_mov', 'ix86_emit_save_regs_using_mov']
['ix86_expand_compare']
['ix86_expand_epilogue']
['ix86_expand_epilogue']
['ix86_expand_epilogue']
['ix86_expand_epilogue']
['ix86_expand_epilogue']
['ix86_expand_fp_movcc', 'ix86_expand_fp_movcc']
['ix86_expand_fp_movcc', 'ix86_expand_fp_movcc']
['ix86_expand_fp_movcc', 'ix86_expand_fp_movcc']
['ix86_expand_fp_movcc', 'ix86_expand_fp_movcc']
['ix86_expand_fp_movcc']
['ix86_expand_fp_movcc']
['ix86_expand_fp_movcc']
['ix86_expand_fp_movcc', 'ix86_expand_fp_movcc']
['ix86_expand_fp_movcc', 'ix86_expand_fp_movcc']
['ix86_expand_fp_movcc']
['ix86_expand_fp_movcc']
['ix86_expand_fp_movcc']
['ix86_expand_move']
['do_compare_rtx_and_jump', 'expand_unop', 'int_mode_for_mode', 'ix86_expand_move', 'ix86_libcall_value', 'nonzero_bits', 'simplify_binary_operation', 'simplify_ternary_operation', 'simplify_unary_operation']
['fix_lexical_addr', 'ix86_emit_save_regs', 'ix86_expand_epilogue']
['make_decl_rtl']
['ix86_expand_setcc']
['ix86_expand_setcc']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'dw2_asm_output_encoded_addr_rtx', 'emit_block_move', 'emit_push_insn', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'expand_builtin_prefetch', 'find_best_addr', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_expand_prologue', 'ix86_force_to_memory', 'ix86_force_to_memory', 'ix86_va_arg', 'legitimize_pic_address', 'legitimize_pic_address', 'load_pic_register', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'round_trampoline_addr', 'round_trampoline_addr']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'dw2_asm_output_encoded_addr_rtx', 'emit_block_move', 'emit_push_insn', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'expand_builtin_prefetch', 'find_best_addr', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_expand_prologue', 'ix86_force_to_memory', 'ix86_force_to_memory', 'ix86_va_arg', 'legitimize_pic_address', 'legitimize_pic_address', 'load_pic_register', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'round_trampoline_addr', 'round_trampoline_addr']
['ix86_function_value']
['ix86_function_value', 'standard_80387_constant_p']
['ix86_function_value']
['ix86_hard_regno_mode_ok']
['int_mode_for_mode', 'ix86_libcall_value']
['find_base_term']
['expand_field_assignment']
['widen_operand']
['do_compare_rtx_and_jump', 'expand_field_assignment', 'nonzero_bits', 'prepare_cmp_insn', 'reversed_comparison_code_parts', 'rtx_cost']
['ix86_function_value', 'prepare_cmp_insn', 'standard_80387_constant_p']
['ix86_register_move_cost', 'regno_clobbered_p', 'set_value_regno']
['cselib_lookup', 'find_oldest_value_reg', 'ix86_register_move_cost', 'reg_fits_class_p']
['allocate_dynamic_stack_space']
['insert_restore']
['x86_field_alignment']
['int_vasprintf']
['convert_regs_1', 'convert_regs_1']
['convert_regs_1', 'convert_regs_1']
['init_cumulative_args']
['int_vasprintf']
['convert_regs_1', 'convert_regs_1']
['convert_regs_1', 'convert_regs_1']
['adjust_address_1', 'cselib_record_sets', 'gen_reload']
['ix86_split_long_move']
['plus_constant_wide']
['ix86_split_long_move']
['ix86_split_long_move']
['ix86_split_long_move']
['ix86_split_long_move']
['ix86_split_long_move']
['ix86_split_long_move']
['ix86_split_long_move']
['ix86_split_long_move']
['adjust_address_1', 'cselib_record_sets', 'gen_reload']
['ix86_split_long_move']
['ix86_split_long_move']
['check_asm_stack_operands', 'ix86_attr_length_address_default']
['ix86_split_to_parts']
['ix86_split_long_move']
['record_giv']
['find_dummy_reload', 'memrefs_conflict_p', 'protect_from_queue', 'store_expr']
['simplify_subreg']
['ix86_va_start']
['expand_call', 'ix86_va_start']
['ix86_va_start']
['ix86_va_start']
['ix86_va_start']
['ix86_va_start']
['ix86_va_start']
['ix86_zero_extend_to_Pmode']
['ix86_zero_extend_to_Pmode']
['if_then_else_cond', 'if_then_else_cond', 'if_then_else_cond', 'if_then_else_cond', 'reload_cse_simplify_set']
['if_then_else_cond', 'if_then_else_cond', 'kill_value', 'known_cond', 'replace_rtx', 'simplify_rtx', 'true_regnum']
['kill_value']
['peep2_find_free_register']
['find_split_point']
['num_sign_bit_copies', 'simplify_comparison']
['known_cond']
['known_cond']
['if_then_else_cond', 'if_then_else_cond', 'kill_value', 'known_cond', 'replace_rtx', 'simplify_rtx', 'true_regnum']
['if_then_else_cond', 'if_then_else_cond', 'known_cond', 'replace_rtx', 'simplify_rtx']
['final_giv_value', 'known_cond', 'known_cond']
['known_cond']
['final_giv_value', 'known_cond', 'known_cond']
['known_cond']
['layout_decl']
['copy_loop_body', 'expand_function_end', 'fixup_var_refs_insn']
['apply_distributive_law', 'copy_eh_notes', 'cse_insn', 'cse_insn', 'insert', 'mark_set_1']
['extract_bit_field', 'mark_set_1']
['find_reloads', 'record_giv', 'store_bit_field', 'subst']
['check_dbra_loop', 'copy_insn_list', 'copy_loop_body', 'eliminate_regs_in_insn', 'emit_libcall_block', 'emit_no_conflict_block', 'expand_decl', 'expand_goto', 'force_nonfallthru_and_redirect', 'record_value_for_reg']
['check_dbra_loop', 'copy_insn_list', 'cse_end_of_basic_block', 'eliminate_regs_in_insn', 'emit_insns_after', 'find_dummy_reload', 'find_split_point', 'fold_rtx', 'init_alias_analysis', 'legitimize_pic_address', 'rm_line_notes', 'rm_other_notes', 'simplify_subreg']
['gen_split_1010', 'probe_stack_range']
['compute_argument_addresses', 'make_decl_rtl']
['expand_builtin_setjmp_setup']
['expand_builtin_setjmp_setup']
['check_ext_dependent_givs']
['ix86_GOT_alias_set']
['ix86_GOT_alias_set']
['ix86_GOT_alias_set']
['expand_builtin_memset']
['ix86_va_arg']
['force_nonfallthru_and_redirect']
['find_oldest_value_reg', 'gen_split_1010']
['compute_argument_addresses']
['lex_number']
['lex_number']
['lex_number', 'lex_number']
['lex_number', 'lex_number']
['lex_number']
['lex_number', 'lex_number', 'lex_number']
['maybe_read_dollar_number']
['lex_number', 'maybe_read_dollar_number']
['print_operand']
['lex_number', 'lex_number', 'print_exp', 'print_operand', 'print_operand']
['convert_to_pointer', 'layout_type', 'push_init_level', 'signed_or_unsigned_type']
['emit_input_reload_insns']
['decompose']
['ix86_expand_epilogue', 'loop_regs_scan']
['force_nonfallthru_and_redirect']
['choose_reload_regs_init']
['choose_reload_regs_init']
['bitmap_element_allocate', 'real_value_from_int_cst']
['verify_flow_info']
['delete_output_reload']
['decompose', 'emit_no_conflict_block', 'emit_no_conflict_block', 'emit_no_conflict_block', 'sge_plus_constant']
['decompose', 'emit_no_conflict_block', 'emit_no_conflict_block', 'emit_no_conflict_block', 'sge_plus_constant']
['emit_insns_after']
['emit_group_store']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'dw2_asm_output_encoded_addr_rtx', 'emit_block_move', 'emit_push_insn', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'expand_builtin_prefetch', 'find_best_addr', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_expand_prologue', 'ix86_force_to_memory', 'ix86_force_to_memory', 'ix86_va_arg', 'legitimize_pic_address', 'legitimize_pic_address', 'load_pic_register', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'round_trampoline_addr', 'round_trampoline_addr']
['loc_descriptor_from_tree']
['apply_distributive_law', 'emit_libcall_block', 'gen_reload', 'record_giv', 'sched_analyze_2', 'subst_constants']
['emit_library_call_value_1']
['check_asm_stack_operands', 'expand_decl', 'store_expr']
['delete_output_reload', 'maybe_eliminate_biv_1']
['adjust_address_1', 'adjust_address_1', 'check_dbra_loop', 'consec_sets_giv', 'copy_loop_body', 'copy_loop_body', 'copy_loop_body', 'copy_rtx_and_substitute', 'cselib_record_sets', 'delete_output_reload', 'eliminate_regs', 'eliminate_regs_in_insn', 'find_base_term', 'find_equiv_reg', 'find_equiv_reg', 'find_reloads', 'fold_rtx', 'gen_reload', 'insert', 'maybe_eliminate_biv_1', 'memrefs_conflict_p', 'memrefs_conflict_p', 'move_movables', 'move_movables', 'move_movables', 'record_giv', 'restore_line_notes', 'rm_line_notes', 'rm_other_notes', 'simplify_giv_expr', 'store_bit_field', 'store_bit_field', 'store_bit_field', 'subst', 'subst', 'subst', 'subst_asm_stack_regs', 'visit_expression']
['move_movables']
['lookup_cfa']
['lookup_field']
['lookup_field']
['lookup_field']
['lookup_field']
['lookup_filename']
['lookup_filename']
['lookup_filename']
['lookup_filename']
['lookup_filename']
['loop_giv_dump']
['fixup_var_refs_1', 'loop_iterations']
['apply_distributive_law', 'change_address_1', 'check_dbra_loop', 'compute_forward_dependences', 'eliminate_regs', 'eliminate_regs', 'eliminate_regs_in_insn', 'expand_inline_function', 'express_from', 'extract_bit_field', 'fixup_var_refs_1', 'fold_rtx', 'instantiate_virtual_regs_1', 'load_mems', 'loop_iterations', 'mark_set_1', 'noce_get_condition', 'sched_analyze_2', 'simplify_comparison', 'simplify_comparison', 'simplify_giv_expr', 'simplify_giv_expr']
['fold_rtx']
['emit_libcall_block', 'legitimize_pic_address', 'make_extraction', 'merge_blocks_nomove', 'noce_process_if_block', 'queue_to_ready']
['copy_loop_body', 'copy_loop_body', 'expand_function_end', 'fixup_var_refs_insn', 'fixup_var_refs_insn', 'fold_rtx', 'fold_rtx', 'loop_iterations', 'memrefs_conflict_p', 'print_rtx', 'protect_from_queue', 'protect_from_queue', 'record_operand_costs', 'simplify_comparison', 'simplify_giv_expr', 'store_expr', 'subst_constants', 'swap_rtx_condition', 'unroll_loop']
['compute_argument_addresses', 'cse_insn', 'delete_output_reload', 'emit_library_call_value_1', 'expand_decl', 'extract_bit_field', 'fold_rtx', 'fold_rtx', 'hash_scan_set', 'insert', 'instantiate_virtual_regs_1', 'loop_iterations', 'loop_iterations', 'noce_try_abs', 'protect_from_queue', 'record_operand_costs', 'simplify_comparison', 'simplify_set', 'subst', 'subst_asm_stack_regs', 'swap_rtx_condition', 'unroll_loop']
['check_dbra_loop', 'constrain_operands', 'constrain_operands', 'eliminate_regs_in_insn', 'fixup_var_refs_insn', 'nonzero_bits', 'rename_block']
['apply_distributive_law', 'check_dbra_loop', 'express_from', 'find_base_value', 'noce_get_alt_condition', 'noce_get_condition', 'refers_to_regno_for_reload_p', 'restore_line_notes', 'sched_analyze_2', 'sge_plus_constant', 'simplify_if_then_else', 'unroll_loop']
['subst_stack_regs_pat']
['gen_add_mult', 'iv_add_mult_cost']
['gen_add_mult', 'iv_add_mult_cost']
['gen_add_mult', 'iv_add_mult_cost']
['find_base_value', 'refers_to_regno_for_reload_p', 'restore_line_notes', 'sched_analyze_2', 'sge_plus_constant', 'simplify_if_then_else']
['adjust_address_1', 'cselib_record_sets', 'emit_libcall_block', 'expand_field_assignment', 'find_dummy_reload', 'force_nonfallthru_and_redirect', 'gen_reload', 'legitimize_pic_address', 'mark_used_regs', 'memrefs_conflict_p', 'record_value_for_reg', 'refers_to_regno_for_reload_p', 'sched_analyze_2']
['combine_simplify_rtx', 'cse_end_of_basic_block', 'emit_group_load', 'expand_call', 'extract_bit_field', 'find_base_value', 'find_single_use_1', 'find_split_point', 'find_splittable_givs', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'make_memloc', 'maybe_eliminate_biv_1', 'maybe_eliminate_biv_1', 'next_insn_in_loop', 'simplify_if_then_else', 'simplify_relational_operation', 'simplify_set', 'store_split_bit_field', 'swap_rtx_condition']
['record_value_for_reg']
['copy_insn_list', 'copy_loop_body', 'expand_decl']
['cse_insn', 'memrefs_conflict_p', 'move_deaths', 'trampoline_address']
['expand_goto', 'expand_inline_function']
['change_address_1', 'compute_forward_dependences', 'compute_forward_dependences', 'deps_may_trap_p', 'find_base_term', 'protect_from_queue', 'record_operand_costs', 'restore_line_notes', 'rm_line_notes', 'rm_other_notes', 'simplify_set', 'skip_copy_to_return_value', 'skip_copy_to_return_value', 'squeeze_notes', 'swap_rtx_condition']
['loop_regs_scan']
['simplify_set']
['copy_insn_list', 'legitimize_pic_address']
['copy_insn_list', 'copy_loop_body', 'expand_decl']
['decompose', 'subst_constants']
['check_asm_stack_operands', 'check_dbra_loop', 'check_dbra_loop', 'compute_forward_dependences', 'copy_insn_list', 'copy_rtx_and_substitute', 'copy_rtx_and_substitute', 'copy_rtx_and_substitute', 'cse_insn', 'expand_decl', 'expand_inline_function', 'find_reloads_address_1', 'find_split_point', 'fixup_var_refs_1', 'fixup_var_refs_1', 'fold_rtx', 'load_mems', 'loop_iterations', 'move_movables', 'move_movables', 'print_rtx', 'simplify_giv_expr', 'simplify_plus_minus', 'skip_copy_to_return_value', 'skip_copy_to_return_value', 'squeeze_notes', 'store_bit_field', 'store_expr', 'subst_constants']
['subst_stack_regs_pat']
['emit_input_reload_insns', 'loop_iterations', 'subst_stack_regs_pat']
['make_memloc', 'make_memloc']
['make_decl_rtl']
['make_decl_rtl']
['make_decl_rtl']
['choose_hard_reg_mode']
['adjust_address_1', 'copy_insn_notes', 'cselib_record_sets', 'expand_field_assignment', 'gen_reload', 'protect_from_queue', 'refers_to_regno_for_reload_p']
['copy_loop_body', 'force_nonfallthru_and_redirect', 'get_attr_prefix_0f', 'init_propagate_block_info', 'insn_dead_p', 'record_giv', 'refers_to_regno_for_reload_p', 'simplify_if_then_else', 'simplify_relational_operation']
['force_to_mode']
['copy_insn_list', 'copy_loop_body', 'expand_decl']
['make_extraction']
['combine_simplify_rtx', 'expand_call', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'make_memloc', 'next_insn_in_loop', 'simplify_if_then_else', 'simplify_relational_operation']
['make_memloc', 'make_memloc']
['make_memloc', 'make_memloc']
['make_memloc']
['make_memloc']
['gen_binary', 'gen_binary', 'gen_lowpart_for_combine', 'make_memloc', 'next_insn_in_loop']
['copy_node', 'make_node']
['make_preds_opaque']
['make_tree']
['expand_call', 'ix86_va_start', 'ix86_va_start', 'ix86_va_start', 'ix86_va_start', 'make_tree', 'std_expand_builtin_va_start']
['make_tree_vec']
['mark_all_labels']
['mark_all_labels']
['mark_all_labels', 'offset_address']
['mark_all_labels']
['mark_all_labels']
['mark_all_labels']
['can_throw_external', 'compute_hash_table', 'delete_insn', 'fixup_reorder_chain', 'mark_all_labels', 'reg_scan_mark_refs']
['copy_eh_notes', 'copy_eh_notes']
['copy_eh_notes', 'copy_eh_notes']
['mark_effect', 'mark_reg_conflicts', 'mark_reg_death']
['mark_effect']
['reload_reg_free_for_value_p']
['choose_hard_reg_mode']
['expand_mult_highpart']
['classify_argument']
['classify_argument']
['convert_regs_exit', 'count_pseudo', 'mark_reg']
['apply_args_size']
['expand_mult_highpart', 'find_reloads_address_part', 'find_reloads_address_part']
['strength_reduce', 'strength_reduce']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['mark_reload_reg_in_use']
['insn_dead_p']
['cse_insn']
['insn_dead_p']
['combine_simplify_rtx', 'combine_simplify_rtx', 'df_ref_record', 'memrefs_conflict_p', 'subst_constants', 'unroll_loop']
['adjust_address_1', 'expand_function_end', 'expand_inline_function', 'extract_bit_field', 'find_split_point', 'gen_reload', 'loop_iterations', 'move_movables', 'noce_get_alt_condition', 'record_value_for_reg', 'sched_analyze_2', 'subst']
['compute_forward_dependences', 'cse_insn', 'gen_reload', 'mark_all_labels', 'subst_constants']
['find_split_point']
['store_expr']
['eliminate_regs', 'emit_no_conflict_block', 'expand_inline_function', 'find_equiv_reg', 'find_reloads_address_1', 'fold_rtx', 'init_alias_analysis', 'move_movables', 'move_movables', 'sched_analyze_2', 'scope_to_insns_initialize', 'simplify_comparison', 'simplify_giv_expr', 'store_bit_field', 'subst', 'visit_expression']
['find_split_point', 'simplify_set']
['mark_set_regs']
['mark_set_regs']
['mark_used_reg']
['adjust_address_1']
['apply_distributive_law', 'check_dbra_loop', 'express_from', 'find_split_point', 'for_each_successor_phi', 'general_induction_var', 'noce_get_condition', 'refers_to_regno_for_reload_p', 'refers_to_regno_for_reload_p']
['check_dbra_loop', 'convert_regs_1', 'expand_field_assignment', 'make_extraction', 'make_extraction']
['cse_insn', 'cse_insn', 'expand_field_assignment', 'find_dummy_reload']
['expand_decl', 'express_from_1', 'find_single_use_1', 'find_split_point', 'mark_used_regs', 'refers_to_regno_for_reload_p', 'set_label_offsets']
['init_alias_analysis']
['ix86_split_long_move', 'mark_used_regs']
['store_split_bit_field']
['record_value_for_reg']
['mark_used_regs']
['mark_used_regs']
['load_mems', 'mark_set_1', 'record_giv', 'record_giv']
['insert_one_insn']
['expand_compound_operation']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['may_trap_p']
['may_trap_p']
['may_trap_p']
['simplify_unary_operation']
['put_condition_code']
['combine_givs', 'combine_givs', 'maybe_eliminate_biv_1', 'maybe_eliminate_biv_1']
['combine_givs', 'combine_givs', 'maybe_eliminate_biv_1', 'maybe_eliminate_biv_1']
['maybe_eliminate_biv_1', 'maybe_eliminate_biv_1']
['maybe_eliminate_biv_1', 'maybe_eliminate_biv_1']
['maybe_eliminate_biv_1']
['copy_insn_list', 'copy_loop_body', 'expand_decl']
['maybe_eliminate_biv_1']
['biv_total_increment', 'biv_total_increment', 'find_splittable_regs', 'find_splittable_regs']
['biv_total_increment', 'biv_total_increment', 'find_splittable_regs', 'find_splittable_regs']
['subst_constants']
['check_dbra_loop', 'fixup_var_refs_insn']
['combine_simplify_rtx', 'cse_end_of_basic_block', 'eliminate_regs_in_insn', 'expand_inline_function', 'fixup_reorder_chain', 'get_attr_prefix_0f', 'get_attr_type', 'verify_flow_info', 'visit_expression']
['lex_number']
['maybe_read_dollar_number']
['maybe_read_dollar_number']
['fold_rtx']
['memory_address']
['emit_group_store']
['get_attr_prefix_0f', 'get_attr_prefix_0f']
['simplify_relational_operation']
['sge_plus_constant']
['simplify_relational_operation']
['simplify_relational_operation']
['compare_constant_1']
['delete_insn']
['mem_loc_descriptor']
['find_base_value', 'restore_line_notes', 'sge_plus_constant']
['cse_insn', 'emit_libcall_block', 'expand_goto', 'force_nonfallthru_and_redirect', 'mark_used_regs', 'memrefs_conflict_p', 'move_movables', 'protect_from_queue', 'sched_analyze_2']
['unroll_loop']
['cse_set_around_loop', 'noce_try_abs']
['store_expr']
['store_expr']
['plus_constant_wide']
['noce_try_abs', 'squeeze_notes']
['emit_group_load']
['memory_address']
['memory_address']
['apply_distributive_law']
['copy_insn_list', 'legitimize_pic_address']
['cse_insn', 'cse_insn', 'find_dummy_reload', 'memrefs_conflict_p', 'protect_from_queue']
['mark_referenced_regs']
['expand_goto']
['init_propagate_block_info', 'insn_dead_p']
['memrefs_conflict_p']
['mention_regs']
['make_tree_vec']
['fixup_var_refs_1', 'fold_rtx', 'make_extraction', 'store_expr']
['ix86_split_long_move', 'protect_from_queue', 'subst']
['merge_blocks_nomove']
['rm_line_notes', 'rm_other_notes']
['merge_blocks_nomove']
['expunge_block_nocompact', 'merge_blocks_nomove']
['scope_to_insns_initialize']
['squeeze_notes', 'squeeze_notes']
['save_line_notes']
['merge_blocks_nomove']
['rm_line_notes', 'rm_other_notes']
['memrefs_conflict_p', 'queue_to_ready']
['rm_line_notes', 'rm_line_notes', 'rm_other_notes', 'rm_other_notes', 'squeeze_notes', 'squeeze_notes']
['rm_line_notes', 'rm_line_notes', 'rm_other_notes', 'rm_other_notes', 'squeeze_notes', 'squeeze_notes']
['declare_weak']
['bss_section', 'text_section']
['bss_section', 'text_section']
['move_block_to_reg']
['expand_complex_abs', 'expand_increment', 'expand_twoval_binop', 'expand_unop']
['consec_sets_giv', 'copy_rtx_and_substitute', 'eliminate_regs_in_insn', 'emit_input_reload_insns', 'expand_decl', 'expand_function_end', 'find_single_use_1', 'make_extraction', 'mark_referenced_regs', 'schedule_block', 'subst_constants', 'visit_expression']
['fixup_var_refs_insn', 'subst_asm_stack_regs', 'subst_asm_stack_regs']
['copy_loop_body', 'delete_output_reload', 'find_dummy_reload', 'legitimize_pic_address', 'maybe_eliminate_biv_1', 'move_movables', 'refers_to_regno_for_reload_p', 'visit_expression']
['move_deaths']
['check_dbra_loop']
['can_combine_p', 'df_bb_reg_info_compute', 'fixup_var_refs_insn', 'insert', 'ix86_split_long_move', 'subst_constants']
['can_combine_p']
['find_reloads_address_part', 'move_deaths', 'offsettable_address_p']
['can_combine_p', 'can_combine_p']
['load_mems', 'mark_set_1', 'record_giv', 'record_giv']
['emit_group_load', 'load_mems']
['emit_group_load', 'noce_process_if_block', 'swap_rtx_condition']
['apply_distributive_law', 'copy_insn_list', 'simplify_relational_operation']
['merge_blocks_nomove']
['adjust_address_1', 'cselib_record_sets', 'gen_reload']
['subst_stack_regs_pat']
['fold_rtx', 'move_deaths', 'record_value_for_reg', 'simplify_relational_operation', 'simplify_relational_operation', 'visit_expression']
['compute_forward_dependences']
['compute_forward_dependences']
['find_base_term']
['find_base_term']
['find_dummy_reload']
['get_true_reg']
['change_address_1', 'change_address_1']
['emit_insns_after', 'scope_to_insns_initialize']
['mtherr']
['named_section_flags']
['named_section_flags']
['new_alias_set']
['new_cselib_val']
['noce_emit_cmove']
['noce_emit_cmove']
['noce_emit_cmove']
['noce_emit_cmove']
['find_reloads_address', 'noce_emit_cmove', 'replace_rtx', 'replace_rtx', 'write_dependence_p']
['noce_emit_store_flag']
['hash_scan_set']
['express_from_1', 'find_split_point']
['emit_library_call_value_1']
['eliminate_regs', 'extract_bit_field', 'instantiate_virtual_regs_1', 'mark_set_1', 'sched_analyze_2']
['delete_output_reload', 'emit_library_call_value_1', 'expand_decl', 'instantiate_virtual_regs_1', 'subst']
['cse_end_of_basic_block', 'eliminate_regs_in_insn', 'find_equiv_reg', 'subst', 'subst_asm_stack_regs', 'subst_constants']
['check_dbra_loop', 'check_dbra_loop', 'convert_regs_1', 'cse_insn', 'eliminate_regs', 'eliminate_regs_in_insn', 'emit_insns_after', 'emit_libcall_block', 'emit_libcall_block', 'emit_no_conflict_block', 'expand_goto', 'expand_inline_function', 'find_dummy_reload', 'find_reloads_address_1', 'find_single_use_1', 'find_split_point', 'fold_rtx', 'fold_rtx', 'force_nonfallthru_and_redirect', 'init_alias_analysis', 'instantiate_virtual_regs_1', 'legitimize_pic_address', 'mark_used_regs', 'memrefs_conflict_p', 'move_deaths', 'move_movables', 'move_movables', 'noce_get_alt_condition', 'noce_get_condition', 'record_value_for_reg', 'record_value_for_reg', 'refers_to_regno_for_reload_p', 'rm_line_notes', 'rm_other_notes', 'sched_analyze_2', 'sched_analyze_2', 'scope_to_insns_initialize', 'simplify_comparison', 'simplify_subreg', 'simplify_subreg', 'subst_stack_regs_pat', 'unroll_loop', 'unroll_loop', 'unroll_loop']
['adjust_address_1', 'expand_function_end', 'expand_inline_function', 'extract_bit_field', 'find_split_point', 'gen_reload', 'loop_iterations', 'move_movables', 'noce_get_alt_condition', 'record_value_for_reg', 'sched_analyze_2', 'subst']
['eliminate_regs']
['copy_loop_body', 'init_propagate_block_info', 'insn_dead_p', 'record_giv', 'simplify_relational_operation']
['noce_get_alt_condition', 'noce_get_condition', 'sched_analyze_2']
['noce_get_condition']
['noce_get_condition']
['noce_get_condition']
['expand_decl']
['adjust_address_1', 'adjust_address_1', 'compute_argument_addresses', 'express_from', 'find_reloads_address_part', 'insn_dead_p', 'insn_dead_p', 'protect_from_queue', 'simplify_relational_operation']
['merge_blocks_nomove', 'merge_blocks_nomove', 'merge_blocks_nomove']
['merge_blocks_nomove', 'merge_blocks_nomove', 'merge_blocks_nomove']
['merge_blocks_nomove', 'merge_blocks_nomove', 'merge_blocks_nomove']
['emit_move_insn_1']
['nonmemory_operand']
['eliminate_regs', 'expand_field_assignment', 'find_split_point', 'gen_reload', 'simplify_subreg', 'unroll_loop']
['check_dbra_loop', 'copy_loop_body', 'copy_rtx_and_substitute', 'eliminate_regs_in_insn', 'load_mems', 'move_movables']
['subst_asm_stack_regs']
['check_asm_stack_operands', 'check_dbra_loop', 'compute_forward_dependences', 'copy_rtx_and_substitute', 'copy_rtx_and_substitute', 'cse_end_of_basic_block', 'cse_insn', 'eliminate_regs', 'eliminate_regs_in_insn', 'eliminate_regs_in_insn', 'emit_library_call_value_1', 'expand_function_end', 'expand_inline_function', 'find_base_value', 'find_equiv_reg', 'find_equiv_reg', 'find_reloads_address_1', 'fixup_var_refs_1', 'fixup_var_refs_1', 'fixup_var_refs_1', 'move_movables', 'move_movables', 'move_movables', 'move_movables', 'noce_get_alt_condition', 'print_rtx', 'restore_line_notes', 'sge_plus_constant', 'simplify_comparison', 'simplify_giv_expr', 'simplify_giv_expr', 'simplify_plus_minus', 'skip_copy_to_return_value', 'store_bit_field', 'store_bit_field', 'subst', 'subst', 'subst_asm_stack_regs', 'subst_constants', 'subst_constants', 'visit_expression']
['adjust_address_1', 'adjust_address_1', 'check_dbra_loop', 'consec_sets_giv', 'copy_loop_body', 'copy_rtx_and_substitute', 'cselib_record_sets', 'delete_output_reload', 'eliminate_regs_in_insn', 'eliminate_regs_in_insn', 'find_equiv_reg', 'fixup_var_refs_1', 'fold_rtx', 'fold_rtx', 'force_to_mode', 'gen_reload', 'loop_iterations', 'loop_iterations', 'loop_iterations', 'maybe_eliminate_biv_1', 'move_movables', 'simplify_giv_expr', 'skip_copy_to_return_value', 'squeeze_notes', 'store_bit_field']
['eliminate_regs_in_insn', 'expand_function_end', 'expand_inline_function', 'extract_bit_field', 'find_reloads_address_1', 'loop_iterations', 'simplify_subreg']
['check_dbra_loop', 'combine_simplify_rtx', 'copy_insn_list', 'copy_loop_body', 'copy_loop_body', 'copy_rtx_and_substitute', 'eliminate_regs_in_insn', 'expand_decl', 'expand_inline_function', 'fixup_var_refs_1', 'fold_rtx', 'fold_rtx', 'force_to_mode', 'init_propagate_block_info', 'insn_dead_p', 'loop_iterations', 'loop_iterations', 'loop_iterations', 'loop_iterations', 'protect_from_queue', 'record_giv', 'record_operand_costs', 'simplify_comparison', 'simplify_giv_expr', 'simplify_relational_operation', 'skip_copy_to_return_value', 'squeeze_notes', 'subst', 'swap_rtx_condition', 'verify_flow_info']
['change_address_1', 'compute_forward_dependences', 'copy_loop_body', 'copy_loop_body', 'eliminate_regs_in_insn', 'expand_function_end', 'fixup_var_refs_1', 'fixup_var_refs_insn', 'fixup_var_refs_insn', 'fold_rtx', 'load_mems', 'loop_iterations', 'memrefs_conflict_p', 'print_rtx', 'protect_from_queue', 'simplify_comparison', 'simplify_giv_expr', 'simplify_giv_expr', 'store_expr', 'subst_constants']
['check_asm_stack_operands', 'check_dbra_loop', 'cse_end_of_basic_block', 'eliminate_regs_in_insn', 'eliminate_regs_in_insn', 'emit_library_call_value_1', 'expand_function_end', 'find_base_value', 'find_equiv_reg', 'find_equiv_reg', 'find_reloads_address_1', 'fixup_var_refs_1', 'fold_rtx', 'fold_rtx', 'fold_rtx', 'loop_iterations', 'move_movables', 'noce_get_alt_condition', 'protect_from_queue', 'record_operand_costs', 'restore_line_notes', 'sge_plus_constant', 'simplify_comparison', 'simplify_comparison', 'simplify_giv_expr', 'store_bit_field', 'subst', 'subst', 'subst_asm_stack_regs', 'subst_constants', 'swap_rtx_condition', 'unroll_loop', 'visit_expression']
['emit_move_insn_1', 'ix86_function_value', 'noce_operand_ok', 'nonzero_bits', 'num_sign_bit_copies', 'num_sign_bit_copies', 'reversed_comparison_code_parts', 'standard_80387_constant_p']
['nonzero_bits']
['simplify_logical']
['simplify_logical']
['nonzero_bits']
['noce_process_if_block']
['insn_dead_p']
['insn_dead_p']
['pop_init_level', 'process_init_element', 'push_init_level']
['insn_dead_p']
['insn_dead_p']
['num_sign_bit_copies', 'simplify_comparison']
['emit_move_insn_1', 'ix86_function_value', 'nonzero_bits', 'num_sign_bit_copies', 'standard_80387_constant_p']
['emit_cmp_and_jump_insn_1', 'num_sign_bit_copies']
['num_sign_bit_copies']
['combine_reversed_comparison_code', 'num_sign_bit_copies']
['combine_reversed_comparison_code']
['extend_value_for_giv', 'extend_value_for_giv']
['constrain_operands']
['num_sign_bit_copies']
['emit_move_insn_1']
['expand_mult_highpart']
['simplify_logical']
['expand_compound_operation']
['get_mem_attrs', 'ix86_split_to_parts', 'ix86_split_to_parts']
['mark_all_labels']
['for_each_successor_phi', 'refers_to_regno_for_reload_p']
['for_each_successor_phi', 'refers_to_regno_for_reload_p']
['offset_address']
['offset_address']
['offset_address']
['offset_address']
['offset_address']
['build1']
['force_nonfallthru_and_redirect', 'noce_process_if_block', 'offsettable_address_p', 'refers_to_regno_for_reload_p', 'refers_to_regno_for_reload_p']
['insert_set_in_table']
['copy_insn_notes']
['express_from', 'offsettable_address_p']
['squeeze_notes']
['change_address_1']
['copy_insn_notes', 'find_reloads_address_part', 'offsettable_address_p']
['compute_argument_addresses', 'insert', 'insert', 'insert', 'insert', 'insn_dead_p', 'insn_dead_p', 'store_split_bit_field']
['offsettable_address_p']
['offsettable_address_p']
['offsettable_address_p']
['offsettable_address_p']
['offsettable_nonstrict_memref_p']
['rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation']
['rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation']
['operands_match_p']
['operands_match_p', 'reg_overlap_mentioned_for_reload_p']
['reg_overlap_mentioned_for_reload_p', 'subreg_regno']
['find_dummy_reload']
['find_split_point', 'store_expr']
['compute_transp']
['skip_copy_to_return_value']
['handle_rd_kill_set']
['cse_end_of_basic_block', 'cse_end_of_basic_block']
['expand_function_end', 'init_propagate_block_info']
['merge_blocks_nomove']
['skip_copy_to_return_value']
['handle_rd_kill_set']
['emit_insns_after']
['compute_transp', 'compute_transp']
['compute_transp']
['handle_rd_kill_set']
['cse_end_of_basic_block', 'record_last_reg_set_info']
['init_propagate_block_info']
['recog', 'recog_19', 'recog_21']
['extract_insn', 'sge_plus_constant']
['insn_dead_p']
['merge_blocks_nomove', 'queue_to_ready', 'restore_line_notes']
['rename_block']
['handle_rd_kill_set']
['oprs_unchanged_p']
['oprs_unchanged_p', 'oprs_unchanged_p']
['oprs_unchanged_p', 'oprs_unchanged_p']
['oprs_unchanged_p', 'oprs_unchanged_p']
['oprs_unchanged_p', 'oprs_unchanged_p']
['rtx_cost']
['optimize_bit_field']
['div_and_round_double', 'div_and_round_double', 'ecleaz', 'mul_double', 'mul_double', 'print_exp', 'print_exp']
['div_and_round_double', 'div_and_round_double', 'ecleaz', 'mul_double', 'mul_double', 'print_exp', 'print_exp']
['optimize_inline_calls']
['layout_type']
['convert_to_pointer', 'layout_type']
['copy_insn_1']
['copy_insn_1']
['bss_section', 'cselib_finish']
['dwarf2out_frame_debug']
['recog_28', 'split_3', 'split_3']
['memrefs_conflict_p']
['bss_section']
['record_address_regs']
['make_preds_opaque']
['compute_pre_data']
['compute_pre_data']
['compute_pre_data']
['check_format_info_main', 'ggc_alloc_string', 'maybe_read_dollar_number']
['make_preds_opaque']
['allocate_reg_info']
['allocate_reg_info']
['allocate_reg_info']
['combine_simplify_rtx', 'expand_inline_function', 'verify_flow_info']
['find_equiv_reg', 'move_movables', 'simplify_giv_expr', 'store_bit_field', 'subst', 'visit_expression']
['eliminate_regs', 'expand_inline_function', 'expand_inline_function', 'simplify_subreg', 'store_expr', 'unroll_loop']
['adjust_address_1', 'adjust_address_1', 'check_dbra_loop', 'consec_sets_giv', 'copy_loop_body', 'copy_loop_body', 'copy_loop_body', 'copy_rtx_and_substitute', 'cselib_record_sets', 'delete_output_reload', 'eliminate_regs', 'eliminate_regs_in_insn', 'find_base_term', 'find_equiv_reg', 'find_equiv_reg', 'find_reloads', 'fold_rtx', 'gen_reload', 'insert', 'maybe_eliminate_biv_1', 'memrefs_conflict_p', 'memrefs_conflict_p', 'move_movables', 'move_movables', 'move_movables', 'record_giv', 'restore_line_notes', 'rm_line_notes', 'rm_other_notes', 'simplify_giv_expr', 'store_bit_field', 'store_bit_field', 'store_bit_field', 'subst', 'subst', 'subst', 'subst_asm_stack_regs', 'visit_expression']
['memrefs_conflict_p']
['eliminate_regs', 'unroll_loop']
['insert', 'subst_asm_stack_regs']
['fixup_var_refs_1']
['copy_rtx_and_substitute']
['output_addressed_constants']
['expand_builtin_expect_jump', 'output_addressed_constants']
['fixup_var_refs_insn', 'subst_asm_stack_regs', 'subst_asm_stack_regs']
['copy_loop_body', 'expand_function_end', 'fixup_var_refs_insn']
['check_dbra_loop', 'replace_regs', 'subst_asm_stack_regs']
['apply_distributive_law', 'change_address_1', 'check_dbra_loop', 'combine_simplify_rtx', 'compute_forward_dependences', 'copy_insn_list', 'copy_loop_body', 'cse_end_of_basic_block', 'delete_output_reload', 'deps_may_trap_p', 'eliminate_regs', 'eliminate_regs', 'eliminate_regs', 'eliminate_regs_in_insn', 'expand_function_end', 'expand_inline_function', 'expand_inline_function', 'express_from', 'extract_bit_field', 'find_equiv_reg', 'find_split_point', 'fixup_var_refs_insn', 'get_attr_type', 'instantiate_virtual_regs_1', 'make_extraction', 'mark_set_1', 'maybe_eliminate_biv_1', 'move_deaths', 'noce_get_condition', 'sched_analyze_2', 'simplify_giv_expr', 'simplify_subreg', 'subst', 'subst_asm_stack_regs', 'subst_constants', 'verify_flow_info']
['combine_simplify_rtx', 'compute_argument_addresses', 'copy_insn_list', 'copy_loop_body', 'cse_end_of_basic_block', 'cse_insn', 'delete_output_reload', 'delete_output_reload', 'deps_may_trap_p', 'eliminate_regs', 'eliminate_regs_in_insn', 'emit_library_call_value_1', 'expand_decl', 'expand_function_end', 'expand_inline_function', 'extract_bit_field', 'find_equiv_reg', 'find_split_point', 'fixup_var_refs_insn', 'hash_scan_set', 'insert', 'instantiate_virtual_regs_1', 'loop_iterations', 'make_extraction', 'maybe_eliminate_biv_1', 'move_deaths', 'noce_try_abs', 'simplify_set', 'subst', 'subst', 'subst_asm_stack_regs', 'subst_asm_stack_regs', 'subst_constants', 'verify_flow_info']
['record_operand_costs']
['swap_rtx_condition']
['lookup_filename']
['output_asm_insn']
['output_asm_insn']
['output_asm_insn']
['combine_reloads']
['combine_reloads']
['output_asm_insn', 'print_rtx']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'dw2_asm_output_encoded_addr_rtx', 'emit_block_move', 'emit_push_insn', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'expand_builtin_prefetch', 'find_best_addr', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_expand_prologue', 'ix86_force_to_memory', 'ix86_force_to_memory', 'ix86_va_arg', 'legitimize_pic_address', 'legitimize_pic_address', 'load_pic_register', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'round_trampoline_addr', 'round_trampoline_addr']
['output_constant']
['text_section']
['assemble_zeros']
['text_section']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'dw2_asm_output_encoded_addr_rtx', 'emit_block_move', 'emit_push_insn', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'expand_builtin_prefetch', 'find_best_addr', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_expand_prologue', 'ix86_force_to_memory', 'ix86_force_to_memory', 'ix86_va_arg', 'legitimize_pic_address', 'legitimize_pic_address', 'load_pic_register', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'round_trampoline_addr', 'round_trampoline_addr']
['output_constant_def']
['data_section']
['bss_section', 'text_section']
['bss_section', 'text_section']
['bss_section', 'text_section']
['data_section']
['data_section']
['bss_section', 'text_section']
['bss_section', 'text_section']
['force_operand']
['start_sequence']
['expand_builtin_expect_jump', 'output_addressed_constants']
['text_section']
['assemble_zeros']
['text_section']
['assemble_zeros']
['text_section']
['assemble_zeros']
['text_section']
['assemble_zeros']
['resolve_operand_name_1']
['dwarf2out_begin_prologue']
['etoasc']
['resolve_operand_name_1']
['etoasc']
['output_init_element']
['output_do_verbatim']
['output_do_verbatim']
['output_do_verbatim']
['output_do_verbatim']
['output_do_verbatim']
['output_do_verbatim']
['sorry']
['output_do_verbatim']
['output_do_verbatim']
['apply_args_size', 'size_int_type_wide']
['apply_args_size', 'size_int_type_wide']
['count_error']
['parse_input_constraint']
['parse_number']
['parse_number']
['parse_string', 'read_name_map']
['skip_line_comment']
['pedwarn_c99']
['def_cfa_1', 'def_cfa_1', 'def_cfa_1', 'def_cfa_1']
['def_cfa_1', 'def_cfa_1', 'def_cfa_1', 'def_cfa_1']
['pedwarn_c99']
['spelling_length']
['print_spelling', 'spelling_length']
['spelling_length']
['pedwarn_with_decl']
['pedwarn_c99']
['def_cfa_1', 'def_cfa_1', 'def_cfa_1', 'def_cfa_1']
['def_cfa_1', 'def_cfa_1', 'def_cfa_1', 'def_cfa_1']
['peep2_find_free_register', 'peep2_find_free_register']
['peep2_find_free_register', 'peep2_find_free_register']
['peep2_find_free_register', 'peep2_find_free_register']
['peep2_find_free_register', 'peep2_find_free_register']
['peep2_find_free_register']
['peep2_find_free_register']
['peep2_find_free_register']
['peep2_find_free_register']
['copy_value', 'cselib_lookup', 'find_oldest_value_reg', 'free_for_value_p', 'ix86_register_move_cost', 'kill_value', 'reg_fits_class_p']
['copy_value', 'cselib_invalidate_regno', 'find_free_reg', 'kill_value', 'mark_life', 'mark_reg_live_nc', 'peep2_find_free_register', 'peep2_find_free_register']
['expand_mult_highpart']
['classify_argument']
['classify_argument']
['peep2_next_insn']
['peep2_reg_dead_p', 'peep2_regno_dead_p']
['peep2_reg_dead_p']
['peep2_reg_dead_p', 'peep2_regno_dead_p']
['extract_insn', 'recog', 'split_insns']
['peephole2_1']
['peephole2_1', 'peephole2_1', 'peephole2_1', 'peephole2_1', 'peephole2_1', 'peephole2_1', 'peephole2_2']
['peephole2_1']
['peephole2_1']
['peephole2_1', 'peephole2_1', 'peephole2_1', 'peephole2_1', 'peephole2_1', 'peephole2_1', 'peephole2_2']
['peephole2_1']
['peephole2_1']
['peephole2_1', 'peephole2_1', 'peephole2_1', 'peephole2_1', 'peephole2_1', 'peephole2_1', 'peephole2_2']
['peephole2_1']
['peephole2_1']
['recog_18', 'recog_22', 'recog_27']
['recog_17', 'recog_20', 'recog_20', 'recog_28', 'recog_28']
['recog_19', 'recog_19']
['recog_17', 'recog_17', 'recog_17', 'recog_17', 'recog_18', 'recog_18', 'recog_20', 'recog_20', 'recog_20', 'recog_24', 'recog_25', 'recog_28', 'recog_4', 'recog_4', 'split_1', 'split_3', 'split_3', 'split_4']
['force_nonfallthru_and_redirect']
['force_nonfallthru_and_redirect']
['force_nonfallthru_and_redirect']
['force_nonfallthru_and_redirect']
['force_nonfallthru_and_redirect']
['extract_insn', 'recog', 'split_insns']
['extract_insn', 'recog', 'split_insns']
['extract_insn', 'recog', 'split_insns']
['extract_insn', 'recog', 'split_insns']
['peep2_find_free_register', 'peep2_find_free_register', 'peep2_reg_dead_p', 'peep2_regno_dead_p']
['peep2_find_free_register', 'peep2_find_free_register']
['peep2_find_free_register', 'peep2_find_free_register', 'peep2_reg_dead_p', 'peep2_regno_dead_p']
['peep2_find_free_register', 'peep2_find_free_register', 'peep2_reg_dead_p', 'peep2_regno_dead_p']
['peep2_next_insn']
['compute_transp', 'put_addressof_into_stack', 'put_addressof_into_stack']
['peep2_find_free_register', 'peep2_find_free_register', 'peep2_reg_dead_p', 'peep2_regno_dead_p']
['emit_libcall_block', 'legitimize_pic_address', 'make_extraction', 'noce_process_if_block']
['compute_insns_for_mem', 'memory_address', 'plus_constant_wide', 'record_value_for_reg']
['plus_constant_wide']
['plus_constant_wide']
['plus_constant_wide']
['plus_constant_wide']
['plus_constant_wide']
['plus_constant_wide', 'plus_constant_wide', 'plus_constant_wide']
['plus_constant_wide', 'plus_constant_wide', 'plus_constant_wide']
['plus_constant_wide', 'plus_constant_wide', 'plus_constant_wide']
['plus_constant_wide']
['offsettable_address_p']
['pop_init_level']
['pop_init_level']
['pop_init_level', 'process_init_element']
['spelling_length']
['push_init_level']
['emit_no_conflict_block', 'emit_no_conflict_block', 'emit_no_conflict_block']
['emit_no_conflict_block', 'emit_no_conflict_block', 'emit_no_conflict_block', 'simplify_plus_minus']
['pop_init_level', 'process_init_element']
['pop_init_level']
['pop_init_level']
['pop_init_level']
['pop_init_level']
['precondition_loop_p']
['precondition_loop_p']
['predict_insn_def']
['predict_insn_def']
['expunge_block_nocompact']
['expunge_block_nocompact', 'insert_expr_in_table']
['expunge_block_nocompact']
['insert']
['build1', 'insert_expr_in_table']
['check_asm_stack_operands', 'cleanup_subreg_operands', 'constrain_operands', 'constrain_operands', 'preprocess_constraints', 'record_operand_costs', 'record_operand_costs', 'record_operand_costs', 'reload_cse_simplify_operands', 'reload_cse_simplify_operands']
['reload_cse_simplify_operands']
['reload_cse_simplify_operands']
['preprocess_constraints']
['reload_cse_simplify_operands']
['preprocess_constraints']
['cleanup_subreg_operands', 'preprocess_constraints', 'record_operand_costs']
['div_and_round_double', 'mul_double']
['print_exp']
['print_operand', 'print_operand']
['insert_set_in_table']
['print_operand', 'print_operand']
['print_operand', 'print_operand']
['signed_or_unsigned_type']
['print_operand']
['make_nan']
['make_nan']
['make_nan']
['make_nan']
['binary_op_error']
['print_rtx', 'print_rtx', 'print_rtx']
['print_mem_expr']
['print_operand', 'print_operand']
['print_operand', 'print_operand']
['print_operand']
['print_operand']
['print_operand']
['build_complex_type', 'print_operand', 'print_operand']
['build_complex_type', 'print_operand', 'print_operand']
['print_operand_address']
['print_operand_address']
['print_operand_address']
['print_reg']
['check_asm_stack_operands', 'check_dbra_loop', 'emit_input_reload_insns', 'emit_insns_after', 'emit_libcall_block', 'emit_libcall_block', 'emit_no_conflict_block', 'emit_no_conflict_block', 'expand_decl', 'expand_goto', 'fold_rtx', 'record_value_for_reg', 'store_expr', 'visit_expression']
['move_movables']
['expand_decl', 'memrefs_conflict_p']
['emit_group_store', 'emit_group_store']
['emit_insns_after']
['rm_line_notes', 'rm_other_notes']
['compute_insns_for_mem']
['print_rtx', 'unsave_expr_now_r', 'verify_tree']
['compute_insns_for_mem']
['general_operand']
['general_operand']
['dwarf2out_frame_debug_expr', 'dwarf2out_frame_debug_expr']
['emit_group_load', 'emit_insns_after']
['noce_get_alt_condition', 'noce_get_condition', 'sched_analyze_2']
['safe_from_p']
['safe_from_p']
['safe_from_p']
['print_rtx']
['insert', 'subst_asm_stack_regs']
['print_rtx']
['print_rtx']
['print_rtx']
['print_rtx']
['print_rtx']
['print_rtx']
['print_rtx']
['print_rtx']
['print_rtx']
['maybe_read_dollar_number']
['etoasc']
['print_value']
['print_value']
['probe_stack_range']
['probe_stack_range']
['probe_stack_range']
['expand_builtin_prefetch']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'dw2_asm_output_encoded_addr_rtx', 'emit_block_move', 'emit_push_insn', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'expand_builtin_prefetch', 'find_best_addr', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_expand_prologue', 'ix86_force_to_memory', 'ix86_force_to_memory', 'ix86_va_arg', 'legitimize_pic_address', 'legitimize_pic_address', 'load_pic_register', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'round_trampoline_addr', 'round_trampoline_addr']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'dw2_asm_output_encoded_addr_rtx', 'emit_block_move', 'emit_push_insn', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'expand_builtin_prefetch', 'find_best_addr', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_expand_prologue', 'ix86_force_to_memory', 'ix86_force_to_memory', 'ix86_va_arg', 'legitimize_pic_address', 'legitimize_pic_address', 'load_pic_register', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'round_trampoline_addr', 'round_trampoline_addr']
['pop_init_level']
['process_init_element', 'process_init_element']
['pop_init_level']
['process_init_element', 'process_init_element']
['pop_init_level', 'process_init_element', 'push_init_level']
['pop_init_level', 'process_init_element', 'push_init_level']
['process_insert_insn']
['widen_operand']
['propagate_one_insn']
['protect_from_queue', 'record_operand_costs', 'swap_rtx_condition']
['protect_from_queue']
['protect_from_queue']
['decompose', 'emit_no_conflict_block', 'expand_decl', 'move_deaths', 'protect_from_queue', 'protect_from_queue', 'record_giv', 'trampoline_address']
['adjust_address_1', 'combine_simplify_rtx', 'copy_insn_notes', 'identify_call_return_value', 'instantiate_virtual_regs_1']
['sched_analyze_2']
['protect_from_queue']
['protect_from_queue']
['protect_from_queue']
['protect_from_queue']
['protect_from_queue']
['compute_insns_for_mem', 'record_value_for_reg']
['cse_set_around_loop']
['distribute_notes', 'emit_prefetch_instructions', 'memrefs_conflict_p']
['compute_insns_for_mem']
['cselib_record_sets']
['compute_insns_for_mem']
['compute_insns_for_mem']
['deps_may_trap_p', 'swap_rtx_condition']
['compute_insns_for_mem']
['compute_forward_dependences']
['peephole2_1', 'peephole2_1', 'peephole2_1', 'peephole2_1']
['find_equiv_reg', 'move_movables', 'simplify_giv_expr', 'store_bit_field', 'subst', 'visit_expression']
['check_dbra_loop', 'copy_eh_notes', 'cse_insn', 'insert', 'store_bit_field']
['check_dbra_loop', 'fixup_var_refs_1', 'insert', 'mark_all_labels']
['loop_iterations']
['load_mems']
['fold_rtx']
['fold_rtx']
['find_dummy_reload']
['find_dummy_reload']
['combine_regs', 'combine_regs']
['combine_regs', 'combine_regs']
['cse_insn', 'cse_insn']
['deps_may_trap_p']
['decompose', 'force_nonfallthru_and_redirect']
['decompose', 'force_nonfallthru_and_redirect', 'identify_call_return_value', 'mark_set_1', 'record_giv']
['emit_insns_after', 'scope_to_insns_initialize']
['expand_function_end', 'expand_goto']
['emit_insns_after', 'scope_to_insns_initialize']
['find_single_use_1', 'refers_to_regno_for_reload_p', 'squeeze_notes']
['emit_insns_after', 'scope_to_insns_initialize']
['scope_to_insns_initialize']
['rm_line_notes', 'rm_line_notes', 'rm_other_notes', 'rm_other_notes']
['rm_line_notes', 'rm_line_notes', 'rm_other_notes', 'rm_other_notes']
['skip_copy_to_return_value', 'squeeze_notes']
['skip_copy_to_return_value', 'squeeze_notes']
['push_block']
['push_block']
['pop_init_level', 'process_init_element', 'push_init_level']
['push_init_level']
['spelling_length']
['push_init_level']
['push_init_level']
['push_init_level']
['push_init_level']
['emit_no_conflict_block', 'emit_no_conflict_block', 'emit_no_conflict_block', 'ix86_split_long_move', 'sge_plus_constant', 'timevar_push']
['spelling_length']
['push_init_level']
['emit_no_conflict_block', 'emit_no_conflict_block', 'emit_no_conflict_block', 'ix86_split_long_move', 'sge_plus_constant', 'timevar_push']
['pop_init_level']
['adjust_address_1', 'adjust_address_1', 'check_dbra_loop', 'consec_sets_giv', 'copy_loop_body', 'copy_rtx_and_substitute', 'cselib_record_sets', 'delete_output_reload', 'eliminate_regs_in_insn', 'eliminate_regs_in_insn', 'find_equiv_reg', 'fixup_var_refs_1', 'fold_rtx', 'fold_rtx', 'force_to_mode', 'gen_reload', 'loop_iterations', 'loop_iterations', 'loop_iterations', 'maybe_eliminate_biv_1', 'move_movables', 'simplify_giv_expr', 'skip_copy_to_return_value', 'squeeze_notes', 'store_bit_field']
['bitmap_copy']
['bitmap_copy']
['start_sequence']
['compute_forward_dependences', 'skip_copy_to_return_value']
['bitmap_copy']
['bitmap_copy']
['start_sequence']
['emit_insns_after', 'scope_to_insns_initialize']
['expand_goto', 'expand_goto']
['bitmap_copy']
['bitmap_copy']
['start_sequence']
['bitmap_copy']
['bitmap_copy']
['free_edge']
['pushlevel']
['ldst_entry']
['bitmap_copy', 'ldst_entry']
['print_operand', 'print_operand', 'refers_to_regno_for_reload_p']
['print_operand', 'print_operand', 'refers_to_regno_for_reload_p']
['put_condition_code']
['binary_op_error', 'print_exp']
['build_complex_type', 'put_condition_code']
['emit_unop_insn', 'insert_regs']
['qty_sugg_compare']
['qty_sugg_compare']
['qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare']
['print_operand_address', 'print_operand_address']
['print_operand_address', 'print_operand_address']
['reachable_next_level']
['reachable_next_level']
['read_filename_string']
['read_filename_string']
['read_name_map']
['read_name_map']
['bss_section', 'text_section']
['bss_section', 'text_section']
['immed_real_const']
['immed_real_const']
['real_value_from_int_cst']
['real_value_from_int_cst']
['real_value_from_int_cst']
['real_value_truncate']
['real_value_truncate']
['immed_real_const']
['ecleazs', 'prescan_loop']
['pop_init_level', 'pop_init_level', 'push_init_level']
['push_init_level']
['convert_to_pointer', 'get_inner_reference', 'get_inner_reference', 'truthvalue_conversion']
['convert_to_pointer', 'push_init_level']
['noce_get_alt_condition', 'noce_get_condition', 'sched_analyze_2']
['df_bb_reg_info_compute']
['df_bb_reg_info_compute']
['df_bb_reg_info_compute']
['expand_function_end', 'init_propagate_block_info']
['extract_insn', 'recog', 'split_insns']
['recog', 'recog']
['recog', 'recog']
['recog']
['recog']
['recog']
['recog', 'recog_4', 'split_3']
['recog']
['recog_21', 'recog_22', 'recog_23', 'recog_24', 'recog_25']
['recog_22', 'recog_22', 'recog_23', 'recog_23', 'recog_24', 'recog_24', 'recog_25', 'recog_25']
['recog_23', 'recog_24', 'recog_25']
['recog_23']
['recog_22', 'recog_22', 'recog_23', 'recog_23', 'recog_24', 'recog_24', 'recog_25', 'recog_25']
['recog_23', 'recog_23']
['recog_23']
['recog_23']
['recog_22', 'recog_23', 'recog_23']
['recog_23', 'recog_23']
['recog_22', 'recog_23']
['recog_22', 'recog_23']
['recog_22', 'recog_23', 'recog_23']
['recog_22', 'recog_23']
['recog_21', 'recog_22', 'recog_23']
['recog_23']
['recog_19', 'recog_19', 'recog_19']
['get_attr_imm_disp', 'get_attr_imm_disp', 'get_attr_imm_disp', 'get_attr_imm_disp', 'get_attr_imm_disp', 'get_attr_imm_disp', 'get_attr_length_immediate', 'get_attr_length_immediate', 'get_attr_length_immediate', 'get_attr_prefix_0f', 'get_attr_prefix_0f']
['copy_rtx_and_substitute', 'find_equiv_reg', 'mark_referenced_regs', 'move_movables', 'move_movables', 'simplify_giv_expr', 'store_bit_field', 'subst', 'visit_expression', 'visit_expression']
['compute_argument_addresses', 'find_base_value', 'force_to_mode', 'get_attr_prefix_0f', 'mark_referenced_regs', 'move_movables', 'noce_get_alt_condition', 'restore_line_notes', 'sched_analyze_2', 'sge_plus_constant', 'sge_plus_constant', 'unroll_loop']
['recog_19']
['recog_4', 'split_1']
['split_3']
['recog_19', 'recog_4', 'split_3', 'split_4']
['recog_4']
['recog_23', 'recog_23']
['recog_19', 'recog_22', 'recog_23', 'split_3']
['recog_21', 'recog_22', 'recog_23']
['recog_24', 'recog_25']
['peephole2_2', 'recog_17', 'recog_17', 'recog_18', 'recog_20', 'recog_20', 'recog_20', 'recog_20', 'recog_22', 'recog_27', 'recog_27', 'split_3', 'split_3']
['peephole2_1', 'peephole2_1', 'peephole2_1', 'peephole2_1', 'recog_27', 'recog_27']
['recog_18']
['peephole2_2']
['recog_27', 'recog_28', 'split_3']
['peephole2_1', 'peephole2_1', 'peephole2_1', 'peephole2_1', 'recog_27', 'recog_27']
['recog_4']
['recog_22', 'recog_24', 'recog_24', 'recog_25', 'recog_25']
['recog_27', 'split_3']
['peephole2_1', 'peephole2_1', 'peephole2_1', 'peephole2_1', 'recog_27', 'recog_27']
['peephole2_2', 'recog_27']
['peephole2_2', 'peephole2_2', 'peephole2_2', 'recog_17', 'recog_19', 'recog_20', 'recog_21', 'recog_22', 'recog_22', 'recog_22', 'recog_23', 'recog_23', 'recog_24', 'recog_24', 'recog_25', 'recog_25', 'recog_27', 'recog_27', 'recog_27', 'recog_28', 'recog_28', 'recog_4', 'split_4', 'split_4']
['split_3']
['peephole2_1', 'peephole2_1', 'peephole2_1', 'peephole2_1', 'recog_27', 'recog_27']
['split_3']
['recog', 'recog_17', 'recog_20', 'recog_22', 'recog_27', 'recog_27']
['recog_28', 'split_3', 'split_3']
['peephole2_1', 'peephole2_1', 'peephole2_1', 'peephole2_1', 'peephole2_1', 'peephole2_1', 'peephole2_1', 'peephole2_1', 'recog_27', 'recog_27', 'split_1', 'split_1', 'split_1']
['recog_28']
['peephole2_2', 'recog', 'recog_22', 'recog_22', 'recog_23', 'recog_24', 'recog_24', 'recog_25', 'recog_25', 'recog_27', 'recog_28', 'recog_28', 'recog_4', 'recog_4', 'split_3', 'split_4']
['recog_28', 'split_3']
['recog_17', 'recog_18', 'recog_19', 'recog_19', 'recog_20', 'recog_21', 'recog_22', 'recog_23', 'recog_24', 'recog_24', 'recog_25', 'recog_25', 'recog_28', 'recog_28', 'recog_28', 'recog_4', 'recog_4', 'recog_4', 'recog_4', 'split_1', 'split_1', 'split_3', 'split_3', 'split_4', 'split_4']
['recog_28', 'split_3']
['peephole2_1', 'peephole2_1', 'peephole2_1', 'peephole2_1', 'peephole2_1', 'peephole2_1', 'peephole2_1', 'peephole2_1', 'recog_27', 'recog_27', 'split_1', 'split_1', 'split_1']
['recog_28']
['recog_22']
['recog_27']
['recog_17', 'recog_19', 'recog_20', 'recog_28']
['recog_27', 'split_3']
['check_insn_for_givs', 'thread_jump']
['recog']
['recog_22', 'recog_23']
['recog']
['recog']
['recog']
['recog']
['recog_17', 'recog_18', 'recog_20']
['apply_distributive_law', 'known_cond']
['recog_18']
['recog_17', 'recog_18', 'recog_19', 'recog_19', 'recog_20', 'recog_21', 'recog_22', 'recog_23', 'recog_24', 'recog_24', 'recog_25', 'recog_25', 'recog_28', 'recog_28', 'recog_28', 'recog_4', 'recog_4', 'recog_4', 'split_1', 'split_1', 'split_3', 'split_3', 'split_4', 'split_4']
['do_SUBST', 'do_SUBST_INT']
['do_SUBST', 'do_SUBST_INT']
['do_SUBST', 'do_SUBST', 'do_SUBST_INT', 'do_SUBST_INT']
['do_SUBST', 'do_SUBST', 'do_SUBST_INT', 'do_SUBST_INT']
['do_SUBST', 'do_SUBST_INT']
['do_SUBST', 'do_SUBST_INT']
['recog_17', 'recog_18', 'recog_27', 'recog_4']
['extract_insn']
['compute_hash_table']
['allocate_reg_info', 'reg_alternate_class', 'reg_preferred_class']
['copy_eh_notes']
['wipe_dead_reg']
['handle_rd_kill_set']
['constrain_operands', 'constrain_operands', 'reload_cse_simplify_operands', 'reload_cse_simplify_operands']
['constrain_operands', 'constrain_operands', 'reload_cse_simplify_operands', 'reload_cse_simplify_operands']
['reload_cse_simplify_operands']
['combine_regs', 'dead_or_set_regno_p', 'refers_to_regno_for_reload_p', 'update_table_tick']
['record_last_reg_set_info']
['compute_hash_table']
['record_address_regs']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'dw2_asm_output_encoded_addr_rtx', 'emit_block_move', 'emit_push_insn', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'expand_builtin_prefetch', 'find_best_addr', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_expand_prologue', 'ix86_force_to_memory', 'ix86_force_to_memory', 'ix86_va_arg', 'legitimize_pic_address', 'legitimize_pic_address', 'load_pic_register', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'round_trampoline_addr', 'round_trampoline_addr']
['compare_constant_1', 'compare_constant_1', 'decode_addr_const', 'get_memory_rtx', 'record_constant_1', 'record_constant_1']
['compare_constant_1', 'compare_constant_1', 'decode_addr_const', 'get_memory_rtx', 'record_constant_1', 'record_constant_1']
['record_constant_1']
['set_mem_alias_set', 'set_mem_align', 'set_mem_offset']
['record_constant_1']
['apply_distributive_law', 'df_ref_record', 'for_each_successor_phi', 'refers_to_regno_for_reload_p', 'subst_constants', 'trampoline_address']
['for_each_successor_phi', 'refers_to_regno_for_reload_p']
['record_value_for_reg']
['constrain_operands', 'emit_input_reload_insns', 'maybe_eliminate_biv_1', 'nonzero_bits', 'refers_to_regno_for_reload_p', 'simplify_set', 'subst_stack_regs_pat']
['get_last_value_validate']
['record_value_for_reg']
['record_value_for_reg']
['squeeze_notes']
['squeeze_notes']
['squeeze_notes']
['squeeze_notes']
['squeeze_notes']
['squeeze_notes']
['squeeze_notes']
['memrefs_conflict_p']
['copy_loop_body', 'init_propagate_block_info', 'insn_dead_p', 'record_giv', 'simplify_relational_operation']
['compute_argument_addresses', 'extract_bit_field', 'hash_scan_set', 'noce_try_abs']
['record_value_for_reg']
['expand_field_assignment', 'find_dummy_reload']
['maybe_eliminate_biv_1']
['subst_constants']
['copy_rtx_and_substitute', 'copy_rtx_and_substitute', 'load_mems']
['adjust_address_1', 'combine_simplify_rtx', 'copy_insn_notes', 'identify_call_return_value', 'instantiate_virtual_regs_1']
['unroll_loop']
['express_from_1', 'find_split_point']
['copy_insn_list', 'emit_input_reload_insns', 'emit_libcall_block', 'emit_no_conflict_block', 'expand_function_end', 'extract_bit_field', 'legitimize_pic_address', 'noce_get_alt_condition', 'simplify_subreg']
['move_deaths']
['eliminate_regs', 'eliminate_regs_in_insn', 'emit_libcall_block', 'expand_function_end', 'extract_bit_field', 'find_dummy_reload', 'init_alias_analysis', 'legitimize_pic_address', 'rm_line_notes', 'rm_other_notes', 'scope_to_insns_initialize', 'simplify_subreg', 'unroll_loop', 'visit_expression']
['record_one_set', 'record_one_set']
['record_one_set', 'record_one_set']
['record_one_set']
['record_one_set']
['record_one_set', 'record_one_set']
['record_one_set', 'record_one_set']
['constrain_operands']
['record_reg_classes']
['num_sign_bit_copies', 'simplify_comparison']
['copy_insn_list', 'gen_reload', 'record_giv', 'trampoline_address']
['record_value_for_reg']
['emit_libcall_block', 'legitimize_pic_address', 'make_extraction', 'noce_process_if_block', 'record_value_for_reg', 'subst_constants']
['record_value_for_reg']
['memory_address']
['fixup_var_refs_insn', 'record_value_for_reg']
['record_value_for_reg']
['record_value_for_reg']
['record_value_for_reg']
['combine_reversed_comparison_code']
['combine_reversed_comparison_code', 'num_sign_bit_copies']
['num_sign_bit_copies']
['num_sign_bit_copies']
['subst_asm_stack_regs']
['check_dbra_loop', 'combine_simplify_rtx', 'eliminate_regs_in_insn', 'expand_inline_function', 'find_dummy_reload', 'force_nonfallthru_and_redirect', 'init_alias_analysis', 'legitimize_pic_address', 'rm_line_notes', 'rm_other_notes', 'simplify_subreg', 'verify_flow_info']
['find_reloads', 'record_giv', 'store_bit_field', 'subst']
['check_dbra_loop', 'check_dbra_loop', 'copy_rtx_and_substitute', 'emit_insns_after', 'fold_rtx', 'scope_to_insns_initialize', 'simplify_comparison']
['subst']
['check_dbra_loop', 'cse_insn', 'trampoline_address']
['eliminate_regs_in_insn', 'fixup_var_refs_insn', 'set_label_offsets']
['find_reloads_address_1', 'fixup_var_refs_1', 'move_movables', 'simplify_plus_minus', 'store_bit_field']
['free_edge']
['free_edge']
['free_edge']
['free_edge']
['convert_regs_1', 'find_single_use_1', 'find_single_use_1', 'record_value_for_reg']
['cse_set_around_loop']
['squeeze_notes']
['emit_prefetch_instructions']
['refers_to_regno_p']
['refers_to_regno_p']
['emit_libcall_block', 'record_value_for_reg', 'refers_to_regno_for_reload_p']
['mark_used_regs']
['cse_set_around_loop', 'merge_blocks_nomove', 'restore_line_notes']
['refers_to_regno_for_reload_p']
['save_line_notes']
['constrain_operands', 'find_dummy_reload', 'get_true_reg']
['find_dummy_reload']
['refers_to_regno_p']
['refers_to_regno_p']
['refers_to_regno_for_reload_p']
['refers_to_regno_for_reload_p']
['emit_insns_after']
['refers_to_regno_for_reload_p']
['allocate_reg_info', 'reg_alternate_class', 'reg_preferred_class']
['reg_alternate_class']
['reg_bitfield_target_p']
['reg_bitfield_target_p']
['ix86_register_move_cost', 'regno_clobbered_p', 'set_value_regno']
['cselib_lookup', 'find_oldest_value_reg', 'ix86_register_move_cost', 'reg_fits_class_p']
['reg_overlap_mentioned_for_reload_p', 'reg_overlap_mentioned_p']
['expand_mult_highpart']
['classify_argument']
['classify_argument']
['refers_to_regno_for_reload_p']
['expand_mult_highpart']
['operands_match_p']
['operands_match_p', 'reg_overlap_mentioned_for_reload_p']
['insert_one_insn', 'reg_bitfield_target_p']
['operands_match_p', 'reg_overlap_mentioned_for_reload_p', 'subreg_regno', 'try_split', 'try_split']
['operands_match_p', 'reg_overlap_mentioned_for_reload_p']
['reg_overlap_mentioned_p']
['allocate_reg_info', 'reg_alternate_class', 'reg_preferred_class']
['reg_preferred_class']
['can_throw_external', 'compute_hash_table', 'delete_insn', 'fixup_reorder_chain', 'mark_all_labels', 'reg_scan_mark_refs']
['reg_scan_mark_refs']
['emit_reload_insns']
['timevar_push']
['record_address_regs']
['allocate_reg_info']
['debug_reload_to_stream']
['debug_reload_to_stream']
['dump_regset']
['emit_output_reload_insns']
['combine_reloads']
['check_format_info_main']
['check_format_info_main', 'notreg_cost']
['update_qty_class']
['update_qty_class']
['dump_flow_info']
['dump_flow_info']
['dump_flow_info']
['allocate_reg_info']
['update_qty_class']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['dwarf2out_begin_prologue']
['register_operand']
['fixup_var_refs_1']
['nonzero_bits']
['adjust_address_1', 'adjust_address_1', 'check_dbra_loop', 'consec_sets_giv', 'copy_loop_body', 'copy_rtx_and_substitute', 'cselib_record_sets', 'delete_output_reload', 'eliminate_regs_in_insn', 'eliminate_regs_in_insn', 'find_equiv_reg', 'fixup_var_refs_1', 'fold_rtx', 'fold_rtx', 'force_to_mode', 'gen_reload', 'loop_iterations', 'loop_iterations', 'loop_iterations', 'maybe_eliminate_biv_1', 'move_movables', 'simplify_giv_expr', 'skip_copy_to_return_value', 'squeeze_notes', 'store_bit_field']
['eliminate_regs_in_insn', 'force_to_mode']
['copy_loop_body', 'copy_loop_body', 'expand_function_end', 'fixup_var_refs_insn', 'fixup_var_refs_insn', 'fold_rtx', 'fold_rtx', 'loop_iterations', 'memrefs_conflict_p', 'print_rtx', 'protect_from_queue', 'protect_from_queue', 'record_operand_costs', 'simplify_comparison', 'simplify_giv_expr', 'store_expr', 'subst_constants', 'swap_rtx_condition', 'unroll_loop']
['rtx_renumbered_equal_p']
['consec_sets_giv', 'copy_rtx_and_substitute', 'eliminate_regs', 'eliminate_regs_in_insn', 'expand_decl', 'expand_function_end', 'find_base_term', 'find_reloads', 'fold_rtx', 'fold_rtx', 'force_to_mode', 'ix86_split_long_move', 'load_mems', 'loop_iterations', 'make_extraction', 'protect_from_queue', 'protect_from_queue', 'record_giv', 'record_operand_costs', 'restore_line_notes', 'rm_line_notes', 'rm_other_notes', 'simplify_comparison', 'store_bit_field', 'subst', 'subst', 'subst_constants', 'swap_rtx_condition', 'unroll_loop']
['general_induction_var']
['adjust_address_1', 'adjust_address_1', 'consec_sets_giv', 'copy_loop_body', 'cselib_record_sets', 'delete_output_reload', 'eliminate_regs_in_insn', 'find_equiv_reg', 'fold_rtx', 'gen_reload', 'maybe_eliminate_biv_1', 'move_movables', 'simplify_set', 'simplify_shift_const', 'store_bit_field']
['ix86_register_move_cost', 'regno_clobbered_p', 'set_value_regno']
['df_ref_record']
['unroll_loop']
['eliminate_regs_in_insn', 'find_split_point', 'find_split_point', 'for_each_successor_phi', 'force_to_mode', 'ix86_split_long_move', 'protect_from_queue', 'refers_to_regno_for_reload_p', 'subst']
['refers_to_regno_for_reload_p']
['cse_set_around_loop']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument', 'strength_reduce', 'strength_reduce']
['classify_argument']
['classify_argument']
['classify_argument']
['check_dbra_loop', 'cse_insn', 'find_reloads', 'make_extraction']
['copy_insn_list', 'find_split_point']
['check_dbra_loop', 'eliminate_regs', 'force_nonfallthru_and_redirect', 'scope_to_insns_initialize', 'simplify_comparison', 'subst', 'unroll_loop']
['noce_get_alt_condition', 'noce_get_condition', 'sched_analyze_2']
['expand_decl', 'unroll_loop']
['copy_insn_list', 'find_reloads_address_1', 'find_split_point', 'legitimize_pic_address', 'move_movables', 'queue_to_ready']
['find_base_value', 'restore_line_notes', 'sge_plus_constant', 'unroll_loop']
['compute_argument_addresses', 'copy_loop_body', 'cse_end_of_basic_block', 'emit_input_reload_insns', 'expand_function_end', 'fixup_var_refs_insn', 'get_attr_prefix_0f', 'get_attr_type', 'move_deaths', 'move_movables', 'noce_get_alt_condition', 'sge_plus_constant', 'visit_expression']
['validate_replace_rtx_1']
['force_nonfallthru_and_redirect', 'record_value_for_reg', 'refers_to_regno_for_reload_p']
['expand_function_end', 'extract_bit_field', 'gen_reload']
['eliminate_regs_in_insn', 'emit_libcall_block', 'find_dummy_reload', 'init_alias_analysis', 'legitimize_pic_address', 'mark_used_regs', 'move_deaths', 'rm_line_notes', 'rm_other_notes', 'simplify_subreg']
['eliminate_regs']
['hard_reg_set_here_p']
['reload_combine_note_use']
['reload_combine_note_use']
['mark_set_1']
['rename_block']
['offsettable_address_p']
['emit_group_store']
['eliminate_regs_in_insn', 'fixup_var_refs_insn', 'set_label_offsets']
['cse_insn', 'move_deaths']
['find_reloads', 'record_giv', 'store_bit_field', 'subst']
['eliminate_regs', 'simplify_comparison', 'simplify_subreg', 'unroll_loop']
['combine_simplify_rtx', 'decompose', 'emit_input_reload_insns', 'expand_call', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'make_memloc', 'next_insn_in_loop', 'simplify_if_then_else', 'simplify_relational_operation']
['instantiate_virtual_regs_1', 'validate_replace_rtx_1']
['check_dbra_loop', 'simplify_set', 'subst_constants']
['instantiate_virtual_regs_1', 'simplify_plus_minus', 'subst_constants', 'subst_stack_regs_pat', 'subst_stack_regs_pat']
['emit_libcall_block', 'find_reloads_address_1', 'fold_rtx', 'scope_to_insns_initialize', 'unroll_loop']
['find_reloads', 'instantiate_virtual_regs_1', 'maybe_eliminate_biv_1', 'subst_constants', 'subst_stack_regs_pat']
['adjust_address_1', 'cselib_record_sets', 'find_base_value', 'gen_reload', 'restore_line_notes', 'sge_plus_constant']
['reload_cse_simplify_operands', 'reload_cse_simplify_operands']
['reload_cse_simplify_operands', 'reload_cse_simplify_operands']
['reload_cse_simplify_operands']
['reload_cse_simplify_operands']
['check_asm_stack_operands', 'ix86_attr_length_address_default']
['check_asm_stack_operands', 'cleanup_subreg_operands', 'constrain_operands', 'constrain_operands', 'preprocess_constraints', 'record_operand_costs', 'record_operand_costs', 'record_operand_costs', 'reload_cse_simplify_operands', 'reload_cse_simplify_operands']
['check_asm_stack_operands', 'record_operand_costs', 'record_operand_costs']
['reload_cse_simplify_operands']
['check_asm_stack_operands', 'ix86_attr_length_address_default']
['reload_cse_simplify_operands']
['check_asm_stack_operands', 'cleanup_subreg_operands', 'constrain_operands', 'constrain_operands', 'preprocess_constraints', 'record_operand_costs', 'record_operand_costs', 'record_operand_costs', 'reload_cse_simplify_operands', 'reload_cse_simplify_operands']
['reload_cse_simplify_operands']
['reload_cse_simplify_operands']
['reload_cse_simplify_operands']
['reload_cse_simplify_operands']
['reload_cse_simplify_set']
['reload_cse_simplify_set']
['reload_cse_simplify_set']
['reload_cse_simplify_set']
['known_cond']
['reload_cse_simplify_set']
['reload_inner_reg_of_subreg']
['reload_reg_free_p']
['reload_reg_reaches_end_p']
['reloads_conflict']
['remove_address_replacements', 'remove_address_replacements']
['remove_address_replacements', 'remove_address_replacements']
['free_edge']
['free_edge']
['free_edge']
['free_edge']
['cse_end_of_basic_block', 'init_alias_analysis', 'simplify_relational_operation']
['combine_simplify_rtx', 'expand_call', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'make_memloc', 'next_insn_in_loop', 'simplify_if_then_else', 'simplify_relational_operation']
['decode_addr_const']
['refers_to_regno_for_reload_p']
['make_memloc']
['loop_givs_rescan', 'loop_givs_rescan', 'loop_givs_rescan', 'loop_givs_rescan']
['count_pseudo', 'set_label_offsets']
['rename_block']
['constant_subword', 'emit_cmp_and_jump_insn_1', 'expand_complex_abs', 'expand_twoval_binop', 'initializer_constant_valid_p', 'ix86_function_value', 'prepare_cmp_insn', 'standard_80387_constant_p']
['replace_call_placeholder']
['replace_call_placeholder']
['replace_call_placeholder']
['expand_unop', 'make_compound_operation', 'precompute_register_parameters', 'try_tablejump', 'try_tablejump']
['invalidate']
['do_jump_by_parts_equality_rtx', 'do_jump_by_parts_equality_rtx', 'do_jump_by_parts_equality_rtx', 'do_jump_by_parts_equality_rtx', 'do_jump_by_parts_equality_rtx', 'do_jump_by_parts_equality_rtx', 'gen_add_mult', 'iv_add_mult_cost']
['scan_rtx_address']
['do_store_flag']
['eliminate_regs_in_insn', 'emit_insns_after']
['simplify_set']
['find_base_value', 'restore_line_notes', 'sge_plus_constant']
['df_ref_record', 'purge_addressof_1', 'purge_addressof_1', 'refers_to_regno_for_reload_p']
['memory_address']
['deps_may_trap_p', 'swap_rtx_condition']
['rm_line_notes', 'rm_other_notes']
['rm_line_notes', 'rm_other_notes']
['mark_referenced_regs']
['expand_decl', 'expand_function_end', 'find_base_value', 'rename_block']
['mark_referenced_regs']
['expand_decl', 'expand_function_end', 'find_base_value', 'rename_block']
['replace_pseudos_in_call_usage']
['replace_pseudos_in_call_usage']
['record_value_for_reg']
['replace_regs']
['replace_regs']
['replace_regs', 'replace_regs']
['replace_regs', 'replace_regs']
['replace_regs', 'replace_regs', 'replace_regs']
['replace_regs', 'replace_regs', 'replace_regs']
['replace_regs', 'replace_regs', 'replace_regs']
['find_reloads_address', 'noce_emit_cmove', 'replace_rtx', 'replace_rtx', 'write_dependence_p']
['if_then_else_cond', 'if_then_else_cond', 'known_cond', 'replace_rtx', 'simplify_rtx']
['find_reloads_address', 'noce_emit_cmove', 'replace_rtx', 'replace_rtx', 'write_dependence_p']
['if_then_else_cond', 'if_then_else_cond', 'kill_value', 'known_cond', 'replace_rtx', 'simplify_rtx', 'true_regnum']
['count_error']
['count_error']
['report_diagnostic']
['report_diagnostic', 'sorry']
['report_diagnostic', 'sorry']
['report_diagnostic', 'sorry']
['sorry']
['report_diagnostic', 'report_diagnostic', 'sorry', 'sorry']
['report_diagnostic', 'report_diagnostic', 'sorry', 'sorry']
['expand_goto', 'expand_inline_function']
['delete_output_reload']
['copy_loop_body', 'cse_insn', 'eliminate_regs_in_insn', 'expand_function_end', 'expand_goto', 'expand_inline_function', 'find_dummy_reload', 'fixup_var_refs_insn', 'init_alias_analysis', 'legitimize_pic_address', 'move_movables', 'rm_line_notes', 'rm_other_notes', 'simplify_subreg']
['expand_goto', 'gen_reload', 'try_to_integrate']
['expand_goto', 'try_to_integrate']
['commit_one_edge_insertion', 'decompose', 'force_nonfallthru_and_redirect', 'identify_call_return_value', 'mark_set_1', 'record_giv']
['decompose', 'force_nonfallthru_and_redirect', 'identify_call_return_value', 'mark_set_1', 'record_giv']
['combine_reversed_comparison_code']
['combine_reversed_comparison_code']
['try_to_integrate']
['expand_goto', 'expand_goto']
['expand_goto', 'expand_goto']
['find_single_use_1', 'find_single_use_1']
['asm_operand_ok']
['resolve_operand_name_1']
['resolve_unique_section']
['rest_of_compilation']
['c_expand_body', 'try_to_integrate']
['c_expand_body', 'try_to_integrate']
['rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation']
['rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation']
['c_expand_body', 'try_to_integrate']
['c_expand_body', 'try_to_integrate']
['rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation']
['rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation']
['rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation']
['rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation']
['rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation']
['rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation']
['rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation']
['rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation']
['rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation']
['rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation']
['rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation']
['rest_of_decl_compilation']
['rest_of_decl_compilation']
['rest_of_decl_compilation']
['rest_of_decl_compilation']
['rest_of_decl_compilation']
['rest_of_decl_compilation']
['rest_of_decl_compilation']
['clear_emit_caches']
['clear_emit_caches']
['find_base_term', 'restore_line_notes', 'rm_line_notes', 'rm_other_notes']
['restore_line_notes']
['find_base_value', 'restore_line_notes', 'sge_plus_constant']
['restore_line_notes', 'restore_line_notes']
['restore_line_notes', 'restore_line_notes']
['restore_line_notes', 'restore_line_notes']
['restore_line_notes']
['find_base_term']
['decompose', 'mark_set_1']
['save_line_notes']
['restore_line_notes', 'restore_line_notes']
['restore_line_notes', 'restore_line_notes']
['restore_line_notes']
['restore_line_notes']
['restore_line_notes']
['restore_line_notes']
['combine_reversed_comparison_code']
['num_sign_bit_copies']
['compute_forward_dependences', 'deps_may_trap_p', 'rm_line_notes', 'rm_other_notes', 'simplify_comparison', 'visit_expression']
['copy_rtx_and_substitute', 'move_movables', 'visit_expression']
['compute_forward_dependences', 'rm_line_notes', 'rm_other_notes']
['rm_line_notes', 'rm_other_notes']
['validate_replace_rtx_1', 'validate_replace_rtx_1']
['validate_replace_rtx_1', 'validate_replace_rtx_1']
['memrefs_conflict_p']
['copy_insn_notes']
['rm_line_notes', 'rm_line_notes', 'rm_other_notes', 'rm_other_notes', 'squeeze_notes', 'squeeze_notes']
['rm_line_notes', 'rm_other_notes']
['compute_forward_dependences', 'compute_forward_dependences', 'rm_line_notes', 'rm_line_notes', 'rm_other_notes', 'rm_other_notes', 'save_line_notes', 'squeeze_notes', 'squeeze_notes']
['rm_line_notes', 'rm_other_notes']
['squeeze_notes']
['find_base_term']
['squeeze_notes']
['rm_line_notes', 'rm_other_notes']
['scope_to_insns_initialize']
['compute_forward_dependences', 'deps_may_trap_p', 'rm_line_notes', 'rm_other_notes', 'simplify_comparison', 'visit_expression']
['mark_all_labels', 'simplify_comparison']
['load_mems', 'subst_asm_stack_regs']
['fixup_reorder_chain']
['decompose', 'force_nonfallthru_and_redirect', 'identify_call_return_value', 'mark_set_1', 'record_giv']
['compute_forward_dependences', 'restore_line_notes', 'restore_line_notes', 'rm_line_notes', 'rm_other_notes']
['identify_call_return_value']
['compute_forward_dependences', 'compute_forward_dependences', 'squeeze_notes', 'squeeze_notes']
['compute_forward_dependences', 'compute_forward_dependences', 'squeeze_notes', 'squeeze_notes']
['squeeze_notes']
['compute_forward_dependences', 'compute_forward_dependences', 'save_line_notes', 'simplify_relational_operation', 'skip_copy_to_return_value', 'squeeze_notes', 'squeeze_notes', 'squeeze_notes']
['compute_forward_dependences', 'compute_forward_dependences', 'save_line_notes', 'simplify_relational_operation', 'skip_copy_to_return_value', 'squeeze_notes', 'squeeze_notes', 'squeeze_notes']
['rm_line_notes', 'rm_line_notes', 'rm_other_notes', 'rm_other_notes', 'squeeze_notes', 'squeeze_notes']
['rm_line_notes', 'rm_line_notes', 'rm_other_notes', 'rm_other_notes', 'squeeze_notes', 'squeeze_notes']
['squeeze_notes']
['apply_distributive_law', 'emit_libcall_block', 'gen_reload', 'record_giv', 'sched_analyze_2', 'subst_constants']
['canonicalize_condition', 'find_comparison_args', 'nonzero_bits']
['memrefs_conflict_p']
['rename_block']
['verify_flow_info']
['for_each_successor_phi']
['prepare_cmp_insn']
['rtx_equal_for_cselib_p']
['rtx_equal_for_cselib_p']
['rtx_equal_for_field_assignment_p']
['rtx_equal_for_field_assignment_p']
['rtx_equal_for_memref_p']
['rtx_renumbered_equal_p']
['rtx_renumbered_equal_p']
['rtx_renumbered_equal_p']
['reg_overlap_mentioned_for_reload_p', 'subreg_regno']
['operands_match_p', 'reg_overlap_mentioned_for_reload_p']
['expand_start_case']
['expand_start_case']
['expand_start_case']
['expand_start_case']
['expand_start_case']
['expand_start_case']
['expand_start_case']
['expand_start_case']
['record_one_set', 'record_one_set']
['check_dbra_loop', 'combine_simplify_rtx', 'compute_forward_dependences', 'convert_regs_1', 'copy_insn_notes', 'emit_libcall_block', 'expand_field_assignment', 'expand_inline_function', 'extract_bit_field', 'fixup_var_refs_1', 'fold_rtx', 'make_extraction', 'make_extraction', 'mark_set_1', 'protect_from_queue', 'sched_analyze_2', 'simplify_comparison', 'simplify_set', 'store_expr', 'store_expr']
['apply_distributive_law', 'check_dbra_loop', 'express_from', 'noce_get_condition']
['safe_from_p']
['safe_from_p']
['compare_constant_1', 'compare_constant_1', 'decode_addr_const', 'get_memory_rtx', 'record_constant_1', 'record_constant_1']
['get_memory_rtx']
['expand_decl']
['biv_total_increment', 'expand_decl', 'expand_function_end', 'expand_goto', 'find_base_term', 'rename_block', 'skip_copy_to_return_value']
['record_operand_costs']
['find_reloads_address_part', 'identify_call_return_value', 'trampoline_address']
['find_reloads_address_part', 'identify_call_return_value', 'trampoline_address']
['ix86_split_to_parts']
['delete_output_reload', 'delete_output_reload']
['classify_argument']
['classify_argument']
['classify_argument', 'identify_call_return_value']
['exp_equiv_p']
['classify_argument', 'identify_call_return_value']
['classify_argument']
['classify_argument']
['find_base_term', 'restore_line_notes', 'rm_line_notes', 'rm_other_notes']
['apply_distributive_law']
['copy_insn_list', 'emit_libcall_block', 'gen_reload', 'gen_reload', 'protect_from_queue', 'record_giv', 'subst_constants']
['adjust_address_1', 'adjust_address_1', 'apply_distributive_law', 'check_asm_stack_operands', 'check_dbra_loop', 'check_dbra_loop', 'combine_simplify_rtx', 'compute_argument_addresses', 'compute_argument_addresses', 'copy_insn_list', 'copy_insn_notes', 'copy_loop_body', 'copy_rtx_and_substitute', 'cselib_record_sets', 'expand_decl', 'express_from', 'extract_bit_field', 'find_base_value', 'find_split_point', 'fold_rtx', 'gen_reload', 'hash_scan_set', 'identify_call_return_value', 'init_propagate_block_info', 'insn_dead_p', 'instantiate_virtual_regs_1', 'ix86_split_long_move', 'loop_iterations', 'noce_get_condition', 'noce_try_abs', 'protect_from_queue', 'protect_from_queue', 'record_giv', 'restore_line_notes', 'sge_plus_constant', 'sge_plus_constant', 'simplify_relational_operation', 'skip_copy_to_return_value', 'squeeze_notes', 'store_expr', 'subst']
['find_reloads_address_part']
['compute_insns_for_mem', 'emit_insns_after', 'scope_to_insns_initialize']
['protect_from_queue']
['protect_from_queue']
['widen_operand']
['widen_operand']
['widen_operand']
['memrefs_conflict_p']
['rename_block']
['save_line_notes', 'squeeze_notes']
['save_line_notes']
['save_line_notes']
['save_line_notes']
['save_stack_pointer']
['expand_inline_function', 'record_giv']
['find_reloads']
['adjust_address_1', 'adjust_address_1', 'eliminate_regs_in_insn', 'emit_libcall_block', 'expand_field_assignment', 'legitimize_pic_address', 'make_extraction', 'mark_used_regs', 'noce_process_if_block', 'plus_constant_wide', 'record_value_for_reg', 'sched_analyze_2', 'sched_analyze_2', 'subst']
['eliminate_regs_in_insn', 'fixup_var_refs_insn', 'set_label_offsets']
['emit_libcall_block', 'emit_libcall_block', 'protect_from_queue', 'protect_from_queue', 'sched_analyze_2']
['ix86_split_long_move', 'protect_from_queue', 'subst']
['copy_loop_body', 'init_propagate_block_info', 'insn_dead_p', 'record_giv', 'simplify_relational_operation']
['eliminate_regs', 'extract_bit_field', 'instantiate_virtual_regs_1', 'mark_set_1', 'sched_analyze_2']
['fold_rtx']
['store_expr']
['find_split_point', 'maybe_eliminate_biv_1', 'simplify_set', 'subst_stack_regs_pat']
['simplify_set', 'subst_stack_regs_pat']
['record_operand_costs']
['protect_from_queue']
['alloc_qty']
['check_asm_stack_operands', 'cleanup_subreg_operands', 'constrain_operands', 'constrain_operands', 'preprocess_constraints', 'record_operand_costs', 'record_operand_costs', 'record_operand_costs', 'reload_cse_simplify_operands', 'reload_cse_simplify_operands']
['extract_insn']
['extract_insn', 'extract_insn', 'preprocess_constraints']
['recog_23', 'recog_23']
['recog_23', 'recog_23']
['cleanup_subreg_operands']
['split_3', 'split_3']
['scan_rtx_address']
['scan_rtx']
['allocate_reload_reg', 'scan_rtx_reg']
['emit_reload_insns']
['mark_used_regs_combine', 'sched_analyze_1']
['sched_analyze_1', 'sched_analyze_1']
['sched_analyze_1', 'sched_analyze_1']
['sched_analyze_1']
['extract_bit_field']
['sched_analyze_2']
['move_deaths', 'record_value_for_reg']
['sched_analyze_2']
['sched_analyze_2']
['record_value_for_reg', 'refers_to_regno_for_reload_p']
['adjust_address_1', 'compute_argument_addresses', 'emit_libcall_block', 'emit_libcall_block', 'force_nonfallthru_and_redirect', 'mark_used_regs', 'memrefs_conflict_p', 'rm_line_notes', 'rm_other_notes', 'sched_analyze_2', 'sched_analyze_2', 'sge_plus_constant', 'subst']
['noce_get_alt_condition', 'noce_get_condition', 'sched_analyze_2']
['copy_loop_body', 'init_propagate_block_info', 'insn_dead_p', 'record_giv', 'simplify_relational_operation']
['mark_used_regs']
['propagate_deps', 'propagate_deps']
['propagate_deps', 'propagate_deps']
['sched_analyze_insn']
['insn_dead_p']
['sched_analyze_insn']
['sched_analyze_insn']
['memrefs_conflict_p']
['eliminate_regs_in_insn']
['cse_insn', 'decompose', 'move_deaths']
['check_dbra_loop', 'convert_regs_1', 'emit_libcall_block', 'fixup_var_refs_1', 'make_extraction', 'protect_from_queue', 'simplify_comparison', 'store_expr']
['simplify_relational_operation']
['cse_insn', 'expand_inline_function', 'trampoline_address']
['eliminate_regs_in_insn', 'expand_field_assignment', 'expand_inline_function', 'find_reloads_address_1', 'find_split_point', 'gen_reload', 'loop_iterations']
['copy_rtx_and_substitute']
['check_dbra_loop', 'emit_insns_after', 'expand_inline_function', 'find_split_point', 'fold_rtx', 'loop_iterations', 'move_movables']
['propagate_deps', 'propagate_deps']
['propagate_deps', 'propagate_deps']
['propagate_deps', 'propagate_deps']
['propagate_deps', 'propagate_deps']
['sched_analyze_insn', 'sched_analyze_insn']
['sched_analyze_insn', 'sched_analyze_insn']
['propagate_deps', 'propagate_deps']
['propagate_deps', 'propagate_deps']
['propagate_deps', 'propagate_deps', 'sched_analyze_insn', 'sched_analyze_insn']
['propagate_deps', 'propagate_deps', 'sched_analyze_insn', 'sched_analyze_insn']
['propagate_deps', 'propagate_deps', 'sched_analyze_insn', 'sched_analyze_insn']
['propagate_deps', 'propagate_deps', 'sched_analyze_insn', 'sched_analyze_insn']
['try_to_integrate']
['propagate_deps', 'propagate_deps']
['propagate_deps', 'propagate_deps']
['compute_block_backward_dependences']
['noce_try_abs']
['scope_die_for']
['scope_to_insns_initialize']
['scope_to_insns_initialize']
['scope_to_insns_initialize', 'scope_to_insns_initialize']
['scope_to_insns_initialize', 'scope_to_insns_initialize']
['scope_to_insns_initialize']
['scope_to_insns_initialize']
['scope_to_insns_initialize']
['scope_to_insns_initialize']
['scope_to_insns_initialize']
['decode_addr_const']
['self_promoting_args_p']
['set_decl_abstract_flags', 'set_decl_origin_self']
['set_decl_abstract_flags', 'set_decl_origin_self']
['pop_init_level', 'process_init_element']
['pop_init_level', 'process_init_element', 'push_init_level']
['set_diagnostic_context']
['def_cfa_1', 'def_cfa_1', 'def_cfa_1', 'def_cfa_1']
['def_cfa_1', 'def_cfa_1', 'def_cfa_1', 'def_cfa_1']
['pop_init_level', 'process_init_element']
['push_init_level']
['push_init_level']
['pop_init_level', 'process_init_element']
['push_init_level']
['push_init_level']
['pop_init_level', 'process_init_element']
['push_init_level']
['push_init_level']
['pop_init_level', 'process_init_element']
['push_init_level']
['push_init_level']
['for_each_successor_phi', 'refers_to_regno_for_reload_p']
['for_each_successor_phi', 'refers_to_regno_for_reload_p']
['build1']
['force_nonfallthru_and_redirect', 'noce_process_if_block', 'offsettable_address_p', 'refers_to_regno_for_reload_p', 'refers_to_regno_for_reload_p']
['insert_set_in_table']
['apply_distributive_law', 'emit_group_store']
['adjust_address_1', 'adjust_address_1', 'compute_argument_addresses', 'compute_argument_addresses', 'copy_insn_notes', 'express_from', 'find_reloads_address_part', 'offsettable_address_p', 'protect_from_queue']
['express_from', 'offsettable_address_p']
['adjust_address_1', 'combine_simplify_rtx', 'copy_insn_notes', 'expand_decl', 'expand_mult_add', 'for_each_successor_phi', 'identify_call_return_value', 'instantiate_virtual_regs_1', 'propagate_deps', 'propagate_deps', 'record_value_for_reg', 'refers_to_regno_for_reload_p']
['adjust_address_1', 'combine_simplify_rtx', 'copy_insn_notes', 'expand_decl', 'expand_mult_add', 'for_each_successor_phi', 'identify_call_return_value', 'instantiate_virtual_regs_1', 'propagate_deps', 'propagate_deps', 'record_value_for_reg', 'refers_to_regno_for_reload_p']
['build1']
['force_nonfallthru_and_redirect', 'noce_process_if_block', 'offsettable_address_p', 'refers_to_regno_for_reload_p', 'refers_to_regno_for_reload_p']
['insert_set_in_table']
['adjust_address_1', 'adjust_address_1', 'compute_argument_addresses', 'express_from', 'find_reloads_address_part', 'insn_dead_p', 'insn_dead_p', 'protect_from_queue', 'simplify_relational_operation']
['offsettable_address_p']
['check_dbra_loop', 'emit_block_move', 'find_single_use_1']
['check_dbra_loop', 'emit_block_move', 'find_single_use_1']
['offset_address']
['set_mem_attributes']
['std_expand_builtin_va_arg']
['build1']
['force_nonfallthru_and_redirect', 'refers_to_regno_for_reload_p', 'refers_to_regno_for_reload_p']
['for_each_successor_phi', 'refers_to_regno_for_reload_p']
['for_each_successor_phi', 'refers_to_regno_for_reload_p']
['build1']
['force_nonfallthru_and_redirect', 'noce_process_if_block', 'offsettable_address_p', 'refers_to_regno_for_reload_p', 'refers_to_regno_for_reload_p']
['insert_set_in_table']
['apply_distributive_law', 'emit_group_store']
['adjust_address_1', 'adjust_address_1', 'compute_argument_addresses', 'compute_argument_addresses', 'copy_insn_notes', 'express_from', 'find_reloads_address_part', 'offsettable_address_p', 'protect_from_queue']
['express_from', 'offsettable_address_p']
['for_each_successor_phi', 'refers_to_regno_for_reload_p']
['for_each_successor_phi', 'refers_to_regno_for_reload_p']
['build1']
['force_nonfallthru_and_redirect', 'noce_process_if_block', 'offsettable_address_p', 'refers_to_regno_for_reload_p', 'refers_to_regno_for_reload_p']
['insert_set_in_table']
['apply_distributive_law', 'emit_group_store']
['adjust_address_1', 'adjust_address_1', 'compute_argument_addresses', 'compute_argument_addresses', 'copy_insn_notes', 'express_from', 'find_reloads_address_part', 'offsettable_address_p', 'protect_from_queue']
['express_from', 'offsettable_address_p']
['set_nonincremental_init']
['set_reload_reg']
['set_reload_reg']
['set_unique_reg_note']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['allocate_reload_reg', 'choose_hard_reg_mode', 'choose_hard_reg_mode', 'clear_reload_reg_in_use', 'compute_use_by_pseudos', 'count_one_set', 'cselib_invalidate_regno', 'mark_set_1', 'reg_bitfield_target_p', 'reg_overlap_mentioned_for_reload_p', 'reg_overlap_mentioned_p', 'scan_rtx_reg']
['ix86_split_long_move', 'protect_from_queue', 'subst']
['sge_plus_constant']
['sge_plus_constant']
['protect_from_queue']
['calls_function_1']
['c_expand_asm_operands', 'expand_goto', 'lookup_field']
['find_dummy_reload']
['build_real', 'build_real']
['build_real', 'build_real']
['squeeze_notes']
['find_dummy_reload']
['build_real', 'build_real', 'simplify_plus_minus', 'simplify_plus_minus']
['build_real', 'build_real', 'simplify_plus_minus', 'simplify_plus_minus']
['cpp_push_buffer', 'failed_reload', 'squeeze_notes']
['find_dummy_reload']
['copy_rtx_and_substitute', 'emit_insns_after', 'expand_inline_function', 'find_dummy_reload', 'find_split_point', 'legitimize_pic_address', 'move_movables', 'record_value_for_reg']
['subst_stack_regs_pat', 'subst_stack_regs_pat']
['emit_insns_after']
['copy_insn_notes', 'find_base_term', 'fixup_reorder_chain', 'move_deaths', 'swap_rtx_condition']
['swap_rtx_condition']
['simplify_relational_operation']
['signed_or_unsigned_type']
['signed_or_unsigned_type']
['signed_or_unsigned_type']
['signed_or_unsigned_type']
['signed_or_unsigned_type']
['signed_type']
['signed_type']
['signed_type']
['signed_type']
['signed_type']
['get_memory_rtx']
['get_memory_rtx']
['get_memory_rtx']
['decode_addr_const', 'decode_addr_const', 'decode_addr_const', 'decode_addr_const']
['decode_addr_const', 'decode_addr_const', 'decode_addr_const', 'decode_addr_const']
['unsigned_type', 'unsigned_type']
['simplify_and_const_int']
['simplify_and_const_int']
['fixup_var_refs_1', 'fold_rtx', 'make_extraction', 'store_expr']
['compute_argument_addresses', 'sge_plus_constant']
['emit_libcall_block', 'protect_from_queue', 'sched_analyze_2']
['record_giv']
['check_asm_stack_operands', 'emit_library_call_value_1', 'expand_function_end', 'noce_get_alt_condition']
['combine_simplify_rtx', 'expand_call', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'make_memloc', 'next_insn_in_loop', 'simplify_if_then_else', 'simplify_relational_operation']
['scope_to_insns_initialize']
['expand_decl', 'mark_all_labels', 'memrefs_conflict_p', 'move_deaths', 'offset_address']
['mark_set_1']
['simplify_set']
['check_dbra_loop', 'cse_insn', 'expand_decl', 'mark_all_labels', 'offset_address', 'store_bit_field']
['move_movables']
['check_dbra_loop', 'check_dbra_loop', 'cse_insn', 'eliminate_regs', 'emit_libcall_block', 'fixup_var_refs_1', 'instantiate_virtual_regs_1', 'move_movables', 'rm_line_notes', 'rm_other_notes']
['consec_sets_giv', 'expand_decl', 'expand_function_end', 'make_extraction', 'subst_constants']
['convert_regs_1', 'make_extraction']
['eliminate_regs', 'extract_bit_field', 'instantiate_virtual_regs_1', 'mark_set_1', 'sched_analyze_2']
['eliminate_regs', 'eliminate_regs_in_insn', 'instantiate_virtual_regs_1', 'record_value_for_reg', 'simplify_plus_minus', 'simplify_set', 'simplify_subreg', 'simplify_subreg', 'subst_constants', 'subst_stack_regs_pat', 'subst_stack_regs_pat', 'unroll_loop', 'validate_replace_rtx_1']
['combine_simplify_rtx', 'expand_call', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'make_memloc', 'next_insn_in_loop', 'simplify_if_then_else', 'simplify_relational_operation']
['insert', 'subst_asm_stack_regs']
['print_rtx', 'simplify_giv_expr', 'subst_constants']
['move_movables']
['simplify_plus_minus', 'subst_stack_regs_pat', 'subst_stack_regs_pat']
['simplify_plus_minus']
['simplify_plus_minus']
['simplify_plus_minus']
['simplify_plus_minus']
['simplify_plus_minus']
['simplify_plus_minus']
['simplify_plus_minus']
['simplify_plus_minus']
['simplify_plus_minus', 'simplify_plus_minus']
['cse_end_of_basic_block', 'emit_libcall_block', 'emit_no_conflict_block', 'fold_rtx', 'rtx_renumbered_equal_p']
['eliminate_regs', 'extract_bit_field', 'instantiate_virtual_regs_1', 'mark_set_1', 'sched_analyze_2']
['copy_rtx_and_substitute', 'copy_rtx_and_substitute', 'copy_rtx_and_substitute', 'emit_input_reload_insns', 'find_split_point', 'find_split_point', 'fixup_var_refs_1', 'fold_rtx', 'for_each_successor_phi', 'general_induction_var', 'init_alias_analysis', 'move_movables', 'record_value_for_reg', 'refers_to_regno_for_reload_p', 'set_label_offsets', 'simplify_relational_operation', 'simplify_relational_operation']
['simplify_relational_operation']
['simplify_rtx']
['expand_mult_highpart_adjust']
['simplify_rtx']
['validate_replace_rtx_1']
['if_then_else_cond', 'if_then_else_cond', 'kill_value', 'known_cond', 'replace_rtx', 'simplify_rtx', 'true_regnum']
['simplify_rtx', 'simplify_rtx']
['if_then_else_cond', 'if_then_else_cond', 'known_cond', 'replace_rtx', 'simplify_rtx']
['simplify_rtx', 'simplify_rtx']
['if_then_else_cond', 'if_then_else_cond', 'kill_value', 'known_cond', 'replace_rtx', 'simplify_rtx', 'true_regnum']
['simplify_rtx']
['simplify_rtx']
['kill_value', 'simplify_rtx']
['simplify_subreg', 'unroll_loop', 'unroll_loop']
['emit_library_call_value_1']
['check_dbra_loop', 'copy_loop_body', 'copy_loop_body', 'eliminate_regs_in_insn', 'expand_function_end', 'fixup_var_refs_1', 'fixup_var_refs_insn', 'fixup_var_refs_insn', 'fold_rtx', 'force_to_mode', 'loop_iterations', 'loop_iterations', 'loop_iterations', 'memrefs_conflict_p', 'move_movables', 'print_rtx', 'protect_from_queue', 'simplify_giv_expr', 'simplify_giv_expr', 'skip_copy_to_return_value', 'squeeze_notes', 'store_expr', 'subst_constants']
['change_address_1', 'compute_forward_dependences', 'copy_loop_body', 'copy_loop_body', 'eliminate_regs_in_insn', 'expand_function_end', 'fixup_var_refs_1', 'fixup_var_refs_insn', 'fixup_var_refs_insn', 'fold_rtx', 'load_mems', 'loop_iterations', 'memrefs_conflict_p', 'print_rtx', 'protect_from_queue', 'simplify_comparison', 'simplify_giv_expr', 'simplify_giv_expr', 'store_expr', 'subst_constants']
['gen_lowpart_common']
['convert_move', 'convert_move', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine']
['simplify_subreg']
['simplify_subreg']
['simplify_subtraction']
['simplify_subtraction']
['expand_unop', 'simplify_binary_operation']
['do_compare_rtx_and_jump', 'expand_unop', 'int_mode_for_mode', 'ix86_expand_move', 'ix86_libcall_value', 'nonzero_bits', 'simplify_binary_operation', 'simplify_unary_operation']
['simplify_ternary_operation']
['combine_simplify_rtx', 'expand_call', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'make_memloc', 'next_insn_in_loop', 'simplify_if_then_else', 'simplify_relational_operation']
['next_insn_in_loop']
['gen_int_mode']
['gen_binary', 'gen_binary', 'gen_lowpart_for_combine', 'make_memloc', 'next_insn_in_loop']
['size_int_type_wide']
['size_int_type_wide']
['size_int_type_wide']
['size_int_type_wide']
['size_int_type_wide']
['size_int_type_wide', 'size_int_type_wide']
['size_int_type_wide', 'size_int_type_wide']
['size_int_type_wide', 'size_int_type_wide']
['size_int_type_wide']
['size_int_type_wide', 'size_int_type_wide']
['size_int_type_wide', 'size_int_type_wide']
['size_int_type_wide', 'size_int_type_wide']
['size_int_type_wide']
['size_int_type_wide', 'size_int_type_wide']
['size_int_type_wide']
['size_int_type_wide']
['trigraph_p']
['trigraph_p', 'trigraph_p']
['output_asm_insn']
['trigraph_p']
['sorry']
['sorry']
['sorry']
['sorry']
['report_diagnostic', 'sorry']
['sorry']
['report_diagnostic', 'sorry']
['report_diagnostic', 'sorry']
['apply_distributive_law']
['compensate_edge']
['compensate_edge']
['simplify_plus_minus', 'simplify_plus_minus']
['simplify_plus_minus', 'simplify_plus_minus']
['squeeze_notes', 'squeeze_notes']
['squeeze_notes']
['squeeze_notes']
['compensate_edge', 'set_label_offsets']
['reload_reg_free_for_value_p']
['alloc_block']
['check_dbra_loop', 'copy_loop_body', 'copy_loop_body', 'eliminate_regs_in_insn', 'expand_function_end', 'fixup_var_refs_1', 'fixup_var_refs_insn', 'fixup_var_refs_insn', 'fold_rtx', 'force_to_mode', 'loop_iterations', 'loop_iterations', 'loop_iterations', 'memrefs_conflict_p', 'move_movables', 'print_rtx', 'protect_from_queue', 'simplify_giv_expr', 'simplify_giv_expr', 'skip_copy_to_return_value', 'squeeze_notes', 'store_expr', 'subst_constants']
['compute_argument_addresses', 'eliminate_regs', 'ix86_split_long_move', 'protect_from_queue', 'sge_plus_constant', 'subst']
['compute_argument_addresses', 'extract_bit_field', 'hash_scan_set', 'insert', 'ix86_split_long_move', 'noce_try_abs', 'protect_from_queue', 'subst', 'subst_asm_stack_regs']
['peephole2_1', 'peephole2_1', 'peephole2_1', 'peephole2_1', 'split_1', 'split_1', 'split_1']
['recog_17', 'recog_20', 'recog_28']
['split_1']
['recog_4', 'split_1']
['split_1']
['peephole2_1', 'peephole2_1', 'peephole2_1', 'peephole2_1', 'split_1', 'split_1', 'split_1']
['recog_18', 'recog_18', 'recog_18', 'split_insns', 'split_insns']
['split_1']
['split_2', 'split_2', 'split_2']
['split_2', 'split_2', 'split_2']
['split_2', 'split_2', 'split_2']
['split_2']
['split_2']
['split_2']
['split_2']
['split_2']
['split_1']
['split_2']
['split_2']
['split_2']
['recog_18', 'recog_18', 'recog_18', 'split_insns', 'split_insns']
['recog_17', 'recog_19', 'recog_20', 'recog_4', 'recog_4', 'recog_4', 'split_2', 'split_2', 'split_2', 'split_2']
['split_2']
['recog_17', 'recog_19', 'recog_20', 'recog_4', 'recog_4', 'recog_4', 'split_2', 'split_2', 'split_2', 'split_2']
['split_2']
['recog_18', 'recog_18', 'recog_18', 'recog_19', 'split_2', 'split_2', 'split_2', 'split_2', 'split_3', 'split_3', 'split_4', 'split_4', 'split_4', 'split_insns', 'split_insns']
['recog', 'recog_19', 'recog_21', 'recog_22', 'recog_24', 'recog_24', 'recog_25', 'recog_28', 'recog_4', 'recog_4', 'split_1']
['peephole2_2', 'recog_17', 'recog_18', 'recog_18', 'recog_18', 'recog_19', 'recog_19', 'recog_19', 'recog_22', 'recog_22', 'recog_23', 'recog_23', 'recog_24', 'recog_24', 'recog_24', 'recog_25', 'recog_25', 'recog_25', 'recog_28', 'recog_4', 'split_3']
['peephole2_2', 'recog_28', 'recog_4']
['recog_28', 'split_3', 'split_3']
['split_3', 'split_3']
['split_3']
['recog_4', 'split_4']
['recog_4']
['recog_27', 'recog_28', 'recog_28', 'split_3', 'split_4']
['split_3']
['split_3']
['split_3']
['recog_18', 'recog_18', 'recog_18', 'recog_19', 'split_2', 'split_2', 'split_2', 'split_2', 'split_3', 'split_3', 'split_4', 'split_4', 'split_4', 'split_insns', 'split_insns']
['recog_21', 'recog_24', 'recog_25', 'recog_28', 'recog_4', 'split_1', 'split_4']
['recog_21', 'recog_21', 'recog_21', 'recog_22', 'recog_22', 'recog_23', 'recog_23', 'recog_24', 'recog_24', 'recog_25', 'recog_25', 'recog_27', 'split_3']
['split_3']
['split_3', 'split_3']
['protect_from_queue', 'record_operand_costs', 'swap_rtx_condition']
['skip_copy_to_return_value']
['copy_insn_notes', 'fixup_reorder_chain', 'swap_rtx_condition']
['record_operand_costs', 'rm_line_notes', 'rm_other_notes']
['merge_blocks_nomove', 'queue_to_ready', 'restore_line_notes']
['delete_output_reload', 'expand_goto']
['compute_forward_dependences', 'compute_forward_dependences', 'squeeze_notes', 'squeeze_notes']
['extract_insn', 'recog', 'split_insns']
['recog_18', 'recog_18', 'recog_18', 'split_insns', 'split_insns']
['split_insns']
['recog_18', 'recog_18', 'recog_18', 'split_insns', 'split_insns']
['split_insns']
['string_constant']
['check_format_info_recurse']
['save_line_notes', 'squeeze_notes']
['skip_copy_to_return_value', 'squeeze_notes']
['squeeze_notes']
['compute_forward_dependences', 'compute_forward_dependences', 'squeeze_notes', 'squeeze_notes']
['compute_forward_dependences', 'compute_forward_dependences', 'squeeze_notes', 'squeeze_notes']
['squeeze_notes', 'squeeze_notes']
['squeeze_notes', 'squeeze_notes']
['squeeze_notes', 'squeeze_notes']
['squeeze_notes', 'squeeze_notes']
['squeeze_notes']
['skip_copy_to_return_value', 'squeeze_notes']
['squeeze_notes']
['squeeze_notes']
['squeeze_notes']
['squeeze_notes']
['squeeze_notes']
['delete_output_reload']
['eliminate_regs_in_insn', 'find_dummy_reload', 'init_alias_analysis', 'legitimize_pic_address', 'mark_used_regs', 'rm_line_notes', 'rm_other_notes', 'simplify_subreg']
['check_asm_stack_operands', 'check_dbra_loop', 'compute_forward_dependences', 'copy_rtx_and_substitute', 'copy_rtx_and_substitute', 'cse_end_of_basic_block', 'cse_insn', 'eliminate_regs', 'eliminate_regs_in_insn', 'eliminate_regs_in_insn', 'emit_library_call_value_1', 'expand_function_end', 'expand_inline_function', 'find_base_value', 'find_equiv_reg', 'find_equiv_reg', 'find_reloads_address_1', 'fixup_var_refs_1', 'fixup_var_refs_1', 'fixup_var_refs_1', 'move_movables', 'move_movables', 'move_movables', 'move_movables', 'noce_get_alt_condition', 'print_rtx', 'restore_line_notes', 'sge_plus_constant', 'simplify_comparison', 'simplify_giv_expr', 'simplify_giv_expr', 'simplify_plus_minus', 'skip_copy_to_return_value', 'store_bit_field', 'store_bit_field', 'subst', 'subst', 'subst_asm_stack_regs', 'subst_constants', 'subst_constants', 'visit_expression']
['cse_insn']
['copy_insn_1']
['text_section']
['compute_hash_table', 'record_last_reg_set_info']
['copy_eh_notes', 'copy_eh_notes', 'dwarf2out_stack_adjust']
['emit_input_reload_insns', 'find_splittable_regs']
['adjust_address_1', 'find_single_use_1']
['delete_output_reload']
['compute_forward_dependences']
['get_attr_prefix_0f']
['skip_copy_to_return_value']
['copy_loop_body', 'eliminate_regs_in_insn', 'emit_input_reload_insns', 'memrefs_conflict_p', 'move_movables', 'visit_expression']
['loop_iterations']
['emit_libcall_block', 'legitimize_pic_address', 'make_extraction', 'merge_blocks_nomove', 'noce_process_if_block', 'queue_to_ready']
['fold_rtx']
['emit_libcall_block', 'find_reloads_address_1', 'fold_rtx', 'rm_line_notes', 'rm_other_notes']
['hash_scan_set']
['check_dbra_loop', 'find_reloads_address_1', 'fold_rtx', 'force_nonfallthru_and_redirect', 'loop_iterations', 'simplify_comparison']
['copy_loop_body', 'copy_loop_body', 'expand_function_end', 'fixup_var_refs_insn', 'fixup_var_refs_insn', 'memrefs_conflict_p', 'print_rtx', 'protect_from_queue', 'simplify_giv_expr', 'simplify_set', 'simplify_shift_const', 'store_expr', 'subst_constants']
['change_address_1', 'compute_forward_dependences', 'compute_forward_dependences', 'deps_may_trap_p', 'find_base_term', 'protect_from_queue', 'record_operand_costs', 'restore_line_notes', 'rm_line_notes', 'rm_other_notes', 'simplify_set', 'skip_copy_to_return_value', 'skip_copy_to_return_value', 'squeeze_notes', 'swap_rtx_condition']
['build1']
['build1']
['build1']
['build1']
['ix86_function_value', 'standard_80387_constant_p']
['free_edge']
['pushlevel']
['ldst_entry']
['ldst_entry']
['push_init_level']
['push_init_level']
['print_spelling', 'spelling_length']
['push_init_level']
['push_init_level']
['push_init_level']
['push_init_level']
['dwarf2out_begin_prologue']
['timevar_push']
['bitmap_copy']
['bitmap_copy']
['start_sequence']
['staticp']
['status_warning']
['std_expand_builtin_va_arg']
['std_expand_builtin_va_arg']
['std_expand_builtin_va_start']
['std_expand_builtin_va_start']
['std_expand_builtin_va_start']
['std_expand_builtin_va_start']
['emit_libcall_block', 'protect_from_queue']
['adjust_address_1', 'consec_sets_giv', 'copy_loop_body', 'eliminate_regs_in_insn', 'find_equiv_reg', 'store_bit_field']
['emit_library_call_value_1']
['eliminate_regs']
['apply_distributive_law', 'check_dbra_loop', 'express_from', 'noce_get_condition']
['ix86_split_to_parts']
['ix86_split_to_parts']
['express_from']
['change_address']
['copy_loop_body', 'eliminate_regs_in_insn', 'find_equiv_reg', 'move_movables', 'move_movables', 'simplify_giv_expr', 'store_bit_field', 'subst', 'visit_expression']
['noce_get_alt_condition', 'noce_get_condition', 'sched_analyze_2']
['noce_get_alt_condition', 'noce_get_condition', 'sched_analyze_2']
['check_asm_stack_operands', 'check_dbra_loop', 'compute_forward_dependences', 'copy_rtx_and_substitute', 'copy_rtx_and_substitute', 'cse_end_of_basic_block', 'cse_insn', 'eliminate_regs', 'eliminate_regs_in_insn', 'eliminate_regs_in_insn', 'emit_library_call_value_1', 'expand_function_end', 'expand_inline_function', 'find_base_value', 'find_equiv_reg', 'find_equiv_reg', 'find_reloads_address_1', 'fixup_var_refs_1', 'fixup_var_refs_1', 'fixup_var_refs_1', 'move_movables', 'move_movables', 'move_movables', 'move_movables', 'noce_get_alt_condition', 'print_rtx', 'restore_line_notes', 'sge_plus_constant', 'simplify_comparison', 'simplify_giv_expr', 'simplify_giv_expr', 'simplify_plus_minus', 'skip_copy_to_return_value', 'store_bit_field', 'store_bit_field', 'subst', 'subst', 'subst_asm_stack_regs', 'subst_constants', 'subst_constants', 'visit_expression']
['expand_inline_function']
['store_field']
['store_field']
['expand_mult_highpart']
['widen_operand']
['store_fixed_bit_field']
['array_size_for_constructor']
['set_decl_abstract_flags', 'set_decl_origin_self']
['put_addressof_into_stack']
['output_addressed_constants']
['output_addressed_constants']
['expand_builtin_expect_jump', 'pushdecl']
['extract_bit_field', 'store_split_bit_field']
['noce_process_if_block', 'store_split_bit_field']
['compute_argument_addresses', 'move_deaths', 'move_deaths', 'protect_from_queue', 'store_split_bit_field']
['store_split_bit_field']
['store_split_bit_field']
['store_split_bit_field']
['store_split_bit_field']
['adjust_address_1', 'adjust_address_1']
['check_asm_stack_operands', 'emit_library_call_value_1', 'expand_function_end', 'fixup_var_refs_insn', 'noce_get_alt_condition', 'store_expr']
['check_asm_stack_operands', 'copy_insn_list', 'copy_loop_body', 'emit_library_call_value_1', 'expand_decl', 'expand_function_end', 'noce_get_alt_condition']
['adjust_address_1', 'adjust_address_1', 'consec_sets_giv', 'copy_loop_body', 'cselib_record_sets', 'eliminate_regs_in_insn', 'find_equiv_reg', 'fixup_var_refs_insn', 'gen_reload', 'store_bit_field', 'store_expr']
['compute_argument_addresses', 'express_from_1', 'find_split_point', 'fixup_var_refs_insn', 'sge_plus_constant', 'store_expr']
['copy_insn_list', 'copy_loop_body', 'copy_loop_body', 'expand_decl', 'fixup_var_refs_insn', 'init_propagate_block_info', 'insn_dead_p', 'record_giv', 'simplify_relational_operation', 'store_expr']
['adjust_address_1', 'consec_sets_giv', 'copy_loop_body', 'eliminate_regs_in_insn', 'express_from_1', 'find_equiv_reg', 'find_split_point', 'force_to_mode', 'store_bit_field']
['copy_insn_list', 'legitimize_pic_address']
['find_single_use_1']
['noce_get_alt_condition']
['array_size_for_constructor']
['decode_field_reference', 'string_constant']
['subreg_hard_regno']
['subreg_regno']
['subreg_regno', 'true_regnum']
['subreg_regno_offset']
['subreg_regno_offset']
['expand_field_assignment']
['if_then_else_cond', 'if_then_else_cond', 'if_then_else_cond', 'if_then_else_cond']
['if_then_else_cond', 'if_then_else_cond', 'known_cond', 'replace_rtx', 'simplify_rtx']
['if_then_else_cond', 'if_then_else_cond', 'if_then_else_cond', 'if_then_else_cond']
['force_operand']
['apply_distributive_law', 'convert_regs_1', 'df_ref_record', 'emit_input_reload_insns', 'expand_field_assignment', 'make_extraction', 'make_extraction', 'refers_to_regno_for_reload_p', 'simplify_set', 'subst_constants']
['expand_decl']
['eliminate_regs']
['copy_insn_list', 'find_split_point']
['emit_input_reload_insns', 'subst_asm_stack_regs', 'subst_constants']
['check_dbra_loop', 'copy_rtx_and_substitute', 'cse_end_of_basic_block', 'move_movables', 'visit_expression', 'visit_expression']
['fold_rtx', 'move_deaths', 'record_value_for_reg', 'simplify_relational_operation', 'simplify_relational_operation', 'subst_stack_regs_pat']
['check_dbra_loop']
['load_mems']
['record_value_for_reg']
['check_dbra_loop', 'copy_loop_body', 'copy_rtx_and_substitute', 'find_reloads_address_1', 'find_single_use_1', 'find_split_point', 'find_split_point', 'move_movables', 'refers_to_regno_for_reload_p', 'refers_to_regno_for_reload_p', 'simplify_set', 'subst_asm_stack_regs']
['copy_rtx_and_substitute', 'copy_rtx_and_substitute', 'copy_rtx_and_substitute', 'find_single_use_1', 'get_attr_type', 'load_mems', 'noce_get_alt_condition', 'simplify_comparison', 'simplify_giv_expr']
['subst_constants']
['emit_libcall_block', 'protect_from_queue']
['adjust_address_1', 'consec_sets_giv', 'copy_loop_body', 'eliminate_regs_in_insn', 'find_equiv_reg', 'store_bit_field']
['express_from_1', 'find_split_point']
['simplify_subreg']
['find_reloads', 'record_giv', 'store_bit_field', 'subst']
['find_reloads']
['find_split_point', 'find_split_point', 'fixup_var_refs_1', 'for_each_successor_phi', 'refers_to_regno_for_reload_p', 'set_label_offsets']
['protect_from_queue', 'record_operand_costs', 'swap_rtx_condition']
['subst_stack_regs_pat']
['find_base_value', 'get_attr_prefix_0f', 'mark_referenced_regs', 'noce_get_alt_condition', 'restore_line_notes', 'sched_analyze_2', 'sge_plus_constant']
['gen_reload']
['sge_plus_constant']
['merge_blocks_nomove']
['mark_referenced_regs']
['get_attr_prefix_0f', 'get_attr_prefix_0f']
['rm_line_notes', 'rm_other_notes']
['swap_rtx_condition']
['offsettable_address_p']
['compute_forward_dependences', 'compute_forward_dependences']
['squeeze_notes']
['legitimize_pic_address', 'memrefs_conflict_p']
['memrefs_conflict_p']
['strength_reduce', 'strength_reduce']
['strength_reduce', 'strength_reduce']
['strength_reduce', 'strength_reduce']
['classify_argument', 'find_comparison_args']
['classify_argument']
['classify_argument', 'identify_call_return_value']
['expand_mult_highpart']
['strength_reduce', 'strength_reduce']
['classify_argument']
['classify_argument']
['classify_argument']
['simplify_subreg', 'unroll_loop', 'unroll_loop']
['sched_analyze_2']
['subst_stack_regs_pat']
['mark_set_1', 'subst_constants']
['simplify_subreg']
['eliminate_regs', 'simplify_comparison', 'simplify_subreg', 'unroll_loop']
['check_dbra_loop', 'copy_rtx_and_substitute']
['simplify_giv_expr']
['check_dbra_loop', 'convert_regs_1', 'find_single_use_1', 'fold_rtx', 'force_nonfallthru_and_redirect', 'move_deaths', 'record_value_for_reg', 'refers_to_regno_for_reload_p', 'simplify_relational_operation', 'simplify_set', 'simplify_subreg', 'subst_stack_regs_pat', 'unroll_loop']
['swap_rtx_condition_1']
['change_address_1', 'compute_forward_dependences', 'compute_forward_dependences', 'deps_may_trap_p', 'find_base_term', 'protect_from_queue', 'record_operand_costs', 'restore_line_notes', 'rm_line_notes', 'rm_other_notes', 'simplify_set', 'skip_copy_to_return_value', 'skip_copy_to_return_value', 'squeeze_notes', 'swap_rtx_condition']
['cse_insn']
['eliminate_regs', 'unroll_loop']
['simplify_plus_minus', 'subst_stack_regs_pat']
['check_dbra_loop', 'rename_block']
['apply_distributive_law', 'change_address_1', 'check_dbra_loop', 'compute_forward_dependences', 'eliminate_regs', 'eliminate_regs', 'eliminate_regs_in_insn', 'expand_inline_function', 'express_from', 'extract_bit_field', 'fixup_var_refs_1', 'fold_rtx', 'instantiate_virtual_regs_1', 'load_mems', 'loop_iterations', 'mark_set_1', 'noce_get_condition', 'sched_analyze_2', 'simplify_comparison', 'simplify_comparison', 'simplify_giv_expr', 'simplify_giv_expr']
['fold_rtx']
['copy_insn_notes', 'fold_rtx']
['consec_sets_giv', 'copy_rtx_and_substitute', 'eliminate_regs', 'eliminate_regs_in_insn', 'expand_decl', 'expand_function_end', 'find_base_term', 'find_reloads', 'force_to_mode', 'ix86_split_long_move', 'load_mems', 'make_extraction', 'protect_from_queue', 'record_giv', 'restore_line_notes', 'rm_line_notes', 'rm_other_notes', 'simplify_set', 'simplify_shift_const', 'store_bit_field', 'subst', 'subst', 'subst_constants']
['protect_from_queue', 'record_operand_costs', 'swap_rtx_condition']
['scope_to_insns_initialize']
['rm_line_notes', 'rm_line_notes', 'rm_other_notes', 'rm_other_notes', 'squeeze_notes', 'squeeze_notes']
['swap_rtx_condition']
['timevar_pop']
['timevar_pop']
['timevar_pop', 'timevar_pop']
['timevar_pop', 'timevar_pop']
['timevar_pop']
['timevar_push']
['timevar_pop']
['timevar_pop']
['timevar_pop']
['timevar_push']
['apply_distributive_law', 'emit_libcall_block', 'fixup_var_refs_1', 'gen_reload', 'insert', 'subst_constants', 'trampoline_address']
['trampoline_address']
['trampoline_address']
['trampoline_address']
['expand_decl', 'expand_function_start', 'ix86_va_arg', 'ix86_va_arg', 'round_trampoline_addr']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'dw2_asm_output_encoded_addr_rtx', 'emit_block_move', 'emit_push_insn', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'expand_builtin_prefetch', 'find_best_addr', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_expand_prologue', 'ix86_force_to_memory', 'ix86_force_to_memory', 'ix86_va_arg', 'legitimize_pic_address', 'legitimize_pic_address', 'load_pic_register', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'round_trampoline_addr', 'round_trampoline_addr']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'dw2_asm_output_encoded_addr_rtx', 'emit_block_move', 'emit_push_insn', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'expand_builtin_prefetch', 'find_best_addr', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_expand_prologue', 'ix86_force_to_memory', 'ix86_force_to_memory', 'ix86_va_arg', 'legitimize_pic_address', 'legitimize_pic_address', 'load_pic_register', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'round_trampoline_addr', 'round_trampoline_addr']
['tree_cons']
['find_base_value']
['find_base_term']
['validate_replace_rtx_1']
['find_base_value']
['true_dependence']
['if_then_else_cond', 'if_then_else_cond', 'kill_value', 'known_cond', 'replace_rtx', 'simplify_rtx', 'true_regnum']
['subreg_regno', 'true_regnum']
['df_ref_record']
['adjust_address_1']
['instantiate_virtual_regs_1', 'simplify_relational_operation', 'subst_constants', 'validate_replace_rtx_1']
['eliminate_regs', 'eliminate_regs_in_insn', 'find_split_point', 'move_movables', 'record_value_for_reg', 'store_expr']
['find_dummy_reload', 'memrefs_conflict_p', 'protect_from_queue', 'store_expr']
['df_ref_record', 'emit_input_reload_insns', 'purge_addressof_1', 'simplify_plus_minus', 'simplify_set', 'subst_stack_regs_pat']
['check_dbra_loop']
['copy_rtx_and_substitute', 'copy_rtx_and_substitute', 'copy_rtx_and_substitute', 'fold_rtx', 'move_movables']
['copy_rtx_and_substitute', 'schedule_block', 'simplify_comparison']
['expand_function_end', 'extract_bit_field', 'queue_to_ready', 'simplify_subreg', 'unroll_loop']
['simplify_set']
['adjust_address_1', 'cselib_record_sets', 'gen_reload']
['subst_constants']
['ix86_split_long_move']
['compute_insns_for_mem', 'ix86_split_long_move', 'record_value_for_reg']
['handle_rd_kill_set']
['copy_insn_list']
['hash_scan_set', 'noce_process_if_block']
['copy_insn_list']
['noce_try_abs']
['init_propagate_block_info']
['mark_set_1']
['copy_loop_body', 'cse_insn', 'eliminate_regs_in_insn', 'expand_goto', 'memrefs_conflict_p', 'move_movables', 'scope_to_insns_initialize', 'simplify_comparison']
['check_dbra_loop', 'cse_insn', 'expand_decl', 'mark_all_labels', 'offset_address', 'store_bit_field']
['insert', 'subst_asm_stack_regs']
['find_reloads', 'instantiate_virtual_regs_1']
['hash_scan_set']
['fold_rtx']
['check_dbra_loop', 'find_reloads_address_1', 'fold_rtx', 'force_nonfallthru_and_redirect', 'loop_iterations', 'simplify_comparison']
['eliminate_regs_in_insn', 'fixup_var_refs_insn', 'set_label_offsets']
['find_splittable_regs']
['emit_libcall_block', 'emit_no_conflict_block']
['noce_emit_move_insn', 'try_split', 'try_split']
['noce_emit_move_insn', 'try_split', 'try_split']
['make_compound_operation', 'precompute_register_parameters', 'try_tablejump', 'try_tablejump']
['make_compound_operation', 'precompute_register_parameters', 'try_tablejump', 'try_tablejump']
['expand_builtin_mathfn']
['expand_complex_abs']
['probe_stack_range']
['do_tablejump']
['emit_move_insn_1']
['do_tablejump']
['do_tablejump']
['do_tablejump']
['type_lists_compatible_p']
['type_lists_compatible_p']
['adjust_address_1', 'adjust_address_1', 'apply_distributive_law', 'check_asm_stack_operands', 'check_dbra_loop', 'check_dbra_loop', 'combine_simplify_rtx', 'compute_argument_addresses', 'compute_argument_addresses', 'copy_insn_list', 'copy_insn_notes', 'copy_loop_body', 'copy_rtx_and_substitute', 'cselib_record_sets', 'expand_decl', 'express_from', 'extract_bit_field', 'find_base_value', 'find_split_point', 'fold_rtx', 'gen_reload', 'hash_scan_set', 'identify_call_return_value', 'init_propagate_block_info', 'insn_dead_p', 'instantiate_virtual_regs_1', 'ix86_split_long_move', 'loop_iterations', 'noce_get_condition', 'noce_try_abs', 'protect_from_queue', 'protect_from_queue', 'record_giv', 'restore_line_notes', 'sge_plus_constant', 'sge_plus_constant', 'simplify_relational_operation', 'skip_copy_to_return_value', 'squeeze_notes', 'store_expr', 'subst']
['copy_loop_body', 'init_propagate_block_info', 'insn_dead_p', 'record_giv', 'simplify_relational_operation']
['decompose']
['unroll_loop']
['check_dbra_loop', 'check_dbra_loop', 'cse_insn', 'eliminate_regs', 'find_dummy_reload', 'find_split_point', 'instantiate_virtual_regs_1', 'legitimize_pic_address', 'move_movables', 'move_movables', 'record_value_for_reg']
['apply_distributive_law', 'change_address_1', 'check_dbra_loop', 'compute_forward_dependences', 'eliminate_regs', 'eliminate_regs', 'expand_inline_function', 'express_from', 'extract_bit_field', 'instantiate_virtual_regs_1', 'mark_set_1', 'noce_get_condition', 'sched_analyze_2', 'simplify_giv_expr', 'simplify_set', 'simplify_shift_const', 'unroll_loop']
['build1']
['build1']
['unsigned_type']
['unsigned_type']
['unsigned_type']
['unsigned_type']
['unsigned_type']
['update_table_tick']
['maybe_eliminate_biv_1']
['do_SUBST', 'do_SUBST_INT']
['gen_binary', 'gen_binary', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'loop_givs_rescan']
['commit_one_edge_insertion']
['alloc_EXPR_LIST']
['find_mem_givs']
['convert_regs_1']
['kill_value', 'mention_regs']
['set_decl_abstract_flags', 'set_decl_origin_self']
['validate_change']
['copy_loop_body', 'memrefs_conflict_p']
['cse_insn']
['eliminate_regs_in_insn', 'emit_insns_after']
['record_value_for_reg', 'simplify_comparison', 'visit_expression']
['convert_regs_1', 'refers_to_regno_for_reload_p', 'simplify_subreg']
['subst_constants']
['try_copy_prop']
['immediate_operand']
['validize_mem']
['bss_section', 'text_section']
['bss_section', 'text_section']
['data_section']
['bss_section', 'text_section']
['data_section']
['data_section']
['int_vasprintf']
['int_vasprintf']
['int_vasprintf']
['sorry']
['report_diagnostic']
['sorry']
['sorry']
['sorry']
['report_diagnostic']
['sorry']
['sorry']
['verify_flow_info']
['verify_flow_info']
['verify_flow_info']
['verify_flow_info']
['check_dbra_loop', 'constrain_operands', 'delete_output_reload', 'fixup_var_refs_insn', 'nonzero_bits', 'rename_block']
['constrain_operands', 'nonzero_bits']
['check_dbra_loop', 'fixup_var_refs_insn']
['visit_expression']
['eliminate_regs', 'find_single_use_1', 'get_attr_type', 'load_mems', 'move_movables', 'noce_get_alt_condition', 'simplify_comparison', 'visit_expression']
['load_mems']
['load_mems']
['copy_rtx_and_substitute', 'copy_rtx_and_substitute', 'copy_rtx_and_substitute', 'eliminate_regs_in_insn', 'fixup_reorder_chain', 'get_attr_prefix_0f']
['find_reloads', 'loop_iterations', 'subst_stack_regs_pat']
['visualize_scheduled_insns']
['walk_tree']
['walk_tree', 'walk_tree']
['walk_tree', 'walk_tree']
['walk_tree']
['ggc_mark_trees', 'unsave_expr_now_r', 'verify_tree']
['walk_tree']
['walk_tree', 'walk_tree']
['walk_tree', 'walk_tree']
['want_to_gcse_p']
['want_to_gcse_p']
['want_to_gcse_p']
['want_to_gcse_p']
['want_to_gcse_p']
['want_to_gcse_p']
['want_to_gcse_p']
['want_to_gcse_p']
['want_to_gcse_p']
['pedwarn_c99']
['def_cfa_1', 'def_cfa_1', 'def_cfa_1', 'def_cfa_1']
['def_cfa_1', 'def_cfa_1', 'def_cfa_1', 'def_cfa_1']
['spelling_length']
['print_spelling', 'spelling_length']
['spelling_length']
['warning_with_decl']
['pedwarn_c99']
['def_cfa_1', 'def_cfa_1', 'def_cfa_1', 'def_cfa_1']
['def_cfa_1', 'def_cfa_1', 'def_cfa_1', 'def_cfa_1']
['widen_operand']
['widen_operand']
['wipe_dead_reg']
['wipe_dead_reg']
['wipe_dead_reg']
['wipe_dead_reg']
['choose_hard_reg_mode', 'cselib_invalidate_regno', 'reg_overlap_mentioned_for_reload_p']
['expand_mult_highpart']
['strength_reduce', 'strength_reduce']
['classify_argument']
['classify_argument']
['find_base_value']
['find_base_term']
['emit_prefetch_instructions', 'validate_replace_rtx_1']
['find_reloads_address', 'noce_emit_cmove', 'replace_rtx', 'replace_rtx', 'write_dependence_p']
['write_dependence_p']
['x86_field_alignment']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['combine_reversed_comparison_code', 'num_sign_bit_copies']
['xstrerror']
['parse_number']
['c_lex']
['do_store_flag', 'validate_replace_rtx_1']
['c_lex']
