['_cpp_get_buff']
['_cpp_get_buff']
['next_tokenrun']
['next_tokenrun']
['next_tokenrun']
['next_tokenrun']
['yylex']
['add_data_member_location_attribute', 'add_data_member_location_attribute', 'dwarf2out_abstract_function', 'dwarf2out_abstract_function', 'dwarf2out_abstract_function', 'dwarf2out_abstract_function', 'gen_subprogram_die', 'gen_subprogram_die', 'gen_subprogram_die', 'gen_subroutine_type_die', 'gen_subroutine_type_die', 'gen_subroutine_type_die', 'gen_variable_die', 'gen_variable_die', 'gen_variable_die', 'get_AT', 'get_AT', 'get_AT_unsigned', 'get_AT_unsigned', 'get_AT_unsigned', 'get_AT_unsigned', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die']
['add_bound_info']
['add_byte_size_attribute']
['add_byte_size_attribute']
['add_byte_size_attribute']
['add_byte_size_attribute']
['add_byte_size_attribute']
['schedule_insns']
['cse_end_of_basic_block']
['canonicalize_condition', 'get_AT_unsigned', 'optimize_bit_field', 'reload_combine_note_use']
['rm_other_notes']
['compute_transp']
['dead_or_predicable']
['life_analysis']
['life_analysis']
['canonicalize_condition', 'get_AT_unsigned', 'optimize_bit_field', 'reload_combine_note_use']
['rm_other_notes']
['compute_transp']
['get_frame_alias_set', 'get_varargs_alias_set', 'legitimize_pic_address', 'toplev_main']
['field_byte_offset']
['add_data_member_location_attribute', 'add_data_member_location_attribute', 'dwarf2out_abstract_function', 'dwarf2out_abstract_function', 'dwarf2out_abstract_function', 'dwarf2out_abstract_function', 'gen_subprogram_die', 'gen_subprogram_die', 'gen_subprogram_die', 'gen_subroutine_type_die', 'gen_subroutine_type_die', 'gen_subroutine_type_die', 'gen_variable_die', 'gen_variable_die', 'gen_variable_die', 'get_AT', 'get_AT', 'get_AT_unsigned', 'get_AT_unsigned', 'get_AT_unsigned', 'get_AT_unsigned', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die']
['add_data_member_location_attribute']
['gen_split_1135', 'gen_split_1136', 'gen_split_1156']
['add_double']
['add_double']
['add_equal_note']
['add_equal_note']
['add_params']
['addr_side_effect_eval']
['adjust_address_1']
['adjust_address_1', 'copy_insn_list', 'find_basic_blocks']
['canonicalize_condition', 'combine_regs', 'emit_no_conflict_block', 'find_dummy_reload', 'get_attr_prefix_0f', 'legitimize_pic_address', 'nonoverlapping_memrefs_p']
['loop_optimize']
['init_alias_analysis', 'reload_cse_regs']
['adjust_address_1']
['adjust_address_1', 'adjust_address_1', 'reposition_prologue_and_epilogue_notes']
['adjust_address_1']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'emit_move_insn_1', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_main_function', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_tablejump', 'legitimize_address', 'output_cfi', 'probe_stack_range', 'push_block', 'round_push', 'round_trampoline_addr', 'ssa_const_prop']
['aggregate_value_p']
['alloc_aux_for_blocks']
['alloc_aux_for_blocks']
['alloc_aux_for_edges']
['alloc_aux_for_edges']
['alloc_EXPR_LIST']
['convert_regs_2', 'df_uses_record', 'reload_combine_note_use']
['alloc_gcse_mem']
['can_disregard_other_sets', 'cse_main', 'free_gcse_mem']
['adjust_address_1', 'reload_combine_note_use']
['compute_transp']
['optimize_mode_switching']
['allocate_dynamic_stack_space']
['emit_group_load']
['allocate_dynamic_stack_space']
['allocate_dynamic_stack_space']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'emit_move_insn_1', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_main_function', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_tablejump', 'legitimize_address', 'output_cfi', 'probe_stack_range', 'push_block', 'round_push', 'round_trampoline_addr', 'ssa_const_prop']
['probe_stack_range']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'emit_move_insn_1', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_main_function', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_tablejump', 'legitimize_address', 'output_cfi', 'probe_stack_range', 'push_block', 'round_push', 'round_trampoline_addr', 'ssa_const_prop']
['allocate_dynamic_stack_space']
['allocate_dynamic_stack_space']
['allocate_reg_info']
['allocate_reg_info', 'reg_alternate_class', 'reg_preferred_class']
['allocate_reg_info', 'regclass']
['alter_reg']
['alter_reg']
['expand_builtin_init_dwarf_reg_sizes']
['simplify_subreg']
['announce_function']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'emit_move_insn_1', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_main_function', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_tablejump', 'legitimize_address', 'output_cfi', 'probe_stack_range', 'push_block', 'round_push', 'round_trampoline_addr', 'ssa_const_prop']
['apply_args_size']
['apply_args_size']
['apply_args_size']
['apply_args_size']
['apply_args_size']
['apply_args_size']
['init_expr_once']
['plus_constant_wide']
['init_expr_once']
['plus_constant_wide']
['init_expr_once']
['plus_constant_wide']
['apply_args_size']
['copy_loop_body']
['gen_sequence']
['emit_group_store', 'emit_group_store']
['emit_no_conflict_block', 'emit_no_conflict_block', 'for_each_insn_in_loop', 'for_each_insn_in_loop', 'gen_binary']
['general_operand']
['gen_mem_addressof']
['expand_end_case_type', 'fixup_var_refs_1', 'fold_rtx', 'gcse_main', 'purge_addressof_1', 'regmove_optimize']
['apply_distributive_law']
['copy_insn_1', 'copy_rtx', 'gen_binary', 'gen_lowpart_for_combine', 'make_memloc', 'simplify_giv_expr', 'simplify_relational_operation']
['replace_reg']
['apply_distributive_law', 'standard_80387_constant_p']
['apply_distributive_law']
['apply_distributive_law']
['find_basic_blocks', 'get_AT_unsigned']
['apply_distributive_law', 'apply_distributive_law']
['apply_distributive_law', 'apply_distributive_law', 'apply_distributive_law', 'apply_distributive_law']
['apply_distributive_law', 'apply_distributive_law', 'apply_distributive_law', 'apply_distributive_law']
['get_AT_unsigned']
['get_AT_unsigned']
['apply_result_size']
['apply_result_size']
['apply_result_size']
['init_expr_once']
['init_expr_once']
['expand_increment']
['init_expr_once']
['init_expr_once']
['init_expr_once']
['find_comparison_args']
['apply_args_size']
['find_free_reg']
['change_address']
['apply_result_size']
['asctoeg']
['asctoeg']
['lex_number']
['check_format_info_main']
['maybe_read_dollar_number']
['asm_fprintf']
['assemble_end_function', 'assemble_end_function']
['assemble_end_function', 'assemble_end_function']
['assemble_end_function', 'assemble_end_function']
['assemble_end_function', 'assemble_end_function']
['assemble_end_function']
['assemble_end_function']
['assemble_start_function']
['ereal_to_decimal']
['reg_is_born']
['assemble_variable']
['assemble_variable']
['bss_section']
['bss_section']
['assemble_variable']
['do_case', 'output_init_element']
['assemble_variable', 'assemble_zeros']
['assemble_variable']
['assemble_variable', 'assemble_zeros']
['comptypes', 'comptypes']
['back_branch_in_range_p']
['back_branch_in_range_p', 'branch_prob', 'canonicalize_condition', 'cse_basic_block', 'delete_related_insns', 'find_basic_blocks', 'if_convert', 'loop_optimize', 'set_label_offsets', 'try_combine']
['final', 'splice_child_die']
['back_branch_in_range_p']
['back_branch_in_range_p']
['back_branch_in_range_p']
['back_branch_in_range_p']
['back_branch_in_range_p']
['back_branch_in_range_p']
['back_branch_in_range_p']
['back_branch_in_range_p', 'back_branch_in_range_p']
['back_branch_in_range_p', 'back_branch_in_range_p']
['emit_no_conflict_block', 'emit_no_conflict_block', 'final', 'final']
['emit_no_conflict_block', 'emit_no_conflict_block', 'final', 'final']
['back_branch_in_range_p']
['binary_fp_operator']
['binary_fp_operator']
['binary_op_error', 'print_exp']
['bit_from_pos']
['bitmap_clear_bit']
['record_one_set']
['record_one_set']
['record_one_set']
['biv_total_increment', 'biv_total_increment']
['biv_total_increment', 'biv_total_increment']
['biv_total_increment']
['biv_total_increment', 'emit_prefetch_instructions']
['biv_total_increment']
['biv_total_increment']
['biv_total_increment', 'biv_total_increment']
['biv_total_increment', 'biv_total_increment']
['biv_total_increment', 'biv_total_increment']
['biv_total_increment', 'biv_total_increment']
['biv_total_increment']
['copy_loop_body']
['branch_prob']
['branch_prob']
['branch_prob']
['break_out_memory_refs', 'break_out_memory_refs', 'break_out_memory_refs', 'break_out_memory_refs']
['break_out_memory_refs', 'break_out_memory_refs', 'break_out_memory_refs', 'break_out_memory_refs']
['force_nonfallthru_and_redirect']
['build_complex_type', 'build_complex_type', 'build_complex_type', 'build_complex_type']
['build_complex_type']
['build_complex_type']
['build_complex_type', 'build_complex_type', 'build_complex_type', 'build_complex_type']
['build_component_ref']
['assemble_variable', 'build_component_ref']
['build_component_ref']
['build_compound_literal']
['build_compound_literal']
['build_index_type']
['build_insn_chain', 'build_insn_chain']
['build_insn_chain', 'build_insn_chain']
['build_nt', 'build_nt', 'build_stmt', 'build_stmt', 'inlinable_function_p', 'inlinable_function_p']
['build_nt', 'build_nt', 'build_stmt', 'build_stmt', 'inlinable_function_p', 'inlinable_function_p']
['build_nt', 'build_stmt']
['build_nt', 'build_nt', 'build_nt', 'build_stmt', 'build_stmt', 'build_stmt', 'gen_type_die', 'gen_type_die', 'gen_type_die', 'has_cleanups', 'has_cleanups', 'has_cleanups', 'inlinable_function_p', 'inlinable_function_p', 'inlinable_function_p']
['build_nt', 'build_nt', 'build_nt', 'build_stmt', 'build_stmt', 'build_stmt', 'gen_type_die', 'gen_type_die', 'gen_type_die', 'has_cleanups', 'has_cleanups', 'has_cleanups', 'inlinable_function_p', 'inlinable_function_p', 'inlinable_function_p']
['build_nt', 'build_nt', 'build_nt', 'build_stmt', 'build_stmt', 'build_stmt', 'gen_type_die', 'gen_type_die', 'gen_type_die', 'has_cleanups', 'has_cleanups', 'has_cleanups', 'inlinable_function_p', 'inlinable_function_p', 'inlinable_function_p']
['find_basic_blocks', 'simplify_unary_operation']
['has_cleanups', 'has_cleanups']
['has_cleanups', 'has_cleanups']
['build_nt', 'build_nt', 'build_nt', 'build_stmt', 'build_stmt', 'build_stmt', 'gen_type_die', 'gen_type_die', 'gen_type_die', 'has_cleanups', 'has_cleanups', 'has_cleanups', 'inlinable_function_p', 'inlinable_function_p', 'inlinable_function_p']
['build_nt', 'build_nt', 'build_nt', 'build_stmt', 'build_stmt', 'build_stmt', 'gen_type_die', 'gen_type_die', 'gen_type_die', 'has_cleanups', 'has_cleanups', 'has_cleanups', 'inlinable_function_p', 'inlinable_function_p', 'inlinable_function_p']
['build_nt', 'build_nt', 'build_nt', 'build_stmt', 'build_stmt', 'build_stmt', 'gen_type_die', 'gen_type_die', 'gen_type_die', 'has_cleanups', 'has_cleanups', 'has_cleanups', 'inlinable_function_p', 'inlinable_function_p', 'inlinable_function_p']
['find_basic_blocks']
['build_nt', 'build_nt', 'build_stmt', 'build_stmt', 'inlinable_function_p', 'inlinable_function_p']
['build_nt', 'build_nt', 'build_stmt', 'build_stmt', 'inlinable_function_p', 'inlinable_function_p']
['build_nt', 'build_stmt']
['build_nt', 'build_nt', 'build_nt', 'build_stmt', 'build_stmt', 'build_stmt', 'gen_type_die', 'gen_type_die', 'gen_type_die', 'has_cleanups', 'has_cleanups', 'has_cleanups', 'inlinable_function_p', 'inlinable_function_p', 'inlinable_function_p']
['build_nt', 'build_nt', 'build_nt', 'build_stmt', 'build_stmt', 'build_stmt', 'gen_type_die', 'gen_type_die', 'gen_type_die', 'has_cleanups', 'has_cleanups', 'has_cleanups', 'inlinable_function_p', 'inlinable_function_p', 'inlinable_function_p']
['build_nt', 'build_nt', 'build_nt', 'build_stmt', 'build_stmt', 'build_stmt', 'gen_type_die', 'gen_type_die', 'gen_type_die', 'has_cleanups', 'has_cleanups', 'has_cleanups', 'inlinable_function_p', 'inlinable_function_p', 'inlinable_function_p']
['find_basic_blocks', 'simplify_unary_operation']
['has_cleanups', 'has_cleanups']
['has_cleanups', 'has_cleanups']
['build_nt', 'build_nt', 'build_nt', 'build_stmt', 'build_stmt', 'build_stmt', 'gen_type_die', 'gen_type_die', 'gen_type_die', 'has_cleanups', 'has_cleanups', 'has_cleanups', 'inlinable_function_p', 'inlinable_function_p', 'inlinable_function_p']
['build_nt', 'build_nt', 'build_nt', 'build_stmt', 'build_stmt', 'build_stmt', 'gen_type_die', 'gen_type_die', 'gen_type_die', 'has_cleanups', 'has_cleanups', 'has_cleanups', 'inlinable_function_p', 'inlinable_function_p', 'inlinable_function_p']
['build_nt', 'build_nt', 'build_nt', 'build_stmt', 'build_stmt', 'build_stmt', 'gen_type_die', 'gen_type_die', 'gen_type_die', 'has_cleanups', 'has_cleanups', 'has_cleanups', 'inlinable_function_p', 'inlinable_function_p', 'inlinable_function_p']
['find_basic_blocks']
['cfg_layout_finalize', 'copy_eh_notes', 'delete_insn', 'delete_noop_moves']
['reg_scan_mark_refs', 'simplify_giv_expr']
['build_unary_op', 'c_sizeof', 'c_sizeof', 'c_sizeof', 'c_sizeof', 'range_binop']
['build_unary_op']
['build_component_ref', 'check_case_value', 'expand_tree_builtin', 'expand_tree_builtin']
['c_add_case_label']
['c_add_case_label']
['optimize_minmax_comparison']
['c_alignof']
['c_alignof']
['c_alignof', 'c_alignof_expr', 'c_sizeof', 'c_sizeof', 'c_sizeof', 'output_function_exception_table', 'range_binop', 'range_binop', 'set_mem_attributes']
['convert_for_assignment']
['convert_for_assignment']
['c_expand_end_cond']
['c_expand_return']
['c_expand_start_cond', 'c_expand_start_cond']
['c_expand_start_cond', 'c_expand_start_cond']
['c_expand_start_cond']
['c_expand_start_cond']
['c_expand_start_else']
['c_expand_start_else']
['c_finish_else', 'c_finish_then']
['c_finish_else', 'c_finish_then']
['c_lex']
['c_lex']
['c_lex']
['c_sizeof', 'c_sizeof', 'c_sizeof']
['c_sizeof']
['force_nonfallthru_and_redirect']
['force_nonfallthru_and_redirect']
['cfg_layout_finalize', 'force_nonfallthru_and_redirect', 'record_one_set', 'rm_line_notes', 'rm_other_notes', 'squeeze_notes']
['force_nonfallthru_and_redirect']
['calculate_dominance_info']
['if_then_else_cond']
['reload']
['cse_basic_block', 'expand_decl', 'expand_function_end', 'force_to_mode', 'if_convert', 'loop_optimize', 'maybe_eliminate_biv_1']
['check_asm_stack_operands', 'expand_decl']
['convert_from_eh_region_ranges']
['compute_insns_for_mem']
['higher_prime_number']
['convert_from_ssa']
['call_insn_operand', 'call_insn_operand']
['call_insn_operand', 'call_insn_operand']
['gen_formal_types_die']
['cancel_changes']
['purge_single_hard_subreg_set']
['canon_hash']
['canon_reg']
['canon_rtx', 'eliminate_constant_term', 'sge_plus_constant']
['canon_true_dependence']
['copy_insn_list']
['back_branch_in_range_p', 'branch_prob', 'canonicalize_condition', 'cse_basic_block', 'delete_related_insns', 'find_basic_blocks', 'if_convert', 'loop_optimize', 'set_label_offsets', 'try_combine']
['nonoverlapping_memrefs_p', 'scan_loop', 'try_copy_prop', 'unroll_loop']
['instantiate_virtual_regs_1']
['mark_set_1']
['canonicalize_condition']
['canonicalize_condition']
['canonicalize_condition', 'get_AT_unsigned', 'reload_combine_note_use']
['canonicalize_condition']
['canonicalize_condition']
['canonicalize_condition']
['cfg_layout_finalize', 'copy_eh_notes', 'delete_insn', 'delete_noop_moves']
['cfg_layout_finalize']
['force_operand']
['ix86_emit_restore_regs_using_mov']
['apply_distributive_law', 'change_address_1', 'combine_instructions', 'compute_forward_dependences', 'gen_binary', 'gen_sequence', 'protect_from_queue', 'reload_combine_note_use', 'squeeze_notes']
['compute_forward_dependences', 'output_addr_const']
['change_address_1']
['change_address_1']
['cfg_layout_finalize', 'rm_other_notes', 'squeeze_notes']
['compute_forward_dependences', 'compute_forward_dependences']
['compute_forward_dependences', 'compute_forward_dependences']
['change_address_1']
['change_address_1']
['change_address_1']
['change_address_1']
['change_address_1']
['change_address_1']
['change_address_1']
['change_address_1']
['check_asm_operands']
['back_branch_in_range_p', 'canonicalize_condition', 'check_insn_for_givs', 'combine_simplify_rtx', 'copy_insn_list', 'copy_loop_body', 'eliminate_regs', 'emit_library_call_value_1', 'expand_expr', 'extract_bit_field', 'find_base_value', 'find_reloads_address', 'for_each_insn_in_loop', 'force_to_mode', 'gen_reload', 'gen_reload', 'get_attr_prefix_0f', 'init_propagate_block_info', 'ix86_split_long_move', 'local_alloc', 'nonoverlapping_memrefs_p', 'nonoverlapping_memrefs_p', 'protect_from_queue', 'purge_addressof_1', 'restore_line_notes', 'rm_line_notes', 'rm_other_notes', 'scan_loop', 'scan_loop', 'scan_loop', 'swap_rtx_condition', 'try_copy_prop', 'unroll_loop', 'unroll_loop', 'visit_expression']
['delete_output_reload', 'delete_output_reload', 'emit_library_call_value_1', 'if_convert', 'ix86_split_long_move', 'simplify_if_then_else']
['emit_library_call_value_1', 'gen_reload']
['check_asm_stack_operands']
['check_asm_stack_operands', 'constrain_operands', 'copyprop_hardreg_forward', 'regrename_optimize']
['check_asm_stack_operands']
['cleanup_subreg_operands', 'constrain_operands', 'preprocess_constraints', 'regrename_optimize', 'reload_cse_simplify_operands', 'reload_cse_simplify_operands']
['ix86_attr_length_immediate_default', 'reload_cse_simplify_operands']
['recog_1', 'recog_1', 'recog_3', 'recog_3', 'recog_3', 'recog_3', 'recog_5', 'recog_5', 'recog_5']
['constrain_operands', 'constrain_operands', 'get_attr_prefix_0f', 'get_attr_prefix_0f', 'ix86_attr_length_address_default']
['constrain_operands', 'constrain_operands', 'get_attr_prefix_0f', 'get_attr_prefix_0f', 'ix86_attr_length_address_default']
['find_dummy_reload']
['decompose', 'defs_to_undefined', 'defs_to_varying']
['constrain_operands', 'constrain_operands', 'get_attr_prefix_0f', 'get_attr_prefix_0f', 'ix86_attr_length_address_default']
['store_init_value']
['check_global_declarations', 'rest_of_decl_compilation', 'rest_of_type_compilation']
['check_global_declarations', 'rest_of_decl_compilation', 'rest_of_type_compilation']
['combine_givs', 'combine_givs']
['combine_givs', 'combine_givs']
['check_insn_for_givs']
['check_insn_for_givs']
['check_insn_for_givs']
['check_insn_for_givs']
['check_insn_for_givs']
['copy_insn_list', 'df_uses_record', 'optimize_mode_switching', 'recog_23', 'recog_23', 'recog_23', 'recog_23', 'recog_30', 'recog_30']
['copy_insn_list', 'df_uses_record', 'optimize_mode_switching', 'recog_23', 'recog_23', 'recog_23', 'recog_23', 'recog_30', 'recog_30']
['move_deaths']
['choose_hard_reg_mode', 'save_call_clobbered_regs']
['clear_reload_reg_in_use']
['choose_hard_reg_mode', 'exp_equiv_p', 'move_deaths', 'move_deaths']
['apply_args_size', 'exp_equiv_p']
['init_expr_once']
['choose_reload_regs']
['choose_reload_regs']
['choose_reload_regs']
['choose_reload_regs']
['choose_reload_regs']
['choose_reload_regs']
['choose_reload_regs_init']
['choose_reload_regs_init']
['convert_to_integer', 'ix86_return_in_memory']
['classify_argument']
['convert_to_integer', 'ix86_return_in_memory']
['classify_argument']
['purge_line_number_notes']
['back_branch_in_range_p', 'branch_prob', 'canonicalize_condition', 'cse_basic_block', 'delete_related_insns', 'find_basic_blocks', 'if_convert', 'loop_optimize', 'set_label_offsets', 'try_combine']
['purge_line_number_notes', 'purge_line_number_notes', 'purge_line_number_notes']
['decompose']
['canonicalize_condition']
['canonicalize_condition']
['back_branch_in_range_p']
['decompose']
['scope_to_insns_initialize', 'scope_to_insns_initialize']
['cleanup_cfg']
['cleanup_cfg']
['cleanup_cfg']
['cleanup_cfg']
['cleanup_cfg']
['cleanup_subreg_operands', 'constrain_operands', 'preprocess_constraints', 'regrename_optimize', 'reload_cse_simplify_operands', 'reload_cse_simplify_operands']
['cleanup_subreg_operands']
['cleanup_subreg_operands']
['cleanup_subreg_operands', 'find_matches', 'preprocess_constraints', 'reload_cse_simplify_operands']
['cleanup_subreg_operands']
['cleanup_subreg_operands']
['cleanup_subreg_operands']
['cleanup_subreg_operands', 'find_matches', 'preprocess_constraints', 'reload_cse_simplify_operands']
['cleanup_subreg_operands']
['cleanup_subreg_operands']
['cleanup_subreg_operands']
['cleanup_subreg_operands']
['find_oldest_value_reg']
['decompose', 'decompose', 'instantiate_virtual_regs_1', 'instantiate_virtual_regs_1']
['rtx_equal_for_memref_p']
['rm_other_notes']
['rm_other_notes']
['ssa_const_prop']
['force_nonfallthru_and_redirect']
['cfg_layout_finalize', 'rm_line_notes', 'rm_other_notes', 'squeeze_notes']
['force_nonfallthru_and_redirect']
['record_constant_1']
['ix86_register_move_cost']
['mark_set_1']
['make_tree']
['clear_storage', 'emit_block_move', 'emit_block_move', 'expand_mult_add', 'ix86_va_start', 'ix86_va_start', 'ix86_va_start', 'ix86_va_start', 'make_tree']
['clear_storage', 'emit_block_move', 'emit_block_move', 'ix86_va_start', 'ix86_va_start', 'ix86_va_start', 'ix86_va_start']
['clear_storage']
['emit_libcall_block', 'emit_libcall_block', 'force_operand']
['clear_table']
['combinable_i3pat']
['copy_loop_body', 'unroll_loop']
['make_extraction']
['df_uses_record']
['combine_instructions']
['combine_instructions']
['df_analyse_1']
['combine_instructions']
['find_basic_blocks', 'get_AT_unsigned']
['combine_instructions']
['combine_regs', 'combine_simplify_rtx', 'get_attr_prefix_0f']
['check_asm_stack_operands', 'cse_basic_block', 'emit_library_call_value_1', 'legitimize_pic_address', 'local_alloc', 'maybe_eliminate_biv_1', 'optimize_bit_field', 'scan_loop', 'unroll_loop']
['combine_regs', 'purge_line_number_notes', 'purge_line_number_notes', 'purge_line_number_notes']
['make_extraction']
['find_dummy_reload']
['combine_regs', 'combine_regs', 'find_dummy_reload']
['combine_regs', 'combine_regs', 'find_dummy_reload']
['choose_hard_reg_mode', 'choose_hard_reg_mode', 'cselib_lookup', 'find_oldest_value_reg', 'insert_restore', 'reload_inner_reg_of_subreg']
['emit_no_conflict_block', 'emit_no_conflict_block', 'rm_line_notes', 'rm_line_notes', 'rm_line_notes', 'rm_line_notes', 'rm_other_notes', 'rm_other_notes', 'rm_other_notes', 'rm_other_notes']
['make_extraction']
['expand_fix', 'expand_fix']
['combine_regs', 'combine_regs', 'expand_fix', 'find_dummy_reload', 'get_true_reg', 'validate_replace_rtx_1']
['combine_reversed_comparison_code']
['gen_lowpart_for_combine']
['adjust_address_1', 'copy_insn_list', 'find_basic_blocks', 'gcse_main', 'reposition_prologue_and_epilogue_notes']
['combine_stack_adjustments']
['expand_builtin_expect_jump', 'output_addressed_constants']
['output_addressed_constants']
['cse_end_of_basic_block', 'df_uses_record', 'find_split_point', 'find_split_point', 'find_split_point']
['compute_forward_dependences']
['squeeze_notes']
['emit_no_conflict_block']
['print_operand_address']
['compensate_edge']
['complete_array_type', 'expand_builtin_expect_jump', 'output_addressed_constants']
['back_branch_in_range_p', 'branch_prob', 'canonicalize_condition', 'cse_basic_block', 'delete_related_insns', 'find_basic_blocks', 'if_convert', 'loop_optimize', 'set_label_offsets', 'try_combine']
['copy_eh_notes', 'scope_to_insns_initialize']
['gen_sequence', 'protect_from_queue', 'squeeze_notes']
['combine_simplify_rtx', 'find_reloads_address', 'fixup_var_refs_1', 'unroll_loop']
['combine_instructions']
['back_branch_in_range_p', 'branch_prob', 'canonicalize_condition', 'cleanup_cfg', 'cse_basic_block', 'delete_related_insns', 'find_basic_blocks', 'if_convert', 'loop_optimize', 'set_label_offsets', 'try_combine']
['emit_libcall_block']
['life_analysis']
['life_analysis']
['find_basic_blocks']
['back_branch_in_range_p', 'canonicalize_condition']
['back_branch_in_range_p', 'canonicalize_condition']
['delete_related_insns']
['delete_related_insns']
['compute_hash_table']
['compute_hash_table']
['compute_hash_table']
['compute_insns_for_mem', 'convert_from_eh_region_ranges']
['compute_insns_for_mem']
['compute_insns_for_mem']
['compute_insns_for_mem']
['compute_insns_for_mem']
['copy_loop_body']
['compute_transp', 'compute_transp']
['compute_transp', 'compute_transp']
['life_analysis']
['compute_transp', 'compute_transp']
['compute_transp', 'compute_transp']
['copy_insn_list', 'copy_loop_body', 'dead_or_predicable', 'expand_end_case_type', 'expand_expr', 'if_convert', 'purge_addressof_1']
['compute_transp']
['compute_transp', 'mark_referenced_regs', 'purge_line_number_notes']
['check_asm_stack_operands', 'compute_insns_for_mem', 'purge_addressof_1']
['check_asm_stack_operands', 'compute_insns_for_mem', 'purge_addressof_1']
['compute_transp', 'compute_transp']
['compute_transp', 'compute_transp']
['compute_transp', 'compute_transp']
['compute_transp', 'final']
['compute_transp']
['save_call_clobbered_regs']
['check_asm_stack_operands', 'check_asm_stack_operands', 'compute_transp', 'consec_sets_giv', 'cse_basic_block', 'cse_basic_block', 'cse_basic_block', 'df_uses_record', 'emit_library_call_value_1', 'expand_decl', 'expand_decl', 'expand_function_end', 'expand_function_end', 'final', 'find_equiv_reg', 'find_reloads_address', 'find_reloads_address', 'fixup_var_refs_1', 'force_to_mode', 'gen_reload', 'gen_reload', 'if_convert', 'init_propagate_block_info', 'local_alloc', 'loop_optimize', 'loop_optimize', 'loop_optimize', 'maybe_eliminate_biv_1', 'move_movables', 'scan_loop', 'splice_child_die']
['consec_sets_giv']
['consec_sets_giv']
['consec_sets_giv']
['consec_sets_giv']
['consec_sets_giv']
['consec_sets_giv']
['compute_forward_dependences', 'compute_forward_dependences', 'decompose', 'find_base_value', 'find_base_value', 'for_each_insn_in_loop', 'for_each_insn_in_loop', 'gen_binary', 'rm_line_notes', 'rm_other_notes', 'rm_other_notes', 'rm_other_notes', 'rm_other_notes', 'simplify_relational_operation', 'squeeze_notes']
['adjust_address_1', 'find_base_value', 'find_base_value', 'for_each_insn_in_loop', 'for_each_insn_in_loop', 'gen_binary', 'protect_from_queue', 'rm_line_notes', 'squeeze_notes', 'squeeze_notes', 'squeeze_notes', 'squeeze_notes']
['consec_sets_giv']
['consec_sets_giv']
['dbxout_type', 'record_constant_1']
['peep2_find_free_register']
['simplify_unary_operation', 'simplify_unary_operation']
['simplify_unary_operation']
['assign_parms', 'delete_output_reload', 'delete_output_reload', 'ix86_split_long_move', 'regmove_optimize', 'subst_asm_stack_regs']
['emit_library_call_value_1', 'ix86_split_long_move']
['check_asm_stack_operands', 'constrain_operands', 'copyprop_hardreg_forward', 'regrename_optimize']
['preprocess_constraints']
['cselib_init']
['gen_split_1232', 'ix86_expand_fp_movcc', 'ix86_expand_fp_movcc']
['constrain_operands']
['alter_subreg', 'noce_emit_move_insn', 'put_addressof_into_stack', 'put_addressof_into_stack', 'replace_regs']
['constrain_operands', 'reg_overlap_mentioned_for_reload_p']
['ix86_attr_length_address_default', 'reload_cse_simplify_operands']
['ix86_attr_length_address_default', 'reload_cse_simplify_operands']
['eliminate_regs_in_insn', 'ix86_attr_length_address_default']
['construct_container']
['size_int_type_wide']
['copy_loop_body']
['canonicalize_condition', 'cse_insn', 'cse_insn', 'find_reloads_address']
['convert_from_eh_region_ranges']
['convert_from_eh_region_ranges']
['convert_from_eh_region_ranges']
['convert_from_eh_region_ranges']
['convert_from_eh_region_ranges', 'life_analysis']
['convert_from_eh_region_ranges']
['copy_eh_notes', 'copy_eh_notes']
['find_dummy_reload']
['purge_line_number_notes', 'purge_line_number_notes', 'purge_line_number_notes', 'scope_to_insns_initialize']
['find_basic_blocks', 'get_AT_unsigned']
['rm_line_notes']
['scope_to_insns_initialize']
['scope_to_insns_initialize']
['rm_line_notes']
['scope_to_insns_initialize', 'scope_to_insns_initialize']
['try_copy_prop']
['rm_line_notes']
['rm_line_notes']
['back_branch_in_range_p', 'back_branch_in_range_p', 'noce_get_condition', 'rm_line_notes', 'rm_line_notes', 'rm_other_notes', 'rm_other_notes']
['rm_line_notes']
['rm_line_notes']
['rm_other_notes', 'scope_to_insns_initialize']
['convert_from_ssa', 'final']
['convert_from_ssa']
['convert_from_ssa']
['convert_from_ssa']
['convert_from_ssa']
['convert_from_ssa']
['convert_from_ssa']
['convert_from_ssa']
['convert_from_ssa', 'convert_from_ssa']
['convert_from_ssa']
['convert_from_ssa']
['convert_modes', 'convert_modes']
['convert_modes', 'convert_modes']
['convert_modes']
['convert_move']
['binary_fp_operator']
['emit_move_insn_1']
['convert_move']
['convert_move', 'convert_move', 'convert_move', 'convert_move']
['convert_move', 'convert_move', 'convert_move', 'convert_move']
['convert_move', 'convert_move']
['convert_move', 'convert_move']
['convert_move', 'convert_move']
['branch_prob', 'commit_edge_insertions', 'convert_regs_2', 'if_convert', 'thread_prologue_and_epilogue_insns']
['copy_loop_body', 'init_alias_analysis', 'reload', 'reload', 'unroll_loop']
['check_asm_stack_operands', 'cse_end_of_basic_block', 'expand_decl']
['convert_regs_2']
['convert_regs_2']
['convert_regs_2']
['commit_edge_insertions', 'thread_prologue_and_epilogue_insns']
['convert_regs_2']
['convert_regs_2']
['commit_edge_insertions']
['commit_edge_insertions']
['copy_insn_notes']
['convert_regs_2']
['convert_to_integer', 'ix86_return_in_memory']
['convert_to_real']
['copy_addr_to_reg']
['copy_blkmode_from_reg', 'copy_blkmode_from_reg']
['copy_blkmode_from_reg', 'copy_blkmode_from_reg']
['copy_constant']
['copy_constant']
['copy_eh_notes', 'scope_to_insns_initialize']
['cfg_layout_finalize', 'copy_eh_notes', 'delete_insn', 'delete_noop_moves']
['copy_eh_notes', 'copy_eh_notes']
['copy_eh_notes', 'copy_eh_notes']
['copy_eh_notes']
['copy_insn_1']
['copy_insn_1', 'copy_rtx', 'gen_binary', 'gen_lowpart_for_combine', 'make_memloc', 'simplify_giv_expr', 'simplify_relational_operation']
['copy_most_rtx']
['copy_insn_1']
['copy_insn_1']
['force_nonfallthru_and_redirect']
['copy_insn_1']
['copy_insn_1', 'copy_rtx', 'gen_binary', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'make_memloc']
['reload']
['check_asm_stack_operands', 'optimize_sibling_and_tail_recursive_calls', 'record_giv']
['copy_insn_list', 'copy_loop_body', 'dead_or_predicable', 'expand_expr', 'if_convert']
['cse_insn', 'emit_group_store', 'gen_reload', 'store_expr', 'store_expr']
['combine_simplify_rtx', 'compute_forward_dependences', 'eliminate_regs', 'emit_library_call_value_1', 'expand_expr', 'expected_value_to_br_prob', 'find_reloads_address', 'fold_rtx', 'force_to_mode', 'gen_reload', 'instantiate_virtual_regs_1', 'local_alloc', 'move_movables', 'purge_addressof_1', 'regmove_optimize', 'reload', 'simplify_comparison', 'simplify_comparison', 'split_all_insns', 'subst_asm_stack_regs']
['copy_insn_list']
['adjust_address_1', 'adjust_address_1', 'move_by_pieces', 'purge_line_number_notes', 'purge_line_number_notes', 'reposition_prologue_and_epilogue_notes']
['emit_libcall_block', 'init_propagate_block_info', 'instantiate_virtual_regs_1', 'restore_line_notes']
['find_base_value']
['wipe_dead_reg']
['delete_output_reload']
['schedule_insns', 'try_combine']
['adjust_address_1', 'copy_insn_list', 'find_basic_blocks', 'reposition_prologue_and_epilogue_notes']
['canonicalize_condition', 'nonoverlapping_memrefs_p']
['copy_insn_notes']
['copy_insn_notes']
['copy_insn_notes']
['copy_insn_notes']
['copy_insn_notes']
['rm_line_notes']
['cfg_layout_finalize', 'compute_transp', 'expand_decl', 'expand_decl', 'find_base_value', 'find_base_value', 'find_basic_blocks', 'get_AT_unsigned', 'mark_referenced_regs', 'purge_line_number_notes', 'rm_line_notes', 'rm_other_notes', 'splice_child_die', 'swap_rtx_condition', 'try_copy_prop']
['for_each_insn_in_loop', 'for_each_insn_in_loop']
['for_each_insn_in_loop', 'for_each_insn_in_loop']
['memrefs_conflict_p']
['optimize_bit_field']
['gen_reload']
['canonicalize_condition', 'nonoverlapping_memrefs_p']
['life_analysis']
['adjust_address_1', 'adjust_address_1', 'canonicalize_condition', 'copy_insn_list', 'copy_insn_list', 'decompose', 'emit_libcall_block', 'find_basic_blocks', 'find_equiv_reg', 'for_each_insn_in_loop', 'optimize_bit_field', 'protect_from_queue', 'reload', 'scan_loop', 'store_bit_field']
['emit_group_store', 'gen_reload']
['check_asm_stack_operands', 'cse_basic_block', 'local_alloc', 'scan_loop']
['combine_regs']
['compute_transp', 'consec_sets_giv', 'find_equiv_reg', 'gen_reload']
['convert_from_eh_region_ranges', 'copy_loop_body', 'find_base_term', 'find_base_value', 'if_then_else_cond', 'maybe_eliminate_biv_1']
['back_branch_in_range_p', 'branch_prob', 'canonicalize_condition', 'cse_basic_block', 'delete_related_insns', 'find_basic_blocks', 'if_convert', 'loop_optimize', 'set_label_offsets', 'try_combine']
['adjust_address_1', 'adjust_address_1', 'copy_insn_list', 'expand_field_assignment', 'find_basic_blocks', 'force_nonfallthru_and_redirect', 'memrefs_conflict_p', 'protect_from_queue', 'refers_to_regno_p', 'subst_asm_stack_regs', 'subst_stack_regs_pat', 'subst_stack_regs_pat']
['adjust_address_1', 'constrain_operands', 'delete_output_reload', 'init_propagate_block_info', 'reload', 'rm_other_notes', 'subst_stack_regs_pat']
['get_attr_prefix_0f']
['check_asm_stack_operands', 'reload', 'subst_stack_regs_pat']
['ix86_split_fp_branch', 'move_deaths', 'store_bit_field']
['compute_transp', 'consec_sets_giv', 'find_equiv_reg', 'gen_reload']
['ix86_split_fp_branch', 'store_bit_field']
['check_asm_stack_operands', 'optimize_sibling_and_tail_recursive_calls', 'record_giv']
['copy_insn_list', 'copy_loop_body', 'dead_or_predicable', 'expand_expr', 'if_convert']
['copy_node', 'make_node']
['adjust_address_1', 'copy_insn_list', 'cse_insn', 'expand_end_case_type', 'find_basic_blocks']
['loop_iterations', 'subst_asm_stack_regs']
['expand_expr', 'local_alloc', 'move_movables', 'nonoverlapping_memrefs_p']
['expand_end_case_type']
['simplify_comparison']
['df_analyse_1', 'find_split_point']
['reload']
['copy_insn_1', 'copy_rtx_if_shared']
['copy_to_reg']
['check_asm_stack_operands', 'constrain_operands', 'copyprop_hardreg_forward', 'regrename_optimize']
['copyprop_hardreg_forward']
['record_reg_classes']
['regrename_optimize']
['constrain_operands', 'constrain_operands']
['eliminate_regs_in_insn', 'ix86_attr_length_address_default']
['record_value_for_reg']
['find_free_reg']
['regclass_compatible_p']
['copyprop_hardreg_forward']
['count_error']
['count_error']
['choose_hard_reg_mode']
['choose_hard_reg_mode']
['find_reg', 'save_call_clobbered_regs']
['choose_hard_reg_mode']
['count_spilled_pseudo']
['ereal_to_decimal']
['cpp_finish_options']
['cpp_lookup']
['_cpp_lex_direct']
['lex_number']
['c_lex', 'cpp_parse_escape']
['_cpp_lex_direct']
['lex_number']
['cpp_push_buffer']
['ggc_pop_context', 'release_pages']
['cpp_parse_escape']
['get_attr_prefix_0f']
['restore_line_notes', 'rm_line_notes', 'rm_other_notes']
['canonicalize_condition', 'commit_edge_insertions', 'gen_binary', 'memrefs_conflict_p', 'reload_combine_note_use', 'thread_prologue_and_epilogue_insns']
['delete_noop_moves', 'purge_line_number_notes']
['delete_noop_moves', 'purge_line_number_notes']
['cleanup_cfg']
['df_uses_record']
['cse_basic_block', 'expand_decl', 'expand_function_end', 'force_to_mode', 'if_convert', 'loop_optimize', 'maybe_eliminate_biv_1']
['back_branch_in_range_p', 'branch_prob', 'canonicalize_condition', 'cse_basic_block', 'delete_related_insns', 'find_basic_blocks', 'if_convert', 'loop_optimize', 'set_label_offsets', 'try_combine']
['set_label_offsets', 'set_label_offsets']
['delete_noop_moves', 'regmove_optimize']
['cse_insn', 'expand_expr', 'find_reloads_address', 'move_movables', 'purge_addressof_1']
['find_reloads_address', 'move_movables']
['defs_to_undefined', 'defs_to_varying']
['eliminate_regs', 'expand_expr', 'find_reloads_address', 'local_alloc', 'purge_addressof_1']
['simplify_comparison']
['change_address_1', 'find_split_point', 'get_attr_prefix_0f', 'get_attr_type', 'instantiate_virtual_regs_1', 'maybe_eliminate_biv_1', 'move_movables', 'schedule_block', 'subst_asm_stack_regs']
['instantiate_virtual_regs_1']
['insns_match_p', 'mark_set_1', 'simplify_if_then_else']
['back_branch_in_range_p', 'branch_prob', 'canonicalize_condition', 'cse_basic_block', 'delete_related_insns', 'find_basic_blocks', 'if_convert', 'loop_optimize', 'set_label_offsets', 'try_combine']
['expand_call', 'move_deaths', 'reposition_prologue_and_epilogue_notes']
['back_branch_in_range_p', 'copy_insn_list', 'find_base_value', 'ix86_split_fp_branch', 'make_extraction', 'record_value_for_reg', 'restore_line_notes', 'rm_line_notes', 'rm_other_notes', 'swap_rtx_condition']
['ix86_split_fp_branch', 'legitimize_pic_address']
['scan_loop']
['mark_referenced_regs']
['cse_main']
['cse_main', 'cselib_record_sets']
['eliminate_regs_in_insn']
['gen_sequence', 'gen_sequence', 'squeeze_notes', 'squeeze_notes']
['cse_main']
['gen_binary']
['cse_main']
['cse_process_notes']
['cse_set_around_loop', 'invalidate_from_clobbers']
['cselib_finish']
['cselib_init']
['regno_clobbered_p']
['reg_fits_class_p']
['cselib_invalidate_rtx']
['cselib_invalidate_rtx', 'emit_move_insn_1']
['cselib_invalidate_rtx']
['cselib_invalidate_rtx', 'emit_move_insn_1']
['cselib_lookup', 'scan_rtx_reg']
['cselib_lookup']
['cselib_lookup_mem']
['cselib_lookup', 'cselib_lookup']
['apply_distributive_law', 'standard_80387_constant_p']
['record_jump_cond']
['cselib_lookup_mem']
['cselib_process_insn']
['cselib_process_insn']
['cselib_process_insn']
['clear_storage', 'copy_insn_1', 'init_propagate_block_info']
['ix86_split_fp_branch']
['copy_insn_1']
['swap_rtx_condition']
['copy_insn_1']
['find_base_value', 'find_base_value', 'gen_binary', 'rm_line_notes', 'squeeze_notes']
['find_base_value', 'find_base_value', 'gen_binary', 'rm_line_notes', 'squeeze_notes']
['expand_field_assignment']
['emit_insns_after', 'gen_binary']
['data_section']
['data_section']
['dbxout_finish_symbol']
['build_compound_literal']
['assemble_end_function', 'assemble_end_function']
['build_compound_literal']
['self_promoting_args_p', 'store_parm_decls']
['plus_constant_wide', 'try_copy_prop']
['dbxout_symbol_location']
['dbxout_symbol_location', 'dbxout_symbol_location']
['plus_constant_wide', 'purge_line_number_notes', 'purge_line_number_notes', 'purge_line_number_notes', 'scope_to_insns_initialize']
['dbxout_symbol_location']
['expected_value_to_br_prob', 'rm_line_notes']
['choose_hard_reg_mode', 'choose_hard_reg_mode', 'find_oldest_value_reg', 'move_deaths']
['expand_compound_operation']
['expand_compound_operation']
['debug_reload_to_stream']
['debug_reload_to_stream']
['decl_attributes', 'decl_attributes']
['decl_attributes', 'decl_attributes']
['decl_attributes', 'decl_attributes']
['decl_attributes', 'decl_attributes']
['decl_attributes']
['decl_attributes']
['check_format_info_main']
['decode_reg_name', 'emit_libcall_block', 'emit_libcall_block']
['decode_reg_name']
['convert_move']
['apply_distributive_law', 'canonicalize_condition', 'simplify_relational_operation']
['cse_basic_block', 'expand_function_end', 'find_reloads_address']
['find_reloads_address', 'move_movables']
['simplify_comparison']
['emit_move_insn_1']
['convert_move', 'reversed_comparison_code_parts']
['expand_field_assignment']
['get_AT_unsigned']
['regmove_optimize']
['emit_libcall_block', 'init_propagate_block_info']
['init_propagate_block_info', 'init_propagate_block_info', 'init_propagate_block_info']
['init_propagate_block_info', 'init_propagate_block_info', 'init_propagate_block_info']
['init_propagate_block_info', 'init_propagate_block_info', 'init_propagate_block_info']
['init_propagate_block_info']
['copyprop_hardreg_forward']
['copyprop_hardreg_forward']
['init_alias_analysis']
['optimize_sibling_and_tail_recursive_calls', 'optimize_sibling_and_tail_recursive_calls', 'simplify_plus_minus']
['delete_output_reload']
['delete_output_reload']
['delete_output_reload']
['save_call_clobbered_regs']
['delete_output_reload']
['delete_output_reload']
['back_branch_in_range_p', 'branch_prob', 'canonicalize_condition', 'cse_basic_block', 'delete_related_insns', 'find_basic_blocks', 'if_convert', 'loop_optimize', 'set_label_offsets', 'try_combine']
['delete_related_insns']
['delete_related_insns', 'delete_related_insns', 'delete_related_insns']
['delete_related_insns', 'delete_related_insns', 'delete_related_insns']
['delete_related_insns', 'delete_related_insns', 'delete_related_insns']
['delete_related_insns']
['choose_hard_reg_mode']
['diagnostic_for_decl']
['adjust_address_1', 'constrain_operands', 'emit_library_call_value_1', 'unroll_loop']
['reposition_prologue_and_epilogue_notes', 'reposition_prologue_and_epilogue_notes', 'reposition_prologue_and_epilogue_notes', 'reposition_prologue_and_epilogue_notes']
['find_base_value', 'rm_line_notes', 'rm_other_notes', 'swap_rtx_condition']
['decompose']
['gcse_main']
['delete_noop_moves', 'regmove_optimize']
['check_asm_stack_operands', 'expand_decl']
['init_alias_analysis', 'unroll_loop', 'unroll_loop']
['expand_end_case_type', 'find_split_point', 'find_split_point', 'find_split_point', 'instantiate_virtual_regs_1', 'reload', 'reload_combine_note_use', 'subst_asm_stack_regs', 'subst_stack_regs_pat', 'subst_stack_regs_pat']
['simplify_comparison']
['simplify_binary_operation']
['find_base_value', 'find_dummy_reload', 'move_movables', 'strength_reduce', 'subst_stack_regs_pat']
['if_convert', 'regmove_optimize', 'simplify_if_then_else', 'strength_reduce']
['mark_used_reg']
['do_case']
['do_case']
['do_cmp_and_jump']
['do_compare_rtx_and_jump', 'do_compare_rtx_and_jump']
['do_compare_rtx_and_jump', 'do_compare_rtx_and_jump']
['do_jump_by_parts_equality', 'do_jump_by_parts_equality']
['do_jump_by_parts_equality', 'do_jump_by_parts_equality']
['do_jump_by_parts_equality', 'do_jump_by_parts_equality']
['do_jump_by_parts_equality', 'do_jump_by_parts_equality']
['do_jump_by_parts_equality_rtx', 'do_jump_by_parts_equality_rtx']
['do_jump_by_parts_equality_rtx', 'do_jump_by_parts_equality_rtx']
['do_jump_by_parts_equality_rtx', 'do_jump_by_parts_equality_rtx']
['do_jump_by_parts_equality_rtx', 'do_jump_by_parts_equality_rtx']
['store_split_bit_field', 'store_split_bit_field']
['store_split_bit_field', 'store_split_bit_field']
['do_jump_by_parts_greater']
['expand_unop']
['expand_unop', 'move_block_to_reg']
['do_store_flag']
['do_store_flag']
['assign_temp']
['copy_to_reg', 'emit_unop_insn']
['find_comparison_args']
['expand_mult_highpart', 'extract_fixed_bit_field']
['may_trap_p']
['expand_fix']
['do_SUBST', 'recog_for_combine']
['do_SUBST', 'recog_for_combine']
['do_SUBST', 'do_SUBST', 'recog_for_combine', 'recog_for_combine']
['do_SUBST', 'do_SUBST', 'recog_for_combine', 'recog_for_combine']
['do_SUBST', 'do_SUBST', 'recog_for_combine', 'recog_for_combine']
['do_SUBST', 'recog_for_combine']
['doing_eh']
['doing_eh']
['doloop_modify']
['doloop_optimize']
['force_operand']
['emit_unrolled_add']
['doloop_optimize']
['emit_unrolled_add']
['dump_bb']
['dump_edge_info']
['dump_edge_info']
['dump_edge_info']
['compute_transp']
['dump_flow_info']
['dump_flow_info']
['convert_regs_2']
['dump_maybe_newline']
['dump_maybe_newline']
['dump_prediction']
['dump_regset']
['dump_sbitmap']
['dump_tree_statistics']
['dw2_asm_output_addr', 'dw2_asm_output_offset']
['assemble_end_function', 'assemble_end_function']
['assemble_end_function', 'assemble_end_function']
['assemble_end_function', 'assemble_end_function']
['assemble_end_function', 'assemble_end_function']
['assemble_end_function', 'assemble_end_function']
['dw2_asm_output_delta']
['dw2_asm_output_delta']
['dw2_asm_output_delta']
['assemble_end_function', 'assemble_end_function']
['assemble_end_function', 'assemble_end_function']
['dw2_asm_output_encoded_addr_rtx']
['assemble_end_function', 'assemble_end_function']
['reg_is_born', 'reg_is_born', 'reg_is_born']
['dw2_asm_output_nstring']
['dw2_asm_output_nstring', 'parse_output_constraint']
['assemble_end_function', 'assemble_end_function']
['dw2_asm_output_addr', 'dw2_asm_output_offset']
['assemble_end_function', 'assemble_end_function']
['output_constructor', 'output_constructor', 'output_constructor']
['add_data_member_location_attribute', 'add_data_member_location_attribute', 'dwarf2out_abstract_function', 'dwarf2out_abstract_function', 'dwarf2out_abstract_function', 'dwarf2out_abstract_function', 'gen_subprogram_die', 'gen_subprogram_die', 'gen_subprogram_die', 'gen_subroutine_type_die', 'gen_subroutine_type_die', 'gen_subroutine_type_die', 'gen_variable_die', 'gen_variable_die', 'gen_variable_die', 'get_AT', 'get_AT', 'get_AT_unsigned', 'get_AT_unsigned', 'get_AT_unsigned', 'get_AT_unsigned', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die']
['dwarf2out_abstract_function', 'dwarf2out_decl', 'dwarf2out_source_line', 'gen_subprogram_die', 'gen_subprogram_die', 'gen_subprogram_die']
['dwarf2out_end_epilogue']
['assemble_end_function', 'assemble_end_function']
['dwarf2out_begin_prologue']
['dwarf2out_abstract_function', 'dwarf2out_decl', 'dwarf2out_source_line', 'gen_subprogram_die', 'gen_subprogram_die', 'gen_subprogram_die']
['dwarf2out_cfi_label']
['dwarf2out_cfi_label']
['dwarf2out_cfi_label']
['dwarf2out_cfi_label']
['gen_block_die']
['add_data_member_location_attribute', 'add_data_member_location_attribute', 'dwarf2out_abstract_function', 'dwarf2out_abstract_function', 'dwarf2out_abstract_function', 'dwarf2out_abstract_function', 'gen_subprogram_die', 'gen_subprogram_die', 'gen_subprogram_die', 'gen_subroutine_type_die', 'gen_subroutine_type_die', 'gen_subroutine_type_die', 'gen_variable_die', 'gen_variable_die', 'gen_variable_die', 'get_AT', 'get_AT', 'get_AT_unsigned', 'get_AT_unsigned', 'get_AT_unsigned', 'get_AT_unsigned', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die']
['dwarf2out_decl']
['dwarf2out_end_epilogue']
['instantiate_virtual_regs', 'rm_line_notes']
['dwarf2out_frame_debug']
['dwarf2out_frame_debug']
['dwarf2out_frame_debug']
['emit_libcall_block', 'init_propagate_block_info']
['find_basic_blocks', 'get_AT_unsigned']
['rm_line_notes']
['store_bit_field', 'store_bit_field']
['rm_line_notes']
['dwarf2out_frame_debug']
['dwarf2out_frame_debug']
['dwarf2out_frame_debug']
['bss_section']
['dwarf2out_frame_debug']
['dwarf2out_frame_debug_expr']
['dwarf2out_frame_debug_expr']
['dwarf2out_frame_debug_expr']
['dwarf2out_frame_debug_expr']
['dwarf2out_frame_debug_expr']
['dwarf2out_frame_debug_expr']
['dwarf2out_frame_debug_expr']
['dwarf2out_frame_debug_expr']
['dwarf2out_frame_debug_expr']
['dwarf2out_frame_debug_expr']
['dwarf2out_frame_debug_expr']
['dwarf2out_frame_debug_expr']
['dwarf2out_frame_debug_expr']
['dwarf2out_frame_debug_expr']
['initial_return_save']
['initial_return_save']
['initial_return_save']
['initial_return_save']
['initial_return_save']
['initial_return_save']
['cfg_layout_finalize', 'rm_other_notes', 'squeeze_notes']
['cfg_layout_finalize', 'rm_other_notes', 'squeeze_notes']
['toplev_main', 'toplev_main']
['eh_data_format_name']
['calculate_dominance_info']
['expand_fix']
['adjust_address_1', 'constrain_operands', 'constrain_operands', 'eliminate_regs', 'emit_library_call_value_1', 'expand_expr', 'find_equiv_reg', 'find_reloads_address', 'gen_sequence', 'get_AT_unsigned', 'get_attr_prefix_0f', 'get_attr_type', 'if_convert', 'init_alias_analysis', 'ix86_split_long_move', 'local_alloc', 'purge_addressof_1', 'reload_combine_note_use', 'simplify_plus_minus', 'strength_reduce', 'subst_asm_stack_regs']
['simplify_comparison']
['nonoverlapping_memrefs_p', 'simplify_comparison']
['eliminate_regs', 'emit_insns_after', 'expand_expr', 'expand_expr', 'expand_expr', 'expected_value_to_br_prob', 'final', 'find_reloads_address', 'find_reloads_address', 'fixup_var_refs_1', 'init_propagate_block_info', 'local_alloc', 'local_alloc', 'move_movables', 'move_movables', 'move_movables', 'nonoverlapping_memrefs_p', 'nonoverlapping_memrefs_p', 'nonoverlapping_memrefs_p', 'purge_addressof_1', 'restore_line_notes', 'simplify_binary_operation', 'simplify_comparison', 'simplify_comparison', 'simplify_comparison', 'splice_child_die']
['if_convert', 'reload', 'rm_other_notes', 'simplify_if_then_else', 'subst_stack_regs_pat', 'subst_stack_regs_pat']
['regmove_optimize', 'subst_asm_stack_regs']
['combine_instructions', 'compute_forward_dependences', 'copy_loop_body', 'copy_loop_body', 'cse_basic_block', 'expand_expr', 'expand_function_end', 'expected_value_to_br_prob', 'find_reloads_address', 'fold_rtx', 'fold_rtx', 'if_convert', 'instantiate_virtual_regs_1', 'loop_iterations', 'move_movables', 'optimize_sibling_and_tail_recursive_calls', 'regmove_optimize', 'regmove_optimize', 'regmove_optimize', 'reload', 'simplify_binary_operation', 'simplify_comparison', 'simplify_comparison', 'split_all_insns', 'subst_asm_stack_regs']
['distribute_notes', 'simplify_comparison']
['for_each_insn_in_loop']
['memrefs_conflict_p', 'reload_cse_regs', 'reposition_prologue_and_epilogue_notes']
['check_asm_stack_operands', 'cse_basic_block', 'cse_end_of_basic_block', 'emit_library_call_value_1', 'find_equiv_reg', 'find_split_point', 'legitimize_pic_address', 'local_alloc', 'maybe_eliminate_biv_1', 'optimize_bit_field', 'reload', 'scan_loop', 'unroll_loop', 'unroll_loop']
['cse_end_of_basic_block']
['cse_basic_block', 'cse_end_of_basic_block', 'cse_insn', 'expand_function_end', 'find_reloads_address', 'get_attr_type', 'instantiate_virtual_regs_1', 'maybe_eliminate_biv_1', 'optimize_bit_field']
['check_asm_stack_operands', 'copy_insn_list', 'copy_loop_body', 'dead_or_predicable', 'eliminate_regs', 'expand_end_case_type', 'expand_expr', 'find_split_point', 'find_split_point', 'if_convert', 'init_alias_analysis', 'purge_addressof_1', 'unroll_loop']
['cse_insn', 'expand_expr', 'find_equiv_reg', 'find_split_point', 'get_attr_type', 'instantiate_virtual_regs_1', 'local_alloc', 'move_movables', 'nonoverlapping_memrefs_p', 'unroll_loop', 'unroll_loop']
['instantiate_virtual_regs_1', 'simplify_comparison']
['expand_function_end']
['back_branch_in_range_p', 'branch_prob', 'canonicalize_condition', 'cse_basic_block', 'delete_related_insns', 'find_basic_blocks', 'if_convert', 'loop_optimize', 'set_label_offsets', 'try_combine']
['fold_rtx']
['check_asm_stack_operands', 'expand_decl']
['combine_regs', 'ix86_split_fp_branch', 'legitimize_pic_address', 'make_extraction', 'record_value_for_reg']
['init_emit_once']
['for_each_insn_in_loop']
['cse_basic_block']
['decompose', 'optimize_bit_field', 'optimize_bit_field']
['find_basic_blocks']
['find_base_value', 'find_dummy_reload']
['expand_float']
['make_memloc']
['decompose']
['for_each_insn_in_loop', 'pop_init_level', 'push_init_level', 'rm_other_notes', 'set_designator', 'shorten_branches']
['rm_other_notes']
['bitmap_clear_bit']
['store_constructor']
['ix86_va_start', 'make_tree']
['emit_block_move', 'ix86_va_start']
['expand_call']
['allocate_dynamic_stack_space']
['allocate_dynamic_stack_space']
['allocate_dynamic_stack_space']
['store_field']
['store_field']
['allocate_dynamic_stack_space']
['store_field']
['store_field']
['store_field']
['expand_abs', 'gen_lowpart_common', 'gen_lowpart_common']
['emit_cmp_and_jump_insns']
['emit_unop_insn']
['emit_conditional_move']
['emit_conditional_move']
['emit_conditional_move']
['emit_conditional_move']
['emit_conditional_move']
['emit_conditional_move']
['emit_conditional_move']
['emit_stack_save']
['emit_group_store']
['add_bound_info', 'extract_fixed_bit_field', 'save_call_clobbered_regs']
['emit_unop_insn', 'expand_fix']
['emit_indirect_jump']
['emit_indirect_jump']
['back_branch_in_range_p', 'copy_insn_list', 'find_base_value', 'restore_line_notes', 'rm_line_notes', 'rm_other_notes', 'swap_rtx_condition']
['simplify_comparison']
['cfg_layout_finalize', 'combine_regs', 'combine_regs', 'for_each_insn_in_loop', 'get_attr_prefix_0f', 'loop_optimize', 'noce_get_condition']
['emit_no_conflict_block', 'find_dummy_reload', 'find_dummy_reload', 'legitimize_pic_address']
['copy_loop_body', 'emit_no_conflict_block']
['cse_basic_block']
['apply_distributive_law', 'find_reloads_address', 'for_each_insn_in_loop', 'optimize_bit_field']
['expand_function_end']
['emit_move_insn']
['emit_move_insn']
['plus_constant_wide']
['convert_move', 'reversed_comparison_code_parts']
['emit_move_insn_1']
['emit_move_insn_1']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'emit_move_insn_1', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_main_function', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_tablejump', 'legitimize_address', 'output_cfi', 'probe_stack_range', 'push_block', 'round_push', 'round_trampoline_addr', 'ssa_const_prop']
['emit_move_insn_1', 'emit_move_insn_1', 'emit_single_push_insn', 'ix86_expand_epilogue', 'ix86_force_to_memory', 'ix86_free_from_memory']
['emit_move_insn_1']
['emit_move_insn_1']
['emit_move_insn_1']
['emit_move_insn_1']
['emit_move_insn_1']
['emit_pop_insn']
['biv_total_increment', 'biv_total_increment']
['biv_total_increment', 'biv_total_increment']
['combine_givs', 'combine_givs', 'copy_loop_body', 'copy_loop_body']
['combine_givs', 'combine_givs', 'copy_loop_body', 'copy_loop_body']
['emit_prefetch_instructions', 'emit_prefetch_instructions']
['emit_prefetch_instructions', 'emit_prefetch_instructions']
['emit_prefetch_instructions', 'emit_prefetch_instructions', 'find_mem_givs', 'find_mem_givs']
['emit_prefetch_instructions', 'emit_prefetch_instructions', 'find_mem_givs', 'find_mem_givs']
['combine_givs', 'combine_givs', 'emit_prefetch_instructions', 'emit_prefetch_instructions', 'maybe_eliminate_biv_1', 'maybe_eliminate_biv_1']
['combine_givs', 'combine_givs', 'emit_prefetch_instructions', 'emit_prefetch_instructions', 'maybe_eliminate_biv_1', 'maybe_eliminate_biv_1']
['loop_iterations', 'loop_iterations']
['loop_iterations', 'loop_iterations']
['emit_prefetch_instructions']
['biv_total_increment']
['emit_prefetch_instructions']
['emit_prefetch_instructions']
['emit_prefetch_instructions']
['consec_sets_giv']
['compute_transp', 'compute_transp', 'handle_rd_kill_set', 'handle_rd_kill_set']
['emit_push_insn']
['expand_unop']
['emit_push_insn', 'expand_complex_abs', 'expand_increment']
['ix86_va_arg', 'ix86_va_arg']
['emit_push_insn']
['noce_get_condition']
['expand_unop']
['expand_unop']
['emit_push_insn', 'emit_push_insn']
['emit_single_push_insn']
['emit_single_push_insn']
['emit_single_push_insn']
['emit_single_push_insn']
['emit_single_push_insn']
['emit_stack_save']
['emit_stack_save']
['emit_store_flag']
['emit_unop_insn']
['expand_increment']
['find_comparison_args']
['simplify_giv_expr']
['emit_store_flag_force']
['emit_unop_insn']
['emit_conditional_move']
['emit_conditional_move']
['emit_unop_insn']
['emit_unop_insn']
['emit_unop_insn']
['emit_unrolled_add']
['end_final', 'end_final']
['end_final']
['equiv_constant']
['ereal_from_int', 'ereal_from_uint']
['ereal_from_int', 'ereal_from_uint']
['push_array_bounds', 'push_member_name', 'spelling_length']
['print_spelling', 'spelling_length']
['move_by_pieces']
['estimate_probability']
['convert_from_ssa', 'cse_end_of_basic_block', 'cse_end_of_basic_block', 'memrefs_conflict_p']
['squeeze_notes']
['squeeze_notes']
['estimate_probability']
['estimate_probability']
['estimate_probability']
['estimate_probability']
['estimate_probability']
['emit_libcall_block', 'emit_libcall_block']
['exact_real_inverse']
['ix86_hard_regno_mode_ok', 'simplify_unary_operation']
['expand_builtin_init_dwarf_reg_sizes', 'store_constructor_field']
['gen_reload']
['expand_assignment']
['emit_push_insn', 'expand_assignment']
['expand_assignment']
['emit_case_nodes', 'emit_case_nodes', 'emit_case_nodes', 'emit_case_nodes']
['expand_assignment']
['expand_assignment']
['check_insn_for_givs']
['record_value_for_reg']
['eliminate_regs_in_insn']
['dwarf2out_begin_prologue', 'eliminate_regs_in_insn']
['expand_builtin_apply']
['expand_builtin_apply']
['expand_end_bindings']
['store_constructor_field']
['init_expr_once', 'try_tablejump']
['store_constructor_field']
['peep2_find_free_register', 'recog_for_combine', 'recog_for_combine']
['expand_builtin_apply']
['cselib_process_insn']
['move_by_pieces']
['change_address']
['init_expr_once']
['expand_builtin_init_dwarf_reg_sizes']
['expand_builtin_apply_args_1']
['expand_builtin_apply_args_1']
['expand_builtin_expect_jump']
['expand_builtin_expect_jump', 'output_addressed_constants']
['expand_builtin_extract_return_addr']
['expand_builtin_init_dwarf_reg_sizes']
['expand_builtin_longjmp']
['expand_builtin_longjmp', 'init_reload']
['expand_builtin_longjmp', 'expand_builtin_return_addr']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'emit_move_insn_1', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_main_function', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_tablejump', 'legitimize_address', 'output_cfi', 'probe_stack_range', 'push_block', 'round_push', 'round_trampoline_addr', 'ssa_const_prop']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'emit_move_insn_1', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_main_function', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_tablejump', 'legitimize_address', 'output_cfi', 'probe_stack_range', 'push_block', 'round_push', 'round_trampoline_addr', 'ssa_const_prop']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'emit_move_insn_1', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_main_function', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_tablejump', 'legitimize_address', 'output_cfi', 'probe_stack_range', 'push_block', 'round_push', 'round_trampoline_addr', 'ssa_const_prop']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'emit_move_insn_1', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_main_function', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_tablejump', 'legitimize_address', 'output_cfi', 'probe_stack_range', 'push_block', 'round_push', 'round_trampoline_addr', 'ssa_const_prop']
['dump_node']
['std_expand_builtin_va_arg']
['expand_builtin_prefetch', 'expand_builtin_prefetch']
['expand_builtin_prefetch', 'expand_builtin_prefetch']
['expand_builtin_setjmp_setup']
['expand_function_start']
['expand_function_start', 'fix_lexical_addr', 'legitimize_pic_address', 'legitimize_pic_address']
['expand_builtin_return_addr']
['expand_builtin_setjmp']
['expand_builtin_setjmp_setup']
['expand_builtin_setjmp_setup']
['expand_builtin_setjmp_setup']
['expand_builtin_setjmp_setup']
['expand_builtin_setjmp_setup']
['expand_builtin_setjmp_setup']
['expand_builtin_va_arg']
['expand_builtin_va_arg']
['expand_builtin_va_arg']
['constant_subword', 'constant_subword', 'decode_rtx_const', 'expand_complex_abs']
['expand_increment', 'expand_twoval_binop', 'expand_unop', 'gen_add2_insn', 'gen_add3_insn', 'gen_sub3_insn', 'have_add2_insn']
['expand_increment', 'expand_twoval_binop', 'expand_unop', 'gen_add2_insn', 'gen_add3_insn', 'gen_sub3_insn', 'have_add2_insn']
['emit_move_insn_1', 'emit_unop_insn']
['expand_compound_operation']
['expand_compound_operation']
['expand_compound_operation']
['expand_compound_operation']
['extract_fixed_bit_field']
['gen_peephole2_1262', 'gen_peephole2_1262']
['legitimize_pic_address']
['cse_basic_block', 'expand_function_end', 'find_reloads_address']
['find_split_point']
['copy_insn_list', 'copy_loop_body', 'dead_or_predicable', 'expand_expr', 'if_convert']
['expand_decl', 'expand_decl', 'expand_decl']
['find_base_value']
['expand_decl', 'expand_decl', 'expand_decl']
['expand_decl']
['expand_decl']
['expand_builtin_apply', 'expand_eh_region_end_cleanup', 'expand_end_bindings', 'legitimize_pic_address', 'round_trampoline_addr']
['ix86_va_arg']
['expand_eh_return']
['expand_end_bindings']
['expand_end_bindings']
['compute_forward_dependences', 'find_reloads_address', 'gen_binary', 'move_movables', 'reload']
['canonicalize_condition', 'cse_insn', 'find_reloads_address', 'move_movables', 'reload']
['fixup_var_refs_1', 'fold_rtx', 'legitimize_pic_address', 'regmove_optimize', 'schedule_block', 'shorten_branches']
['reload_cse_regs']
['reload_cse_regs', 'subst_stack_regs_pat']
['copy_insn_list', 'copy_insn_list', 'cse_insn', 'cse_insn', 'emit_group_store', 'gen_reload', 'ix86_split_fp_branch', 'local_alloc', 'loop_iterations', 'memrefs_conflict_p', 'reload_cse_regs', 'simplify_relational_operation', 'store_bit_field', 'store_expr', 'store_expr']
['convert_move', 'init_emit_once', 'init_emit_once', 'reversed_comparison_code_parts']
['expand_field_assignment']
['expand_field_assignment']
['expand_fix']
['expand_fix', 'extract_fixed_bit_field', 'find_dummy_reload', 'find_dummy_reload', 'replace_oldest_value_addr']
['expand_fix']
['expand_fix', 'final_giv_value', 'reload_cse_simplify_set', 'subst']
['expand_fix']
['doloop_optimize', 'expand_fix']
['expand_fix']
['doloop_optimize', 'expand_fix']
['expand_fix']
['expand_fix']
['expand_fix']
['expand_float']
['expand_float']
['alter_subreg', 'emit_group_load', 'expand_fix', 'expand_float', 'final_giv_value', 'find_dummy_reload', 'find_dummy_reload', 'reload_cse_simplify_set', 'subst']
['expand_float']
['record_constant_1']
['const_hash', 'gen_formal_types_die', 'output_addressed_constants']
['ix86_va_arg']
['expand_function_start']
['expand_function_start']
['expand_function_start']
['expand_builtin_longjmp', 'expand_function_start', 'init_reload', 'init_reload', 'ix86_setup_incoming_varargs', 'legitimize_pic_address', 'legitimize_pic_address']
['back_branch_in_range_p', 'copy_insn_list', 'find_base_value', 'restore_line_notes', 'rm_line_notes', 'rm_other_notes', 'swap_rtx_condition']
['gen_reload', 'scan_loop', 'unroll_loop']
['expand_goto', 'reposition_prologue_and_epilogue_notes', 'strength_reduce']
['expand_goto']
['protect_from_queue']
['find_base_value', 'find_base_value', 'for_each_insn_in_loop', 'for_each_insn_in_loop', 'gen_binary', 'rm_line_notes', 'simplify_relational_operation']
['adjust_address_1', 'memrefs_conflict_p']
['decompose', 'for_each_insn_in_loop', 'for_each_insn_in_loop', 'rm_other_notes', 'rm_other_notes', 'rm_other_notes', 'rm_other_notes', 'squeeze_notes']
['expand_goto', 'gen_reload', 'reposition_prologue_and_epilogue_notes']
['expand_goto', 'expand_goto', 'gen_reload', 'reposition_prologue_and_epilogue_notes']
['expand_goto']
['expand_goto']
['expand_goto']
['expand_goto', 'expand_goto', 'gen_reload', 'reposition_prologue_and_epilogue_notes']
['expand_dec', 'expand_inc']
['expand_increment', 'expand_twoval_binop', 'expand_unop', 'gen_add2_insn', 'gen_add3_insn', 'gen_sub3_insn', 'have_add2_insn']
['expand_increment']
['expand_increment']
['expand_increment']
['expand_increment']
['emit_move_insn_1']
['expand_increment']
['expand_increment']
['expand_increment']
['expand_increment']
['expand_increment']
['doloop_optimize', 'store_expr', 'store_expr', 'validate_replace_rtx_1']
['emit_move_insn_1']
['cse_insn', 'loop_iterations']
['find_reloads_address', 'move_movables']
['expand_expr']
['cse_end_of_basic_block', 'simplify_comparison']
['check_asm_stack_operands', 'simplify_comparison']
['expand_goto', 'reposition_prologue_and_epilogue_notes', 'strength_reduce']
['delete_noop_moves', 'subst_stack_regs_pat']
['eliminate_regs', 'expand_field_assignment', 'protect_from_queue']
['apply_distributive_law', 'eliminate_regs', 'for_each_insn_in_loop', 'optimize_bit_field']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'emit_move_insn_1', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_main_function', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_tablejump', 'legitimize_address', 'output_cfi', 'probe_stack_range', 'push_block', 'round_push', 'round_trampoline_addr', 'ssa_const_prop']
['expand_main_function']
['expand_mult']
['nonzero_bits']
['expand_mult', 'expand_mult', 'expand_mult', 'expand_mult']
['expand_mult', 'expand_mult', 'expand_mult', 'expand_mult']
['expand_mult', 'expand_mult', 'expand_mult', 'expand_mult']
['expand_mult', 'expand_mult', 'expand_mult', 'expand_mult']
['expand_mult']
['expand_mult_add']
['expand_mult_add']
['expand_mult_add', 'make_tree']
['expand_mult_add']
['expand_mult_add']
['expand_mult_add']
['expand_mult_add', 'expand_mult_add']
['expand_mult_add', 'expand_mult_add']
['expand_mult_add']
['expand_mult_add']
['expand_mult_highpart_adjust']
['expand_mult_highpart_adjust']
['expand_goto']
['expand_return']
['expand_return']
['ix86_zero_extend_to_Pmode']
['clear_storage', 'clear_storage', 'emit_block_move', 'emit_block_move', 'ix86_va_start', 'ix86_va_start', 'ix86_va_start', 'ix86_va_start', 'make_tree', 'std_expand_builtin_va_start']
['simplify_plus_minus', 'simplify_plus_minus']
['expand_mult_add']
['expand_unop']
['expand_increment', 'expand_twoval_binop', 'expand_unop', 'gen_add2_insn', 'gen_add3_insn', 'gen_sub3_insn', 'have_add2_insn']
['expand_twoval_binop']
['get_secondary_mem']
['expand_increment', 'expand_twoval_binop', 'expand_unop', 'gen_add2_insn', 'gen_add3_insn', 'gen_sub3_insn', 'have_add2_insn']
['expand_increment', 'expand_twoval_binop', 'expand_unop', 'gen_add2_insn', 'gen_add3_insn', 'gen_sub3_insn', 'have_add2_insn']
['expand_twoval_binop']
['expand_unop']
['compute_forward_dependences', 'expected_value_to_br_prob', 'split_all_insns']
['gen_sequence', 'protect_from_queue', 'squeeze_notes']
['expected_value_to_br_prob']
['expected_value_to_br_prob', 'expected_value_to_br_prob']
['expected_value_to_br_prob', 'expected_value_to_br_prob']
['gen_sequence']
['expected_value_to_br_prob']
['expected_value_to_br_prob', 'rm_line_notes']
['expected_value_to_br_prob', 'expected_value_to_br_prob']
['expected_value_to_br_prob', 'expected_value_to_br_prob']
['emit_push_insn', 'expand_assignment']
['emit_push_insn', 'expand_assignment']
['expr_size']
['consec_sets_giv']
['consec_sets_giv']
['express_from']
['express_from']
['express_from']
['memory_address']
['extend_value_for_giv', 'extend_value_for_giv']
['extend_value_for_giv', 'extend_value_for_giv']
['nonoverlapping_memrefs_p', 'scan_loop', 'try_copy_prop', 'unroll_loop']
['extract_bit_field']
['distribute_notes', 'simplify_comparison']
['extract_insn_cached']
['extract_insn_cached']
['extract_constrain_insn_cached']
['record_reg_classes']
['expand_float']
['extract_fixed_bit_field']
['find_matches', 'ix86_attr_length_address_default', 'ix86_attr_length_immediate_default']
['extract_insn']
['extract_insn', 'peephole2_insns', 'recog', 'split_insns']
['extract_insn']
['extract_insn']
['extract_insn']
['extract_insn']
['extract_insn']
['extract_insn']
['extract_insn', 'reload_cse_simplify_operands']
['extract_insn']
['extract_insn']
['extract_insn', 'extract_insn']
['preprocess_constraints']
['extract_insn']
['extract_insn_cached']
['extract_insn_cached']
['extract_left_shift', 'find_reloads_toplev', 'kill_value', 'noce_emit_cmove', 'replace_regs', 'replace_rtx', 'replace_rtx', 'simplify_rtx', 'simplify_rtx', 'write_dependence_p']
['extract_split_bit_field', 'store_split_bit_field']
['extract_split_bit_field', 'store_split_bit_field']
['extract_split_bit_field', 'extract_split_bit_field']
['extract_split_bit_field', 'extract_split_bit_field']
['ix86_split_long_move', 'scan_loop', 'visit_expression']
['final']
['emit_insns_after', 'emit_insns_after', 'emit_insns_after', 'final']
['squeeze_notes']
['final']
['back_branch_in_range_p', 'back_branch_in_range_p', 'noce_get_condition', 'rm_line_notes', 'rm_line_notes', 'rm_other_notes', 'rm_other_notes']
['back_branch_in_range_p', 'back_branch_in_range_p', 'noce_get_condition', 'rm_line_notes', 'rm_line_notes', 'rm_other_notes', 'rm_other_notes']
['cfg_layout_finalize', 'compute_transp', 'expand_decl', 'expand_decl', 'find_base_value', 'find_base_value', 'find_basic_blocks', 'get_AT_unsigned', 'mark_referenced_regs', 'rm_line_notes', 'rm_other_notes', 'splice_child_die', 'swap_rtx_condition', 'try_copy_prop']
['back_branch_in_range_p', 'back_branch_in_range_p', 'noce_get_condition', 'rm_line_notes', 'rm_line_notes', 'rm_other_notes', 'rm_other_notes']
['back_branch_in_range_p', 'back_branch_in_range_p', 'noce_get_condition', 'rm_line_notes', 'rm_line_notes', 'rm_other_notes', 'rm_other_notes']
['compute_transp']
['final', 'final', 'final', 'final']
['final', 'final', 'final', 'final']
['final', 'final', 'final', 'final']
['final', 'final', 'final', 'final']
['defs_to_undefined', 'defs_to_varying']
['biv_total_increment', 'biv_total_increment', 'combine_givs', 'combine_givs', 'maybe_eliminate_biv_1', 'maybe_eliminate_biv_1']
['biv_total_increment', 'biv_total_increment', 'combine_givs', 'combine_givs', 'maybe_eliminate_biv_1', 'maybe_eliminate_biv_1']
['biv_total_increment']
['convert_modes', 'convert_modes']
['convert_modes', 'convert_modes']
['consec_sets_giv']
['biv_total_increment']
['biv_total_increment']
['consec_sets_giv']
['store_expr']
['expand_fix']
['final_scan_insn']
['ix86_split_fp_branch']
['final_scan_insn', 'final_scan_insn']
['final_scan_insn', 'final_scan_insn']
['pending_xref_error']
['split_all_insns']
['split_all_insns']
['change_address']
['gen_sequence', 'protect_from_queue', 'squeeze_notes']
['find_base_term', 'find_base_value', 'find_base_value']
['find_base_value', 'gen_sequence', 'get_AT_unsigned', 'splice_child_die']
['find_base_term']
['make_compound_operation']
['make_compound_operation']
['make_compound_operation']
['find_base_value']
['ix86_split_long_move', 'scan_loop', 'visit_expression']
['find_base_value']
['find_base_value']
['find_base_value']
['find_base_value', 'find_base_value']
['cfg_layout_finalize', 'compute_transp', 'find_base_value', 'find_basic_blocks', 'mark_referenced_regs', 'rm_line_notes', 'rm_other_notes', 'swap_rtx_condition', 'try_copy_prop']
['squeeze_notes']
['back_branch_in_range_p', 'branch_prob', 'canonicalize_condition', 'cse_basic_block', 'delete_related_insns', 'find_basic_blocks', 'if_convert', 'loop_optimize', 'set_label_offsets', 'try_combine']
['find_basic_blocks']
['find_basic_blocks']
['find_basic_blocks']
['find_basic_blocks']
['find_basic_blocks']
['c_lex']
['simplify_relational_operation']
['squeeze_notes']
['biv_total_increment']
['canonicalize_condition', 'find_base_value', 'gen_binary', 'get_AT_unsigned', 'reload_combine_note_use', 'restore_line_notes']
['memory_address']
['find_comparison_args']
['find_comparison_args']
['cse_basic_block', 'cse_insn', 'df_uses_record', 'emit_libcall_block', 'legitimize_pic_address', 'legitimize_pic_address', 'optimize_bit_field', 'schedule_block', 'shorten_branches']
['emit_libcall_block', 'emit_library_call_value_1', 'gen_reload', 'ix86_split_long_move']
['check_asm_stack_operands', 'cse_insn', 'expand_decl']
['find_reloads_address', 'move_movables']
['canonicalize_condition', 'compute_forward_dependences', 'compute_transp', 'consec_sets_giv', 'cse_insn', 'expand_expr', 'expected_value_to_br_prob', 'find_equiv_reg', 'fixup_var_refs_1', 'fold_rtx', 'gen_reload', 'gen_sequence', 'instantiate_virtual_regs_1', 'local_alloc', 'move_movables', 'move_movables', 'move_movables', 'nonoverlapping_memrefs_p', 'protect_from_queue', 'purge_addressof_1', 'regmove_optimize', 'reload', 'simplify_comparison', 'simplify_comparison', 'split_all_insns', 'squeeze_notes', 'strength_reduce', 'subst_asm_stack_regs']
['copy_loop_headers', 'find_equiv_reg']
['copy_loop_headers', 'find_equiv_reg']
['copy_loop_headers', 'find_equiv_reg']
['find_equiv_reg']
['combine_reversed_comparison_code']
['cse_basic_block', 'cse_main']
['force_nonfallthru_and_redirect', 'force_nonfallthru_and_redirect']
['find_free_reg']
['find_free_reg']
['find_free_reg']
['find_free_reg']
['print_switch_values', 'toplev_main', 'toplev_main']
['find_free_reg']
['find_free_reg']
['combine_givs', 'combine_givs']
['combine_givs', 'combine_givs']
['find_mem_givs']
['find_mem_givs', 'find_mem_givs']
['find_mem_givs', 'find_mem_givs']
['find_mem_givs']
['find_mem_givs']
['mark_reg']
['mark_reg']
['scan_rtx_reg']
['find_free_reg']
['modified_type_die']
['modified_type_die']
['find_placeholder']
['qty_sugg_compare']
['find_reg']
['find_reg']
['init_expr_once']
['find_reg']
['global_alloc', 'global_alloc', 'global_alloc']
['find_reg', 'find_reg']
['find_reg']
['find_reg']
['find_oldest_value_reg', 'scan_rtx_reg']
['choose_hard_reg_mode']
['reload_combine_note_use', 'strength_reduce', 'subst_asm_stack_regs']
['cleanup_cfg', 'copy_loop_body', 'maybe_eliminate_biv_1']
['cfg_layout_finalize', 'get_attr_prefix_0f', 'mark_referenced_regs']
['find_reloads_address_1']
['constrain_operands', 'init_alias_analysis']
['check_asm_stack_operands', 'optimize_sibling_and_tail_recursive_calls', 'record_giv']
['apply_distributive_law', 'cse_insn', 'expand_end_case_type', 'for_each_insn_in_loop', 'loop_iterations', 'optimize_bit_field']
['eliminate_regs', 'expand_expr', 'find_reloads_address', 'local_alloc', 'purge_addressof_1']
['simplify_binary_operation']
['find_equiv_reg', 'find_reloads_address', 'find_reloads_address', 'move_movables', 'reload']
['dead_or_predicable']
['store_bit_field', 'store_bit_field']
['init_propagate_block_info', 'try_copy_prop']
['adjust_address_1', 'combine_regs', 'squeeze_notes', 'squeeze_notes']
['commit_edge_insertions', 'commit_edge_insertions']
['get_secondary_mem']
['find_reloads_address_part']
['adjust_address_1', 'decompose', 'find_base_value', 'find_base_value', 'gen_binary', 'insns_match_p', 'insns_match_p', 'restore_line_notes', 'rm_line_notes', 'swap_rtx_condition']
['init_propagate_block_info', 'try_copy_prop']
['commit_edge_insertions', 'commit_edge_insertions']
['copy_insn_list', 'decompose', 'emit_group_store', 'expand_field_assignment', 'gen_reload', 'memrefs_conflict_p', 'protect_from_queue', 'reload']
['gen_reload', 'scan_loop', 'unroll_loop']
['nonoverlapping_memrefs_p', 'scan_loop', 'try_copy_prop', 'unroll_loop']
['copy_insn_1', 'copy_rtx', 'gen_binary', 'gen_lowpart_for_combine', 'make_memloc', 'simplify_giv_expr', 'simplify_relational_operation']
['copy_insn_notes', 'dead_or_predicable']
['store_bit_field']
['decompose']
['decompose']
['expand_decl']
['recog_21']
['gen_lowpart_for_combine']
['copy_insn_1', 'copy_rtx', 'gen_binary', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'make_memloc']
['find_reloads_toplev']
['doloop_optimize', 'doloop_optimize']
['extract_left_shift', 'find_reloads_toplev', 'kill_value', 'noce_emit_cmove', 'replace_regs', 'replace_rtx', 'replace_rtx', 'simplify_rtx', 'simplify_rtx', 'write_dependence_p']
['find_reloads_toplev', 'find_reloads_toplev']
['find_reloads_toplev']
['general_operand']
['find_reloads_toplev', 'find_reloads_toplev']
['find_replacement', 'find_replacement']
['find_replacement', 'find_replacement']
['store_expr', 'subst']
['validate_replace_rtx_1']
['find_replacement']
['expand_fix']
['find_split_point']
['final_scan_insn', 'loop_iterations', 'move_movables', 'nonoverlapping_memrefs_p']
['force_to_mode']
['regmove_optimize']
['simplify_plus_minus']
['canonicalize_condition', 'combine_simplify_rtx', 'compute_transp', 'consec_sets_giv', 'cse_insn', 'expand_expr', 'final', 'find_equiv_reg', 'fixup_var_refs_1', 'gen_reload', 'gen_sequence', 'local_alloc', 'local_alloc', 'move_movables', 'move_movables', 'nonoverlapping_memrefs_p', 'protect_from_queue', 'purge_addressof_1', 'regmove_optimize', 'splice_child_die', 'squeeze_notes', 'strength_reduce']
['emit_group_store', 'purge_addressof_1']
['find_valid_class', 'find_valid_class']
['find_valid_class', 'find_valid_class']
['expand_builtin_apply']
['finish_eh_generation', 'init_reload']
['finish_eh_generation']
['optimize_sibling_and_tail_recursive_calls']
['c_alignof_expr', 'expand_tree_builtin', 'expand_tree_builtin', 'expand_tree_builtin', 'expand_tree_builtin', 'finish_enum']
['finish_enum']
['gen_type_die', 'has_cleanups']
['for_each_insn_in_loop', 'scope_to_insns_initialize', 'squeeze_notes']
['copy_insn_1']
['verify_flow_info']
['has_cleanups', 'move_deaths']
['copy_eh_notes']
['copy_eh_notes']
['finish_init']
['pop_init_level', 'process_init_element', 'process_init_element']
['finish_init', 'pop_init_level', 'push_range_stack', 'set_designator', 'set_init_label']
['finish_init', 'start_init']
['finish_init', 'start_init']
['finish_init', 'pop_init_level', 'push_range_stack', 'set_designator', 'set_init_label']
['finish_init']
['finish_init']
['finish_init']
['finish_init']
['finish_struct', 'finish_struct']
['finish_struct', 'finish_struct']
['fix_lexical_addr']
['expand_builtin_setjmp_setup', 'fix_lexical_addr']
['fix_register']
['find_split_point']
['find_split_point']
['gen_reload']
['copy_insn_list', 'copy_loop_body', 'dead_or_predicable', 'expand_expr', 'if_convert']
['copy_loop_body', 'cse_insn', 'expand_end_case_type', 'expand_expr', 'find_reloads_address', 'fold_rtx', 'if_convert', 'ix86_split_fp_branch', 'legitimize_pic_address', 'loop_iterations', 'optimize_sibling_and_tail_recursive_calls', 'purge_addressof_1', 'regmove_optimize', 'simplify_relational_operation', 'unroll_loop']
['copy_eh_notes', 'find_base_value', 'scope_to_insns_initialize']
['cse_insn', 'store_expr', 'store_expr']
['eliminate_regs', 'eliminate_regs', 'instantiate_virtual_regs_1', 'simplify_comparison', 'unroll_loop']
['distribute_notes', 'simplify_comparison']
['expand_compound_operation']
['nonoverlapping_memrefs_p']
['comptypes', 'comptypes']
['copy_insn_1']
['force_nonfallthru_and_redirect']
['force_nonfallthru_and_redirect']
['force_nonfallthru_and_redirect', 'record_one_set']
['sched_analyze_insn', 'sched_analyze_insn']
['sched_analyze_insn']
['reload']
['distribute_notes']
['convert_regs_2', 'copy_loop_body', 'df_uses_record', 'emit_libcall_block', 'expand_decl', 'expand_function_end', 'init_alias_analysis', 'reload', 'reload', 'reload_combine_note_use', 'strength_reduce', 'unroll_loop']
['copy_insn_list', 'eliminate_regs', 'find_reloads_address', 'regmove_optimize', 'scan_loop']
['eliminate_regs', 'visit_expression']
['back_branch_in_range_p', 'canonicalize_condition', 'copy_insn_list', 'find_base_value', 'nonoverlapping_memrefs_p', 'push_reload', 'restore_line_notes', 'rm_line_notes', 'rm_other_notes', 'swap_rtx_condition', 'try_combine', 'try_combine', 'try_combine']
['ix86_split_long_move', 'nonoverlapping_memrefs_p', 'push_reload', 'scan_loop', 'scan_loop', 'try_copy_prop', 'unroll_loop', 'visit_expression']
['back_branch_in_range_p', 'copy_insn_list', 'find_base_value', 'restore_line_notes', 'rm_line_notes', 'rm_other_notes', 'swap_rtx_condition']
['emit_libcall_block', 'protect_from_queue', 'reposition_prologue_and_epilogue_notes', 'store_bit_field']
['for_each_insn_in_loop']
['branch_prob', 'combine_instructions', 'combine_instructions', 'combine_simplify_rtx', 'combine_simplify_rtx', 'copy_loop_body', 'cse_basic_block', 'cse_insn', 'cse_insn', 'emit_libcall_block', 'emit_libcall_block', 'emit_no_conflict_block', 'emit_no_conflict_block', 'expand_end_case_type', 'expand_function_end', 'find_dummy_reload', 'find_reloads_address', 'find_reloads_address', 'fixup_var_refs_1', 'fixup_var_refs_1', 'fold_rtx', 'gcse_main', 'if_convert', 'ix86_split_fp_branch', 'legitimize_pic_address', 'legitimize_pic_address', 'legitimize_pic_address', 'loop_optimize', 'make_extraction', 'noce_get_condition', 'optimize_sibling_and_tail_recursive_calls', 'optimize_sibling_and_tail_recursive_calls', 'purge_addressof_1', 'regmove_optimize', 'reload', 'reload', 'sched_init', 'schedule_block', 'shorten_branches', 'simplify_relational_operation', 'thread_prologue_and_epilogue_insns', 'unroll_loop', 'unroll_loop', 'unroll_loop']
['reload']
['move_by_pieces']
['for_each_insn_in_loop']
['find_basic_blocks']
['find_base_value', 'find_base_value', 'for_each_insn_in_loop', 'for_each_insn_in_loop', 'gen_binary', 'rm_line_notes', 'simplify_relational_operation']
['find_base_value', 'find_base_value', 'for_each_insn_in_loop', 'for_each_insn_in_loop', 'gen_binary', 'rm_line_notes', 'simplify_relational_operation']
['for_each_insn_in_loop']
['back_branch_in_range_p', 'back_branch_in_range_p', 'rm_line_notes', 'rm_line_notes', 'rm_other_notes', 'rm_other_notes']
['back_branch_in_range_p', 'back_branch_in_range_p', 'rm_line_notes', 'rm_line_notes', 'rm_other_notes', 'rm_other_notes']
['force_const_mem', 'output_constant_def']
['make_decl_rtl', 'output_call_frame_info']
['constrain_operands', 'emit_library_call_value_1']
['force_nonfallthru_and_redirect']
['force_nonfallthru_and_redirect']
['force_nonfallthru_and_redirect']
['force_nonfallthru_and_redirect']
['force_nonfallthru_and_redirect']
['force_nonfallthru_and_redirect', 'force_nonfallthru_and_redirect']
['force_nonfallthru_and_redirect', 'force_nonfallthru_and_redirect']
['force_nonfallthru_and_redirect', 'force_nonfallthru_and_redirect']
['force_nonfallthru_and_redirect', 'force_nonfallthru_and_redirect']
['force_nonfallthru_and_redirect']
['force_nonfallthru_and_redirect']
['force_nonfallthru_and_redirect']
['thread_prologue_and_epilogue_insns']
['thread_prologue_and_epilogue_insns']
['check_asm_stack_operands', 'expand_decl']
['do_store_flag']
['force_operand', 'force_operand']
['force_operand']
['force_operand']
['protect_from_queue', 'restore_line_notes', 'simplify_relational_operation', 'squeeze_notes']
['force_operand']
['force_operand']
['force_operand']
['force_operand', 'force_operand']
['force_operand', 'force_operand']
['force_operand']
['check_asm_stack_operands', 'expand_decl']
['check_asm_stack_operands', 'optimize_sibling_and_tail_recursive_calls', 'record_giv']
['cse_insn', 'expand_expr', 'move_movables', 'purge_addressof_1']
['fold_rtx', 'move_movables', 'simplify_comparison']
['reload_cse_regs']
['form_sum', 'form_sum', 'form_sum']
['form_sum', 'form_sum', 'form_sum']
['form_sum', 'form_sum', 'form_sum']
['form_sum', 'form_sum', 'form_sum']
['form_sum']
['peep2_find_free_register', 'peep2_find_free_register', 'reg_fits_class_p']
['peep2_find_free_register', 'peep2_find_free_register', 'reg_fits_class_p']
['free_gcse_mem']
['text_section']
['text_section']
['function_units_used']
['function_units_used']
['get_attr_type']
['copy_insn_list', 'cse_insn', 'loop_iterations', 'reload', 'store_expr']
['reload_as_needed']
['gcse_main']
['gcse_main']
['alloc_reg_set_mem']
['init_branch_prob']
['gcse_main']
['emit_move_insn_1', 'gen_cond_trap']
['gen_add2_insn']
['gen_add2_insn']
['gen_add2_insn']
['move_by_pieces']
['gen_add3_insn', 'gen_sub3_insn']
['gen_add2_insn']
['gen_add3_insn', 'gen_sub3_insn']
['add_bound_info', 'add_bound_info', 'decls_for_scope', 'gen_array_type_die', 'gen_array_type_die', 'gen_block_die', 'gen_formal_parameter_die', 'gen_lexical_block_die', 'gen_subprogram_die', 'gen_subprogram_die', 'gen_subprogram_die', 'gen_subprogram_die', 'gen_subroutine_type_die', 'gen_type_die', 'gen_type_die', 'gen_type_die', 'gen_unspecified_parameters_die', 'gen_variable_die', 'modified_type_die', 'modified_type_die', 'new_die']
['gen_array_type_die']
['gen_aux_info_record']
['copy_insn_1', 'copy_rtx', 'gen_binary', 'gen_lowpart_for_combine', 'make_memloc', 'simplify_giv_expr', 'simplify_relational_operation']
['gen_binary']
['gen_binary', 'gen_lowpart_for_combine']
['copy_insn_1', 'copy_rtx', 'gen_binary', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'make_memloc']
['gen_binary', 'gen_binary']
['gen_binary', 'gen_lowpart_for_combine']
['copy_insn_1', 'copy_rtx', 'gen_binary', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'make_memloc']
['gen_binary']
['gen_binary', 'gen_lowpart_for_combine']
['copy_insn_1', 'copy_rtx', 'gen_binary', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'make_memloc']
['gen_binary', 'gen_binary']
['gen_binary', 'gen_lowpart_for_combine']
['copy_insn_1', 'copy_rtx', 'gen_binary', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'make_memloc']
['ix86_split_long_move', 'scan_loop', 'visit_expression']
['gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'emit_move_insn_1', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_main_function', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_tablejump', 'legitimize_address', 'output_cfi', 'probe_stack_range', 'push_block', 'round_push', 'round_trampoline_addr', 'ssa_const_prop']
['find_basic_blocks']
['refers_to_regno_p']
['adjust_address_1']
['ix86_split_long_move', 'scan_loop', 'visit_expression']
['gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'emit_move_insn_1', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_main_function', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_tablejump', 'legitimize_address', 'output_cfi', 'probe_stack_range', 'push_block', 'round_push', 'round_trampoline_addr', 'ssa_const_prop']
['convert_regs_2']
['convert_regs_2']
['legitimize_pic_address', 'move_by_pieces']
['legitimize_pic_address', 'move_by_pieces']
['gen_reload', 'scan_loop', 'unroll_loop']
['gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'emit_move_insn_1', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_main_function', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_tablejump', 'legitimize_address', 'output_cfi', 'probe_stack_range', 'push_block', 'round_push', 'round_trampoline_addr', 'ssa_const_prop']
['find_basic_blocks', 'split_all_insns']
['refers_to_regno_p']
['adjust_address_1', 'emit_libcall_block', 'expand_field_assignment', 'force_nonfallthru_and_redirect', 'memrefs_conflict_p', 'protect_from_queue', 'protect_from_queue', 'store_bit_field']
['for_each_insn_in_loop']
['gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'emit_move_insn_1', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_main_function', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_tablejump', 'legitimize_address', 'output_cfi', 'probe_stack_range', 'push_block', 'round_push', 'round_trampoline_addr', 'ssa_const_prop']
['convert_regs_2']
['convert_regs_2']
['move_by_pieces']
['move_by_pieces']
['gen_cmpstrsi']
['gen_cmpstrsi']
['gen_cond_trap']
['gen_conditional_trap']
['gen_block_die']
['gen_block_die']
['add_bound_info', 'add_bound_info', 'decls_for_scope', 'gen_array_type_die', 'gen_array_type_die', 'gen_block_die', 'gen_formal_parameter_die', 'gen_lexical_block_die', 'gen_subprogram_die', 'gen_subprogram_die', 'gen_subprogram_die', 'gen_subprogram_die', 'gen_subroutine_type_die', 'gen_type_die', 'gen_type_die', 'gen_type_die', 'gen_unspecified_parameters_die', 'gen_variable_die', 'modified_type_die', 'modified_type_die', 'new_die']
['gen_block_die']
['gen_formal_parameter_die']
['gen_eh_return']
['gen_eh_return']
['output_pic_addr_const']
['output_pic_addr_const']
['output_pic_addr_const']
['gen_formal_parameter_die']
['add_abstract_origin_attribute', 'gen_block_die', 'gen_formal_parameter_die']
['add_location_or_const_value_attribute']
['gen_lowpart']
['copy_insn_1', 'copy_rtx', 'gen_binary', 'gen_lowpart_for_combine', 'make_memloc', 'simplify_giv_expr', 'simplify_relational_operation']
['convert_move']
['convert_move']
['gen_lowpart_for_combine']
['gen_lowpart_common']
['copy_insn_1', 'copy_rtx', 'gen_binary', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'make_memloc']
['gen_lowpart_common']
['gen_lowpart_for_combine']
['copy_insn_1', 'copy_rtx', 'gen_binary', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'make_memloc']
['ix86_function_value']
['ix86_function_value']
['copy_insn_1', 'copy_rtx', 'gen_binary', 'gen_lowpart_for_combine', 'make_memloc', 'simplify_giv_expr', 'simplify_relational_operation']
['gen_lowpart_for_combine']
['gen_lowpart_for_combine']
['gen_lowpart_for_combine']
['copy_insn_1', 'copy_rtx', 'gen_binary', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'make_memloc']
['gen_lowpart_for_combine']
['gen_binary', 'gen_lowpart_for_combine']
['copy_insn_1', 'copy_rtx', 'gen_binary', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'make_memloc']
['gen_lowpart_for_combine']
['gen_lowpart_for_combine', 'gen_lowpart_for_combine']
['gen_lowpart_for_combine', 'gen_lowpart_for_combine']
['gen_binary', 'gen_lowpart_for_combine']
['copy_insn_1', 'copy_rtx', 'gen_binary', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'make_memloc']
['gen_mem_addressof']
['gen_mem_addressof']
['gen_mem_addressof', 'wipe_dead_reg']
['emit_move_insn_1', 'gen_cond_trap']
['gen_move_insn']
['gen_peephole2_1164', 'gen_peephole2_1165']
['gen_peephole2_1260', 'gen_peephole2_1260', 'gen_peephole2_1261', 'gen_peephole2_1261']
['gen_peephole2_1260', 'gen_peephole2_1260', 'gen_peephole2_1261', 'gen_peephole2_1261']
['gen_peephole2_1260', 'gen_peephole2_1260', 'gen_peephole2_1261', 'gen_peephole2_1261']
['gen_peephole2_1260', 'gen_peephole2_1260', 'gen_peephole2_1261', 'gen_peephole2_1261']
['gen_peephole2_1262', 'gen_peephole2_1262']
['gen_peephole2_1262', 'gen_peephole2_1262']
['gen_peephole2_1263', 'gen_peephole2_1263']
['gen_peephole2_1263', 'gen_peephole2_1263']
['gen_peephole2_1264', 'gen_peephole2_1266']
['gen_peephole2_1264', 'gen_peephole2_1266']
['gen_push']
['gen_push']
['gen_reg_rtx']
['expand_goto', 'reposition_prologue_and_epilogue_notes', 'strength_reduce']
['gen_reload', 'scan_loop', 'unroll_loop']
['reload']
['loop_optimize']
['find_reloads_address']
['adjust_address_1', 'cse_insn', 'expand_end_case_type']
['final_scan_insn', 'loop_iterations', 'move_movables', 'nonoverlapping_memrefs_p']
['gen_reload']
['find_reloads_address', 'reposition_prologue_and_epilogue_notes', 'store_expr', 'store_expr']
['ix86_function_value']
['gen_rtx_REG']
['apply_distributive_law', 'compute_forward_dependences', 'delete_noop_moves', 'expected_value_to_br_prob', 'find_base_value', 'gen_sequence', 'rm_other_notes', 'split_all_insns']
['gen_sequence', 'protect_from_queue', 'squeeze_notes']
['instantiate_virtual_regs', 'rm_line_notes']
['gen_sequence']
['gen_sequence']
['gen_sequence']
['defs_to_undefined', 'defs_to_varying']
['defs_to_undefined', 'defs_to_varying']
['protect_from_queue']
['protect_from_queue']
['gen_sequence', 'gen_sequence', 'squeeze_notes', 'squeeze_notes']
['gen_sequence', 'gen_sequence', 'squeeze_notes', 'squeeze_notes']
['output_addr_const']
['gen_sequence']
['gen_sequence']
['store_fixed_bit_field']
['gen_split_1087', 'gen_split_1088']
['init_expmed']
['gen_split_954', 'gen_split_955', 'gen_split_956', 'gen_split_957', 'gen_split_958', 'gen_split_959', 'gen_split_962']
['gen_split_1087', 'gen_split_1088']
['gen_split_1157']
['gen_split_1158']
['gen_split_1181', 'gen_split_950']
['gen_split_1181', 'gen_split_1182', 'gen_split_950']
['gen_split_1232', 'gen_split_1232', 'gen_split_1236', 'gen_split_1236']
['gen_split_1232', 'gen_split_1232', 'gen_split_1236', 'gen_split_1236']
['gen_split_1181', 'gen_split_950']
['gen_split_1182']
['gen_split_1181', 'gen_split_1182', 'gen_split_950']
['gen_split_1232', 'gen_split_1232']
['gen_split_1232', 'gen_split_1232']
['gen_split_1182']
['gen_split_1214', 'gen_split_1214']
['gen_split_1214', 'gen_split_1214']
['gen_peephole2_1263', 'gen_peephole2_1263', 'gen_split_1214', 'gen_split_1214']
['gen_peephole2_1263', 'gen_peephole2_1263', 'gen_split_1214', 'gen_split_1214']
['gen_split_1232', 'gen_split_1232']
['gen_split_1232', 'gen_split_1232']
['gen_split_1232']
['gen_split_1232']
['gen_peephole2_1262', 'gen_peephole2_1262', 'gen_peephole2_1263', 'gen_peephole2_1263']
['gen_peephole2_1262', 'gen_peephole2_1262', 'gen_peephole2_1263', 'gen_peephole2_1263']
['gen_split_1231', 'gen_split_1231']
['gen_split_1231', 'gen_split_1231']
['gen_split_1181', 'gen_split_950']
['gen_split_1181', 'gen_split_1182', 'gen_split_950']
['gen_split_1181', 'gen_split_950']
['store_fixed_bit_field']
['store_fixed_bit_field']
['convert_move', 'store_fixed_bit_field']
['form_sum']
['gen_split_954', 'gen_split_956', 'legitimize_address']
['gen_split_954', 'gen_split_955', 'gen_split_956', 'gen_split_957', 'gen_split_958', 'gen_split_959', 'gen_split_962']
['store_fixed_bit_field']
['store_fixed_bit_field']
['store_fixed_bit_field']
['store_fixed_bit_field']
['init_expmed', 'init_expmed']
['init_reload']
['gen_split_954', 'gen_split_955', 'gen_split_956', 'gen_split_957', 'gen_split_958', 'gen_split_959', 'gen_split_962']
['store_fixed_bit_field']
['store_fixed_bit_field']
['store_fixed_bit_field']
['convert_move', 'store_fixed_bit_field']
['legitimize_address']
['gen_split_958', 'try_tablejump']
['gen_split_958']
['gen_split_954', 'gen_split_955', 'gen_split_956', 'gen_split_957', 'gen_split_958', 'gen_split_959', 'gen_split_962']
['store_fixed_bit_field']
['store_fixed_bit_field']
['gen_split_961']
['convert_move']
['form_sum']
['gen_split_954', 'gen_split_955', 'gen_split_956', 'gen_split_957', 'gen_split_958', 'gen_split_959', 'gen_split_962']
['store_fixed_bit_field']
['gen_sse_movdfcc', 'gen_sse_movsfcc']
['gen_sse_movdfcc', 'gen_sse_movsfcc']
['move_by_pieces']
['gen_add3_insn', 'gen_sub3_insn']
['gen_add2_insn']
['gen_add3_insn', 'gen_sub3_insn']
['dwarf2out_abstract_function', 'dwarf2out_decl', 'dwarf2out_source_line', 'gen_subprogram_die', 'gen_subprogram_die', 'gen_subprogram_die']
['dwarf2out_abstract_function', 'dwarf2out_decl', 'dwarf2out_source_line', 'gen_subprogram_die', 'gen_subprogram_die', 'gen_subprogram_die']
['gen_subprogram_die']
['add_abstract_origin_attribute', 'gen_block_die', 'gen_formal_parameter_die']
['gen_block_die']
['gen_block_die']
['add_data_member_location_attribute', 'add_data_member_location_attribute', 'dwarf2out_abstract_function', 'dwarf2out_abstract_function', 'dwarf2out_abstract_function', 'dwarf2out_abstract_function', 'gen_subprogram_die', 'gen_subprogram_die', 'gen_subprogram_die', 'gen_subroutine_type_die', 'gen_subroutine_type_die', 'gen_subroutine_type_die', 'gen_variable_die', 'gen_variable_die', 'gen_variable_die', 'get_AT', 'get_AT', 'get_AT_unsigned', 'get_AT_unsigned', 'get_AT_unsigned', 'get_AT_unsigned', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'emit_move_insn_1', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_main_function', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_tablejump', 'legitimize_address', 'output_cfi', 'probe_stack_range', 'push_block', 'round_push', 'round_trampoline_addr', 'ssa_const_prop']
['gen_type']
['output_pic_addr_const']
['const_hash', 'expand_assignment', 'output_constructor']
['store_parm_decls']
['const_hash', 'expand_assignment', 'output_constructor']
['output_pic_addr_const']
['gen_type_die_for_member']
['add_abstract_origin_attribute', 'gen_block_die', 'gen_formal_parameter_die']
['add_data_member_location_attribute', 'add_data_member_location_attribute', 'dwarf2out_abstract_function', 'dwarf2out_abstract_function', 'dwarf2out_abstract_function', 'dwarf2out_abstract_function', 'gen_subprogram_die', 'gen_subprogram_die', 'gen_subprogram_die', 'gen_subroutine_type_die', 'gen_subroutine_type_die', 'gen_subroutine_type_die', 'gen_variable_die', 'gen_variable_die', 'gen_variable_die', 'get_AT', 'get_AT', 'get_AT_unsigned', 'get_AT_unsigned', 'get_AT_unsigned', 'get_AT_unsigned', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die']
['gen_subprogram_die', 'gen_variable_die']
['add_location_or_const_value_attribute']
['immed_double_const', 'nonmemory_operand']
['gen_split_1087', 'gen_split_1088']
['register_operand']
['general_operand']
['genrtl_case_label']
['genrtl_case_label']
['safe_from_p']
['get_alias_set']
['new_alias_set']
['get_alias_set']
['new_alias_set']
['get_attr_athlon_decode']
['get_attr_athlon_decode', 'get_attr_athlon_decode']
['get_attr_athlon_decode']
['get_attr_modrm', 'get_attr_modrm']
['get_attr_modrm', 'get_attr_modrm']
['get_attr_modrm', 'get_attr_modrm']
['get_attr_modrm', 'get_attr_modrm']
['get_attr_modrm', 'get_attr_modrm']
['get_attr_modrm', 'get_attr_modrm']
['get_attr_modrm', 'get_attr_modrm']
['get_attr_modrm', 'get_attr_modrm']
['get_attr_modrm', 'get_attr_modrm']
['get_attr_modrm', 'get_attr_modrm']
['get_attr_i387', 'get_attr_i387', 'get_attr_i387', 'get_attr_i387', 'get_attr_i387']
['get_attr_i387', 'get_attr_i387', 'get_attr_i387', 'get_attr_i387', 'get_attr_i387']
['get_attr_i387', 'get_attr_i387', 'get_attr_i387', 'get_attr_i387', 'get_attr_i387']
['get_attr_i387']
['get_attr_i387']
['get_attr_i387']
['get_attr_i387', 'get_attr_i387', 'get_attr_i387', 'get_attr_i387', 'get_attr_i387']
['get_attr_i387']
['get_attr_modrm', 'get_attr_modrm']
['get_attr_modrm', 'get_attr_modrm']
['get_attr_imm_disp']
['get_attr_modrm', 'get_attr_modrm']
['get_attr_imm_disp', 'get_attr_imm_disp', 'get_attr_imm_disp', 'get_attr_imm_disp', 'get_attr_imm_disp']
['get_attr_imm_disp', 'get_attr_imm_disp', 'get_attr_imm_disp', 'get_attr_imm_disp']
['get_attr_length_immediate']
['get_attr_modrm', 'get_attr_modrm']
['get_attr_length_immediate', 'get_attr_length_immediate']
['get_attr_length_immediate', 'result_ready_cost']
['get_attr_length_immediate', 'result_ready_cost', 'result_ready_cost']
['get_attr_length_immediate']
['get_attr_memory']
['get_attr_modrm']
['get_attr_length_immediate', 'result_ready_cost']
['get_attr_imm_disp', 'get_attr_imm_disp', 'get_attr_imm_disp', 'get_attr_imm_disp', 'get_attr_imm_disp']
['function_units_used']
['get_attr_length_immediate', 'result_ready_cost']
['get_attr_length_address']
['get_attr_length_address']
['get_attr_length_immediate']
['function_units_used']
['get_attr_length_immediate']
['get_attr_length_immediate', 'get_attr_pent_prefix']
['get_attr_length_immediate']
['get_attr_modrm', 'get_attr_modrm']
['function_units_used']
['get_attr_length_immediate']
['get_attr_length_immediate', 'result_ready_cost']
['get_attr_length_immediate', 'result_ready_cost']
['get_attr_length_immediate', 'get_attr_length_immediate', 'result_ready_cost']
['get_attr_length_immediate', 'get_attr_length_immediate', 'result_ready_cost']
['get_attr_length_immediate', 'result_ready_cost']
['get_attr_length_immediate', 'result_ready_cost', 'result_ready_cost']
['get_attr_length_immediate', 'result_ready_cost', 'result_ready_cost']
['get_attr_length_immediate']
['get_attr_length_immediate']
['result_ready_cost']
['result_ready_cost']
['result_ready_cost']
['ix86_attr_length_address_default']
['get_attr_memory']
['result_ready_cost']
['result_ready_cost']
['result_ready_cost']
['result_ready_cost']
['get_attr_length_immediate']
['result_ready_cost']
['result_ready_cost']
['result_ready_cost']
['get_attr_mode']
['get_attr_mode', 'get_attr_type']
['get_attr_length_immediate', 'get_attr_pent_prefix']
['get_attr_length_immediate']
['get_attr_modrm']
['get_attr_athlon_decode', 'get_attr_athlon_decode', 'get_attr_memory']
['get_attr_length_immediate']
['get_attr_modrm', 'get_attr_modrm', 'get_attr_modrm']
['get_attr_modrm', 'get_attr_modrm', 'get_attr_modrm', 'get_attr_modrm', 'get_attr_modrm', 'get_attr_modrm']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_athlon_decode', 'get_attr_athlon_decode']
['result_ready_cost']
['result_ready_cost']
['get_attr_length_immediate', 'result_ready_cost', 'result_ready_cost']
['get_attr_length_immediate']
['get_attr_modrm', 'get_attr_modrm', 'get_attr_modrm']
['get_attr_type', 'get_attr_type', 'get_attr_type', 'insn_default_length', 'insn_default_length']
['result_ready_cost']
['result_ready_cost']
['get_attr_pent_prefix']
['result_ready_cost']
['get_attr_modrm', 'get_attr_modrm']
['get_attr_modrm', 'get_attr_modrm']
['result_ready_cost']
['get_attr_length_immediate', 'get_attr_pent_prefix']
['get_attr_length_immediate']
['get_attr_modrm', 'get_attr_modrm']
['get_attr_modrm', 'get_attr_modrm']
['result_ready_cost']
['get_attr_length_immediate', 'result_ready_cost']
['get_attr_length_immediate', 'get_attr_length_immediate', 'result_ready_cost']
['get_attr_length_immediate']
['get_attr_length_immediate', 'result_ready_cost', 'result_ready_cost']
['get_attr_length_immediate']
['get_attr_length_immediate']
['unroll_loop']
['get_attr_prefix_0f']
['get_attr_length_immediate', 'get_attr_pent_prefix']
['get_attr_length_immediate']
['get_attr_prefix_0f']
['get_attr_prefix_0f', 'get_attr_prefix_0f']
['get_attr_prefix_0f']
['get_attr_prefix_0f', 'get_attr_prefix_0f']
['get_attr_prefix_0f', 'get_attr_prefix_0f']
['get_attr_prefix_0f', 'get_attr_prefix_0f']
['get_attr_prefix_0f', 'get_attr_prefix_0f']
['get_attr_prefix_0f', 'get_attr_prefix_0f']
['final']
['get_attr_prefix_data16']
['get_attr_prefix_rep']
['visit_expression']
['get_attr_type']
['get_attr_length_immediate']
['get_attr_length_immediate', 'get_attr_pent_prefix']
['get_attr_modrm', 'get_attr_modrm', 'get_attr_modrm']
['get_attr_length_immediate']
['get_attr_modrm', 'get_attr_modrm']
['result_ready_cost']
['get_attr_length_immediate', 'result_ready_cost']
['get_attr_length_immediate', 'get_attr_length_immediate', 'result_ready_cost']
['result_ready_cost']
['get_attr_length_immediate', 'result_ready_cost', 'result_ready_cost']
['get_attr_length_immediate']
['get_attr_modrm', 'get_attr_modrm', 'get_attr_modrm']
['reg_is_born']
['get_condition_for_loop']
['get_exception_pointer']
['get_file_function_name_long']
['get_file_function_name_long']
['get_file_function_name_long']
['get_file_function_name_long']
['get_file_function_name_long']
['get_file_function_name_long']
['get_file_function_name_long']
['get_file_function_name_long']
['get_file_function_name_long']
['get_file_function_name_long']
['get_file_function_name_long']
['get_file_function_name_long']
['clean_symbol_name']
['gen_lowpart_for_combine', 'get_frame_alias_set']
['get_frame_alias_set']
['new_alias_set']
['copy_insn_1', 'copy_rtx', 'gen_binary', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'make_memloc']
['get_func_hard_reg_initial_val']
['get_func_hard_reg_initial_val']
['c_alignof', 'c_sizeof', 'get_inner_reference', 'get_inner_reference', 'std_expand_builtin_va_arg']
['get_inner_reference', 'output_function_exception_table', 'push_init_level', 'range_binop', 'range_binop', 'set_mem_attributes']
['get_unwidened']
['get_insn_name']
['get_insn_name']
['get_insn_template']
['get_last_value']
['choose_hard_reg_mode']
['get_last_value_validate']
['get_mode_alignment', 'ix86_register_move_cost']
['constant_subword', 'constant_subword', 'decode_rtx_const', 'expand_complex_abs', 'get_secondary_mem', 'ix86_hard_regno_mode_ok', 'ix86_libcall_value']
['nonzero_bits']
['get_secondary_mem']
['cfg_layout_finalize', 'change_address_1', 'combine_instructions', 'emit_insns_after', 'expected_value_to_br_prob', 'get_attr_prefix_0f', 'get_attr_type', 'restore_line_notes', 'rm_line_notes', 'subst_asm_stack_regs', 'unroll_loop', 'visit_expression']
['cse_end_of_basic_block', 'emit_prefetch_instructions']
['expand_field_assignment']
['expand_field_assignment']
['convert_for_assignment', 'find_placeholder']
['expand_field_assignment']
['rm_other_notes']
['dump_node']
['compute_forward_dependences', 'gen_binary']
['purge_line_number_notes', 'purge_line_number_notes', 'purge_line_number_notes', 'scope_to_insns_initialize']
['purge_line_number_notes', 'purge_line_number_notes', 'purge_line_number_notes', 'scope_to_insns_initialize']
['rtx_renumbered_equal_p']
['constrain_operands', 'reg_overlap_mentioned_for_reload_p']
['gen_lowpart_for_combine', 'get_varargs_alias_set']
['get_varargs_alias_set']
['new_alias_set']
['copy_insn_1', 'copy_rtx', 'gen_binary', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'make_memloc']
['getpwd']
['getpwd']
['getpwd']
['getpwd']
['getpwd']
['getpwd']
['release_pages', 'release_pages']
['release_pages', 'release_pages']
['ggc_alloc', 'release_pages']
['release_pages', 'release_pages']
['ggc_alloc_string']
['ggc_collect']
['ggc_collect']
['lookup_field']
['ggc_mark_trees']
['ggc_pop_context']
['move_by_pieces']
['global_alloc']
['cfg_layout_finalize', 'rm_other_notes', 'squeeze_notes']
['change_address_1', 'rm_other_notes']
['rm_other_notes']
['change_address_1']
['rm_other_notes']
['change_address_1', 'rm_other_notes']
['change_address_1', 'rm_other_notes']
['grokfield']
['grokfield']
['handle_rd_kill_set', 'handle_rd_kill_set']
['handle_rd_kill_set', 'handle_rd_kill_set']
['handle_rd_kill_set']
['handle_rd_kill_set']
['handle_rd_kill_set']
['handle_rd_kill_set']
['handle_rd_kill_set', 'handle_rd_kill_set']
['handle_rd_kill_set', 'handle_rd_kill_set']
['handle_rd_kill_set']
['choose_hard_reg_mode', 'choose_hard_reg_mode', 'insert_restore', 'reload_inner_reg_of_subreg']
['doloop_modify', 'find_replacement']
['alter_subreg', 'constrain_operands', 'doloop_modify', 'get_true_reg', 'kill_value', 'known_cond', 'noce_emit_move_insn', 'operands_match_p', 'operands_match_p', 'put_addressof_into_stack', 'put_addressof_into_stack', 'reg_overlap_mentioned_for_reload_p', 'replace_regs', 'replace_rtx', 'rtx_renumbered_equal_p', 'simplify_rtx', 'simplify_rtx', 'store_expr', 'subreg_regno', 'subst', 'true_regnum', 'try_split', 'try_split']
['rtx_equal_for_cselib_p']
['emit_single_push_insn']
['ix86_expand_fp_movcc', 'ix86_expand_fp_movcc']
['gen_add2_insn']
['i386_simplify_dwarf_addr']
['combine_simplify_rtx', 'distribute_notes', 'eliminate_regs', 'emit_library_call_value_1', 'expand_expr', 'find_equiv_reg', 'find_reloads_address', 'force_to_mode', 'gen_reload', 'gen_sequence', 'local_alloc', 'protect_from_queue', 'purge_addressof_1', 'regmove_optimize', 'simplify_comparison', 'squeeze_notes', 'strength_reduce']
['simplify_giv_expr', 'simplify_if_then_else', 'simplify_plus_minus']
['back_branch_in_range_p', 'branch_prob', 'canonicalize_condition', 'cse_basic_block', 'delete_related_insns', 'find_basic_blocks', 'if_convert', 'loop_optimize', 'set_label_offsets', 'try_combine']
['adjust_address_1', 'simplify_relational_operation']
['fixup_var_refs_1']
['convert_from_ssa', 'emit_libcall_block', 'expand_end_case_type', 'expand_function_end', 'final', 'if_convert', 'loop_optimize', 'loop_optimize', 'loop_optimize', 'optimize_sibling_and_tail_recursive_calls', 'optimize_sibling_and_tail_recursive_calls', 'rebuild_jump_labels', 'reload', 'reload', 'reposition_prologue_and_epilogue_notes', 'sched_init', 'simplify_comparison']
['cse_main', 'visit_expression']
['combine_simplify_rtx', 'compute_forward_dependences', 'copy_insn_list', 'copy_loop_body', 'cse_basic_block', 'dead_or_predicable', 'expand_decl', 'expand_expr', 'expand_function_end', 'expected_value_to_br_prob', 'final', 'find_split_point', 'force_to_mode', 'gen_reload', 'if_convert', 'if_convert', 'local_alloc', 'loop_optimize', 'maybe_eliminate_biv_1', 'regmove_optimize', 'regmove_optimize', 'reload_cse_regs', 'scan_loop', 'simplify_comparison', 'splice_child_die', 'split_all_insns', 'strength_reduce', 'subst_asm_stack_regs', 'unroll_loop']
['if_then_else_cond']
['copy_loop_headers', 'find_reloads_address_1', 'recog', 'reload_as_needed', 'reload_cse_regs']
['if_then_else_cond']
['if_then_else_cond']
['if_then_else_cond']
['if_then_else_cond']
['immed_double_const', 'nonmemory_operand']
['immed_real_const', 'immed_real_const']
['immed_real_const', 'immed_real_const']
['immed_real_const']
['verify_flow_info']
['verify_flow_info']
['convert_from_ssa']
['immediate_operand']
['constrain_operands', 'final_scan_insn', 'find_split_point', 'find_split_point', 'init_alias_analysis', 'instantiate_virtual_regs', 'loop_iterations', 'move_movables', 'nonoverlapping_memrefs_p', 'rm_line_notes', 'unroll_loop']
['subst_asm_stack_regs']
['eliminate_regs', 'get_attr_type', 'simplify_comparison']
['nonoverlapping_memrefs_p', 'simplify_comparison']
['subst_stack_regs_pat']
['distribute_notes']
['insert']
['combine_instructions']
['dbxout_finish_symbol']
['init_caller_save']
['init_alias_analysis']
['emit_single_push_insn']
['emit_single_push_insn']
['init_alias_once']
['init_branch_prob', 'init_branch_prob']
['init_branch_prob', 'init_branch_prob']
['init_branch_prob']
['record_one_set']
['force_nonfallthru_and_redirect']
['force_nonfallthru_and_redirect', 'record_one_set']
['cfg_layout_finalize', 'force_nonfallthru_and_redirect', 'record_one_set', 'rm_line_notes', 'rm_other_notes', 'squeeze_notes']
['cfg_layout_finalize', 'force_nonfallthru_and_redirect', 'record_one_set', 'rm_line_notes', 'rm_other_notes', 'squeeze_notes']
['init_builtins']
['init_builtins']
['init_caller_save']
['init_caller_save']
['instantiate_decl']
['replace_call_placeholder', 'replace_call_placeholder']
['init_cumulative_args', 'init_cumulative_args', 'init_cumulative_args']
['init_cumulative_args', 'init_cumulative_args', 'init_cumulative_args']
['init_cumulative_args', 'init_cumulative_args', 'init_cumulative_args']
['init_cumulative_args', 'init_cumulative_args', 'init_cumulative_args']
['init_cumulative_args', 'init_cumulative_args', 'init_cumulative_args']
['init_cumulative_args', 'init_cumulative_args', 'init_cumulative_args']
['init_cumulative_args', 'init_cumulative_args', 'init_cumulative_args']
['init_cumulative_args', 'init_cumulative_args', 'init_cumulative_args']
['init_cumulative_args', 'init_cumulative_args', 'init_cumulative_args']
['init_cumulative_args', 'init_cumulative_args', 'init_cumulative_args']
['init_cumulative_args', 'init_cumulative_args', 'init_cumulative_args']
['init_emit_once']
['init_emit_once']
['expand_goto']
['form_sum']
['expand_goto', 'expand_nl_handler_label']
['record_set']
['expand_goto']
['form_sum']
['init_expmed', 'init_expmed', 'init_expmed', 'init_expmed']
['init_expr_once']
['init_expr_once']
['init_flow']
['init_flow']
['init_libfuncs']
['force_const_mem', 'init_libfuncs']
['new_optab', 'new_optab']
['new_optab', 'new_optab']
['new_optab', 'new_optab']
['new_optab', 'new_optab']
['new_optab', 'new_optab']
['new_optab', 'new_optab']
['new_optab', 'new_optab']
['new_optab', 'new_optab']
['new_optab', 'new_optab']
['new_optab', 'new_optab']
['new_optab', 'new_optab']
['new_optab', 'new_optab']
['new_optab', 'new_optab']
['new_optab', 'new_optab']
['new_optab', 'new_optab']
['new_optab', 'new_optab']
['new_optab', 'new_optab']
['init_propagate_block_info']
['init_propagate_block_info']
['emit_no_conflict_block', 'emit_no_conflict_block', 'find_base_value', 'find_base_value', 'for_each_insn_in_loop', 'for_each_insn_in_loop', 'gen_binary', 'rm_line_notes', 'rm_line_notes', 'rm_line_notes', 'rm_line_notes', 'rm_line_notes', 'rm_other_notes', 'rm_other_notes', 'rm_other_notes', 'rm_other_notes', 'squeeze_notes']
['init_propagate_block_info']
['init_propagate_block_info']
['print_operand_address']
['cfg_layout_finalize', 'force_nonfallthru_and_redirect', 'rm_line_notes', 'rm_other_notes', 'squeeze_notes']
['force_nonfallthru_and_redirect']
['init_regs', 'init_regs']
['init_regs', 'init_regs']
['init_regs']
['init_regs', 'init_regs', 'init_regs']
['init_regs', 'init_regs', 'init_regs']
['init_regs']
['find_dummy_reload', 'recog_for_combine']
['adjust_address_1', 'for_each_insn_in_loop', 'for_each_insn_in_loop', 'rm_line_notes', 'squeeze_notes', 'squeeze_notes']
['adjust_address_1', 'for_each_insn_in_loop', 'for_each_insn_in_loop', 'rm_line_notes', 'squeeze_notes', 'squeeze_notes']
['copyprop_hardreg_forward']
['rm_line_notes']
['init_reload']
['init_reload']
['init_reload']
['expand_function_start', 'init_reload', 'init_reload', 'ix86_setup_incoming_varargs', 'legitimize_pic_address', 'legitimize_pic_address']
['init_reload', 'init_reload']
['init_reload', 'init_reload']
['expand_builtin_setjmp_setup']
['init_caller_save']
['init_reload', 'ix86_emit_restore_regs_using_mov']
['gen_split_954', 'gen_split_956', 'gen_split_958', 'gen_split_958', 'init_reload', 'init_reload']
['edivm', 'edivm']
['init_stringpool']
['maybe_eliminate_biv']
['build_complex_type']
['initial_reg_note_copy']
['initializer_constant_valid_p']
['nonzero_bits']
['nonzero_bits']
['range_binop', 'range_binop']
['initializer_constant_valid_p']
['initializer_constant_valid_p']
['range_binop', 'range_binop']
['initializer_constant_valid_p']
['build_nt', 'build_nt', 'build_stmt', 'build_stmt', 'inlinable_function_p', 'inlinable_function_p']
['build_nt', 'build_nt', 'build_stmt', 'build_stmt', 'inlinable_function_p', 'inlinable_function_p']
['inlinable_function_p', 'inlinable_function_p']
['inlinable_function_p']
['inlinable_function_p']
['inlinable_function_p']
['inlinable_function_p']
['inlinable_function_p']
['build_nt', 'build_nt', 'build_nt', 'build_stmt', 'build_stmt', 'build_stmt', 'gen_type_die', 'gen_type_die', 'gen_type_die', 'has_cleanups', 'has_cleanups', 'has_cleanups', 'inlinable_function_p', 'inlinable_function_p', 'inlinable_function_p']
['build_nt', 'build_nt', 'build_nt', 'build_stmt', 'build_stmt', 'build_stmt', 'gen_type_die', 'gen_type_die', 'gen_type_die', 'has_cleanups', 'has_cleanups', 'has_cleanups', 'inlinable_function_p', 'inlinable_function_p', 'inlinable_function_p']
['build_nt', 'build_nt', 'build_nt', 'build_stmt', 'build_stmt', 'build_stmt', 'gen_type_die', 'gen_type_die', 'gen_type_die', 'has_cleanups', 'has_cleanups', 'has_cleanups', 'inlinable_function_p', 'inlinable_function_p', 'inlinable_function_p']
['reload_combine_note_use', 'simplify_relational_operation']
['exp_equiv_p', 'save_call_clobbered_regs']
['wipe_dead_reg']
['expand_goto', 'gen_reload', 'reposition_prologue_and_epilogue_notes', 'start_init']
['peep2_find_free_register', 'peep2_find_free_register', 'reg_fits_class_p']
['allocate_reg_info', 'regclass']
['insert_regs']
['insert_regs']
['insert_regs']
['insn_current_length']
['insn_default_length']
['get_attr_modrm', 'get_attr_modrm', 'get_attr_modrm']
['get_attr_modrm', 'get_attr_modrm', 'get_attr_modrm']
['get_attr_modrm', 'get_attr_modrm', 'get_attr_modrm']
['constrain_operands', 'cse_end_of_basic_block', 'cse_main', 'distribute_notes', 'eliminate_regs', 'eliminate_regs', 'final_scan_insn', 'find_equiv_reg', 'find_split_point', 'find_split_point', 'fixup_var_refs_1', 'fold_rtx', 'init_alias_analysis', 'instantiate_virtual_regs', 'loop_iterations', 'move_movables', 'move_movables', 'nonoverlapping_memrefs_p', 'reload', 'rm_line_notes', 'simplify_comparison', 'subst_asm_stack_regs', 'unroll_loop']
['find_equiv_reg']
['eliminate_regs']
['find_equiv_reg']
['eliminate_regs']
['find_equiv_reg']
['find_equiv_reg']
['find_equiv_reg']
['eliminate_regs']
['cse_end_of_basic_block', 'cse_insn', 'cse_main', 'distribute_notes', 'eliminate_regs', 'eliminate_regs', 'find_equiv_reg', 'find_split_point', 'find_split_point', 'fixup_var_refs_1', 'fold_rtx', 'fold_rtx', 'instantiate_virtual_regs', 'move_movables', 'reload', 'rm_line_notes', 'simplify_comparison', 'subst_asm_stack_regs', 'subst_asm_stack_regs', 'subst_asm_stack_regs', 'unroll_loop']
['distribute_notes', 'find_equiv_reg']
['combine_instructions', 'compute_forward_dependences', 'copy_loop_body', 'copy_loop_body', 'cse_basic_block', 'df_analyse_1', 'df_uses_record', 'expand_expr', 'expand_expr', 'expand_function_end', 'expected_value_to_br_prob', 'find_reloads_address', 'find_split_point', 'fixup_var_refs_1', 'fixup_var_refs_1', 'fixup_var_refs_1', 'fold_rtx', 'fold_rtx', 'force_to_mode', 'if_convert', 'instantiate_virtual_regs_1', 'ix86_split_fp_branch', 'ix86_split_long_move', 'local_alloc', 'loop_iterations', 'make_extraction', 'move_movables', 'optimize_sibling_and_tail_recursive_calls', 'record_value_for_reg', 'regmove_optimize', 'regmove_optimize', 'regmove_optimize', 'reload', 'scan_loop', 'simplify_binary_operation', 'simplify_comparison', 'simplify_comparison', 'split_all_insns', 'strength_reduce', 'subst_asm_stack_regs', 'try_combine', 'visit_expression']
['subst_stack_regs_pat']
['find_equiv_reg']
['distribute_notes', 'eliminate_regs', 'schedule_insns']
['reload']
['insn_variable_length_p']
['adjust_address_1', 'check_insn_for_givs', 'constrain_operands', 'copy_insn_list', 'cse_main', 'extract_bit_field', 'find_basic_blocks', 'make_extraction', 'protect_from_queue']
['cfg_layout_finalize', 'constrain_operands', 'decompose', 'expand_field_assignment', 'for_each_insn_in_loop', 'get_attr_prefix_0f', 'loop_optimize', 'noce_get_condition', 'protect_from_queue', 'reload']
['gen_reload', 'scan_loop', 'unroll_loop']
['insns_match_p']
['insns_match_p']
['insns_match_p']
['adjust_address_1', 'adjust_address_1', 'emit_libcall_block', 'reposition_prologue_and_epilogue_notes']
['instantiate_decl']
['instantiate_decl']
['instantiate_decl']
['instantiate_decl', 'instantiate_decl']
['consec_sets_giv']
['instantiate_decl']
['consec_sets_giv']
['consec_sets_giv']
['instantiate_decl', 'instantiate_decl']
['consec_sets_giv']
['instantiate_virtual_regs']
['instantiate_virtual_regs']
['instantiate_virtual_regs']
['instantiate_virtual_regs']
['make_compound_operation', 'purge_addressof_1']
['convert_regs_2', 'df_uses_record', 'init_alias_analysis', 'reload_combine_note_use']
['check_asm_stack_operands', 'cse_basic_block', 'emit_library_call_value_1', 'legitimize_pic_address', 'local_alloc', 'maybe_eliminate_biv_1', 'optimize_bit_field', 'scan_loop', 'unroll_loop']
['loop_optimize']
['ix86_split_fp_branch', 'move_deaths', 'store_bit_field', 'store_expr']
['init_alias_analysis', 'ix86_split_fp_branch', 'legitimize_pic_address', 'make_extraction', 'optimize_bit_field', 'record_value_for_reg', 'squeeze_notes', 'subst_asm_stack_regs', 'unroll_loop']
['move_movables']
['instantiate_virtual_regs_1']
['instantiate_virtual_regs_1']
['cse_basic_block', 'dead_or_predicable', 'dead_or_predicable', 'instantiate_virtual_regs_1']
['int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p']
['int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p']
['int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p']
['int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p']
['peep2_find_free_register']
['print_operand_address']
['copy_node', 'make_node']
['back_branch_in_range_p', 'canonicalize_condition', 'check_insn_for_givs', 'combine_simplify_rtx', 'copy_insn_list', 'copy_loop_body', 'eliminate_regs', 'emit_library_call_value_1', 'expand_expr', 'extract_bit_field', 'find_base_value', 'find_reloads_address', 'for_each_insn_in_loop', 'force_to_mode', 'gen_reload', 'gen_reload', 'get_attr_prefix_0f', 'init_propagate_block_info', 'ix86_split_long_move', 'local_alloc', 'nonoverlapping_memrefs_p', 'nonoverlapping_memrefs_p', 'protect_from_queue', 'purge_addressof_1', 'restore_line_notes', 'rm_line_notes', 'rm_other_notes', 'scan_loop', 'scan_loop', 'scan_loop', 'swap_rtx_condition', 'try_copy_prop', 'unroll_loop', 'unroll_loop', 'visit_expression']
['invalidate']
['mark_set_1']
['choose_hard_reg_mode', 'cselib_lookup', 'move_deaths', 'reload_inner_reg_of_subreg', 'save_call_clobbered_regs']
['init_propagate_block_info']
['for_each_insn_in_loop', 'for_each_insn_in_loop']
['emit_group_load']
['reload_inner_reg_of_subreg']
['cse_set_around_loop', 'invalidate_from_clobbers']
['invalidate_from_clobbers']
['gen_peephole2_1263', 'gen_peephole2_1263', 'gen_split_1232', 'gen_split_1232']
['memory_address']
['invert_truthvalue']
['get_narrower']
['immed_real_const', 'immed_real_const']
['final_scan_insn']
['ix86_attr_length_address_default']
['ix86_attr_length_address_default']
['find_matches']
['ix86_attr_length_address_default', 'ix86_attr_length_immediate_default', 'reload_cse_simplify_operands']
['ix86_attr_length_immediate_default']
['apply_args_size', 'memrefs_conflict_p', 'reg_is_born', 'restore_line_notes', 'shorten_branches']
['ix86_cc_mode']
['find_equiv_reg', 'simplify_giv_expr', 'simplify_if_then_else', 'strength_reduce']
['constrain_operands', 'constrain_operands', 'init_propagate_block_info', 'simplify_plus_minus']
['cfg_layout_finalize', 'copy_loop_body', 'cse_main', 'get_attr_prefix_0f', 'get_attr_prefix_0f', 'get_attr_prefix_0f', 'get_attr_type', 'mark_referenced_regs', 'squeeze_notes', 'unroll_loop']
['delete_output_reload', 'delete_output_reload', 'emit_library_call_value_1', 'if_convert', 'ix86_split_long_move', 'simplify_if_then_else']
['ix86_split_long_move', 'optimize_sibling_and_tail_recursive_calls', 'optimize_sibling_and_tail_recursive_calls']
['optimize_sibling_and_tail_recursive_calls', 'optimize_sibling_and_tail_recursive_calls', 'simplify_plus_minus']
['unroll_loop']
['find_equiv_reg', 'optimize_sibling_and_tail_recursive_calls', 'optimize_sibling_and_tail_recursive_calls', 'simplify_giv_expr', 'strength_reduce']
['constrain_operands', 'optimize_sibling_and_tail_recursive_calls', 'optimize_sibling_and_tail_recursive_calls', 'strength_reduce']
['ix86_emit_restore_regs_using_mov']
['ix86_emit_restore_regs_using_mov']
['ix86_emit_restore_regs_using_mov']
['init_alias_analysis', 'ix86_emit_save_regs_using_mov']
['ix86_emit_save_regs_using_mov']
['ix86_emit_save_regs_using_mov']
['ix86_expand_compare']
['expand_eh_return', 'ix86_expand_epilogue', 'life_analysis']
['init_expmed']
['ix86_expand_epilogue']
['form_sum', 'init_expmed', 'init_expmed']
['ix86_expand_fp_movcc', 'ix86_expand_fp_movcc']
['ix86_expand_fp_movcc', 'ix86_expand_fp_movcc']
['ix86_expand_fp_movcc', 'ix86_expand_fp_movcc']
['ix86_expand_fp_movcc', 'ix86_expand_fp_movcc']
['gen_split_1135', 'gen_split_1136', 'gen_split_1156']
['ix86_expand_fp_movcc', 'ix86_expand_fp_movcc']
['ix86_expand_fp_movcc', 'ix86_expand_fp_movcc']
['ix86_expand_fp_movcc']
['ix86_expand_fp_movcc', 'ix86_expand_fp_movcc']
['ix86_expand_fp_movcc', 'ix86_expand_fp_movcc']
['ix86_expand_move', 'ix86_expand_move']
['ix86_expand_move', 'ix86_expand_move']
['expand_increment']
['ix86_prepare_fp_compare_args', 'ix86_prepare_fp_compare_args']
['emit_stack_save', 'store_expr']
['gen_eh_return', 'init_alias_analysis', 'init_reload', 'ix86_emit_save_regs_using_mov']
['ix86_expand_prologue']
['gen_split_1135', 'gen_split_1136', 'gen_split_1156']
['emit_move_insn_1']
['gen_push']
['gen_push']
['ix86_force_to_memory', 'ix86_free_from_memory']
['expand_increment', 'find_replacement']
['ix86_function_value']
['convert_move']
['ix86_function_value']
['ix86_hard_regno_mode_ok']
['ix86_libcall_value']
['gen_binary']
['find_oldest_value_reg', 'kill_value']
['reg_is_born']
['reg_is_born']
['get_mode_alignment', 'ix86_register_move_cost']
['convert_to_integer', 'ix86_return_in_memory']
['ix86_return_in_memory']
['ix86_return_in_memory']
['expand_builtin_longjmp', 'expand_builtin_return_addr', 'fix_lexical_addr']
['init_caller_save']
['expand_nl_handler_label']
['expand_eh_region_end_cleanup', 'ix86_setup_incoming_varargs']
['ix86_setup_incoming_varargs']
['try_tablejump']
['expand_function_start', 'ix86_setup_incoming_varargs', 'legitimize_pic_address']
['loop_iterations']
['adjust_address_1', 'find_reloads_address', 'store_expr']
['ix86_split_fp_branch']
['ix86_split_fp_branch']
['ix86_split_fp_branch']
['ix86_split_fp_branch', 'ix86_split_fp_branch']
['ix86_split_fp_branch', 'ix86_split_fp_branch']
['ix86_split_fp_branch', 'ix86_split_fp_branch']
['ix86_split_fp_branch', 'ix86_split_fp_branch']
['back_branch_in_range_p', 'back_branch_in_range_p', 'canonicalize_condition', 'consec_sets_giv', 'ereal_to_decimal', 'get_AT_unsigned', 'make_extraction', 'make_extraction', 'make_extraction', 'regclass', 'reload_combine_note_use', 'shorten_branches']
['find_base_value', 'find_base_value', 'gen_binary', 'restore_line_notes', 'rm_line_notes', 'simplify_relational_operation', 'squeeze_notes']
['convert_regs_2']
['ix86_split_fp_branch', 'ix86_split_fp_branch']
['sched_init']
['instantiate_virtual_regs_1']
['move_by_pieces', 'record_giv', 'verify_flow_info']
['copy_insn_notes']
['cse_end_of_basic_block']
['reload_as_needed']
['ix86_split_long_move', 'ix86_split_long_move']
['ix86_split_long_move', 'ix86_split_long_move']
['ix86_split_long_move', 'ix86_split_long_move']
['ix86_split_long_move', 'ix86_split_long_move']
['cse_basic_block']
['plus_constant_wide']
['plus_constant_wide']
['canonicalize_condition', 'nonoverlapping_memrefs_p']
['mem_loc_descriptor']
['try_copy_prop']
['ix86_split_to_parts']
['adjust_address_1']
['adjust_address_1']
['change_address_1']
['cse_main', 'gen_binary', 'get_file_function_name_long', 'swap_rtx_condition']
['cse_main', 'gen_binary', 'insns_match_p', 'ix86_split_long_move', 'swap_rtx_condition']
['move_deaths']
['reload_combine_note_use', 'resolve_operand_name_1']
['simplify_if_then_else']
['emit_group_store', 'reload_as_needed', 'reload_as_needed', 'reload_cse_regs', 'simplify_giv_expr']
['ix86_va_arg', 'ix86_va_arg']
['ix86_va_arg', 'ix86_va_arg']
['expand_builtin_apply', 'expand_decl', 'expand_eh_region_end_cleanup', 'expand_end_bindings', 'expand_function_start', 'ix86_setup_incoming_varargs', 'ix86_setup_incoming_varargs', 'ix86_setup_incoming_varargs', 'ix86_va_arg', 'legitimize_pic_address', 'round_trampoline_addr']
['ix86_va_arg']
['ix86_va_arg']
['ix86_va_arg']
['ix86_va_arg']
['apply_result_size', 'combine_instructions', 'cse_main', 'eliminate_regs_in_insn', 'gen_binary', 'genrtl_case_label', 'get_file_function_name_long', 'move_deaths', 'swap_rtx_condition', 'timevar_push']
['instantiate_decl']
['clear_storage']
['clear_storage', 'emit_block_move', 'emit_block_move', 'ix86_va_start', 'ix86_va_start', 'ix86_va_start', 'ix86_va_start']
['ix86_va_start']
['emit_block_move', 'ix86_va_start']
['handle_rd_kill_set', 'sched_init', 'ssa_const_prop', 'want_to_gcse_p']
['ix86_va_start', 'ix86_va_start']
['ix86_va_start', 'ix86_va_start', 'std_expand_builtin_va_start']
['std_expand_builtin_va_start']
['std_expand_builtin_va_start']
['expand_mult_add']
['ix86_va_start', 'ix86_va_start']
['break_out_memory_refs', 'break_out_memory_refs']
['emit_stack_save']
['extract_left_shift', 'find_reloads_toplev', 'kill_value', 'noce_emit_cmove', 'replace_regs', 'replace_rtx', 'replace_rtx', 'simplify_rtx', 'simplify_rtx', 'write_dependence_p']
['kill_value', 'known_cond', 'replace_rtx', 'simplify_rtx', 'simplify_rtx', 'true_regnum']
['find_reg', 'save_call_clobbered_regs']
['get_mode_alignment', 'ix86_register_move_cost']
['known_cond']
['known_cond']
['known_cond']
['known_cond']
['kill_value', 'known_cond', 'replace_rtx', 'simplify_rtx', 'simplify_rtx', 'true_regnum']
['known_cond', 'replace_rtx']
['known_cond']
['known_cond', 'known_cond']
['known_cond', 'known_cond']
['known_cond', 'known_cond']
['nonzero_bits', 'simplify_giv_expr']
['init_propagate_block_info']
['compute_transp', 'consec_sets_giv', 'find_equiv_reg', 'gen_reload']
['nonoverlapping_memrefs_p']
['legitimize_address']
['legitimize_address']
['legitimize_address']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'emit_move_insn_1', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_main_function', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_tablejump', 'legitimize_address', 'output_cfi', 'probe_stack_range', 'push_block', 'round_push', 'round_trampoline_addr', 'ssa_const_prop']
['legitimize_address']
['ix86_setup_incoming_varargs', 'try_tablejump']
['emit_libcall_block', 'protect_from_queue', 'store_bit_field']
['df_uses_record']
['find_split_point']
['cse_insn', 'expand_expr', 'move_movables', 'purge_addressof_1']
['ix86_expand_move']
['legitimize_pic_address']
['legitimize_pic_address']
['expand_function_start', 'legitimize_pic_address', 'legitimize_pic_address']
['expand_function_start', 'legitimize_pic_address', 'legitimize_pic_address']
['combine_regs']
['legitimize_pic_address']
['adjust_address_1', 'cse_basic_block', 'decompose', 'insns_match_p', 'restore_line_notes', 'squeeze_notes']
['legitimize_pic_address']
['combine_regs']
['legitimize_pic_address']
['build_unary_op', 'push_init_level']
['output_asm_insn']
['output_asm_insn']
['asctoeg']
['asctoeg']
['lex_number', 'lex_number']
['life_analysis']
['elimination_effects']
['ix86_expand_epilogue', 'life_analysis']
['life_analysis']
['record_one_set']
['cfg_layout_finalize', 'rm_line_notes', 'rm_other_notes', 'squeeze_notes']
['cfg_layout_finalize', 'force_nonfallthru_and_redirect', 'rm_line_notes', 'rm_other_notes', 'squeeze_notes']
['convert_from_eh_region_ranges', 'life_analysis']
['convert_from_eh_region_ranges']
['convert_from_eh_region_ranges']
['life_analysis']
['find_basic_blocks']
['life_analysis', 'sched_init']
['force_const_mem', 'output_constant_def']
['load_pic_register']
['loc_descriptor']
['loc_descriptor']
['loc_descriptor_from_tree']
['init_propagate_block_info']
['loop_iterations', 'subst_asm_stack_regs']
['local_alloc']
['canonicalize_condition', 'check_insn_for_givs', 'cse_insn', 'expand_expr', 'extract_bit_field', 'move_movables', 'nonoverlapping_memrefs_p', 'protect_from_queue', 'purge_addressof_1', 'push_reload', 'try_combine']
['fold_rtx', 'make_extraction']
['df_analyse_1']
['emit_no_conflict_block', 'find_base_value', 'find_dummy_reload', 'find_dummy_reload', 'legitimize_pic_address', 'move_movables', 'schedule_insns', 'strength_reduce', 'subst_stack_regs_pat', 'try_combine', 'try_combine']
['local_alloc']
['compute_forward_dependences', 'expected_value_to_br_prob', 'split_all_insns']
['emit_no_conflict_block']
['decompose']
['find_basic_blocks', 'get_AT_unsigned']
['emit_insns_after', 'emit_insns_after', 'emit_no_conflict_block', 'emit_no_conflict_block', 'final', 'final', 'gen_sequence', 'gen_sequence', 'squeeze_notes', 'squeeze_notes']
['emit_insns_after', 'emit_insns_after', 'emit_no_conflict_block', 'emit_no_conflict_block', 'final', 'final', 'gen_sequence', 'gen_sequence', 'squeeze_notes', 'squeeze_notes']
['find_base_value']
['for_each_insn_in_loop']
['simplify_comparison']
['move_movables', 'reload']
['move_movables']
['distribute_notes']
['loop_iterations']
['check_insn_for_givs', 'check_insn_for_givs']
['check_insn_for_givs', 'check_insn_for_givs']
['notreg_cost', 'simplify_giv_expr']
['gen_add_mult']
['gen_add_mult']
['gen_add_mult']
['find_base_value']
['copy_loop_body', 'emit_no_conflict_block', 'emit_no_conflict_block', 'find_dummy_reload', 'find_dummy_reload', 'find_reloads_address', 'fixup_var_refs_1', 'legitimize_pic_address', 'loop_optimize', 'make_extraction', 'noce_get_condition', 'nonoverlapping_memrefs_p', 'scan_loop', 'schedule_block', 'try_copy_prop', 'unroll_loop', 'unroll_loop']
['emit_libcall_block', 'final', 'if_convert', 'optimize_sibling_and_tail_recursive_calls', 'rebuild_jump_labels']
['reload']
['delete_noop_moves', 'regmove_optimize']
['check_asm_stack_operands', 'check_asm_stack_operands', 'compute_transp', 'consec_sets_giv', 'cse_basic_block', 'cse_basic_block', 'cse_basic_block', 'df_uses_record', 'emit_library_call_value_1', 'expand_decl', 'expand_decl', 'expand_function_end', 'expand_function_end', 'final', 'find_equiv_reg', 'find_reloads_address', 'find_reloads_address', 'fixup_var_refs_1', 'force_to_mode', 'gen_reload', 'gen_reload', 'if_convert', 'init_propagate_block_info', 'local_alloc', 'loop_optimize', 'loop_optimize', 'loop_optimize', 'maybe_eliminate_biv_1', 'move_movables', 'scan_loop', 'splice_child_die']
['eliminate_regs', 'instantiate_virtual_regs_1', 'simplify_comparison']
['cse_main', 'eliminate_regs', 'eliminate_regs', 'fixup_var_refs_1', 'reload']
['ix86_expand_prologue', 'loop_regs_scan']
['gen_lowpart_common']
['find_replacement']
['copy_rtx_and_substitute']
['make_decl_rtl']
['make_decl_rtl']
['find_reg', 'save_call_clobbered_regs']
['make_decl_rtl']
['make_decl_rtl']
['decompose', 'expand_field_assignment', 'protect_from_queue', 'reload', 'reposition_prologue_and_epilogue_notes', 'store_expr']
['check_asm_stack_operands', 'cse_basic_block', 'local_alloc', 'scan_loop']
['find_split_point']
['combine_regs', 'expand_expr', 'visit_expression']
['copy_insn_1', 'copy_rtx', 'gen_binary', 'gen_lowpart_for_combine', 'make_memloc', 'simplify_giv_expr', 'simplify_relational_operation']
['make_memloc', 'make_memloc']
['make_memloc', 'make_memloc']
['make_memloc']
['make_memloc']
['copy_insn_1', 'copy_rtx', 'gen_binary', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'make_memloc']
['copy_node', 'make_node']
['make_range']
['expand_mult_add']
['expand_mult_add']
['make_tree']
['expand_mult_add', 'make_tree']
['clear_storage', 'expand_mult_add', 'expand_mult_add', 'make_tree', 'make_tree']
['clear_storage']
['find_base_value']
['compute_forward_dependences', 'gen_binary']
['emit_no_conflict_block']
['gen_sequence']
['sched_init', 'sched_init']
['verify_flow_info']
['delete_noop_moves', 'delete_noop_moves']
['delete_noop_moves', 'delete_noop_moves']
['cfg_layout_finalize', 'copy_eh_notes', 'delete_insn', 'delete_noop_moves']
['find_reg', 'save_call_clobbered_regs']
['find_oldest_value_reg']
['choose_hard_reg_mode']
['find_free_reg']
['save_call_clobbered_regs']
['find_reg', 'save_call_clobbered_regs']
['choose_hard_reg_mode']
['clear_reload_reg_in_use', 'cselib_invalidate_regno', 'free_for_value_p', 'mark_life', 'mark_reload_reg_in_use', 'post_mark_life', 'reg_dies', 'regno_clobbered_p', 'set_value_regno']
['cse_end_of_basic_block', 'verify_flow_info']
['alter_subreg', 'expand_fix', 'expand_fix', 'extract_fixed_bit_field', 'final_giv_value', 'purge_single_hard_subreg_set', 'reload_cse_simplify_set', 'replace_oldest_value_addr', 'store_expr', 'store_expr', 'subst', 'validate_replace_rtx_1']
['validate_replace_rtx_1']
['choose_hard_reg_mode', 'choose_hard_reg_mode', 'cselib_lookup', 'exp_equiv_p', 'scan_rtx_reg']
['peep2_find_free_register']
['insns_match_p', 'output_addr_const', 'plus_constant_wide', 'protect_from_queue', 'split_all_insns', 'squeeze_notes']
['mark_set_1']
['reload']
['mark_used_regs']
['mark_used_regs']
['init_alias_analysis', 'mark_set_1', 'memrefs_conflict_p']
['mark_used_regs']
['mark_used_regs', 'mark_used_regs']
['mark_used_regs', 'mark_used_regs']
['emit_no_conflict_block']
['emit_group_load', 'expand_fix', 'get_true_reg']
['choose_hard_reg_mode']
['may_trap_p', 'may_trap_p']
['may_trap_p']
['may_trap_p']
['may_trap_p']
['may_trap_p', 'may_trap_p']
['maybe_eliminate_biv']
['maybe_fix_stack_asms', 'maybe_fix_stack_asms']
['maybe_fix_stack_asms', 'maybe_fix_stack_asms']
['maybe_read_dollar_number']
['maybe_read_dollar_number']
['combine_instructions']
['mem_loc_descriptor']
['mem_loc_descriptor']
['mem_loc_descriptor']
['mem_loc_descriptor']
['mem_loc_descriptor']
['mem_loc_descriptor']
['mem_loc_descriptor']
['gen_lowpart_common']
['find_basic_blocks', 'get_AT_unsigned']
['emit_insns_after', 'gen_binary']
['memory_address']
['memory_address']
['memory_address']
['memory_address']
['memory_address']
['memory_address']
['memory_address']
['memory_address']
['memory_address']
['emit_no_conflict_block']
['schedule_insns']
['back_branch_in_range_p', 'check_asm_stack_operands', 'convert_regs_2', 'copy_insn_list', 'cse_basic_block', 'distribute_notes', 'expand_expr', 'find_base_value', 'find_split_point', 'instantiate_virtual_regs_1', 'local_alloc', 'local_alloc', 'local_alloc', 'move_movables', 'nonoverlapping_memrefs_p', 'optimize_sibling_and_tail_recursive_calls', 'regmove_optimize', 'restore_line_notes', 'rm_line_notes', 'rm_other_notes', 'scan_loop', 'simplify_comparison', 'simplify_comparison', 'swap_rtx_condition', 'unroll_loop']
['emit_library_call_value_1', 'gen_reload']
['find_split_point']
['instantiate_virtual_regs_1', 'mark_set_1', 'push_reload']
['insns_match_p', 'memrefs_conflict_p', 'recog', 'record_giv', 'verify_flow_info']
['memrefs_conflict_p']
['memrefs_conflict_p']
['combine_instructions']
['choose_hard_reg_mode', 'mark_set_1']
['cleanup_cfg']
['branch_prob', 'commit_edge_insertions', 'convert_regs_2', 'if_convert', 'thread_prologue_and_epilogue_insns']
['strength_reduce']
['check_insn_for_givs', 'extract_bit_field', 'protect_from_queue']
['commit_edge_insertions']
['convert_regs_2', 'thread_prologue_and_epilogue_insns']
['convert_regs_2', 'thread_prologue_and_epilogue_insns']
['commit_edge_insertions']
['commit_edge_insertions']
['reg_scan_mark_refs']
['dead_or_predicable', 'dead_or_predicable']
['dead_or_predicable', 'dead_or_predicable']
['verify_flow_info']
['thread_prologue_and_epilogue_insns']
['thread_prologue_and_epilogue_insns']
['bss_section', 'text_section']
['bss_section', 'text_section']
['bss_section', 'text_section']
['bss_section', 'text_section']
['combine_regs']
['modified_type_die']
['modified_type_die']
['modified_type_die']
['move_block_to_reg']
['adjust_address_1', 'canonicalize_condition', 'expand_field_assignment', 'force_nonfallthru_and_redirect', 'memrefs_conflict_p', 'protect_from_queue', 'simplify_relational_operation']
['move_by_pieces']
['adjust_address_1', 'adjust_address_1', 'emit_libcall_block', 'reposition_prologue_and_epilogue_notes']
['move_by_pieces']
['move_by_pieces']
['move_by_pieces']
['convert_regs_2', 'df_uses_record', 'distribute_notes', 'expand_end_case_type', 'find_split_point', 'init_alias_analysis', 'instantiate_virtual_regs_1', 'subst_asm_stack_regs', 'subst_stack_regs_pat']
['subst_stack_regs_pat']
['fold_rtx', 'move_movables', 'simplify_comparison']
['find_split_point', 'find_split_point']
['subst_asm_stack_regs']
['mark_set_1', 'simplify_if_then_else']
['mark_set_1', 'simplify_if_then_else']
['distribute_notes', 'find_equiv_reg', 'move_by_pieces', 'record_giv', 'reload_as_needed']
['find_reloads_address_1']
['copy_loop_headers', 'loop_iterations', 'reload_as_needed', 'reload_cse_regs']
['copy_loop_headers', 'emit_libcall_block', 'loop_iterations', 'reload_as_needed', 'reload_cse_regs']
['copy_loop_headers', 'loop_iterations', 'reload_as_needed', 'reload_cse_regs']
['find_reloads_address']
['nonoverlapping_memrefs_p']
['copy_eh_notes', 'scope_to_insns_initialize']
['simplify_binary_operation']
['canonicalize_condition', 'compute_forward_dependences', 'compute_transp', 'consec_sets_giv', 'cse_insn', 'expand_expr', 'expected_value_to_br_prob', 'find_equiv_reg', 'fixup_var_refs_1', 'fold_rtx', 'gen_reload', 'gen_sequence', 'instantiate_virtual_regs_1', 'local_alloc', 'move_movables', 'move_movables', 'move_movables', 'nonoverlapping_memrefs_p', 'protect_from_queue', 'purge_addressof_1', 'regmove_optimize', 'reload', 'simplify_comparison', 'simplify_comparison', 'split_all_insns', 'squeeze_notes', 'strength_reduce', 'subst_asm_stack_regs']
['fold_rtx', 'move_movables', 'simplify_comparison']
['apply_distributive_law', 'eliminate_regs', 'find_equiv_reg', 'find_reloads_address']
['distribute_notes', 'simplify_comparison']
['move_movables']
['decode_reg_name']
['mtherr']
['named_section_flags']
['named_section_flags']
['named_section_flags']
['new_alias_set']
['noce_emit_cmove']
['noce_emit_cmove']
['noce_emit_cmove']
['noce_emit_cmove']
['extract_left_shift', 'find_reloads_toplev', 'kill_value', 'noce_emit_cmove', 'replace_regs', 'replace_rtx', 'replace_rtx', 'simplify_rtx', 'simplify_rtx', 'write_dependence_p']
['alter_subreg', 'noce_emit_move_insn', 'put_addressof_into_stack', 'put_addressof_into_stack']
['noce_emit_store_flag']
['emit_no_conflict_block']
['noce_get_condition']
['noce_get_condition']
['noce_get_condition', 'noce_get_condition']
['noce_get_condition', 'noce_get_condition']
['back_branch_in_range_p', 'back_branch_in_range_p', 'rm_line_notes', 'rm_line_notes', 'rm_other_notes', 'rm_other_notes']
['back_branch_in_range_p', 'back_branch_in_range_p', 'rm_line_notes', 'rm_line_notes', 'rm_other_notes', 'rm_other_notes']
['rm_line_notes', 'rm_other_notes']
['expand_mult']
['noce_get_condition']
['immed_double_const', 'nonmemory_operand']
['optimize_bit_field']
['cse_basic_block', 'expand_decl', 'expand_function_end', 'force_to_mode', 'if_convert', 'loop_optimize', 'maybe_eliminate_biv_1']
['check_asm_stack_operands', 'expand_decl']
['loop_iterations', 'subst_asm_stack_regs']
['copy_insn_list', 'copy_loop_body', 'dead_or_predicable', 'expand_expr', 'if_convert']
['simplify_binary_operation']
['combine_simplify_rtx', 'compute_forward_dependences', 'eliminate_regs', 'emit_library_call_value_1', 'expand_expr', 'expected_value_to_br_prob', 'find_reloads_address', 'fold_rtx', 'force_to_mode', 'gen_reload', 'instantiate_virtual_regs_1', 'local_alloc', 'move_movables', 'purge_addressof_1', 'regmove_optimize', 'reload', 'simplify_comparison', 'simplify_comparison', 'split_all_insns', 'subst_asm_stack_regs']
['regmove_optimize', 'subst_asm_stack_regs']
['distribute_notes', 'simplify_comparison']
['apply_distributive_law', 'standard_80387_constant_p']
['known_cond']
['nonzero_bits']
['nonzero_bits']
['nonzero_bits', 'nonzero_bits']
['nonzero_bits', 'nonzero_bits']
['nonzero_bits']
['nonzero_bits']
['expand_compound_operation']
['nonzero_bits']
['nonzero_bits']
['expand_compound_operation']
['nonzero_bits']
['nonzero_bits']
['nonzero_bits']
['nonzero_bits']
['apply_args_size']
['combine_reversed_comparison_code']
['nonzero_bits']
['nonzero_bits']
['nonzero_bits']
['nonzero_bits']
['find_comparison_args']
['num_sign_bit_copies']
['num_sign_bit_copies']
['nonzero_bits']
['nonzero_bits']
['num_sign_bit_copies']
['nonzero_bits']
['nonzero_bits']
['objects_must_conflict_p']
['offset_address']
['offset_address']
['offset_address']
['offset_address']
['reorder_blocks_1']
['offsettable_address_p']
['offsettable_memref_p']
['offsettable_nonstrict_memref_p']
['int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p']
['int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p']
['alter_subreg', 'noce_emit_move_insn', 'put_addressof_into_stack', 'put_addressof_into_stack']
['constrain_operands', 'reg_overlap_mentioned_for_reload_p']
['alter_subreg', 'constrain_operands', 'get_true_reg', 'noce_emit_move_insn', 'operands_match_p', 'put_addressof_into_stack', 'put_addressof_into_stack', 'replace_regs', 'subreg_regno']
['operands_match_p', 'rtx_renumbered_equal_p']
['oprs_not_set_p', 'oprs_unchanged_p']
['oprs_unchanged_p']
['record_last_reg_set_info']
['oprs_not_set_p', 'oprs_unchanged_p']
['optimize_inline_calls']
['build_component_ref', 'optimize_minmax_comparison']
['build_unary_op']
['bit_from_pos', 'build_unary_op', 'c_alignof', 'c_alignof', 'expand_tree_builtin', 'expand_tree_builtin', 'expand_tree_builtin', 'expand_tree_builtin', 'finish_enum', 'output_function_exception_table', 'push_init_level', 'range_binop']
['optimize_mode_switching']
['optimize_mode_switching']
['optimize_mode_switching']
['optimize_mode_switching']
['optimize_mode_switching']
['optimize_mode_switching']
['optimize_mode_switching']
['make_preds_opaque']
['optimize_mode_switching', 'optimize_mode_switching', 'optimize_mode_switching']
['optimize_mode_switching', 'optimize_mode_switching', 'optimize_mode_switching']
['optimize_mode_switching', 'optimize_mode_switching', 'optimize_mode_switching']
['optimize_mode_switching']
['optimize_mode_switching']
['optimize_mode_switching']
['optimize_mode_switching']
['optimize_mode_switching']
['eliminate_regs', 'expand_expr', 'find_reloads_address', 'local_alloc', 'purge_addressof_1']
['adjust_address_1', 'copy_insn_list', 'cse_insn', 'find_basic_blocks', 'find_reloads_address', 'move_movables', 'reload', 'simplify_comparison', 'simplify_plus_minus', 'store_expr', 'store_expr', 'store_expr', 'visit_expression']
['simplify_binary_operation']
['eliminate_regs', 'get_attr_type', 'mark_referenced_regs', 'visit_expression']
['if_convert', 'reload', 'rm_other_notes', 'simplify_if_then_else', 'subst_stack_regs_pat', 'subst_stack_regs_pat']
['compute_forward_dependences', 'df_uses_record', 'expand_expr', 'expected_value_to_br_prob', 'fold_rtx', 'instantiate_virtual_regs_1', 'ix86_split_fp_branch', 'ix86_split_long_move', 'make_extraction', 'move_movables', 'record_value_for_reg', 'regmove_optimize', 'reload', 'scan_loop', 'simplify_comparison', 'simplify_comparison', 'split_all_insns', 'subst_asm_stack_regs', 'visit_expression']
['reload']
['subst_stack_regs_pat']
['eliminate_regs']
['compare_constant_1', 'output_addressed_constants', 'output_constant', 'record_constant_1']
['expand_builtin_expect_jump']
['pending_xref_error']
['canon_reg']
['output_asm_name']
['put_condition_code', 'put_condition_code', 'put_condition_code']
['output_call_frame_info']
['force_const_mem', 'init_libfuncs']
['make_preds_opaque']
['emit_single_push_insn']
['reg_is_born', 'reg_is_born', 'reg_is_born']
['output_cfi']
['output_addressed_constants', 'output_constant']
['assemble_variable', 'assemble_zeros']
['data_section']
['data_section']
['data_section']
['output_constant_def_contents']
['assemble_variable', 'assemble_zeros']
['bss_section', 'text_section']
['output_constant_def_contents']
['output_constant_pool']
['expand_increment']
['output_format']
['output_format']
['output_format', 'output_format']
['force_const_mem', 'init_libfuncs', 'output_func_start_profiler']
['output_func_start_profiler']
['output_func_start_profiler']
['bit_from_pos', 'build_unary_op', 'c_alignof', 'c_alignof', 'expand_tree_builtin', 'expand_tree_builtin', 'expand_tree_builtin', 'expand_tree_builtin', 'finish_enum', 'output_function_exception_table', 'push_init_level', 'range_binop']
['output_function_exception_table']
['get_narrower']
['output_init_element']
['output_loc_sequence']
['output_loc_sequence']
['dw2_asm_output_nstring']
['print_value']
['override_options', 'override_options']
['override_options', 'override_options']
['override_options', 'override_options']
['override_options']
['override_options']
['override_options']
['override_options']
['parmlist_tags_warning']
['parmlist_tags_warning']
['parmlist_tags_warning']
['diagnostic_for_decl']
['parse_number']
['parse_number']
['parse_input_constraint']
['read_name_map']
['push_array_bounds', 'push_member_name', 'spelling_length']
['print_spelling', 'spelling_length']
['peephole2_optimize']
['peephole2_optimize']
['peep2_find_free_register']
['peep2_find_free_register']
['peep2_find_free_register']
['peep2_find_free_register', 'peep2_find_free_register', 'reg_fits_class_p']
['peep2_find_free_register']
['peep2_find_free_register', 'peep2_find_free_register', 'reg_fits_class_p']
['peep2_find_free_register']
['peep2_next_insn']
['peep2_reg_dead_p', 'peep2_regno_dead_p']
['cselib_lookup']
['peep2_reg_dead_p']
['peephole2_optimize']
['extract_insn', 'peephole2_insns', 'recog', 'split_insns']
['recog_16', 'recog_2', 'split_1']
['recog_16', 'recog_2', 'split_1']
['peephole2_insns', 'peephole2_insns']
['recog_16', 'recog_2', 'split_1']
['peephole2_insns', 'peephole2_insns']
['recog_16', 'recog_2', 'split_1']
['peephole2_insns', 'peephole2_insns']
['recog_16', 'recog_2', 'split_1']
['recog_16', 'recog_2', 'split_1']
['peephole2_insns', 'peephole2_insns']
['recog_16', 'recog_2', 'split_1']
['force_nonfallthru_and_redirect']
['distribute_notes', 'ix86_va_start', 'mark_set_1', 'mark_set_1', 'nonoverlapping_memrefs_p', 'push_reload', 'reload_cse_regs']
['peephole2_optimize']
['peephole2_optimize']
['peephole2_optimize']
['peephole2_optimize']
['peephole2_optimize']
['peephole2_optimize']
['peephole2_optimize']
['peephole2_optimize']
['peephole2_optimize']
['peephole2_optimize']
['peephole2_optimize']
['pop_init_level', 'process_init_element', 'process_init_element']
['finish_init', 'finish_init', 'finish_init']
['finish_init', 'finish_init', 'finish_init']
['finish_init', 'pop_init_level', 'push_range_stack', 'set_designator', 'set_init_label']
['pop_init_level']
['pop_init_level', 'pop_init_level']
['pop_init_level']
['pop_init_level']
['pop_init_level']
['finish_init', 'pop_init_level', 'push_range_stack', 'set_designator', 'set_init_label']
['precondition_loop_p']
['precondition_loop_p']
['predict_edge_def', 'predict_insn_def']
['predict_edge_def', 'predict_insn_def']
['prepare_operand']
['prepare_operand']
['prepare_operand']
['cleanup_subreg_operands', 'constrain_operands', 'preprocess_constraints', 'regrename_optimize', 'reload_cse_simplify_operands', 'reload_cse_simplify_operands']
['preprocess_constraints']
['extract_insn', 'extract_insn']
['cleanup_subreg_operands', 'preprocess_constraints']
['print_mem_expr']
['print_mem_expr']
['print_operand']
['print_operand', 'print_operand']
['print_operand']
['dump_flow_info']
['print_operand', 'print_operand']
['print_operand', 'print_operand']
['print_operand', 'print_operand']
['nonzero_bits']
['simplify_unary_operation', 'simplify_unary_operation']
['print_operand_address']
['print_operand_address']
['print_operand_address', 'print_operand_address']
['print_operand_address', 'print_operand_address']
['print_operand_address', 'print_operand_address']
['build_complex_type']
['assemble_variable']
['pending_xref_error']
['output_pic_addr_const']
['output_pic_addr_const']
['output_pic_addr_const']
['output_pic_addr_const']
['output_pic_addr_const']
['output_pic_addr_const']
['output_pic_addr_const']
['output_pic_addr_const']
['output_pic_addr_const']
['output_pic_addr_const']
['construct_container']
['output_pic_addr_const']
['print_rtx', 'print_rtx']
['output_pic_addr_const']
['output_pic_addr_const']
['output_pic_addr_const']
['print_spelling']
['output_pic_addr_const']
['print_spelling']
['output_pic_addr_const']
['probe_stack_range']
['probe_stack_range']
['probe_stack_range', 'probe_stack_range', 'probe_stack_range', 'probe_stack_range']
['probe_stack_range', 'probe_stack_range', 'probe_stack_range', 'probe_stack_range']
['probe_stack_range']
['probe_stack_range', 'probe_stack_range', 'probe_stack_range', 'probe_stack_range']
['probe_stack_range']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'emit_move_insn_1', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_main_function', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_tablejump', 'legitimize_address', 'output_cfi', 'probe_stack_range', 'push_block', 'round_push', 'round_trampoline_addr', 'ssa_const_prop']
['probe_stack_range']
['process_init_element', 'process_init_element']
['pop_init_level', 'process_init_element', 'process_init_element']
['process_init_element', 'process_init_element']
['process_reg_param']
['simplify_unary_operation']
['propagate_one_insn']
['copy_insn_1', 'copy_rtx', 'gen_binary', 'gen_lowpart_for_combine', 'make_memloc', 'simplify_giv_expr', 'simplify_relational_operation']
['combine_instructions']
['compute_forward_dependences', 'output_addr_const']
['adjust_address_1', 'emit_libcall_block', 'expand_field_assignment', 'force_nonfallthru_and_redirect', 'memrefs_conflict_p', 'protect_from_queue', 'protect_from_queue', 'store_bit_field']
['check_insn_for_givs', 'extract_bit_field', 'protect_from_queue']
['loop_optimize', 'noce_get_condition']
['gen_reload', 'scan_loop', 'unroll_loop']
['protect_from_queue']
['protect_from_queue']
['purge_addressof']
['purge_addressof', 'purge_addressof']
['purge_addressof', 'purge_addressof']
['purge_addressof']
['purge_addressof']
['purge_addressof']
['copy_loop_body']
['make_compound_operation', 'purge_addressof_1']
['eliminate_regs', 'mark_referenced_regs', 'maybe_eliminate_biv_1', 'optimize_bit_field', 'visit_expression']
['cse_insn', 'store_expr']
['expand_expr', 'local_alloc', 'move_movables', 'nonoverlapping_memrefs_p']
['combine_instructions', 'cse_insn', 'expand_expr', 'find_reloads_address', 'legitimize_pic_address', 'schedule_block', 'shorten_branches']
['combine_instructions', 'combine_simplify_rtx', 'cse_basic_block', 'cse_insn', 'find_reloads_address', 'fixup_var_refs_1', 'make_extraction', 'simplify_comparison', 'visit_expression']
['memrefs_conflict_p']
['purge_single_hard_subreg_set']
['purge_single_hard_subreg_set']
['spelling_length']
['push_member_name']
['start_init', 'start_init']
['push_block']
['push_block']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'emit_move_insn_1', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_main_function', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_tablejump', 'legitimize_address', 'output_cfi', 'probe_stack_range', 'push_block', 'round_push', 'round_trampoline_addr', 'ssa_const_prop']
['pop_init_level', 'push_init_level', 'set_designator']
['pop_init_level', 'process_init_element', 'process_init_element']
['push_init_level']
['push_init_level', 'really_start_incremental_init']
['push_range_stack']
['push_init_level', 'start_init', 'start_init']
['push_init_level']
['push_init_level']
['finish_init', 'pop_init_level', 'push_range_stack', 'set_designator', 'set_init_label']
['pop_init_level', 'process_init_element', 'process_init_element']
['push_range_stack']
['elimination_effects']
['find_split_point', 'subst_stack_regs_pat']
['find_equiv_reg', 'optimize_sibling_and_tail_recursive_calls', 'optimize_sibling_and_tail_recursive_calls', 'simplify_giv_expr', 'strength_reduce']
['nonoverlapping_memrefs_p', 'simplify_comparison']
['reload', 'subst_asm_stack_regs', 'subst_stack_regs_pat']
['eliminate_regs', 'gen_sequence', 'get_AT_unsigned']
['expand_end_case_type', 'reload']
['complete_array_type', 'const_hash', 'dbxout_type', 'expand_builtin_expect_jump', 'gen_array_type_die', 'gen_formal_types_die', 'offset_address', 'output_addressed_constants', 'record_constant_1', 'set_mem_attributes']
['put_addressof_into_stack']
['alter_subreg', 'noce_emit_move_insn', 'put_addressof_into_stack', 'put_addressof_into_stack']
['alter_subreg', 'noce_emit_move_insn', 'put_addressof_into_stack', 'put_addressof_into_stack']
['build_complex_type']
['build_complex_type']
['build_complex_type']
['maybe_eliminate_biv']
['put_var_into_stack']
['qty_compare', 'qty_compare', 'qty_compare']
['qty_compare', 'qty_compare', 'qty_compare']
['qty_compare', 'qty_compare', 'qty_compare']
['qty_compare', 'qty_compare']
['qty_compare', 'qty_compare']
['qty_compare', 'qty_compare', 'qty_compare', 'qty_sugg_compare', 'qty_sugg_compare', 'qty_sugg_compare']
['qty_compare', 'qty_compare', 'qty_compare', 'qty_sugg_compare', 'qty_sugg_compare', 'qty_sugg_compare']
['qty_compare', 'qty_compare', 'qty_compare', 'qty_sugg_compare', 'qty_sugg_compare', 'qty_sugg_compare']
['qty_compare', 'qty_compare', 'qty_compare', 'qty_compare', 'qty_sugg_compare', 'qty_sugg_compare']
['qty_compare', 'qty_compare', 'qty_compare', 'qty_compare', 'qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare']
['qty_sugg_compare']
['qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare']
['build_unary_op', 'range_binop']
['output_function_exception_table', 'range_binop']
['reachable_next_level']
['reachable_next_level']
['read_filename_string']
['read_filename_string']
['read_integral_parameter']
['read_name_map']
['read_name_map']
['bss_section', 'text_section']
['bss_section', 'text_section']
['find_comparison_args']
['find_comparison_args']
['really_start_incremental_init']
['push_init_level', 'really_start_incremental_init']
['get_inner_reference']
['rebuild_jump_labels']
['rebuild_jump_labels', 'rebuild_jump_labels', 'rebuild_jump_labels']
['rebuild_jump_labels', 'rebuild_jump_labels', 'rebuild_jump_labels']
['rebuild_jump_labels', 'rebuild_jump_labels', 'rebuild_jump_labels']
['rebuild_jump_labels']
['back_branch_in_range_p', 'copy_insn_list', 'find_base_value', 'nonoverlapping_memrefs_p', 'restore_line_notes', 'rm_line_notes', 'rm_other_notes', 'scan_loop', 'swap_rtx_condition', 'try_copy_prop', 'unroll_loop']
['nonoverlapping_memrefs_p', 'scan_loop', 'try_copy_prop', 'unroll_loop']
['mark_referenced_regs']
['check_asm_stack_operands', 'expand_decl']
['check_asm_stack_operands', 'expand_decl', 'fixup_var_refs_1']
['get_attr_prefix_0f']
['get_attr_type']
['eliminate_regs']
['extract_insn', 'peephole2_insns', 'recog', 'split_insns']
['insns_match_p', 'recog', 'verify_flow_info']
['insns_match_p', 'recog', 'recog', 'recog', 'recog', 'verify_flow_info']
['recog']
['recog']
['recog']
['recog']
['insns_match_p', 'recog', 'recog', 'recog', 'recog', 'simplify_giv_expr', 'verify_flow_info']
['recog_1', 'recog_22', 'recog_24']
['recog_11', 'recog_11', 'recog_22', 'recog_23', 'recog_24']
['recog', 'recog_18', 'recog_18', 'recog_18', 'recog_30', 'recog_6', 'recog_6', 'recog_6', 'recog_7']
['recog_11']
['recog_6']
['recog', 'recog_18', 'recog_18', 'recog_18', 'recog_30', 'recog_6', 'recog_6', 'recog_6', 'recog_7']
['recog_16', 'recog_5', 'recog_7']
['recog_29', 'recog_6']
['recog', 'recog', 'recog', 'recog_11', 'recog_11', 'recog_16', 'recog_18', 'recog_19', 'recog_19', 'recog_22', 'recog_22', 'recog_24', 'recog_24', 'recog_29', 'recog_6']
['recog', 'recog', 'recog', 'recog_11', 'recog_11', 'recog_16', 'recog_18', 'recog_19', 'recog_19', 'recog_22', 'recog_22', 'recog_24', 'recog_24', 'recog_29', 'recog_6']
['peephole2_insns', 'peephole2_insns', 'recog', 'recog', 'recog_1', 'recog_11', 'recog_18', 'recog_2', 'recog_20', 'recog_20', 'recog_21', 'recog_21', 'recog_22', 'recog_22', 'recog_22', 'recog_23', 'recog_24', 'recog_24', 'recog_24', 'recog_3', 'recog_30', 'recog_30', 'recog_30']
['recog_21', 'recog_23', 'recog_30']
['recog_2']
['do_SUBST', 'recog_for_combine']
['do_SUBST', 'recog_for_combine']
['do_SUBST', 'do_SUBST', 'recog_for_combine', 'recog_for_combine']
['do_SUBST', 'do_SUBST', 'recog_for_combine', 'recog_for_combine']
['do_SUBST', 'do_SUBST', 'recog_for_combine', 'recog_for_combine']
['do_SUBST', 'recog_for_combine']
['recog_for_combine']
['recog_for_combine', 'recog_for_combine']
['recog_for_combine']
['choose_hard_reg_mode', 'mark_set_1', 'reload_inner_reg_of_subreg']
['recog_for_combine', 'recog_for_combine']
['recog_for_combine']
['recog_for_combine']
['recog_for_combine']
['recog_for_combine']
['recog_for_combine']
['recog_for_combine']
['recog_for_combine']
['recog_for_combine']
['record_address_regs']
['reload_cse_simplify_set']
['reload_cse_simplify_set']
['rtx_cost']
['output_addressed_constants', 'record_constant_1']
['const_hash', 'dbxout_type', 'expand_assignment', 'gen_formal_types_die', 'output_constructor', 'record_constant_1', 'set_mem_align']
['const_hash', 'dbxout_type', 'expand_assignment', 'gen_formal_types_die', 'output_constructor', 'record_constant_1', 'set_mem_align']
['scan_rtx_reg']
['init_propagate_block_info']
['legitimize_pic_address']
['elimination_effects']
['reload']
['emit_group_store', 'emit_libcall_block', 'mark_set_1']
['consec_sets_giv', 'cse_end_of_basic_block', 'find_equiv_reg', 'insns_match_p', 'move_by_pieces', 'recog', 'recog', 'recog', 'recog', 'record_giv', 'verify_flow_info']
['record_one_conflict']
['record_one_conflict']
['record_one_set', 'record_one_set']
['record_one_set', 'record_one_set']
['record_one_set']
['record_one_set']
['record_one_set']
['record_one_set', 'record_one_set']
['record_one_set', 'record_one_set']
['record_value_for_reg']
['record_value_for_reg']
['scan_rtx_reg']
['record_value_for_reg']
['record_value_for_reg', 'record_value_for_reg']
['get_file_function_name_long', 'record_value_for_reg']
['record_value_for_reg']
['record_value_for_reg']
['get_file_function_name_long', 'record_value_for_reg']
['get_file_function_name_long', 'record_value_for_reg']
['get_file_function_name_long', 'record_value_for_reg']
['expand_goto', 'ix86_setup_incoming_varargs']
['df_uses_record']
['exp_equiv_p']
['reload_inner_reg_of_subreg']
['copyprop_hardreg_forward', 'verify_flow_info']
['compute_forward_dependences', 'refers_to_regno_p']
['expand_decl']
['emit_no_conflict_block', 'emit_no_conflict_block', 'move_by_pieces', 'squeeze_notes', 'squeeze_notes']
['exp_equiv_p', 'mark_set_1']
['rtx_renumbered_equal_p', 'rtx_renumbered_equal_p']
['choose_hard_reg_mode', 'choose_hard_reg_mode', 'find_oldest_value_reg', 'insert_restore', 'reload_inner_reg_of_subreg']
['allocate_reg_info', 'reg_alternate_class', 'reg_preferred_class']
['reg_alternate_class']
['choose_hard_reg_mode']
['choose_hard_reg_mode']
['peep2_find_free_register', 'peep2_find_free_register', 'reg_fits_class_p']
['peep2_find_free_register', 'peep2_find_free_register', 'reg_fits_class_p']
['reg_is_born']
['reg_is_born']
['timevar_pop']
['reg_is_born']
['reg_is_born']
['push_array_bounds', 'push_member_name', 'start_init']
['extract_insn', 'extract_insn', 'peephole2_insns', 'recog', 'recog_for_combine', 'recog_for_combine', 'regclass_init', 'split_insns']
['reg_is_born']
['reg_is_born', 'reg_is_born', 'reg_is_born']
['reg_is_born']
['operands_match_p', 'reg_overlap_mentioned_for_reload_p']
['constrain_operands', 'reg_overlap_mentioned_for_reload_p']
['choose_hard_reg_mode']
['operands_match_p', 'reg_overlap_mentioned_for_reload_p']
['constrain_operands', 'reg_overlap_mentioned_for_reload_p']
['choose_hard_reg_mode', 'choose_hard_reg_mode', 'insert_restore', 'reload_inner_reg_of_subreg']
['allocate_reg_info', 'reg_alternate_class', 'reg_preferred_class']
['reg_preferred_class']
['cfg_layout_finalize', 'copy_eh_notes', 'delete_insn', 'delete_noop_moves']
['reg_scan_mark_refs']
['reg_to_stack', 'scan_rtx_reg']
['refers_to_regno_p', 'reg_to_stack', 'scan_rtx_reg']
['emit_insns_after', 'timevar_push']
['regclass']
['allocate_reg_info', 'regclass']
['compute_transp', 'convert_move', 'gen_lowpart_common', 'gen_lowpart_common', 'mark_referenced_regs']
['regclass']
['regclass']
['regclass']
['regclass', 'regclass']
['debug_reload_to_stream']
['regclass', 'regclass']
['regclass']
['regclass', 'regclass']
['regclass']
['regclass_init']
['general_operand']
['subst_stack_regs_pat']
['emit_library_call_value_1', 'gen_reload', 'schedule_insns']
['adjust_address_1', 'adjust_address_1', 'copy_insn_list', 'emit_libcall_block', 'expand_field_assignment', 'find_basic_blocks', 'fold_rtx', 'force_nonfallthru_and_redirect', 'gcse_main', 'memrefs_conflict_p', 'protect_from_queue', 'protect_from_queue', 'schedule_insns', 'store_bit_field']
['schedule_insns']
['delete_noop_moves', 'regmove_optimize']
['check_asm_stack_operands', 'expand_decl', 'nonoverlapping_memrefs_p', 'scan_loop', 'try_copy_prop', 'unroll_loop']
['constrain_operands', 'constrain_operands', 'gcse_main', 'if_convert', 'init_propagate_block_info', 'optimize_sibling_and_tail_recursive_calls', 'optimize_sibling_and_tail_recursive_calls', 'regmove_optimize', 'simplify_if_then_else', 'simplify_plus_minus']
['df_analyse_1', 'df_analyse_1', 'gcse_main', 'try_combine']
['constrain_operands', 'simplify_plus_minus']
['clear_reload_reg_in_use', 'cselib_invalidate_regno', 'mark_reload_reg_in_use']
['regrename_optimize']
['regrename_optimize']
['check_asm_stack_operands', 'constrain_operands', 'copyprop_hardreg_forward', 'regrename_optimize']
['cleanup_subreg_operands', 'constrain_operands', 'preprocess_constraints', 'regrename_optimize', 'reload_cse_simplify_operands', 'reload_cse_simplify_operands']
['regrename_optimize']
['record_reg_classes']
['regrename_optimize']
['cleanup_subreg_operands']
['record_reg_classes']
['regrename_optimize']
['copyprop_hardreg_forward', 'regrename_optimize']
['regrename_optimize']
['check_asm_stack_operands', 'constrain_operands', 'copyprop_hardreg_forward', 'regrename_optimize']
['release_pages', 'release_pages']
['release_pages', 'release_pages']
['release_pages']
['release_pages', 'release_pages']
['release_pages', 'release_pages']
['release_pages']
['release_pages']
['release_pages']
['release_pages']
['convert_regs_2', 'copy_loop_body', 'df_uses_record', 'init_alias_analysis', 'reload', 'reload']
['memrefs_conflict_p']
['check_asm_stack_operands', 'delete_noop_moves', 'loop_iterations', 'subst_stack_regs_pat']
['copy_loop_body', 'expand_expr', 'if_convert', 'loop_iterations', 'optimize_sibling_and_tail_recursive_calls']
['combine_instructions', 'cse_insn', 'find_reloads_address', 'loop_optimize', 'noce_get_condition', 'nonoverlapping_memrefs_p', 'unroll_loop']
['emit_libcall_block', 'expand_function_end', 'if_convert', 'optimize_sibling_and_tail_recursive_calls', 'optimize_sibling_and_tail_recursive_calls', 'reload', 'reload', 'sched_init']
['apply_distributive_law', 'eliminate_regs', 'find_equiv_reg', 'find_reloads_address']
['combine_simplify_rtx', 'combine_simplify_rtx', 'compute_forward_dependences', 'cse_insn', 'eliminate_regs', 'emit_library_call_value_1', 'expand_expr', 'find_reloads_address', 'fixup_var_refs_1', 'fixup_var_refs_1', 'force_to_mode', 'gen_reload', 'local_alloc', 'output_addr_const', 'purge_addressof_1', 'reload_cse_regs']
['convert_regs_2', 'copy_loop_body', 'df_uses_record', 'instantiate_virtual_regs_1', 'loop_optimize', 'noce_get_condition', 'schedule_block']
['df_analyse_1']
['expand_expr', 'local_alloc', 'move_movables', 'nonoverlapping_memrefs_p']
['simplify_comparison']
['copy_eh_notes', 'find_base_value', 'scope_to_insns_initialize']
['apply_distributive_law', 'eliminate_regs']
['copy_loop_body', 'cse_insn', 'cse_insn', 'eliminate_regs', 'eliminate_regs', 'emit_group_store', 'expand_expr', 'expand_expr', 'expand_expr', 'find_equiv_reg', 'find_equiv_reg', 'find_reloads_address', 'find_reloads_address', 'find_reloads_address', 'find_reloads_address', 'find_reloads_address', 'fixup_var_refs_1', 'gen_reload', 'get_attr_type', 'if_convert', 'init_propagate_block_info', 'local_alloc', 'local_alloc', 'mark_referenced_regs', 'move_movables', 'move_movables', 'move_movables', 'move_movables', 'nonoverlapping_memrefs_p', 'nonoverlapping_memrefs_p', 'nonoverlapping_memrefs_p', 'optimize_sibling_and_tail_recursive_calls', 'purge_addressof_1', 'reload', 'simplify_binary_operation', 'simplify_comparison', 'simplify_comparison', 'simplify_comparison', 'simplify_plus_minus', 'store_expr', 'store_expr', 'store_expr', 'strength_reduce', 'subst_asm_stack_regs', 'subst_stack_regs_pat', 'unroll_loop', 'visit_expression']
['emit_libcall_block', 'expand_decl', 'expand_function_end', 'find_base_value', 'move_movables', 'strength_reduce', 'subst_stack_regs_pat']
['reload']
['subst_stack_regs_pat']
['unroll_loop']
['reload_combine_note_use']
['reload_cse_regs', 'reload_cse_regs']
['reload_cse_regs', 'reload_cse_regs']
['emit_library_call_value_1']
['peep2_find_free_register', 'peep2_find_free_register', 'reg_fits_class_p']
['find_oldest_value_reg']
['compute_transp']
['compute_transp', 'compute_transp']
['get_file_function_name_long']
['eliminate_regs_in_insn', 'emit_no_conflict_block', 'emit_no_conflict_block', 'find_mem_givs']
['get_file_function_name_long']
['reload_combine_note_use']
['expand_goto', 'reposition_prologue_and_epilogue_notes', 'strength_reduce']
['reload']
['reload_cse_regs', 'reload_cse_regs']
['reload_cse_regs', 'reload_cse_regs']
['expand_expr', 'local_alloc', 'move_movables', 'nonoverlapping_memrefs_p']
['combine_instructions', 'cse_insn', 'expand_expr', 'find_reloads_address', 'legitimize_pic_address', 'schedule_block', 'shorten_branches']
['eliminate_regs', 'expand_expr', 'find_reloads_address', 'local_alloc', 'purge_addressof_1']
['back_branch_in_range_p', 'branch_prob', 'canonicalize_condition', 'cse_basic_block', 'delete_related_insns', 'find_basic_blocks', 'if_convert', 'loop_optimize', 'set_label_offsets', 'try_combine']
['apply_distributive_law', 'compute_forward_dependences', 'cse_insn', 'cse_insn', 'decompose', 'expand_field_assignment', 'gen_binary', 'local_alloc', 'move_movables', 'protect_from_queue', 'regmove_optimize', 'reload', 'reload', 'store_expr', 'strength_reduce', 'subst_asm_stack_regs', 'unroll_loop']
['simplify_giv_expr']
['reload_cse_simplify_set']
['store_expr', 'store_expr', 'validate_replace_rtx_1']
['reload_cse_simplify_set']
['reload_cse_simplify_set']
['force_nonfallthru_and_redirect']
['cfg_layout_finalize', 'rm_line_notes', 'rm_other_notes', 'squeeze_notes']
['force_nonfallthru_and_redirect']
['bitmap_clear_bit']
['calls_function_1']
['reorder_blocks_1']
['output_constructor', 'output_constructor']
['replace_call_placeholder']
['replace_call_placeholder']
['replace_call_placeholder']
['combine_instructions', 'copy_eh_notes', 'emit_insns_after', 'expected_value_to_br_prob', 'restore_line_notes', 'scope_to_insns_initialize']
['compute_forward_dependences', 'expected_value_to_br_prob', 'split_all_insns']
['change_address_1']
['change_address_1']
['cfg_layout_finalize', 'rm_other_notes', 'squeeze_notes']
['compute_forward_dependences', 'compute_forward_dependences', 'restore_line_notes', 'squeeze_notes']
['compute_forward_dependences', 'compute_forward_dependences', 'restore_line_notes', 'squeeze_notes']
['change_address_1']
['change_address_1']
['change_address_1', 'change_address_1', 'change_address_1']
['change_address_1', 'change_address_1', 'change_address_1']
['change_address_1']
['change_address_1']
['change_address_1', 'change_address_1', 'change_address_1']
['change_address_1', 'change_address_1', 'change_address_1']
['change_address_1']
['final', 'splice_child_die']
['schedule_block']
['strength_reduce']
['get_attr_prefix_0f']
['check_asm_stack_operands', 'cse_basic_block', 'local_alloc', 'scan_loop']
['memory_address']
['emit_insns_after', 'gen_binary']
['rm_line_notes', 'rm_other_notes']
['mark_referenced_regs']
['mark_referenced_regs']
['mark_referenced_regs']
['compute_forward_dependences', 'compute_forward_dependences', 'cse_main', 'dead_or_predicable', 'dead_or_predicable', 'decompose', 'find_base_value', 'find_base_value', 'for_each_insn_in_loop', 'for_each_insn_in_loop', 'gen_binary', 'rm_line_notes', 'rm_other_notes', 'rm_other_notes', 'rm_other_notes', 'rm_other_notes', 'split_all_insns', 'squeeze_notes', 'swap_rtx_condition']
['replace_pseudos_in_call_usage']
['replace_pseudos_in_call_usage']
['nonzero_bits']
['extract_left_shift', 'find_reloads_toplev', 'kill_value', 'noce_emit_cmove', 'replace_regs', 'replace_rtx', 'replace_rtx', 'simplify_rtx', 'simplify_rtx', 'write_dependence_p']
['replace_regs']
['extract_left_shift', 'find_reloads_toplev', 'kill_value', 'noce_emit_cmove', 'replace_regs', 'replace_rtx', 'replace_rtx', 'simplify_rtx', 'simplify_rtx', 'write_dependence_p']
['kill_value', 'known_cond', 'replace_rtx', 'simplify_rtx', 'simplify_rtx', 'true_regnum']
['extract_left_shift', 'find_reloads_toplev', 'kill_value', 'noce_emit_cmove', 'replace_regs', 'replace_rtx', 'replace_rtx', 'simplify_rtx', 'simplify_rtx', 'write_dependence_p']
['known_cond', 'replace_rtx']
['gen_reload']
['expand_end_case_type']
['schedule_insns', 'try_combine']
['expand_goto', 'gen_reload', 'reposition_prologue_and_epilogue_notes']
['expand_goto', 'expand_goto', 'gen_reload', 'reposition_prologue_and_epilogue_notes']
['reposition_prologue_and_epilogue_notes']
['emit_libcall_block']
['expand_goto']
['reposition_prologue_and_epilogue_notes']
['reposition_prologue_and_epilogue_notes', 'reposition_prologue_and_epilogue_notes']
['reposition_prologue_and_epilogue_notes', 'reposition_prologue_and_epilogue_notes']
['expand_goto']
['expand_goto', 'expand_goto', 'gen_reload', 'reposition_prologue_and_epilogue_notes']
['reposition_prologue_and_epilogue_notes']
['reposition_prologue_and_epilogue_notes', 'reposition_prologue_and_epilogue_notes', 'reposition_prologue_and_epilogue_notes', 'reposition_prologue_and_epilogue_notes']
['reposition_prologue_and_epilogue_notes', 'reposition_prologue_and_epilogue_notes', 'reposition_prologue_and_epilogue_notes', 'reposition_prologue_and_epilogue_notes']
['maybe_read_dollar_number']
['asm_fprintf']
['const_hash', 'record_constant_1']
['resolve_operand_name_1']
['resolve_unique_section']
['rest_of_compilation']
['c_expand_body', 'rest_of_compilation', 'rest_of_compilation']
['c_expand_body', 'c_expand_body', 'rest_of_compilation', 'rest_of_compilation']
['c_expand_body', 'rest_of_compilation', 'rest_of_compilation']
['c_expand_body', 'c_expand_body', 'rest_of_compilation', 'rest_of_compilation']
['rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation']
['rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation']
['rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation']
['rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation']
['rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation']
['rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation']
['rest_of_compilation']
['rest_of_compilation']
['rest_of_compilation']
['rest_of_compilation']
['rest_of_compilation']
['rest_of_decl_compilation']
['rest_of_decl_compilation']
['check_global_declarations', 'rest_of_decl_compilation', 'rest_of_type_compilation']
['check_global_declarations', 'rest_of_decl_compilation', 'rest_of_type_compilation']
['check_global_declarations', 'rest_of_decl_compilation', 'rest_of_type_compilation']
['check_global_declarations', 'rest_of_decl_compilation', 'rest_of_type_compilation']
['check_global_declarations', 'rest_of_decl_compilation', 'rest_of_type_compilation']
['emit_insns_after', 'expected_value_to_br_prob', 'restore_line_notes']
['restore_line_notes']
['back_branch_in_range_p', 'copy_insn_list', 'find_base_value', 'restore_line_notes', 'rm_line_notes', 'rm_other_notes', 'swap_rtx_condition']
['restore_line_notes']
['restore_line_notes', 'restore_line_notes']
['restore_line_notes', 'restore_line_notes']
['restore_line_notes']
['emit_insns_after', 'restore_line_notes']
['restore_line_notes']
['restore_line_notes']
['restore_line_notes']
['restore_line_notes', 'restore_line_notes']
['restore_line_notes', 'restore_line_notes']
['restore_line_notes']
['restore_line_notes', 'restore_line_notes']
['restore_line_notes', 'restore_line_notes']
['noce_get_condition']
['apply_args_size']
['reversed_comparison_code']
['rm_line_notes']
['final', 'splice_child_die']
['rm_line_notes']
['rm_line_notes']
['emit_insns_after', 'emit_insns_after', 'emit_no_conflict_block', 'emit_no_conflict_block', 'final', 'final', 'gen_sequence', 'gen_sequence', 'squeeze_notes', 'squeeze_notes']
['emit_insns_after', 'emit_insns_after', 'emit_no_conflict_block', 'emit_no_conflict_block', 'final', 'final', 'gen_sequence', 'gen_sequence', 'squeeze_notes', 'squeeze_notes']
['rm_line_notes']
['rm_line_notes']
['rm_line_notes', 'rm_line_notes', 'rm_line_notes', 'rm_line_notes', 'rm_line_notes', 'simplify_relational_operation']
['rm_line_notes', 'rm_line_notes', 'rm_line_notes', 'rm_line_notes', 'rm_line_notes', 'simplify_relational_operation']
['emit_no_conflict_block', 'emit_no_conflict_block', 'rm_line_notes', 'rm_line_notes', 'rm_line_notes', 'rm_line_notes', 'rm_other_notes', 'rm_other_notes', 'rm_other_notes', 'rm_other_notes']
['emit_no_conflict_block', 'emit_no_conflict_block', 'final', 'final']
['emit_no_conflict_block', 'emit_no_conflict_block', 'final', 'final']
['rm_line_notes', 'rm_other_notes']
['final']
['rm_line_notes']
['compute_forward_dependences', 'expected_value_to_br_prob', 'split_all_insns']
['back_branch_in_range_p', 'copy_insn_list', 'find_base_value', 'restore_line_notes', 'rm_line_notes', 'rm_other_notes', 'swap_rtx_condition']
['rm_other_notes']
['rm_other_notes']
['emit_insns_after', 'emit_insns_after', 'emit_no_conflict_block', 'emit_no_conflict_block', 'final', 'final', 'gen_sequence', 'gen_sequence', 'squeeze_notes', 'squeeze_notes']
['emit_insns_after', 'emit_insns_after', 'emit_no_conflict_block', 'emit_no_conflict_block', 'final', 'final', 'gen_sequence', 'gen_sequence', 'squeeze_notes', 'squeeze_notes']
['rm_other_notes']
['rm_other_notes', 'squeeze_notes']
['rm_other_notes', 'rm_other_notes', 'rm_other_notes', 'rm_other_notes']
['rm_other_notes', 'rm_other_notes', 'rm_other_notes', 'rm_other_notes']
['rm_other_notes']
['back_branch_in_range_p', 'back_branch_in_range_p', 'rm_line_notes', 'rm_line_notes', 'rm_other_notes', 'rm_other_notes']
['back_branch_in_range_p', 'back_branch_in_range_p', 'rm_line_notes', 'rm_line_notes', 'rm_other_notes', 'rm_other_notes']
['rm_other_notes']
['find_base_value', 'rm_line_notes', 'rm_other_notes', 'swap_rtx_condition']
['rm_line_notes']
['rm_line_notes', 'rm_other_notes']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'emit_move_insn_1', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_main_function', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_tablejump', 'legitimize_address', 'output_cfi', 'probe_stack_range', 'push_block', 'round_push', 'round_trampoline_addr', 'ssa_const_prop']
['round_push']
['round_push']
['round_trampoline_addr']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'emit_move_insn_1', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_main_function', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_tablejump', 'legitimize_address', 'output_cfi', 'probe_stack_range', 'push_block', 'round_push', 'round_trampoline_addr', 'ssa_const_prop']
['round_trampoline_addr']
['rtl_for_decl_location']
['nonzero_bits', 'simplify_giv_expr']
['general_operand']
['rtx_equal_for_cselib_p']
['rtx_equal_for_cselib_p']
['rtx_equal_for_field_assignment_p']
['rtx_equal_for_field_assignment_p']
['rtx_equal_for_memref_p']
['delete_noop_moves', 'regmove_optimize']
['find_split_point']
['copy_eh_notes', 'emit_libcall_block', 'emit_no_conflict_block', 'find_base_value', 'if_convert', 'optimize_sibling_and_tail_recursive_calls', 'purge_line_number_notes', 'reposition_prologue_and_epilogue_notes', 'scope_to_insns_initialize']
['check_asm_stack_operands', 'expand_decl', 'maybe_eliminate_biv_1', 'optimize_bit_field', 'rm_line_notes']
['combine_regs', 'cse_basic_block', 'cse_insn', 'expand_function_end', 'find_reloads_address']
['delete_noop_moves']
['delete_noop_moves']
['rtx_renumbered_equal_p', 'rtx_renumbered_equal_p']
['alter_subreg', 'doloop_modify', 'noce_emit_move_insn', 'put_addressof_into_stack', 'put_addressof_into_stack']
['validate_replace_rtx_1']
['apply_args_size']
['check_asm_stack_operands', 'emit_libcall_block', 'expand_end_case_type', 'protect_from_queue', 'reload', 'reposition_prologue_and_epilogue_notes', 'store_bit_field', 'subst_stack_regs_pat']
['expand_field_assignment']
['doing_eh']
['back_branch_in_range_p']
['canonicalize_condition', 'nonoverlapping_memrefs_p']
['safe_from_p']
['safe_from_p']
['expand_decl', 'expand_decl', 'expand_decl']
['decompose', 'find_dummy_reload', 'for_each_insn_in_loop', 'output_addr_const', 'reload_combine_note_use']
['decompose', 'find_dummy_reload', 'for_each_insn_in_loop', 'output_addr_const', 'reload_combine_note_use']
['init_propagate_block_info', 'try_copy_prop']
['safe_from_p', 'safe_from_p']
['safe_from_p', 'safe_from_p']
['safe_from_p']
['save_call_clobbered_regs']
['exp_equiv_p']
['find_reg', 'save_call_clobbered_regs']
['save_for_inline']
['save_for_inline']
['combine_regs', 'visit_expression']
['expand_builtin_expect_jump', 'output_addressed_constants']
['restore_line_notes', 'restore_line_notes']
['restore_line_notes']
['save_stack_pointer']
['try_combine', 'try_combine']
['back_branch_in_range_p', 'branch_prob', 'canonicalize_condition', 'cse_basic_block', 'delete_related_insns', 'find_basic_blocks', 'if_convert', 'loop_optimize', 'set_label_offsets', 'try_combine']
['adjust_address_1', 'copy_insn_list', 'find_basic_blocks']
['for_each_insn_in_loop']
['canonicalize_condition', 'find_dummy_reload', 'nonoverlapping_memrefs_p', 'scan_loop', 'try_copy_prop', 'unroll_loop']
['emit_library_call_value_1', 'gen_reload']
['check_asm_stack_operands', 'check_asm_stack_operands', 'compute_transp', 'consec_sets_giv', 'cse_basic_block', 'cse_basic_block', 'cse_basic_block', 'df_uses_record', 'emit_library_call_value_1', 'expand_decl', 'expand_decl', 'expand_function_end', 'expand_function_end', 'final', 'find_equiv_reg', 'find_reloads_address', 'find_reloads_address', 'fixup_var_refs_1', 'force_to_mode', 'gen_reload', 'gen_reload', 'if_convert', 'init_propagate_block_info', 'local_alloc', 'loop_optimize', 'loop_optimize', 'loop_optimize', 'maybe_eliminate_biv_1', 'move_movables', 'scan_loop', 'splice_child_die']
['scan_loop']
['final_scan_insn', 'loop_iterations', 'move_movables', 'nonoverlapping_memrefs_p']
['choose_hard_reg_mode', 'reload_inner_reg_of_subreg']
['exp_equiv_p', 'mark_set_1', 'move_deaths']
['sched_analyze_1']
['save_call_clobbered_regs']
['memrefs_conflict_p']
['schedule_insns']
['schedule_insns']
['schedule_insns']
['simplify_comparison']
['schedule_insns']
['cse_basic_block', 'expand_decl', 'expand_function_end', 'force_to_mode', 'if_convert', 'loop_optimize', 'maybe_eliminate_biv_1']
['check_asm_stack_operands', 'combine_simplify_rtx', 'copy_insn_list', 'copy_loop_body', 'copy_loop_body', 'cse_insn', 'dead_or_predicable', 'eliminate_regs', 'emit_library_call_value_1', 'expand_expr', 'expand_expr', 'expand_expr', 'expand_expr', 'final_scan_insn', 'find_reloads_address', 'find_reloads_address', 'force_to_mode', 'gen_reload', 'if_convert', 'if_convert', 'init_alias_analysis', 'ix86_split_fp_branch', 'ix86_split_fp_branch', 'local_alloc', 'loop_iterations', 'loop_iterations', 'loop_iterations', 'make_extraction', 'move_movables', 'move_movables', 'move_movables', 'nonoverlapping_memrefs_p', 'optimize_sibling_and_tail_recursive_calls', 'optimize_sibling_and_tail_recursive_calls', 'purge_addressof_1', 'purge_addressof_1', 'record_giv', 'record_value_for_reg', 'subst_asm_stack_regs']
['mark_used_regs']
['sched_init']
['sched_init']
['sched_init', 'sched_init']
['sched_init', 'sched_init']
['adjust_address_1']
['back_branch_in_range_p', 'back_branch_in_range_p', 'find_basic_blocks', 'noce_get_condition', 'rm_line_notes', 'rm_line_notes', 'rm_other_notes', 'rm_other_notes']
['back_branch_in_range_p', 'rm_line_notes']
['copy_eh_notes', 'expand_function_end', 'find_dummy_reload', 'loop_optimize', 'noce_get_condition', 'scope_to_insns_initialize', 'strength_reduce']
['find_equiv_reg']
['convert_regs_2', 'df_uses_record', 'reload_combine_note_use']
['emit_no_conflict_block']
['subst_stack_regs_pat']
['combine_instructions', 'cse_insn', 'expand_end_case_type', 'find_reloads_address', 'gcse_main', 'purge_addressof_1', 'simplify_comparison']
['compute_forward_dependences', 'find_reloads_address', 'gen_binary', 'move_movables', 'reload']
['schedule_insns', 'schedule_insns']
['schedule_insns', 'schedule_insns']
['schedule_insns', 'schedule_insns']
['schedule_insns', 'schedule_insns']
['schedule_insns', 'schedule_insns']
['schedule_insns', 'schedule_insns']
['schedule_insns', 'schedule_insns']
['schedule_insns', 'schedule_insns']
['schedule_insns', 'schedule_insns']
['schedule_insns', 'schedule_insns']
['dead_or_predicable', 'dead_or_predicable']
['sched_init']
['sched_init']
['sched_init']
['rm_other_notes']
['qty_sugg_compare']
['scope_die_for']
['scope_die_for']
['scope_die_for']
['copy_eh_notes', 'scope_to_insns_initialize']
['scope_to_insns_initialize']
['thread_prologue_and_epilogue_insns']
['decompose']
['combine_instructions', 'final', 'rm_line_notes', 'rm_other_notes']
['scope_to_insns_initialize']
['scope_to_insns_initialize']
['scope_to_insns_initialize', 'scope_to_insns_initialize']
['scope_to_insns_initialize', 'scope_to_insns_initialize']
['scope_to_insns_initialize']
['build_component_ref', 'optimize_minmax_comparison']
['store_parm_decls']
['optimize_minmax_comparison']
['assemble_variable']
['optimize_minmax_comparison']
['assemble_variable']
['set_decl_abstract_flags', 'set_decl_origin_self']
['set_decl_abstract_flags', 'set_decl_origin_self']
['finish_init', 'pop_init_level', 'push_range_stack', 'set_designator', 'set_init_label']
['pop_init_level', 'push_init_level', 'set_designator']
['finish_init', 'pop_init_level', 'push_range_stack', 'set_designator', 'set_init_label']
['set_init_index']
['finish_init', 'pop_init_level', 'push_range_stack', 'set_designator', 'set_init_label']
['finish_init', 'pop_init_level', 'push_range_stack', 'set_designator', 'set_init_label']
['insert_restore', 'save_call_clobbered_regs']
['set_mem_attributes']
['set_mem_attributes']
['set_mem_attributes']
['life_analysis', 'life_analysis', 'life_analysis']
['set_mem_attributes']
['set_mem_attributes']
['set_page_table_entry']
['choose_reload_regs']
['set_reload_reg']
['can_combine_p']
['mark_set_regs']
['mark_set_regs']
['set_unique_reg_note']
['clear_reload_reg_in_use', 'cselib_invalidate_regno', 'mark_reload_reg_in_use']
['choose_hard_reg_mode']
['final', 'splice_child_die']
['back_branch_in_range_p', 'copy_insn_list', 'find_base_value', 'restore_line_notes', 'rm_line_notes', 'rm_other_notes', 'swap_rtx_condition']
['sge_plus_constant']
['expand_field_assignment']
['gen_binary']
['compute_forward_dependences']
['emit_insns_after', 'gen_binary']
['combine_instructions', 'combine_simplify_rtx', 'cse_basic_block', 'cse_insn', 'find_reloads_address', 'fixup_var_refs_1', 'make_extraction', 'simplify_comparison', 'visit_expression']
['shorten_branches']
['regclass']
['regclass']
['shorten_branches']
['shorten_branches']
['shorten_branches']
['shorten_branches']
['signed_type']
['signed_type']
['signed_type']
['signed_type']
['signed_type']
['int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p']
['int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p']
['store_parm_decls']
['start_function']
['simplify_and_const_int']
['simplify_and_const_int']
['simplify_and_const_int', 'simplify_and_const_int']
['simplify_and_const_int', 'simplify_and_const_int']
['make_compound_operation']
['strength_reduce']
['combine_instructions', 'compute_forward_dependences', 'copy_loop_body', 'copy_loop_body', 'cse_basic_block', 'cse_insn', 'expand_expr', 'expand_function_end', 'find_reloads_address', 'fixup_var_refs_1', 'fixup_var_refs_1', 'if_convert', 'loop_iterations', 'optimize_sibling_and_tail_recursive_calls', 'output_addr_const', 'regmove_optimize', 'reload_cse_regs', 'simplify_binary_operation']
['fixup_var_refs_1']
['adjust_address_1', 'copy_insn_list', 'for_each_insn_in_loop', 'force_nonfallthru_and_redirect', 'gen_reload', 'optimize_bit_field', 'scan_loop', 'unroll_loop']
['copy_insn_1', 'copy_rtx', 'gen_binary', 'gen_lowpart_for_combine', 'make_memloc', 'simplify_giv_expr', 'simplify_relational_operation']
['df_uses_record']
['cse_basic_block', 'expand_function_end', 'find_reloads_address']
['find_reloads_address']
['canonicalize_condition', 'compute_forward_dependences', 'compute_transp', 'consec_sets_giv', 'cse_insn', 'expand_expr', 'expected_value_to_br_prob', 'find_equiv_reg', 'fixup_var_refs_1', 'fold_rtx', 'gen_reload', 'gen_sequence', 'instantiate_virtual_regs_1', 'local_alloc', 'move_movables', 'move_movables', 'move_movables', 'nonoverlapping_memrefs_p', 'protect_from_queue', 'purge_addressof_1', 'regmove_optimize', 'reload', 'simplify_comparison', 'simplify_comparison', 'split_all_insns', 'squeeze_notes', 'strength_reduce', 'subst_asm_stack_regs']
['combine_simplify_rtx', 'distribute_notes', 'eliminate_regs', 'emit_library_call_value_1', 'expand_expr', 'find_equiv_reg', 'find_reloads_address', 'force_to_mode', 'gen_reload', 'gen_sequence', 'local_alloc', 'protect_from_queue', 'purge_addressof_1', 'regmove_optimize', 'simplify_comparison', 'squeeze_notes', 'strength_reduce']
['emit_libcall_block', 'protect_from_queue', 'store_bit_field']
['adjust_address_1', 'constrain_operands', 'init_propagate_block_info', 'instantiate_virtual_regs']
['make_compound_operation', 'simplify_if_then_else']
['optimize_bit_field']
['unroll_loop']
['emit_no_conflict_block', 'schedule_block']
['emit_no_conflict_block', 'schedule_block']
['check_asm_stack_operands', 'cse_end_of_basic_block', 'expand_decl']
['check_asm_stack_operands', 'cse_end_of_basic_block', 'expand_decl']
['check_asm_stack_operands', 'find_split_point']
['check_asm_stack_operands', 'find_split_point']
['find_split_point']
['find_split_point']
['subst_stack_regs_pat']
['subst_stack_regs_pat']
['simplify_binary_operation']
['reload']
['reload']
['find_split_point']
['find_split_point']
['simplify_relational_operation']
['expand_abs', 'gen_lowpart_common', 'gen_lowpart_common']
['ix86_libcall_value']
['apply_distributive_law', 'known_cond', 'known_cond', 'standard_80387_constant_p']
['known_cond']
['noce_get_condition']
['simplify_replace_rtx']
['simplify_rtx']
['simplify_rtx', 'simplify_rtx']
['extract_left_shift', 'find_reloads_toplev', 'kill_value', 'noce_emit_cmove', 'replace_regs', 'replace_rtx', 'replace_rtx', 'simplify_rtx', 'simplify_rtx', 'write_dependence_p']
['known_cond', 'replace_rtx']
['simplify_rtx', 'simplify_rtx']
['extract_left_shift', 'find_reloads_toplev', 'kill_value', 'noce_emit_cmove', 'replace_regs', 'replace_rtx', 'replace_rtx', 'simplify_rtx', 'simplify_rtx', 'write_dependence_p']
['kill_value', 'known_cond', 'replace_rtx', 'simplify_rtx', 'simplify_rtx', 'true_regnum']
['simplify_rtx']
['simplify_shift_const']
['emit_store_flag']
['simplify_subreg']
['simplify_subreg']
['notreg_cost', 'simplify_giv_expr']
['notreg_cost']
['simplify_subtraction']
['simplify_subtraction']
['record_jump_cond', 'record_jump_cond']
['record_jump_cond', 'record_jump_cond']
['record_jump_cond', 'record_jump_cond']
['record_jump_cond', 'record_jump_cond']
['simplify_ternary_operation']
['simplify_unary_operation', 'simplify_unary_operation']
['simplify_unary_operation', 'simplify_unary_operation']
['simplify_unary_operation', 'simplify_unary_operation']
['init_emit_once']
['simplify_unary_operation']
['output_function_exception_table', 'range_binop']
['range_binop']
['size_int_type_wide']
['size_int_type_wide']
['size_int_type_wide']
['size_int_type_wide']
['size_int_type_wide', 'size_int_type_wide']
['size_int_type_wide']
['size_int_type_wide']
['size_int_type_wide']
['store_init_value']
['size_int_type_wide']
['size_int_type_wide', 'size_int_type_wide', 'size_int_type_wide']
['size_int_type_wide']
['size_int_type_wide', 'size_int_type_wide']
['lex_number', 'skip_escaped_newlines']
['skip_escaped_newlines']
['skip_escaped_newlines']
['add_data_member_location_attribute', 'add_data_member_location_attribute', 'dwarf2out_abstract_function', 'dwarf2out_abstract_function', 'dwarf2out_abstract_function', 'dwarf2out_abstract_function', 'gen_subprogram_die', 'gen_subprogram_die', 'gen_subprogram_die', 'gen_subroutine_type_die', 'gen_subroutine_type_die', 'gen_subroutine_type_die', 'gen_variable_die', 'gen_variable_die', 'gen_variable_die', 'get_AT', 'get_AT', 'get_AT_unsigned', 'get_AT_unsigned', 'get_AT_unsigned', 'get_AT_unsigned', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die', 'splice_child_die']
['splice_child_die']
['split_1']
['recog', 'recog_11', 'recog_11', 'recog_20', 'recog_22', 'recog_23', 'recog_24', 'recog_29', 'recog_29', 'recog_3', 'recog_5', 'split_1']
['split_1']
['recog_11', 'recog_11', 'recog_22', 'recog_23', 'recog_24', 'recog_7']
['split_1']
['split_1']
['peephole2_insns', 'recog_30', 'recog_5', 'recog_5']
['split_insns']
['split_1']
['recog', 'recog_1', 'recog_1', 'recog_1', 'recog_11', 'recog_21', 'recog_7', 'recog_7', 'recog_7']
['gen_sequence', 'protect_from_queue', 'squeeze_notes']
['split_all_insns']
['gen_sequence']
['optimize_bit_field']
['restore_line_notes']
['squeeze_notes']
['extract_insn', 'peephole2_insns', 'recog', 'split_insns']
['recog_18']
['split_insns']
['recog_18']
['split_insns']
['recog_30']
['recog_30']
['recog_11', 'recog_20', 'recog_20']
['peephole2_insns', 'peephole2_insns', 'recog_19', 'recog_21', 'recog_21', 'recog_30', 'recog_30', 'recog_30']
['peephole2_insns', 'recog_21', 'recog_21', 'recog_23', 'recog_30', 'recog_5', 'split_insns']
['split_insns']
['recog_3', 'recog_5']
['recog_23', 'recog_30', 'split_insns', 'split_insns', 'split_insns', 'split_insns']
['recog_29', 'recog_29']
['recog_11', 'recog_18', 'recog_2', 'recog_2']
['recog_23']
['constrain_operands', 'instantiate_virtual_regs']
['get_attr_type']
['purge_line_number_notes', 'purge_line_number_notes', 'purge_line_number_notes', 'scope_to_insns_initialize']
['purge_line_number_notes', 'purge_line_number_notes', 'purge_line_number_notes', 'scope_to_insns_initialize']
['restore_line_notes', 'restore_line_notes']
['restore_line_notes', 'restore_line_notes']
['simplify_relational_operation']
['rm_line_notes', 'rm_other_notes']
['rm_line_notes', 'rm_other_notes']
['purge_line_number_notes', 'purge_line_number_notes', 'purge_line_number_notes', 'scope_to_insns_initialize']
['squeeze_notes']
['rm_other_notes']
['rm_line_notes']
['rm_line_notes']
['rm_line_notes']
['rm_other_notes']
['reload', 'reposition_prologue_and_epilogue_notes']
['ssa_const_prop']
['force_nonfallthru_and_redirect']
['ssa_const_prop']
['ssa_const_prop', 'ssa_const_prop']
['convert_from_ssa', 'expand_function_end']
['convert_from_ssa', 'expand_function_end']
['convert_from_ssa', 'expand_function_end']
['new_optab', 'new_optab', 'reload_cse_regs', 'reload_cse_regs']
['new_optab', 'new_optab', 'reload_cse_regs', 'reload_cse_regs']
['print_value']
['next_tokenrun']
['next_tokenrun']
['find_mem_givs']
['cselib_record_sets']
['cse_main', 'emit_insns_after', 'gen_binary']
['initial_return_save', 'initial_return_save', 'initial_return_save', 'initial_return_save', 'initial_return_save', 'initial_return_save']
['output_loc_sequence']
['initial_return_save']
['modified_type_die']
['pointer_int_sum']
['num_sign_bit_copies', 'num_sign_bit_copies', 'num_sign_bit_copies', 'num_sign_bit_copies']
['num_sign_bit_copies', 'num_sign_bit_copies', 'num_sign_bit_copies', 'num_sign_bit_copies']
['start_init']
['start_init']
['start_init']
['finish_init']
['start_init']
['start_init', 'start_init']
['push_init_level', 'start_init', 'start_init']
['start_init', 'start_init']
['push_array_bounds']
['start_init', 'start_init']
['push_init_level', 'start_init', 'start_init']
['start_init', 'start_init']
['c_sizeof']
['push_init_level']
['staticp']
['staticp']
['std_expand_builtin_va_arg']
['std_expand_builtin_va_arg']
['make_tree', 'std_expand_builtin_va_start']
['std_expand_builtin_va_start']
['std_expand_builtin_va_start']
['std_expand_builtin_va_start']
['decompose', 'reload']
['expand_goto', 'reposition_prologue_and_epilogue_notes', 'strength_reduce']
['move_movables']
['visit_expression']
['fold_rtx', 'if_convert', 'mem_loc_descriptor']
['assign_parms', 'expand_call', 'expand_mult_add', 'ix86_va_start', 'make_tree', 'make_tree', 'make_tree', 'make_tree', 'store_constructor']
['change_address']
['simplify_binary_operation']
['copy_eh_notes', 'expand_function_end', 'find_base_value', 'move_movables', 'scope_to_insns_initialize', 'strength_reduce', 'strength_reduce', 'subst_stack_regs_pat']
['delete_noop_moves', 'subst_stack_regs_pat']
['emit_store_flag_force']
['store_expr']
['store_expr']
['combine_regs', 'expand_increment', 'find_replacement', 'peephole2_optimize']
['combine_regs', 'expand_increment', 'find_replacement', 'peephole2_optimize']
['widen_operand']
['expand_inline_function']
['store_init_value']
['record_constant_1']
['store_parm_decls']
['do_jump_by_parts_equality_rtx', 'do_jump_by_parts_equality_rtx', 'do_jump_by_parts_equality_rtx', 'do_jump_by_parts_equality_rtx', 'do_jump_by_parts_equality_rtx', 'do_jump_by_parts_equality_rtx', 'extract_split_bit_field', 'extract_split_bit_field', 'store_split_bit_field', 'store_split_bit_field']
['do_jump_by_parts_equality_rtx', 'do_jump_by_parts_equality_rtx', 'do_jump_by_parts_equality_rtx', 'do_jump_by_parts_equality_rtx', 'do_jump_by_parts_equality_rtx', 'do_jump_by_parts_equality_rtx', 'extract_split_bit_field', 'extract_split_bit_field', 'store_split_bit_field', 'store_split_bit_field']
['extract_split_bit_field', 'store_split_bit_field']
['extract_split_bit_field', 'store_split_bit_field']
['adjust_address_1', 'apply_distributive_law', 'eliminate_regs']
['regmove_optimize', 'subst_asm_stack_regs']
['ix86_split_long_move', 'simplify_giv_expr', 'simplify_if_then_else']
['find_split_point']
['combine_instructions', 'compute_forward_dependences', 'copy_loop_body', 'copy_loop_body', 'cse_basic_block', 'cse_insn', 'expand_expr', 'expand_function_end', 'find_reloads_address', 'fixup_var_refs_1', 'fixup_var_refs_1', 'if_convert', 'loop_iterations', 'optimize_sibling_and_tail_recursive_calls', 'output_addr_const', 'regmove_optimize', 'reload_cse_regs', 'simplify_binary_operation']
['find_split_point', 'unroll_loop']
['local_alloc', 'strength_reduce']
['change_address_1', 'get_attr_prefix_0f', 'maybe_eliminate_biv_1', 'subst_asm_stack_regs', 'visit_expression']
['emit_libcall_block', 'expand_function_end', 'if_convert', 'optimize_sibling_and_tail_recursive_calls', 'optimize_sibling_and_tail_recursive_calls', 'reload', 'reload', 'sched_init']
['gcse_main']
['subreg_hard_regno']
['subreg_regno']
['subreg_regno', 'true_regnum']
['cselib_lookup']
['find_oldest_value_reg']
['save_call_clobbered_regs']
['find_oldest_value_reg']
['subreg_regno_offset', 'subreg_regno_offset']
['combine_regs', 'cse_insn', 'cse_insn', 'decompose', 'expand_field_assignment', 'find_reloads_address', 'ix86_split_fp_branch', 'local_alloc', 'loop_optimize', 'move_deaths', 'move_movables', 'protect_from_queue', 'regmove_optimize', 'reload', 'reload', 'store_bit_field', 'store_expr']
['delete_output_reload']
['init_alias_analysis']
['copy_loop_body', 'expand_expr', 'if_convert', 'loop_iterations', 'optimize_sibling_and_tail_recursive_calls']
['find_reloads_address', 'move_movables']
['expand_expr', 'local_alloc', 'move_movables', 'nonoverlapping_memrefs_p']
['expand_expr']
['canonicalize_condition']
['refers_to_regno_p']
['find_split_point']
['constrain_operands', 'optimize_sibling_and_tail_recursive_calls', 'optimize_sibling_and_tail_recursive_calls', 'strength_reduce']
['constrain_operands', 'get_AT_unsigned', 'init_alias_analysis', 'instantiate_virtual_regs', 'optimize_sibling_and_tail_recursive_calls']
['instantiate_virtual_regs']
['expand_end_case_type', 'subst_asm_stack_regs']
['find_equiv_reg']
['reload', 'rm_other_notes', 'simplify_plus_minus', 'subst_stack_regs_pat', 'subst_stack_regs_pat']
['apply_distributive_law', 'eliminate_regs', 'expand_end_case_type', 'find_split_point', 'for_each_insn_in_loop', 'optimize_bit_field', 'subst_asm_stack_regs', 'subst_stack_regs_pat', 'subst_stack_regs_pat', 'subst_stack_regs_pat']
['subst_asm_stack_regs']
['combine_simplify_rtx', 'rm_line_notes', 'subst_asm_stack_regs', 'subst_asm_stack_regs', 'unroll_loop']
['move_movables']
['find_reloads_address_1']
['find_reloads_address_1', 'instantiate_virtual_regs_1']
['verify_flow_info']
['find_reloads_address_1']
['subst_constants']
['subst_constants']
['find_split_point']
['find_reloads_address', 'reposition_prologue_and_epilogue_notes', 'store_expr', 'store_expr']
['constrain_operands', 'find_equiv_reg', 'if_convert', 'optimize_sibling_and_tail_recursive_calls', 'simplify_plus_minus', 'strength_reduce', 'subst_asm_stack_regs', 'subst_stack_regs_pat']
['delete_output_reload', 'find_equiv_reg', 'if_convert', 'reload', 'rm_other_notes', 'simplify_plus_minus', 'strength_reduce', 'subst_asm_stack_regs', 'subst_stack_regs_pat']
['instantiate_virtual_regs_1', 'schedule_block']
['expand_end_case_type', 'find_split_point']
['subst_stack_regs_pat']
['compute_forward_dependences', 'df_uses_record', 'expand_expr', 'expected_value_to_br_prob', 'fold_rtx', 'instantiate_virtual_regs_1', 'ix86_split_fp_branch', 'ix86_split_long_move', 'make_extraction', 'move_movables', 'record_value_for_reg', 'regmove_optimize', 'reload', 'scan_loop', 'simplify_comparison', 'simplify_comparison', 'split_all_insns', 'subst_asm_stack_regs', 'visit_expression']
['fixup_var_refs_1']
['fixup_var_refs_1']
['swap_rtx_condition']
['back_branch_in_range_p', 'canonicalize_condition', 'check_insn_for_givs', 'combine_simplify_rtx', 'copy_insn_list', 'copy_loop_body', 'eliminate_regs', 'emit_library_call_value_1', 'expand_expr', 'extract_bit_field', 'find_base_value', 'find_reloads_address', 'for_each_insn_in_loop', 'force_to_mode', 'gen_reload', 'gen_reload', 'get_attr_prefix_0f', 'init_propagate_block_info', 'ix86_split_long_move', 'local_alloc', 'nonoverlapping_memrefs_p', 'nonoverlapping_memrefs_p', 'protect_from_queue', 'purge_addressof_1', 'restore_line_notes', 'rm_line_notes', 'rm_other_notes', 'scan_loop', 'scan_loop', 'scan_loop', 'swap_rtx_condition', 'try_copy_prop', 'unroll_loop', 'unroll_loop', 'visit_expression']
['swap_rtx_condition']
['swap_rtx_condition']
['swap_rtx_condition']
['swap_rtx_condition']
['swap_rtx_condition']
['swap_rtx_condition']
['cfg_layout_finalize', 'compute_transp', 'expand_decl', 'expand_decl', 'find_base_value', 'find_base_value', 'find_basic_blocks', 'get_AT_unsigned', 'mark_referenced_regs', 'purge_line_number_notes', 'rm_line_notes', 'rm_other_notes', 'splice_child_die', 'swap_rtx_condition', 'try_copy_prop']
['swap_rtx_condition']
['swap_rtx_condition_1']
['text_section']
['text_section']
['branch_prob', 'commit_edge_insertions', 'convert_regs_2', 'if_convert', 'thread_prologue_and_epilogue_insns']
['gen_reload']
['ix86_split_fp_branch', 'move_deaths', 'store_bit_field', 'store_expr']
['copy_insn_list', 'cse_insn', 'loop_iterations', 'store_expr']
['thread_prologue_and_epilogue_insns']
['subst_stack_regs_pat']
['get_attr_type']
['find_equiv_reg', 'if_convert', 'optimize_sibling_and_tail_recursive_calls', 'simplify_plus_minus', 'strength_reduce', 'subst_asm_stack_regs']
['find_split_point', 'init_alias_analysis']
['check_asm_stack_operands', 'find_split_point', 'strength_reduce']
['timevar_pop']
['timevar_pop']
['timevar_pop']
['timevar_print', 'timevar_push']
['biv_total_increment', 'timevar_pop', 'update_life_info', 'update_life_info']
['timevar_pop']
['timevar_print', 'timevar_push']
['timevar_pop']
['process_init_element']
['timevar_pop']
['timevar_push']
['emit_libcall_block', 'emit_libcall_block']
['toplev_main']
['safe_from_p']
['print_switch_values']
['find_free_reg']
['build_complex_type']
['display_target_options']
['display_target_options']
['print_version']
['mark_used_reg']
['read_integral_parameter']
['maybe_read_dollar_number']
['asm_fprintf', 'read_integral_parameter']
['toplev_main']
['scan_loop']
['alter_reg']
['alter_reg']
['copy_insn_1', 'rm_other_notes']
['alter_reg']
['alter_reg']
['copy_insn_1', 'rm_other_notes']
['init_propagate_block_info', 'try_copy_prop']
['force_nonfallthru_and_redirect']
['print_operand_address']
['find_base_term']
['back_branch_in_range_p', 'check_asm_stack_operands', 'convert_regs_2', 'copy_insn_list', 'cse_basic_block', 'distribute_notes', 'expand_expr', 'find_base_value', 'find_split_point', 'instantiate_virtual_regs_1', 'local_alloc', 'local_alloc', 'local_alloc', 'move_movables', 'nonoverlapping_memrefs_p', 'optimize_sibling_and_tail_recursive_calls', 'regmove_optimize', 'restore_line_notes', 'rm_line_notes', 'rm_other_notes', 'scan_loop', 'simplify_comparison', 'simplify_comparison', 'swap_rtx_condition', 'unroll_loop']
['protect_from_queue']
['swap_rtx_condition']
['find_base_term']
['find_base_term']
['find_base_term', 'find_base_term']
['find_base_term', 'find_base_term']
['true_dependence']
['find_base_term']
['find_base_term']
['kill_value', 'known_cond', 'replace_rtx', 'simplify_rtx', 'simplify_rtx', 'true_regnum']
['subreg_regno', 'true_regnum']
['get_narrower']
['truthvalue_conversion']
['field_byte_offset']
['loop_optimize', 'nonoverlapping_memrefs_p']
['cse_insn']
['cse_insn', 'ix86_split_fp_branch', 'local_alloc', 'move_deaths', 'reload_cse_regs', 'store_bit_field', 'store_expr', 'subst_stack_regs_pat']
['copy_loop_headers', 'eliminate_regs_in_insn', 'find_reloads_address_1', 'mark_used_regs', 'optimize_sibling_and_tail_recursive_calls']
['copy_loop_headers', 'eliminate_regs_in_insn', 'find_reloads_address_1', 'mark_used_regs', 'optimize_sibling_and_tail_recursive_calls']
['eliminate_regs_in_insn', 'emit_group_store', 'reload_as_needed', 'reload_cse_regs']
['eliminate_regs_in_insn', 'emit_group_store', 'reload_as_needed', 'reload_cse_regs']
['regmove_optimize']
['nonoverlapping_memrefs_p', 'scan_loop', 'try_copy_prop', 'unroll_loop']
['subst_stack_regs_pat']
['try_copy_prop']
['move_by_pieces']
['gen_sequence']
['canonicalize_condition', 'get_AT_unsigned', 'reload_combine_note_use']
['init_propagate_block_info', 'init_propagate_block_info', 'init_propagate_block_info']
['init_propagate_block_info', 'init_propagate_block_info', 'init_propagate_block_info']
['init_propagate_block_info', 'init_propagate_block_info', 'init_propagate_block_info']
['init_propagate_block_info']
['plus_constant_wide']
['ix86_split_long_move', 'scan_loop', 'visit_expression']
['emit_no_conflict_block', 'try_copy_prop']
['recog_for_combine']
['cfg_layout_finalize', 'compute_transp', 'expand_decl', 'expand_decl', 'find_base_value', 'find_base_value', 'find_basic_blocks', 'get_AT_unsigned', 'mark_referenced_regs', 'rm_line_notes', 'rm_other_notes', 'splice_child_die', 'swap_rtx_condition', 'try_copy_prop']
['init_propagate_block_info', 'try_copy_prop']
['constrain_operands']
['emit_group_store', 'find_reloads_address_1', 'record_giv', 'reload_cse_regs', 'thread_prologue_and_epilogue_insns', 'thread_prologue_and_epilogue_insns']
['commit_edge_insertions']
['doloop_modify', 'operands_match_p', 'reg_overlap_mentioned_for_reload_p', 'rtx_renumbered_equal_p', 'subreg_regno', 'try_split', 'try_split']
['try_tablejump']
['try_tablejump']
['try_tablejump']
['try_tablejump']
['try_tablejump']
['try_tablejump']
['try_tablejump']
['try_tablejump']
['try_tablejump']
['type_lists_compatible_p']
['do_SUBST', 'do_SUBST', 'recog_for_combine', 'recog_for_combine']
['do_SUBST', 'recog_for_combine']
['do_SUBST', 'recog_for_combine']
['do_SUBST', 'recog_for_combine']
['undo_all']
['get_attr_prefix_0f']
['nonoverlapping_memrefs_p', 'scan_loop', 'try_copy_prop', 'unroll_loop']
['cfg_layout_finalize', 'copy_loop_body', 'cse_main', 'get_attr_prefix_0f', 'get_attr_prefix_0f', 'get_attr_prefix_0f', 'get_attr_type', 'mark_referenced_regs', 'squeeze_notes', 'unroll_loop']
['check_asm_stack_operands', 'combine_simplify_rtx', 'copy_insn_list', 'copy_loop_body', 'copy_loop_body', 'cse_insn', 'dead_or_predicable', 'eliminate_regs', 'emit_library_call_value_1', 'expand_expr', 'expand_expr', 'expand_expr', 'expand_expr', 'final_scan_insn', 'find_reloads_address', 'find_reloads_address', 'force_to_mode', 'gen_reload', 'if_convert', 'if_convert', 'init_alias_analysis', 'ix86_split_fp_branch', 'ix86_split_fp_branch', 'local_alloc', 'loop_iterations', 'loop_iterations', 'loop_iterations', 'make_extraction', 'move_movables', 'move_movables', 'move_movables', 'nonoverlapping_memrefs_p', 'optimize_sibling_and_tail_recursive_calls', 'optimize_sibling_and_tail_recursive_calls', 'purge_addressof_1', 'purge_addressof_1', 'record_giv', 'record_value_for_reg', 'subst_asm_stack_regs']
['simplify_comparison']
['nonoverlapping_memrefs_p']
['move_movables']
['distribute_notes']
['assign_parms']
['force_nonfallthru_and_redirect']
['lookup_field']
['record_constant_1']
['check_insn_for_givs', 'extract_bit_field', 'protect_from_queue']
['adjust_address_1']
['rm_line_notes']
['unsigned_type']
['unsigned_type']
['unsigned_type']
['unsigned_type']
['unsigned_type']
['update_life_info']
['override_options']
['update_life_info', 'update_life_info']
['update_life_info', 'update_life_info']
['update_life_info']
['update_life_info', 'update_life_info', 'update_life_info', 'update_life_info']
['update_life_info', 'update_life_info', 'update_life_info', 'update_life_info']
['update_life_info', 'update_life_info', 'update_life_info', 'update_life_info']
['update_life_info', 'update_life_info', 'update_life_info', 'update_life_info']
['move_deaths']
['compute_forward_dependences', 'output_addr_const']
['eliminate_regs']
['recog_for_combine']
['instantiate_decl']
['mark_set_1']
['validate_change']
['check_asm_stack_operands', 'optimize_sibling_and_tail_recursive_calls', 'record_giv', 'visit_expression']
['find_reloads_address_1']
['find_reloads_address_1']
['output_addr_const']
['emit_insns_after', 'gen_binary', 'output_addr_const', 'rm_line_notes', 'rm_line_notes', 'rm_line_notes', 'rm_line_notes', 'simplify_relational_operation']
['find_base_value', 'find_base_value', 'for_each_insn_in_loop', 'for_each_insn_in_loop', 'gen_binary', 'restore_line_notes', 'rm_line_notes', 'squeeze_notes']
['cse_end_of_basic_block']
['find_base_value', 'find_base_value', 'for_each_insn_in_loop', 'for_each_insn_in_loop', 'gen_binary', 'restore_line_notes', 'rm_line_notes', 'squeeze_notes']
['assemble_variable', 'assemble_zeros']
['data_section']
['data_section']
['data_section']
['assemble_variable', 'assemble_zeros']
['bss_section', 'text_section']
['output_constant_def_contents']
['reload_cse_regs', 'store_expr']
['verify_flow_info']
['verify_flow_info']
['verify_flow_info']
['verify_flow_info']
['verify_flow_info']
['verify_flow_info']
['verify_flow_info']
['verify_flow_info']
['gen_type_die', 'gen_type_die']
['gen_type_die', 'gen_type_die']
['build_nt', 'build_stmt']
['reachable_next_level', 'size_int_type_wide']
['build_nt', 'build_nt', 'build_nt', 'build_stmt', 'build_stmt', 'build_stmt', 'gen_type_die', 'gen_type_die', 'gen_type_die', 'has_cleanups', 'has_cleanups', 'has_cleanups', 'inlinable_function_p', 'inlinable_function_p', 'inlinable_function_p']
['get_attr_prefix_0f']
['for_each_insn_in_loop']
['copy_insn_list', 'copy_loop_body', 'dead_or_predicable', 'eliminate_regs', 'expand_end_case_type', 'expand_expr', 'if_convert', 'init_alias_analysis', 'purge_addressof_1', 'unroll_loop']
['apply_distributive_law', 'compute_forward_dependences', 'cse_insn', 'cse_insn', 'eliminate_regs', 'expand_end_case_type', 'expand_expr', 'find_reloads_address', 'gen_binary', 'loop_iterations', 'memrefs_conflict_p', 'move_movables', 'purge_addressof_1', 'reload_cse_regs']
['expand_expr', 'local_alloc', 'move_movables', 'nonoverlapping_memrefs_p']
['eliminate_regs', 'get_attr_type', 'mark_referenced_regs', 'visit_expression']
['find_equiv_reg']
['visit_expression']
['walk_tree']
['walk_tree', 'walk_tree']
['walk_tree', 'walk_tree']
['walk_tree', 'walk_tree']
['walk_tree', 'walk_tree']
['want_to_gcse_p']
['want_to_gcse_p']
['want_to_gcse_p']
['want_to_gcse_p']
['want_to_gcse_p']
['want_to_gcse_p']
['push_array_bounds', 'push_member_name', 'spelling_length']
['print_spelling', 'spelling_length']
['widen_operand']
['wipe_dead_reg']
['wipe_dead_reg']
['wipe_dead_reg']
['wipe_dead_reg']
['wipe_dead_reg']
['wipe_dead_reg', 'wipe_dead_reg']
['gen_mem_addressof', 'wipe_dead_reg']
['wipe_dead_reg', 'wipe_dead_reg']
['wipe_dead_reg']
['find_base_term']
['find_base_term']
['find_base_term']
['find_base_term', 'find_base_term']
['find_base_term', 'find_base_term']
['extract_left_shift', 'find_reloads_toplev', 'kill_value', 'noce_emit_cmove', 'replace_regs', 'replace_rtx', 'replace_rtx', 'simplify_rtx', 'simplify_rtx', 'write_dependence_p']
['write_dependence_p']
['general_operand']
['general_operand']
['xexit']
['xstrerror']
['yyerror']
['yylex']
['yylex']
