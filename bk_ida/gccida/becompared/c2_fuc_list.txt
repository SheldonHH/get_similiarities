['_cpp_append_extend_buff']
['error', 'error_with_file_and_line', 'internal_error', 'pedwarn', 'pedwarn_with_file_and_line', 'warning', 'warning_with_file_and_line']
['internal_error']
['internal_error']
['internal_error']
['c_alignof_expr', 'c_alignof_expr']
['error', 'error_with_file_and_line', 'internal_error', 'pedwarn', 'pedwarn_with_file_and_line', 'warning', 'warning_with_file_and_line']
['rtl_for_decl_location']
['_cpp_extend_buff']
['_cpp_get_buff']
['_cpp_get_buff']
['_cpp_lex_token', '_cpp_temp_token']
['maybe_read_dollar_number']
['_cpp_unaligned_alloc']
['_cpp_unaligned_alloc']
['_cpp_lex_token', '_cpp_temp_token']
['_cpp_lex_token', '_cpp_temp_token']
['_cpp_temp_token']
['_cpp_temp_token']
['_cpp_unaligned_alloc']
['add_AT_location_description']
['get_frame_alias_set', 'output_addressed_constants']
['add_bound_info']
['expand_mult_add', 'expand_shift', 'ix86_va_start', 'ix86_va_start', 'ix86_va_start', 'ix86_va_start', 'make_tree', 'std_expand_builtin_va_start']
['ggc_mark_trees', 'walk_tree']
['apply_args_size']
['add_location_or_const_value_attribute']
['add_dependence']
['add_double']
['add_double']
['sched_analyze_1', 'sched_analyze_1']
['dwarf2out_frame_debug']
['add_fde_cfi']
['dwarf2out_frame_debug']
['add_fde_cfi', 'dwarf2out_frame_debug', 'dwarf2out_frame_debug']
['add_location_or_const_value_attribute']
['ggc_mark_trees']
['record_one_set']
['add_pending_init']
['gen_block_die']
['peephole2_optimize']
['compute_transp']
['ereal_from_int', 'ereal_from_uint', 'nonzero_bits']
['convert_move']
['shadow_tag_warned', 'store_parm_decls', 'store_parm_decls']
['emit_libcall_block']
['alloc_gcse_mem', 'refers_to_regno_p']
['copy_loop_body', 'eliminate_regs_in_insn', 'emit_library_call_value_1', 'record_giv']
['adjust_address_1', 'apply_distributive_law', 'expand_function_end', 'init_propagate_block_info', 'legitimize_address', 'mark_set_1', 'mark_used_regs', 'memrefs_conflict_p', 'purge_line_number_notes', 'reload']
['expand_field_assignment']
['copy_loop_headers', 'delete_output_reload', 'expand_decl', 'hash_scan_set', 'loop_optimize', 'make_compound_operation', 'make_extraction', 'maybe_eliminate_biv_1']
['adjust_address_1', 'global_alloc', 'global_alloc', 'set_mem_attributes', 'set_mem_attributes']
['adjust_address_1', 'global_alloc', 'global_alloc', 'set_mem_attributes', 'set_mem_attributes']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'cselib_process_insn', 'dw2_asm_output_encoded_addr_rtx', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_eh_return', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_force_to_memory', 'ix86_force_to_memory', 'load_pic_register', 'output_cfi', 'output_constant_def', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'trampoline_address', 'trampoline_address']
['aggregate_value_p']
['compute_transp', 'compute_transp']
['alloc_aux_for_blocks']
['alloc_aux_for_blocks']
['alloc_aux_for_edges']
['alloc_aux_for_edges']
['alloc_block']
['alloc_block']
['alloc_block']
['alloc_block']
['alloc_block']
['alloc_block']
['alloc_block']
['_cpp_lex_token', '_cpp_temp_token']
['alloc_EXPR_LIST']
['alloc_gcse_mem']
['alloc_gcse_mem', 'refers_to_regno_p']
['alloc_gcse_mem']
['alloc_gcse_mem']
['alloc_gcse_mem']
['alloc_gcse_mem']
['alloc_gcse_mem']
['alloc_gcse_mem']
['alloc_gcse_mem']
['alloc_gcse_mem']
['record_one_set', 'record_one_set']
['branch_prob', 'expand_stmt', 'process_init_element', 'process_init_element']
['set_diagnostic_context']
['ggc_alloc']
['ggc_alloc']
['combine_regs']
['combine_regs']
['combine_regs']
['combine_regs']
['combine_regs']
['insert_regs']
['combine_regs']
['cleanup_barriers']
['can_throw_external', 'can_throw_internal']
['can_throw_external', 'can_throw_internal']
['insert_regs']
['combine_instructions']
['allocate_dynamic_stack_space']
['allocate_dynamic_stack_space']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'cselib_process_insn', 'dw2_asm_output_encoded_addr_rtx', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_eh_return', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_force_to_memory', 'ix86_force_to_memory', 'load_pic_register', 'output_cfi', 'output_constant_def', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'trampoline_address', 'trampoline_address']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'cselib_process_insn', 'dw2_asm_output_encoded_addr_rtx', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_eh_return', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_force_to_memory', 'ix86_force_to_memory', 'load_pic_register', 'output_cfi', 'output_constant_def', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'trampoline_address', 'trampoline_address']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'cselib_process_insn', 'dw2_asm_output_encoded_addr_rtx', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_eh_return', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_force_to_memory', 'ix86_force_to_memory', 'load_pic_register', 'output_cfi', 'output_constant_def', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'trampoline_address', 'trampoline_address']
['allocate_dynamic_stack_space']
['allocate_dynamic_stack_space']
['allocate_dynamic_stack_space']
['allocate_reg_info']
['allocate_reg_info', 'reg_alternate_class', 'reg_preferred_class']
['allocate_reg_info', 'regclass']
['simplify_subreg']
['convert_move']
['qty_sugg_compare', 'qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare']
['emit_cmp_and_jump_insns', 'num_sign_bit_copies']
['qty_sugg_compare', 'qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare']
['num_sign_bit_copies']
['alter_reg']
['alter_reg']
['alter_reg']
['alter_subreg']
['announce_function']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'cselib_process_insn', 'dw2_asm_output_encoded_addr_rtx', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_eh_return', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_force_to_memory', 'ix86_force_to_memory', 'load_pic_register', 'output_cfi', 'output_constant_def', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'trampoline_address', 'trampoline_address']
['get_file_function_name_long']
['get_file_function_name_long']
['get_file_function_name_long']
['get_file_function_name_long']
['get_file_function_name_long']
['get_file_function_name_long']
['get_file_function_name_long']
['get_file_function_name_long']
['get_file_function_name_long']
['get_file_function_name_long']
['get_file_function_name_long']
['apply_args_size']
['apply_args_size']
['apply_args_size']
['apply_args_size']
['apply_args_size']
['mark_effect', 'mark_effect', 'mark_reg', 'reload_combine_note_use']
['apply_args_size']
['apply_args_size']
['apply_args_size', 'apply_args_size']
['apply_args_size', 'apply_args_size']
['apply_args_size', 'apply_args_size']
['apply_change_group']
['apply_change_group', 'loop_optimize']
['apply_change_group']
['apply_change_group']
['apply_change_group', 'apply_change_group']
['apply_change_group']
['apply_change_group']
['apply_change_group', 'apply_change_group']
['apply_change_group', 'apply_change_group']
['apply_change_group', 'apply_change_group']
['apply_change_group', 'apply_change_group']
['apply_change_group', 'apply_change_group']
['apply_delayed_renames']
['apply_distributive_law', 'copy_insn_list']
['apply_distributive_law']
['apply_distributive_law', 'copy_loop_headers']
['apply_distributive_law', 'instantiate_virtual_regs_1', 'record_value_for_reg']
['apply_distributive_law']
['apply_distributive_law']
['apply_distributive_law']
['apply_distributive_law']
['apply_distributive_law']
['apply_distributive_law', 'apply_distributive_law']
['apply_distributive_law', 'apply_distributive_law']
['apply_distributive_law', 'apply_distributive_law']
['apply_distributive_law', 'apply_distributive_law']
['apply_result_size']
['apply_result_size']
['apply_result_size']
['apply_result_size']
['apply_result_size']
['apply_result_size', 'apply_result_size']
['apply_result_size', 'apply_result_size']
['apply_result_size']
['apply_result_size']
['apply_result_size']
['build_array_type', 'store_init_value', 'string_constant']
['output_asm_insn']
['output_asm_insn']
['read_filename_string']
['check_format_info_recurse', 'lex_number']
['emit_group_load', 'record_constant_1']
['emit_group_load', 'record_constant_1']
['refers_to_regno_p']
['assemble_variable', 'output_constant', 'output_constant_def_contents', 'output_constructor', 'output_constructor', 'output_constructor', 'output_constructor']
['assemble_variable', 'output_constant', 'output_constant_def_contents', 'output_constructor', 'output_constructor', 'output_constructor', 'output_constructor']
['expand_goto']
['assemble_variable', 'output_constant', 'output_constant_def_contents', 'output_constructor', 'output_constructor', 'output_constructor', 'output_constructor']
['assemble_variable', 'output_constant', 'output_constant_def_contents', 'output_constructor', 'output_constructor', 'output_constructor', 'output_constructor']
['output_constant_def_contents', 'variable_section']
['output_constant_def_contents', 'variable_section']
['asm_fprintf']
['asm_fprintf']
['asm_operand_ok']
['asm_operand_ok']
['asm_operand_ok']
['output_constructor']
['form_sum', 'form_sum']
['assemble_end_function', 'assemble_end_function']
['assemble_end_function', 'assemble_end_function']
['assemble_end_function', 'assemble_end_function']
['assemble_end_function', 'assemble_end_function']
['assemble_start_function', 'function_section']
['assemble_start_function', 'function_section']
['assemble_start_function']
['dw2_asm_output_nstring', 'dw2_asm_output_nstring']
['dw2_asm_output_nstring']
['dw2_asm_output_nstring', 'dw2_asm_output_nstring']
['dw2_asm_output_nstring', 'dw2_asm_output_nstring']
['assemble_variable']
['assemble_variable']
['assemble_variable']
['assemble_variable', 'assemble_variable']
['assemble_variable']
['assemble_variable', 'assemble_variable']
['assemble_variable']
['assemble_variable', 'output_constant', 'output_constructor', 'output_constructor', 'output_constructor', 'output_constructor']
['assemble_variable']
['assemble_variable']
['assemble_variable']
['output_constructor', 'output_constructor', 'output_constructor']
['assign_parms']
['assign_parms']
['assign_parms']
['build_compound_literal']
['build_compound_literal']
['insn_default_length']
['get_attr_athlon_decode']
['insn_current_length']
['get_attr_athlon_decode', 'insn_current_length']
['insn_current_length']
['insn_current_length', 'insn_default_length']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['insn_current_length']
['get_attr_memory']
['get_attr_pent_pair']
['get_attr_type']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_prefix_0f']
['get_attr_imm_disp', 'get_attr_length_immediate', 'get_attr_modrm', 'get_attr_pent_pair', 'get_attr_type']
['get_attr_memory']
['get_attr_pent_pair']
['get_attr_length_immediate']
['get_attr_length_immediate', 'get_attr_length_immediate']
['get_attr_length_immediate', 'get_attr_length_immediate']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_type']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_imm_disp', 'get_attr_length_immediate', 'get_attr_modrm', 'get_attr_pent_pair', 'get_attr_type']
['get_attr_memory']
['get_attr_memory']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['insn_default_length']
['insn_default_length']
['get_attr_memory']
['get_attr_pent_pair']
['get_attr_type']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_prefix_0f']
['get_attr_imm_disp', 'get_attr_length_immediate', 'get_attr_modrm', 'get_attr_pent_pair', 'get_attr_type']
['get_attr_memory']
['get_attr_pent_pair']
['get_attr_length_immediate']
['get_attr_length_immediate', 'get_attr_length_immediate']
['get_attr_length_immediate', 'get_attr_length_immediate']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_type']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_imm_disp', 'get_attr_length_immediate', 'get_attr_modrm', 'get_attr_pent_pair', 'get_attr_type']
['get_attr_memory']
['get_attr_memory']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['insn_default_length']
['get_attr_memory']
['get_attr_length_immediate', 'get_attr_length_immediate', 'get_attr_memory']
['get_attr_type']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_prefix_0f']
['get_attr_imm_disp', 'get_attr_length_immediate', 'get_attr_modrm', 'get_attr_pent_pair', 'get_attr_type']
['get_attr_memory']
['get_attr_length_immediate']
['get_attr_length_immediate', 'get_attr_pent_pair']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_length_immediate', 'get_attr_length_immediate', 'get_attr_memory', 'get_attr_pent_pair']
['get_attr_length_immediate', 'get_attr_length_immediate', 'get_attr_memory']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_prefix_rep', 'insn_current_length', 'insn_default_length']
['insn_current_length']
['insn_current_length', 'insn_default_length']
['get_attr_athlon_decode']
['insn_current_length']
['insn_current_length', 'insn_default_length']
['get_attr_athlon_decode', 'get_attr_athlon_decode', 'get_attr_athlon_decode', 'get_attr_pent_pair']
['get_attr_memory']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['insn_current_length']
['get_attr_pent_pair']
['function_units_used']
['function_units_used']
['insn_current_length', 'insn_default_length']
['get_attr_memory']
['get_attr_athlon_decode', 'get_attr_athlon_decode', 'get_attr_athlon_decode']
['get_attr_memory']
['insn_current_length', 'insn_default_length']
['offset_address']
['break_out_memory_refs', 'break_out_memory_refs', 'expand_builtin_return_addr', 'ix86_function_value', 'simplify_replace_rtx']
['peephole2_optimize']
['find_replacement']
['simplify_rtx']
['peephole2_optimize']
['peep2_reg_dead_p']
['ix86_split_to_parts']
['bitmap_clear', 'bitmap_initialize']
['bitmap_clear_bit']
['bitmap_copy', 'bitmap_operation']
['bitmap_copy']
['cpp_push_buffer']
['splay_tree_insert']
['bitmap_clear_bit']
['bitmap_equal_p']
['bitmap_clear', 'bitmap_initialize']
['bitmap_copy', 'bitmap_operation']
['bitmap_operation']
['bitmap_operation']
['bitmap_operation']
['record_value_for_reg']
['bitmap_set_bit', 'run_directive']
['bitmap_set_bit']
['biv_total_increment', 'biv_total_increment']
['biv_total_increment', 'biv_total_increment']
['biv_total_increment']
['biv_total_increment']
['biv_total_increment']
['biv_total_increment']
['biv_total_increment', 'biv_total_increment']
['biv_total_increment', 'biv_total_increment']
['biv_total_increment', 'biv_total_increment']
['biv_total_increment', 'biv_total_increment']
['biv_total_increment']
['alloc_gcse_mem', 'life_analysis', 'life_analysis', 'move_deaths']
['scan_one_insn']
['scan_one_insn']
['scan_one_insn']
['check_asm_stack_operands', 'cleanup_subreg_operands', 'cleanup_subreg_operands', 'constrain_operands', 'find_matches', 'ix86_attr_length_immediate_default', 'preprocess_constraints', 'preprocess_constraints', 'reload_cse_simplify_operands', 'reload_cse_simplify_operands', 'reload_cse_simplify_operands']
['extract_insn', 'split_2']
['preprocess_constraints']
['get_attr_prefix_0f']
['check_asm_stack_operands', 'cleanup_subreg_operands', 'cleanup_subreg_operands', 'constrain_operands', 'find_matches', 'ix86_attr_length_immediate_default', 'preprocess_constraints', 'preprocess_constraints', 'reload_cse_simplify_operands', 'reload_cse_simplify_operands', 'reload_cse_simplify_operands']
['scan_one_insn']
['scan_one_insn']
['reload_cse_simplify_operands', 'reload_cse_simplify_operands']
['reload_cse_simplify_operands', 'reload_cse_simplify_operands']
['get_attr_modrm', 'get_attr_pent_pair', 'get_attr_prefix_0f', 'get_attr_prefix_0f', 'get_attr_prefix_0f', 'insn_default_length', 'insn_default_length', 'insn_default_length']
['extract_insn']
['reload_cse_simplify_operands']
['adjust_address_1', 'copy_insn_list', 'emit_library_call_value_1', 'expand_decl', 'extract_bit_field', 'global_alloc', 'noce_get_alt_condition', 'store_bit_field', 'strength_reduce', 'subst_constants']
['branch_prob']
['break_out_memory_refs', 'break_out_memory_refs']
['break_out_memory_refs']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'cselib_process_insn', 'dw2_asm_output_encoded_addr_rtx', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_eh_return', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_force_to_memory', 'ix86_force_to_memory', 'load_pic_register', 'output_cfi', 'output_constant_def', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'trampoline_address', 'trampoline_address']
['break_out_memory_refs', 'break_out_memory_refs']
['mergeable_string_section', 'output_constant_def_contents', 'output_constant_pool', 'readonly_data_section', 'variable_section', 'variable_section']
['mergeable_string_section', 'output_constant_def_contents', 'output_constant_pool', 'readonly_data_section', 'variable_section']
['build1']
['build_array_ref']
['build_array_type', 'build_function_type']
['build_array_type']
['build_asm_stmt']
['c_add_case_label', 'c_add_case_label']
['def_cfa_1', 'def_cfa_1', 'find_basic_blocks']
['expand_mult_highpart']
['output_constructor']
['apply_result_size']
['apply_result_size']
['apply_result_size']
['apply_result_size']
['apply_result_size']
['apply_result_size']
['apply_result_size', 'expand_increment']
['apply_result_size']
['apply_result_size']
['apply_result_size', 'cselib_invalidate_rtx']
['size_int_type_wide']
['size_int_type_wide']
['check_asm_stack_operands', 'emit_group_load']
['size_int_type_wide']
['apply_result_size', 'consec_sets_giv', 'size_int_type_wide']
['size_int_type_wide']
['apply_result_size', 'consec_sets_giv', 'size_int_type_wide', 'size_int_type_wide']
['apply_result_size', 'consec_sets_giv', 'size_int_type_wide', 'size_int_type_wide']
['initializer_constant_valid_p', 'initializer_constant_valid_p']
['size_int_type_wide']
['really_start_incremental_init']
['initializer_constant_valid_p', 'initializer_constant_valid_p']
['initializer_constant_valid_p', 'initializer_constant_valid_p']
['initializer_constant_valid_p', 'initializer_constant_valid_p']
['initializer_constant_valid_p', 'initializer_constant_valid_p']
['initializer_constant_valid_p', 'initializer_constant_valid_p']
['initializer_constant_valid_p', 'initializer_constant_valid_p']
['initializer_constant_valid_p', 'initializer_constant_valid_p']
['apply_change_group']
['build_complex_type', 'print_mem_expr']
['print_mem_expr']
['build_complex_type', 'print_mem_expr']
['print_mem_expr']
['build_complex_type', 'build_complex_type', 'print_mem_expr']
['build_compound_literal']
['build_compound_literal']
['build_conditional_expr']
['safe_from_p']
['recog_for_combine', 'recog_for_combine']
['apply_result_size']
['insn_dead_p', 'nothrow_function_p', 'recog_for_combine', 'xexit']
['lookup_filename']
['shadow_tag_warned']
['rename_block']
['rename_block']
['nothrow_function_p', 'nothrow_function_p']
['replace_call_placeholder']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['insn_dead_p']
['extract_insn']
['expand_builtin_va_arg', 'optimize_bit_field']
['apply_args_size', 'apply_args_size', 'apply_result_size', 'apply_result_size', 'apply_result_size', 'push_to_sequence']
['push_to_sequence']
['trampoline_address']
['build_function_call']
['build_array_type', 'build_function_type']
['build_index_type']
['build_insn_chain']
['build_insn_chain']
['build_qualified_type']
['build_real', 'build_real']
['build_real', 'build_real']
['build_real_from_int_cst']
['build_real_from_int_cst', 'build_real_from_int_cst']
['build_real_from_int_cst', 'build_real_from_int_cst']
['build_type_attribute_variant']
['build_type_attribute_variant', 'build_type_attribute_variant']
['build_type_attribute_variant']
['build_type_attribute_variant', 'build_type_attribute_variant']
['build_type_attribute_variant']
['build_type_attribute_variant']
['build_type_attribute_variant', 'build_type_attribute_variant']
['build_type_copy']
['c_alignof', 'c_alignof', 'optimize_minmax_comparison']
['probe_stack_range']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['named_section_flags']
['_cpp_get_buff']
['c_add_case_label', 'c_add_case_label']
['c_add_case_label', 'c_add_case_label']
['valid_compound_expr_initializer']
['c_alignof']
['c_alignof']
['c_alignof_expr']
['c_alignof_expr', 'c_alignof_expr']
['c_alignof_expr', 'c_alignof_expr']
['c_expand_asm_operands']
['c_expand_body', 'rest_of_compilation', 'rest_of_compilation']
['c_expand_body', 'c_expand_body', 'rest_of_compilation', 'rest_of_compilation']
['c_expand_body', 'c_expand_body', 'rest_of_compilation', 'rest_of_compilation']
['c_expand_body']
['c_expand_body']
['c_expand_body']
['c_expand_end_cond']
['c_expand_end_cond']
['c_expand_end_cond']
['store_init_value']
['c_expand_return']
['c_expand_start_cond']
['c_expand_start_cond']
['c_expand_start_cond']
['c_expand_start_cond']
['c_expand_start_else']
['c_expand_start_else', 'c_expand_start_else']
['c_expand_start_else', 'c_expand_start_else']
['c_expand_start_else']
['c_finish_else', 'c_finish_then']
['c_finish_else', 'c_finish_then']
['finish_enum']
['build_conditional_expr', 'dbxout_symbol', 'default_conversion', 'expand_decl_cleanup', 'finish_enum', 'fold_binary_op_with_conditional_arg', 'really_start_incremental_init', 'signed_or_unsigned_type']
['c_lex']
['c_lex']
['c_lex']
['output_addressed_constants']
['nonzero_bits']
['walk_tree']
['c_sizeof']
['c_sizeof']
['cached_make_edge']
['cached_make_edge']
['cached_make_edge']
['cached_make_edge']
['calculate_dominance_info', 'calculate_dominance_info', 'clear_dead_regs', 'clear_reload_reg_in_use', 'compute_use_by_pseudos', 'find_free_reg', 'insert', 'mark_referenced_regs', 'mark_reg_death', 'mark_used_regs_combine', 'peep2_find_free_register', 'reg_is_born', 'save_call_clobbered_regs', 'save_call_clobbered_regs', 'setup_save_areas', 'wipe_dead_reg']
['calculate_dominance_info', 'calculate_dominance_info', 'calculate_dominance_info', 'clear_dead_regs']
['calculate_dominance_info', 'calculate_dominance_info', 'clear_dead_regs']
['calculate_dominance_info', 'calculate_dominance_info']
['calculate_dominance_info', 'calculate_dominance_info']
['calculate_dominance_info', 'calculate_dominance_info', 'save_call_clobbered_regs', 'save_call_clobbered_regs']
['calculate_dominance_info', 'save_call_clobbered_regs', 'save_call_clobbered_regs']
['calculate_dominance_info']
['mark_reg_death']
['calculate_dominance_info', 'calculate_dominance_info', 'clear_dead_regs', 'clear_reload_reg_in_use', 'compute_use_by_pseudos', 'find_free_reg', 'insert', 'mark_referenced_regs', 'mark_reg_death', 'mark_used_regs_combine', 'peep2_find_free_register', 'reg_is_born', 'save_call_clobbered_regs', 'save_call_clobbered_regs', 'setup_save_areas', 'wipe_dead_reg']
['calculate_dominance_info', 'calculate_dominance_info', 'mark_reg_death']
['calculate_dominance_info']
['calculate_dominance_info', 'calculate_dominance_info', 'mark_reg_death']
['calculate_dominance_info', 'insert', 'mark_referenced_regs', 'mark_used_regs_combine', 'reg_is_born', 'wipe_dead_reg']
['calculate_dominance_info', 'insert', 'mark_used_regs_combine']
['calculate_dominance_info', 'mark_used_regs_combine']
['calculate_dominance_info', 'mark_used_regs_combine', 'subst_stack_regs']
['subst_stack_regs']
['call_insn_operand']
['calls_function_1']
['calls_function_1']
['calls_function_1']
['optimize_sibling_and_tail_recursive_calls']
['can_combine_p', 'concat_loc_descriptor', 'final', 'find_split_point', 'get_attr_type', 'maybe_eliminate_biv_1', 'output_asm_insn', 'ssa_const_prop']
['can_combine_p', 'can_combine_p', 'copy_loop_body', 'copy_loop_body', 'find_equiv_reg', 'local_alloc', 'local_alloc', 'optimize_sibling_and_tail_recursive_calls', 'print_rtl_graph_with_bb', 'rm_line_notes', 'ssa_eliminate_dead_code', 'subst_asm_stack_regs', 'try_combine', 'visit_expression']
['record_giv']
['can_combine_p']
['can_combine_p']
['move_deaths']
['emit_no_conflict_block']
['can_disregard_other_sets']
['oprs_unchanged_p']
['can_disregard_other_sets']
['can_disregard_other_sets']
['can_disregard_other_sets']
['can_disregard_other_sets']
['expand_fix']
['expand_fix']
['can_throw_external', 'can_throw_internal', 'convert_from_eh_region_ranges', 'delete_insn', 'delete_noop_moves', 'emit_libcall_block', 'hash_scan_set', 'mark_all_labels', 'reg_scan_mark_refs']
['can_throw_external', 'can_throw_internal']
['can_throw_external', 'can_throw_internal', 'convert_from_eh_region_ranges', 'delete_insn', 'delete_noop_moves', 'emit_libcall_block', 'hash_scan_set', 'mark_all_labels', 'reg_scan_mark_refs']
['can_throw_external', 'can_throw_internal']
['canon_hash']
['canon_hash']
['canon_hash']
['canon_hash']
['canon_reg']
['canon_rtx']
['canon_true_dependence']
['canonicalize_condition']
['canonicalize_condition', 'canonicalize_condition']
['canonicalize_condition', 'canonicalize_condition']
['canonicalize_condition']
['canonicalize_condition']
['canonicalize_condition']
['find_comparison_args']
['canonicalize_condition']
['for_each_insn_in_loop']
['for_each_insn_in_loop']
['cfg_layout_finalize']
['cfg_layout_finalize']
['cfg_layout_finalize']
['cfg_layout_finalize']
['can_throw_external', 'can_throw_internal', 'convert_from_eh_region_ranges', 'delete_insn', 'delete_noop_moves', 'emit_libcall_block', 'hash_scan_set', 'mark_all_labels', 'reg_scan_mark_refs']
['cfg_layout_finalize', 'cfg_layout_finalize']
['global_alloc', 'global_alloc', 'offset_address', 'offset_address', 'set_mem_alias_set', 'set_mem_alias_set', 'set_mem_align', 'set_mem_align', 'set_mem_expr', 'set_mem_expr', 'set_mem_offset', 'set_mem_offset']
['global_alloc', 'global_alloc', 'offset_address', 'offset_address', 'set_mem_alias_set', 'set_mem_alias_set', 'set_mem_align', 'set_mem_align', 'set_mem_expr', 'set_mem_expr', 'set_mem_offset', 'set_mem_offset']
['change_address']
['change_address', 'change_address']
['change_address', 'change_address']
['change_address', 'change_address']
['change_address']
['change_address']
['change_address']
['change_address']
['change_address']
['change_address']
['change_address', 'change_address']
['change_address', 'change_address']
['change_address']
['change_address']
['change_address_1']
['change_address_1']
['change_address_1']
['change_address_1']
['change_address_1']
['change_address_1']
['change_address_1']
['change_address_1']
['change_address_1']
['change_address_1']
['change_address_1', 'offset_address']
['change_stack']
['change_stack']
['change_stack']
['check_asm_operands']
['combine_instructions', 'extract_bit_field']
['distribute_notes', 'noce_get_alt_condition', 'scan_loop', 'simplify_giv_expr', 'simplify_relational_operation']
['redirect_edge_and_branch']
['can_combine_p', 'get_attr_type']
['check_asm_stack_operands']
['can_combine_p', 'check_insn_for_givs', 'emit_group_store', 'find_dummy_reload', 'fixup_var_refs_insn', 'mark_used_regs', 'store_split_bit_field', 'validate_replace_rtx_1']
['check_asm_stack_operands', 'copyprop_hardreg_forward', 'ix86_attr_length_address_default', 'reload_cse_simplify_operands', 'reload_cse_simplify_operands']
['check_asm_stack_operands']
['check_asm_stack_operands', 'cleanup_subreg_operands', 'constrain_operands', 'preprocess_constraints', 'reload_cse_simplify_operands', 'reload_cse_simplify_operands']
['delete_insn']
['recog_29', 'recog_29', 'recog_30', 'recog_30', 'split_1', 'split_1']
['emit_no_conflict_block']
['c_add_case_label', 'c_add_case_label']
['compute_transp']
['hash_expr_1']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['recog_for_combine']
['def_cfa_1']
['extend_value_for_giv', 'extend_value_for_giv']
['print_value']
['final', 'print_rtl_graph_with_bb']
['final', 'print_rtl_graph_with_bb']
['final', 'print_rtl_graph_with_bb']
['change_address', 'change_address']
['change_address', 'change_address']
['simplify_plus_minus']
['simplify_plus_minus']
['real_value_truncate']
['real_value_truncate']
['real_value_truncate']
['real_value_truncate']
['real_value_truncate']
['lex_number']
['check_format_info_recurse', 'split_tree']
['check_format_info_recurse']
['check_format_info_recurse']
['check_format_info_recurse']
['check_format_info_recurse']
['check_format_info_recurse']
['check_format_info_recurse']
['check_format_info_recurse']
['check_format_info_recurse']
['rest_of_decl_compilation', 'rest_of_type_compilation']
['rest_of_decl_compilation', 'rest_of_type_compilation']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['compute_transp', 'constrain_operands']
['find_mem_givs', 'find_mem_givs']
['find_mem_givs', 'find_mem_givs']
['dump_flow_info']
['check_insn_for_givs', 'memory_address']
['check_insn_for_givs', 'check_insn_for_givs']
['check_insn_for_givs', 'check_insn_for_givs']
['check_insn_for_givs', 'check_insn_for_givs']
['check_insn_for_givs', 'check_insn_for_givs']
['check_insn_for_givs']
['check_insn_for_givs']
['check_insn_for_givs']
['check_insn_for_givs']
['check_insn_for_givs']
['add_location_or_const_value_attribute']
['peep2_reg_dead_p']
['purge_addressof']
['purge_addressof']
['print_operand_address']
['cpp_parse_escape', 'cpp_parse_escape']
['cpp_parse_escape', 'cpp_parse_escape']
['apply_args_size', 'choose_hard_reg_mode', 'count_pseudo', 'count_spilled_pseudo', 'mark_reg_death', 'record_value_for_reg']
['record_value_for_reg']
['wipe_dead_reg']
['apply_args_size', 'mark_referenced_regs', 'mark_reg_death']
['apply_args_size', 'choose_hard_reg_mode', 'count_pseudo', 'count_spilled_pseudo', 'mark_reg_death', 'record_value_for_reg']
['choose_hard_reg_mode', 'count_pseudo']
['apply_args_size', 'choose_hard_reg_mode', 'choose_hard_reg_mode', 'count_pseudo', 'count_spilled_pseudo', 'mark_reg_death', 'record_value_for_reg']
['apply_args_size', 'mark_reg_death']
['count_spilled_pseudo']
['record_value_for_reg']
['apply_args_size', 'choose_hard_reg_mode', 'choose_hard_reg_mode', 'count_pseudo', 'count_spilled_pseudo', 'mark_reg_death', 'record_value_for_reg']
['purge_hard_subreg_sets', 'purge_hard_subreg_sets']
['store_field']
['simplify_subreg']
['convert_move', 'ereal_from_int', 'ereal_from_uint']
['clear_reload_reg_in_use']
['simplify_subreg']
['convert_move', 'ereal_from_int', 'ereal_from_uint']
['life_analysis']
['life_analysis']
['life_analysis', 'life_analysis']
['life_analysis', 'life_analysis']
['life_analysis']
['life_analysis', 'life_analysis']
['life_analysis', 'life_analysis']
['life_analysis', 'life_analysis']
['life_analysis']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['dw2_asm_output_nstring', 'parse_output_constraint', 'parse_string']
['cleanup_barriers']
['cleanup_barriers']
['cleanup_barriers']
['cleanup_barriers']
['cleanup_barriers']
['cleanup_barriers']
['cleanup_barriers']
['cleanup_barriers', 'cleanup_barriers']
['cleanup_barriers', 'cleanup_barriers']
['cleanup_cfg']
['cleanup_cfg']
['check_asm_stack_operands', 'cleanup_subreg_operands', 'constrain_operands', 'preprocess_constraints', 'reload_cse_simplify_operands', 'reload_cse_simplify_operands']
['cleanup_subreg_operands']
['cleanup_subreg_operands']
['cleanup_subreg_operands']
['cleanup_subreg_operands']
['cleanup_subreg_operands']
['cleanup_subreg_operands']
['cleanup_subreg_operands']
['cleanup_subreg_operands']
['cleanup_subreg_operands']
['calculate_dominance_info', 'calculate_dominance_info', 'clear_dead_regs', 'clear_reload_reg_in_use', 'compute_use_by_pseudos', 'find_free_reg', 'insert', 'mark_referenced_regs', 'mark_reg_death', 'mark_used_regs_combine', 'peep2_find_free_register', 'reg_is_born', 'save_call_clobbered_regs', 'save_call_clobbered_regs', 'setup_save_areas', 'wipe_dead_reg']
['calculate_dominance_info', 'clear_dead_regs']
['calculate_dominance_info', 'clear_dead_regs']
['clear_dead_regs']
['clear_dead_regs']
['clear_edges']
['clear_edges']
['clear_edges']
['clear_edges']
['clear_edges']
['clear_edges']
['clear_edges']
['clear_edges']
['clear_edges']
['clear_emit_caches', 'restore_emit_status']
['clear_emit_caches', 'restore_emit_status']
['mark_reload_reg_in_use']
['find_reg', 'make_decl_rtl']
['aggregate_value_p']
['clear_reload_reg_in_use', 'subst_stack_regs']
['clear_dead_regs', 'clear_reload_reg_in_use']
['subst_stack_regs', 'subst_stack_regs']
['clear_reload_reg_in_use', 'insert', 'mark_used_regs_combine']
['clear_storage']
['emit_block_move']
['emit_block_move', 'make_tree', 'std_expand_builtin_va_start']
['clear_storage']
['cselib_finish', 'cselib_process_insn']
['open_dump_file', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation']
['open_dump_file', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation']
['record_one_set', 'record_one_set']
['combinable_i3pat']
['combine_givs', 'combine_givs']
['combine_givs', 'combine_givs']
['combine_givs', 'combine_givs']
['combine_givs', 'combine_givs']
['combine_givs']
['combine_givs']
['combine_givs']
['combine_givs']
['combine_givs', 'combine_givs']
['combine_givs', 'combine_givs']
['combine_givs']
['combine_givs']
['combine_givs']
['combine_givs', 'combine_givs']
['combine_givs', 'combine_givs']
['combine_givs']
['combine_givs']
['validize_mem']
['combine_instructions']
['combine_instructions', 'sched_analyze_2']
['combine_instructions', 'copy_loop_headers', 'insn_dead_p', 'safe_from_p', 'store_by_pieces_1']
['combine_instructions', 'extract_bit_field']
['combine_instructions', 'consec_sets_giv', 'copy_loop_body', 'simplify_giv_expr']
['combine_instructions']
['combine_instructions']
['combine_instructions']
['combine_instructions']
['combine_instructions']
['dump_prediction']
['dwarf2out_frame_debug_expr']
['combine_regs', 'combine_regs']
['combine_regs', 'combine_regs']
['combine_regs']
['combine_regs']
['combine_regs']
['combine_regs']
['combine_regs']
['combine_regs']
['combine_regs']
['combine_regs']
['combine_regs']
['combine_regs']
['reposition_prologue_and_epilogue_notes']
['output_asm_name']
['output_asm_name']
['output_asm_name']
['output_asm_name']
['output_asm_name']
['output_asm_name']
['purge_addressof']
['simplify_subreg']
['convert_move', 'ereal_from_int', 'ereal_from_uint', 'simplify_subreg']
['canonicalize_condition']
['canonicalize_condition']
['final_biv_value']
['convert_move', 'ereal_from_int', 'ereal_from_uint']
['simplify_subreg']
['convert_move', 'ereal_from_int', 'ereal_from_uint', 'simplify_subreg']
['canonicalize_condition']
['gen_lowpart_for_combine']
['protect_from_queue', 'record_jump_cond']
['eliminate_regs', 'expand_call', 'force_operand', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'gen_sequence', 'make_memloc', 'simplify_binary_operation', 'simplify_giv_expr', 'simplify_unary_operation']
['expand_field_assignment', 'mark_set_1']
['convert_from_ssa', 'try_combine']
['optimize_sibling_and_tail_recursive_calls']
['combine_stack_adjustments']
['validize_mem']
['commit_edge_insertions']
['commit_edge_insertions', 'commit_edge_insertions']
['commit_edge_insertions', 'commit_edge_insertions']
['commit_edge_insertions']
['commit_edge_insertions']
['commit_edge_insertions']
['commit_edge_insertions', 'commit_edge_insertions']
['commit_edge_insertions', 'commit_edge_insertions']
['commit_edge_insertions']
['commit_edge_insertions']
['commit_edge_insertions']
['commit_edge_insertions']
['commit_edge_insertions', 'commit_edge_insertions']
['commit_edge_insertions', 'commit_edge_insertions']
['commit_edge_insertions']
['purge_addressof', 'replace_pseudos_in_call_usage', 'shorten_branches', 'subst_indexed_address', 'subst_indexed_address', 'tidy_fallthru_edge']
['commit_edge_insertions']
['commit_edge_insertions', 'commit_edge_insertions']
['commit_edge_insertions', 'commit_edge_insertions']
['commit_edge_insertions']
['commit_edge_insertions']
['commit_edge_insertions']
['build_conditional_expr', 'c_alignof_expr', 'c_sizeof', 'default_conversion', 'expand_decl_cleanup', 'fold_binary_op_with_conditional_arg']
['compare_constant_1', 'compare_constant_1', 'decode_addr_const', 'record_constant_1', 'record_constant_1', 'safe_from_p']
['compare_constant_1', 'compare_constant_1', 'decode_addr_const', 'record_constant_1', 'record_constant_1', 'safe_from_p']
['compare_constant_1']
['compare_constant_1']
['compare_constant_1']
['compare_constant_1']
['compare_constant_1']
['compare_for_stack_reg', 'emit_no_conflict_block']
['compare_for_stack_reg', 'local_alloc', 'rtl_for_decl_location']
['compare_for_stack_reg']
['compare_for_stack_reg', 'reposition_prologue_and_epilogue_notes']
['compare_for_stack_reg']
['compare_for_stack_reg']
['compare_for_stack_reg']
['compare_for_stack_reg']
['compare_for_stack_reg']
['compare_for_stack_reg']
['compare_for_stack_reg']
['compare_for_stack_reg']
['memory_address', 'plus_constant_wide']
['compare_tree_int']
['compensate_edge']
['rest_of_decl_compilation']
['output_constant']
['rest_of_decl_compilation']
['rest_of_decl_compilation', 'rest_of_type_compilation']
['rest_of_decl_compilation', 'rest_of_type_compilation']
['open_dump_file', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation']
['open_dump_file', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation']
['open_dump_file', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation']
['open_dump_file', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation']
['complete_array_type']
['adjust_address_1', 'simplify_binary_operation']
['copy_loop_body', 'eliminate_regs_in_insn', 'emit_library_call_value_1', 'record_giv']
['std_expand_builtin_va_start']
['express_from']
['copy_insn_notes', 'insn_dead_p', 'insn_dead_p', 'noce_get_condition', 'protect_from_queue', 'protect_from_queue', 'rm_line_notes', 'rm_line_notes', 'sge_plus_constant', 'store_by_pieces_1', 'store_split_bit_field']
['std_expand_builtin_va_start']
['express_from']
['offsettable_address_p']
['legitimize_pic_address', 'legitimize_pic_address']
['schedule_insns']
['constrain_operands']
['constrain_operands']
['size_int_type_wide']
['replace_pseudos_in_call_usage']
['optimize_mode_switching']
['consec_sets_giv', 'consec_sets_giv', 'emit_group_store', 'print_rtl_graph_with_bb']
['consec_sets_giv', 'consec_sets_giv', 'emit_group_store', 'print_rtl_graph_with_bb']
['reachable_next_level']
['reachable_next_level']
['combine_givs']
['expand_goto', 'gen_binary', 'gen_binary', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'insn_dead_p', 'life_analysis', 'reposition_prologue_and_epilogue_notes']
['gen_binary', 'gen_lowpart_for_combine']
['compute_forward_dependences']
['compute_forward_dependences']
['compute_forward_dependences']
['compute_forward_dependences']
['combine_givs']
['expected_value_to_br_prob']
['final']
['expected_value_to_br_prob']
['find_dummy_reload']
['rtl_for_decl_location']
['gen_peephole2_1264', 'gen_peephole2_1266']
['compute_forward_dependences', 'copy_loop_headers', 'cse_basic_block', 'delete_related_insns', 'eliminate_regs_in_insn', 'find_basic_blocks', 'find_if_header', 'fixup_var_refs_insn', 'redirect_edge_and_branch', 'reload_cse_regs', 'scan_loop', 'try_crossjump_to_edge']
['compute_forward_dependences']
['compute_forward_dependences', 'protect_from_queue', 'split_all_insns', 'subst_indexed_address', 'tidy_fallthru_edge']
['compute_forward_dependences']
['compute_forward_dependences']
['compute_forward_dependences', 'compute_forward_dependences']
['compute_forward_dependences', 'compute_forward_dependences']
['compute_forward_dependences', 'compute_forward_dependences']
['compute_forward_dependences', 'compute_forward_dependences']
['compute_forward_dependences']
['compute_forward_dependences']
['compute_forward_dependences']
['compute_forward_dependences']
['compute_forward_dependences', 'compute_forward_dependences']
['compute_forward_dependences', 'compute_forward_dependences']
['compute_forward_dependences']
['compute_hash_table']
['compute_hash_table']
['compute_hash_table']
['compute_hash_table']
['compute_hash_table']
['purge_addressof']
['purge_addressof']
['purge_addressof', 'purge_addressof']
['trampoline_address']
['purge_addressof']
['optimize_mode_switching', 'optimize_mode_switching', 'optimize_mode_switching']
['compute_record_mode']
['compute_transp', 'compute_transp', 'compute_transp', 'compute_transp']
['compute_transp', 'compute_transp', 'compute_transp', 'compute_transp']
['compute_transp', 'compute_transp', 'compute_transp', 'compute_transp']
['compute_transp', 'compute_transp', 'compute_transp', 'compute_transp']
['compute_transp', 'compute_transp']
['compute_transp', 'compute_transp', 'cse_basic_block', 'expected_value_to_br_prob', 'expr_killed_p', 'oprs_unchanged_p', 'rtl_for_decl_location']
['compute_transp', 'compute_transp']
['compute_transp', 'compute_transp', 'compute_transp', 'compute_transp']
['compute_transp', 'compute_transp', 'compute_transp', 'compute_transp']
['compute_transp', 'compute_transp', 'expr_killed_p']
['compute_transp', 'compute_transp']
['compute_transp', 'compute_transp', 'copy_insn_notes', 'cse_basic_block', 'try_copy_prop']
['compute_transp', 'compute_transp']
['compute_transp', 'compute_transp', 'compute_transp', 'compute_transp']
['compute_transp', 'compute_transp', 'compute_transp', 'compute_transp']
['compute_transp', 'compute_transp', 'final']
['compute_transp']
['calculate_dominance_info', 'calculate_dominance_info', 'clear_dead_regs', 'clear_reload_reg_in_use', 'compute_use_by_pseudos', 'find_free_reg', 'insert', 'mark_referenced_regs', 'mark_reg_death', 'mark_used_regs_combine', 'peep2_find_free_register', 'reg_is_born', 'save_call_clobbered_regs', 'save_call_clobbered_regs', 'setup_save_areas', 'wipe_dead_reg']
['setup_save_areas']
['compute_use_by_pseudos', 'setup_save_areas']
['compute_use_by_pseudos']
['clear_dead_regs']
['wipe_dead_reg']
['computed_jump_p']
['oprs_unchanged_p', 'oprs_unchanged_p']
['oprs_unchanged_p', 'oprs_unchanged_p']
['can_combine_p', 'cfg_layout_finalize', 'distribute_links', 'distribute_notes', 'emit_libcall_block', 'gen_reload', 'get_attr_prefix_0f', 'ix86_split_long_move', 'ix86_split_to_parts', 'loop_optimize', 'move_for_stack_reg', 'subst_indexed_address', 'try_combine', 'try_copy_prop']
['form_sum']
['form_sum', 'form_sum']
['concat_loc_descriptor', 'final']
['mem_loc_descriptor']
['concat_loc_descriptor']
['copy_most_rtx']
['emit_library_call_value_1', 'expand_function_end', 'gen_reload', 'insns_match_p', 'local_alloc', 'noce_get_alt_condition', 'simplify_shift_const', 'store_bit_field']
['distribute_notes', 'noce_get_alt_condition', 'scan_loop', 'simplify_giv_expr', 'simplify_relational_operation']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv']
['consec_sets_giv']
['consec_sets_giv']
['consec_sets_giv']
['consec_sets_giv']
['consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['expand_builtin_va_arg']
['convert_modes']
['convert_modes']
['const_hash']
['constant_subword']
['constrain_operands']
['constrain_operands']
['copy_loop_headers', 'fixup_var_refs_insn', 'loop_iterations', 'visit_expression']
['constrain_operands', 'find_matches']
['constrain_operands', 'constrain_operands']
['constrain_operands', 'constrain_operands']
['check_asm_stack_operands', 'cleanup_subreg_operands', 'constrain_operands', 'preprocess_constraints', 'reload_cse_simplify_operands', 'reload_cse_simplify_operands']
['constrain_operands']
['constrain_operands']
['constrain_operands']
['constrain_operands']
['constrain_operands']
['constrain_operands', 'constrain_operands']
['constrain_operands', 'constrain_operands']
['constrain_operands']
['construct_container']
['unsigned_type']
['initializer_constant_valid_p']
['unsigned_type']
['signed_or_unsigned_type', 'signed_or_unsigned_type', 'signed_or_unsigned_type', 'signed_or_unsigned_type', 'signed_or_unsigned_type']
['unsigned_type']
['signed_or_unsigned_type', 'signed_or_unsigned_type', 'signed_or_unsigned_type', 'signed_or_unsigned_type', 'signed_or_unsigned_type']
['unsigned_type']
['signed_or_unsigned_type', 'signed_or_unsigned_type', 'signed_or_unsigned_type', 'signed_or_unsigned_type', 'signed_or_unsigned_type']
['adjust_address_1', 'cleanup_barriers', 'copy_insn_list', 'copy_insn_notes', 'delete_output_reload', 'distribute_notes', 'eliminate_regs', 'eliminate_regs', 'emit_libcall_block', 'emit_library_call_value_1', 'emit_no_conflict_block', 'expand_end_bindings', 'expand_goto', 'extract_bit_field', 'find_dummy_reload', 'legitimize_pic_address', 'loop_optimize', 'noce_get_alt_condition', 'print_rtl_graph_with_bb', 'sched_analyze_2', 'ssa_const_prop']
['convert_from_eh_region_ranges']
['convert_from_eh_region_ranges']
['convert_from_eh_region_ranges']
['convert_from_eh_region_ranges']
['convert_from_eh_region_ranges']
['convert_from_eh_region_ranges', 'life_analysis']
['convert_from_eh_region_ranges']
['can_throw_external', 'can_throw_internal', 'convert_from_eh_region_ranges', 'delete_insn', 'delete_noop_moves', 'emit_libcall_block', 'hash_scan_set', 'mark_all_labels', 'reg_scan_mark_refs']
['convert_from_ssa']
['convert_from_ssa', 'expand_function_end', 'validate_replace_rtx_1']
['convert_from_ssa', 'nonoverlapping_memrefs_p']
['convert_from_ssa', 'fixup_var_refs_1', 'nonoverlapping_memrefs_p', 'simplify_shift_const']
['convert_from_ssa']
['convert_from_ssa']
['convert_from_ssa']
['convert_from_ssa']
['convert_from_ssa']
['convert_from_ssa']
['convert_modes']
['convert_modes', 'convert_modes']
['convert_modes', 'convert_modes']
['convert_move']
['convert_move']
['convert_move']
['convert_move', 'convert_move']
['convert_move', 'convert_move']
['convert_move']
['convert_move', 'convert_move']
['convert_move', 'convert_move']
['biv_total_increment']
['biv_total_increment', 'reachable_next_level']
['convert_regs_2']
['convert_regs_2']
['convert_regs_2']
['convert_regs_2']
['convert_regs_2']
['convert_regs_2']
['convert_regs_2']
['convert_regs_2']
['biv_total_increment', 'reachable_next_level']
['reachable_next_level', 'safe_from_p', 'simple_cst_equal']
['add_location_or_const_value_attribute', 'gen_lowpart_for_combine']
['add_location_or_const_value_attribute', 'gen_lowpart_for_combine', 'num_sign_bit_copies']
['convert_to_integer']
['convert_to_integer']
['really_start_incremental_init']
['convert_to_real', 'convert_to_real']
['optimize_minmax_comparison']
['push_block']
['gen_lowpart_common']
['copy_blkmode_from_reg', 'copy_blkmode_from_reg']
['copy_blkmode_from_reg', 'copy_blkmode_from_reg']
['c_alignof_expr', 'c_alignof_expr']
['optimize_inline_calls']
['peephole2_insns', 'peephole2_insns', 'peephole2_insns', 'peephole2_insns', 'peephole2_insns', 'peephole2_insns', 'peephole2_insns', 'peephole2_insns', 'peephole2_insns', 'peephole2_insns']
['optimize_inline_calls']
['convert_from_ssa', 'purge_addressof', 'purge_addressof']
['find_valid_class', 'find_valid_class']
['compute_forward_dependences']
['can_throw_external', 'can_throw_internal', 'convert_from_eh_region_ranges', 'delete_insn', 'delete_noop_moves', 'emit_libcall_block', 'hash_scan_set', 'mark_all_labels', 'reg_scan_mark_refs']
['delete_noop_moves', 'delete_noop_moves', 'mark_all_labels', 'mark_all_labels']
['delete_noop_moves', 'delete_noop_moves', 'mark_all_labels', 'mark_all_labels']
['expand_goto', 'expand_goto']
['copy_insn_1']
['copy_insn_1']
['copy_insn_1']
['copy_insn_1']
['copy_insn_1']
['simplify_shift_const', 'subst_stack_regs_pat']
['copy_insn_notes']
['copy_insn_list']
['mark_set_1', 'noce_get_alt_condition']
['distribute_notes', 'expand_call', 'noce_get_alt_condition', 'subst_asm_stack_regs']
['optimize_sibling_and_tail_recursive_calls', 'print_rtx', 'simplify_giv_expr', 'try_crossjump_to_edge']
['copy_insn_list', 'try_copy_prop']
['copy_insn_list', 'try_copy_prop']
['copy_insn_list']
['copy_insn_list']
['copy_insn_list']
['copy_insn_notes']
['copy_insn_notes', 'dwarf2out_frame_debug_expr']
['copy_insn_notes']
['copy_insn_notes', 'save_for_inline', 'unroll_loop']
['copy_insn_notes']
['copy_insn_notes']
['copy_insn_notes']
['copy_insn_notes', 'try_copy_prop']
['copy_insn_notes']
['copy_insn_notes']
['copy_list', 'copy_node', 'make_node']
['copy_list']
['copy_loop_body', 'expand_end_bindings']
['adjust_address_1', 'cselib_process_insn', 'eliminate_regs', 'gen_reload', 'simplify_binary_operation']
['copy_loop_body', 'copy_loop_body']
['copy_loop_body', 'copy_loop_body']
['find_single_use_1']
['copy_loop_body']
['init_alias_analysis']
['find_reloads_address', 'find_split_point', 'insn_extract', 'optimize_sibling_and_tail_recursive_calls']
['insn_extract', 'store_bit_field']
['copy_insn_list', 'nonoverlapping_memrefs_p', 'ssa_const_prop', 'store_expr']
['compute_forward_dependences', 'copy_loop_headers', 'cse_basic_block', 'delete_related_insns', 'eliminate_regs_in_insn', 'find_basic_blocks', 'find_if_header', 'fixup_var_refs_insn', 'redirect_edge_and_branch', 'reload_cse_regs', 'scan_loop', 'try_crossjump_to_edge']
['thread_prologue_and_epilogue_insns']
['change_address_1']
['reload_as_needed']
['eliminate_regs_in_insn']
['check_asm_stack_operands', 'eliminate_regs', 'express_from', 'noce_get_alt_condition', 'record_jump_cond', 'subst_constants']
['cse_end_of_basic_block', 'delete_output_reload', 'find_reloads_address', 'find_split_point', 'noce_get_alt_condition']
['legitimize_address', 'redirect_edge_and_branch', 'reload_cse_regs', 'subst_constants']
['cse_insn', 'insert', 'memrefs_conflict_p', 'schedule_block', 'simplify_comparison', 'try_crossjump_to_edge']
['copy_most_rtx']
['copy_list', 'copy_node', 'make_node']
['copy_insn_1']
['copy_rtx_and_substitute', 'cse_basic_block', 'insn_extract', 'optimize_sibling_and_tail_recursive_calls', 'regmove_optimize']
['copy_rtx_and_substitute', 'insn_extract']
['copy_rtx_and_substitute']
['copy_rtx_and_substitute', 'if_then_else_cond', 'try_combine']
['copy_rtx_and_substitute', 'schedule_block']
['copy_rtx_and_substitute']
['copy_rtx_and_substitute']
['copy_insn_1', 'copy_rtx_if_shared']
['copy_rtx_if_shared']
['copy_rtx_if_shared', 'copy_rtx_if_shared']
['copy_rtx_if_shared']
['copy_rtx_if_shared', 'copy_rtx_if_shared']
['copy_rtx_if_shared']
['copy_rtx_if_shared']
['copy_rtx_if_shared', 'copy_rtx_if_shared']
['copy_rtx_if_shared', 'copy_rtx_if_shared']
['copy_to_reg']
['optimize_inline_calls']
['optimize_inline_calls']
['add_location_or_const_value_attribute']
['free_for_value_p']
['add_location_or_const_value_attribute']
['free_for_value_p']
['simplify_subreg']
['convert_move']
['check_asm_stack_operands', 'copyprop_hardreg_forward', 'ix86_attr_length_address_default', 'reload_cse_simplify_operands', 'reload_cse_simplify_operands']
['copyprop_hardreg_forward']
['copyprop_hardreg_forward']
['copyprop_hardreg_forward']
['copyprop_hardreg_forward', 'copyprop_hardreg_forward']
['copyprop_hardreg_forward', 'copyprop_hardreg_forward']
['copyprop_hardreg_forward', 'dead_or_set_regno_p', 'find_regno_fusage', 'get_last_value_validate', 'invalidate', 'kill_value', 'use_crosses_set_p']
['find_free_reg', 'ix86_register_move_cost', 'kill_value', 'reg_fits_class_p']
['copyprop_hardreg_forward']
['copyprop_hardreg_forward']
['copyprop_hardreg_forward']
['copyprop_hardreg_forward', 'copyprop_hardreg_forward']
['copyprop_hardreg_forward']
['check_asm_stack_operands', 'copyprop_hardreg_forward', 'ix86_attr_length_address_default', 'reload_cse_simplify_operands', 'reload_cse_simplify_operands']
['copyprop_hardreg_forward']
['copyprop_hardreg_forward']
['copyprop_hardreg_forward', 'copyprop_hardreg_forward']
['copyprop_hardreg_forward', 'copyprop_hardreg_forward']
['add_location_or_const_value_attribute']
['add_location_or_const_value_attribute']
['simplify_subreg']
['convert_move']
['copyprop_hardreg_forward']
['cleanup_subreg_operands']
['reload_cse_simplify_operands', 'reload_cse_simplify_operands']
['reload_cse_simplify_operands', 'reload_cse_simplify_operands']
['diagnostic_for_decl', 'report_diagnostic']
['diagnostic_for_decl', 'report_diagnostic']
['combine_regs']
['count_or_remove_death_notes', 'reg_bitfield_target_p', 'reg_overlap_mentioned_for_reload_p']
['copyprop_hardreg_forward', 'dead_or_set_regno_p', 'kill_value', 'reg_bitfield_target_p', 'reg_overlap_mentioned_for_reload_p', 'use_crosses_set_p']
['count_pseudo']
['count_pseudo']
['count_pseudo']
['count_spilled_pseudo']
['count_spilled_pseudo']
['gen_type_die', 'gen_type_die']
['cpp_lookup']
['cpp_push_buffer']
['cpp_push_buffer']
['_cpp_lex_token', '_cpp_temp_token']
['_cpp_get_buff']
['convert_from_eh_region_ranges', 'expand_end_bindings', 'expand_stmt', 'expand_stmt', 'mem_loc_descriptor', 'mem_loc_descriptor']
['copy_most_rtx', 'cselib_invalidate_rtx', 'gen_binary']
['cpp_lookup']
['cpp_parse_escape']
['cpp_parse_escape']
['cpp_parse_escape']
['cpp_parse_escape']
['cpp_parse_escape', 'cpp_parse_escape']
['cpp_parse_escape']
['cpp_parse_escape', 'cpp_parse_escape']
['cpp_parse_escape']
['mem_loc_descriptor', 'mem_loc_descriptor']
['mem_loc_descriptor', 'mem_loc_descriptor']
['convert_from_eh_region_ranges', 'expand_end_bindings', 'expand_stmt', 'mem_loc_descriptor', 'mem_loc_descriptor']
['cpp_push_buffer']
['cpp_push_buffer']
['cpp_push_buffer']
['cpp_push_buffer']
['cpp_push_buffer']
['cpp_push_buffer']
['cpp_push_buffer']
['cpp_push_buffer']
['cpp_parse_escape']
['_cpp_unaligned_alloc']
['adjust_address_1', 'apply_change_group', 'distribute_notes', 'loop_optimize', 'make_extraction', 'protect_from_queue', 'record_giv', 'record_jump_cond', 'save_line_notes', 'schedule_block', 'squeeze_notes']
['rm_other_notes']
['force_operand']
['delete_noop_moves', 'purge_line_number_notes']
['delete_noop_moves', 'purge_line_number_notes']
['cleanup_barriers', 'cleanup_barriers']
['concat_loc_descriptor']
['combine_instructions', 'extract_bit_field']
['distribute_notes', 'expand_call', 'noce_get_alt_condition', 'subst_asm_stack_regs']
['compute_forward_dependences', 'copy_loop_headers', 'cse_basic_block', 'delete_related_insns', 'eliminate_regs_in_insn', 'find_basic_blocks', 'find_if_header', 'fixup_var_refs_insn', 'redirect_edge_and_branch', 'reload_cse_regs', 'scan_loop', 'try_crossjump_to_edge']
['cse_basic_block']
['cse_basic_block']
['squeeze_notes']
['expand_goto']
['cse_end_of_basic_block', 'delete_output_reload', 'find_reloads_address', 'find_split_point', 'noce_get_alt_condition']
['cse_end_of_basic_block']
['cse_end_of_basic_block']
['cse_end_of_basic_block']
['cse_end_of_basic_block']
['cse_end_of_basic_block']
['cse_end_of_basic_block']
['cse_end_of_basic_block', 'cse_end_of_basic_block']
['cse_end_of_basic_block', 'cse_end_of_basic_block']
['cse_end_of_basic_block', 'cse_end_of_basic_block']
['cse_end_of_basic_block', 'cse_end_of_basic_block']
['copy_loop_body', 'eliminate_regs_in_insn', 'emit_library_call_value_1', 'record_giv']
['adjust_address_1', 'expand_field_assignment', 'fixup_var_refs_1', 'gcse_main', 'make_extraction', 'mark_used_regs', 'sched_analyze_2', 'simplify_giv_expr']
['compare_for_stack_reg', 'copy_insn_notes', 'copy_loop_headers', 'cse_insn', 'cselib_process_insn', 'dwarf2out_frame_debug_expr', 'eliminate_regs_in_insn', 'emit_no_conflict_block', 'expand_decl', 'expand_field_assignment', 'extract_bit_field', 'find_basic_blocks', 'insert', 'ix86_va_arg', 'loop_optimize', 'mark_all_labels', 'memrefs_conflict_p', 'protect_from_queue', 'protect_from_queue', 'redirect_edge_and_branch', 'scan_loop', 'schedule_block', 'schedule_block', 'simplify_comparison', 'simplify_comparison', 'try_combine', 'try_crossjump_to_edge']
['find_equiv_reg']
['fold_rtx', 'thread_prologue_and_epilogue_insns', 'validate_replace_rtx_1']
['insn_extract', 'simplify_giv_expr']
['fold_rtx', 'purge_addressof_1', 'ssa_eliminate_dead_code']
['fixup_var_refs_1']
['protect_from_queue', 'record_jump_cond']
['adjust_address_1', 'cselib_process_insn', 'eliminate_regs', 'gen_reload', 'simplify_binary_operation']
['cse_main']
['cse_main']
['cse_main', 'rm_other_notes', 'rm_other_notes', 'squeeze_notes', 'squeeze_notes']
['cse_main']
['simplify_plus_minus']
['cse_main']
['rtx_equal_for_field_assignment_p']
['cse_set_around_loop']
['cse_set_around_loop']
['cse_set_around_loop']
['cse_set_around_loop']
['cse_set_around_loop']
['cse_set_around_loop']
['cse_set_around_loop']
['cse_set_around_loop']
['cse_set_around_loop']
['cse_set_around_loop']
['cselib_finish', 'cselib_process_insn']
['cselib_finish']
['cselib_init']
['cselib_invalidate_rtx']
['clear_reload_reg_in_use', 'cselib_invalidate_regno', 'find_free_reg', 'ix86_register_move_cost', 'mark_reload_reg_in_use', 'reg_dies', 'regno_clobbered_p']
['free_for_value_p']
['add_AT_location_description', 'concat_loc_descriptor', 'concat_loc_descriptor']
['want_to_gcse_p']
['cselib_lookup']
['cselib_lookup']
['cselib_lookup', 'find_oldest_value_reg']
['cselib_lookup']
['cselib_lookup']
['cselib_lookup']
['cselib_lookup']
['cselib_lookup']
['cselib_lookup']
['cselib_lookup']
['add_location_or_const_value_attribute']
['add_location_or_const_value_attribute']
['add_location_or_const_value_attribute']
['named_section_flags']
['cselib_finish', 'cselib_process_insn']
['cselib_process_insn']
['compare_for_stack_reg', 'known_cond']
['cselib_process_insn', 'cselib_process_insn']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'cselib_process_insn', 'dw2_asm_output_encoded_addr_rtx', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_eh_return', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_force_to_memory', 'ix86_force_to_memory', 'load_pic_register', 'output_cfi', 'output_constant_def', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'trampoline_address', 'trampoline_address']
['cselib_process_insn', 'cselib_process_insn']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'cselib_process_insn', 'dw2_asm_output_encoded_addr_rtx', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_eh_return', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_force_to_memory', 'ix86_force_to_memory', 'load_pic_register', 'output_cfi', 'output_constant_def', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'trampoline_address', 'trampoline_address']
['choose_hard_reg_mode', 'find_reg', 'setup_save_areas']
['cselib_invalidate_rtx']
['cselib_invalidate_rtx']
['cselib_invalidate_rtx']
['cselib_invalidate_rtx']
['cselib_invalidate_rtx']
['add_location_or_const_value_attribute']
['add_location_or_const_value_attribute']
['scan_one_insn']
['commit_edge_insertions', 'purge_addressof']
['gen_lowpart_for_combine']
['commit_edge_insertions', 'memrefs_conflict_p', 'purge_addressof']
['gen_lowpart_for_combine']
['emit_group_store']
['emit_group_load']
['emit_group_load']
['decompose']
['memory_address', 'memory_address', 'offset_address']
['combine_instructions', 'dwarf2out_frame_debug', 'emit_insns_after', 'emit_no_conflict_block', 'emit_no_conflict_block', 'emit_no_conflict_block', 'pop_init_level', 'push_init_level', 'push_init_level', 'regclass', 'timevar_push']
['recog_for_combine']
['cselib_subst_to_values']
['output_constant_def_contents', 'variable_section']
['output_constant_def_contents', 'variable_section']
['gen_block_die']
['dbxout_symbol', 'dbxout_symbol', 'dbxout_symbol', 'dbxout_symbol_location']
['assemble_end_function', 'assemble_end_function']
['assemble_end_function', 'assemble_end_function']
['cfg_layout_finalize']
['regclass']
['dbxout_symbol', 'dbxout_symbol', 'dbxout_symbol', 'dbxout_symbol_location']
['want_to_gcse_p', 'want_to_gcse_p', 'want_to_gcse_p']
['dbxout_symbol']
['dbxout_symbol_location']
['purge_line_number_notes', 'purge_line_number_notes', 'purge_line_number_notes']
['dbxout_type']
['dbxout_type']
['dbxout_type']
['dbxout_type']
['output_constructor']
['apply_distributive_law', 'initializer_constant_valid_p']
['gen_lexical_block_die']
['dead_or_set_p']
['dead_or_set_regno_p']
['dead_or_set_regno_p']
['deallocate_reload_reg']
['deallocate_reload_reg']
['debug_bitmap_file']
['debug_bitmap_file']
['debug_reload_to_stream']
['debug_reload_to_stream']
['debug_reload_to_stream']
['alloc_gcse_mem', 'copy_list', 'copy_list', 'copy_node', 'int_fits_type_p', 'make_node', 'make_tree_vec', 'merge_attributes', 'subst_indexed_address']
['regclass']
['ix86_split_to_parts']
['regclass_init', 'start_init']
['declare_nonlocal_label']
['optimize_inline_calls']
['declare_weak']
['decode_addr_const', 'self_promoting_args_p', 'set_mem_attributes']
['c_alignof_expr', 'c_alignof_expr']
['decode_addr_const']
['get_alias_set']
['string_constant']
['print_value']
['allocate_dynamic_stack_space', 'commit_edge_insertions']
['copyprop_hardreg_forward']
['cleanup_subreg_operands']
['cleanup_subreg_operands']
['df_ref_record', 'recog_23', 'recog_23', 'recog_26', 'recog_29', 'recog_30', 'recog_30', 'split_4', 'split_4']
['df_ref_record', 'recog_23', 'recog_23', 'recog_26', 'recog_29', 'recog_30', 'recog_30', 'split_4', 'split_4']
['output_asm_name']
['cleanup_subreg_operands']
['assemble_start_function', 'function_section']
['assemble_start_function', 'function_section']
['dbxout_type']
['reload_cse_simplify_operands', 'reload_cse_simplify_operands']
['reload_cse_simplify_operands', 'reload_cse_simplify_operands']
['delete_output_reload', 'dwarf2out_frame_debug']
['decode_reg_name']
['reload_combine_note_use']
['reload_combine_note_use']
['reload_combine_note_use']
['reload_combine_note_use']
['reload_combine_note_use']
['reload_combine_note_use']
['reload_combine_note_use']
['reload_combine_note_use']
['output_format']
['output_format']
['lookup_filename']
['decode_rtx_const']
['decode_rtx_const']
['decode_rtx_const']
['decode_rtx_const']
['decode_rtx_const']
['decode_rtx_const']
['decode_rtx_const']
['decode_rtx_const']
['decompose']
['decompose']
['decompose']
['def_cfa_1']
['def_cfa_1', 'def_cfa_1']
['def_cfa_1', 'def_cfa_1']
['def_cfa_1']
['def_cfa_1']
['oprs_not_set_p']
['oprs_unchanged_p', 'oprs_unchanged_p']
['oprs_unchanged_p', 'oprs_unchanged_p']
['oprs_unchanged_p', 'oprs_unchanged_p']
['default_conversion']
['delete_address_reloads_1']
['delete_address_reloads_1']
['can_throw_external', 'can_throw_internal', 'convert_from_eh_region_ranges', 'delete_insn', 'delete_noop_moves', 'emit_libcall_block', 'hash_scan_set', 'mark_all_labels', 'reg_scan_mark_refs']
['delete_insn']
['delete_noop_moves', 'mark_all_labels', 'offset_address']
['delete_noop_moves']
['delete_noop_moves', 'merge_blocks_nomove', 'simplify_binary_operation']
['can_throw_external', 'can_throw_internal', 'convert_from_eh_region_ranges', 'delete_insn', 'delete_noop_moves', 'emit_libcall_block', 'hash_scan_set', 'mark_all_labels', 'reg_scan_mark_refs']
['delete_noop_moves', 'delete_noop_moves', 'mark_all_labels', 'mark_all_labels']
['delete_noop_moves', 'delete_noop_moves', 'mark_all_labels', 'mark_all_labels']
['delete_noop_moves']
['delete_noop_moves']
['delete_noop_moves', 'delete_noop_moves']
['delete_noop_moves', 'delete_noop_moves']
['delete_noop_moves']
['delete_noop_moves']
['delete_output_reload']
['delete_output_reload']
['delete_output_reload']
['delete_output_reload']
['copy_loop_headers', 'delete_output_reload', 'expand_decl', 'hash_scan_set', 'loop_optimize', 'make_compound_operation', 'make_extraction', 'maybe_eliminate_biv_1']
['cse_end_of_basic_block', 'delete_output_reload', 'find_reloads_address', 'find_split_point', 'noce_get_alt_condition']
['delete_output_reload']
['delete_output_reload']
['delete_output_reload']
['delete_output_reload']
['delete_output_reload']
['delete_output_reload']
['canonicalize_condition']
['canonicalize_condition']
['add_location_or_const_value_attribute']
['peep2_reg_dead_p']
['compute_forward_dependences', 'copy_loop_headers', 'cse_basic_block', 'delete_related_insns', 'eliminate_regs_in_insn', 'find_basic_blocks', 'find_if_header', 'fixup_var_refs_insn', 'redirect_edge_and_branch', 'reload_cse_regs', 'scan_loop', 'try_crossjump_to_edge']
['delete_related_insns']
['delete_related_insns', 'delete_related_insns', 'delete_related_insns']
['delete_related_insns', 'delete_related_insns', 'delete_related_insns']
['delete_related_insns', 'delete_related_insns', 'delete_related_insns']
['delete_related_insns']
['purge_line_number_notes']
['compute_transp', 'compute_transp']
['compute_transp', 'compute_transp', 'cse_basic_block']
['replace_pseudos_in_call_usage', 'subst_indexed_address', 'tidy_fallthru_edge']
['maybe_eliminate_biv', 'put_condition_code']
['dump_node']
['queue_and_dump_index']
['queue_and_dump_index']
['dump_node']
['dump_node']
['dump_node']
['dump_node']
['df_analyse_1', 'distribute_notes', 'emit_library_call_value_1', 'expand_function_end', 'gen_reload', 'insns_match_p', 'local_alloc', 'noce_get_alt_condition', 'noce_get_alt_condition', 'scan_loop', 'simplify_giv_expr', 'simplify_relational_operation', 'simplify_shift_const', 'store_bit_field']
['optimize_sibling_and_tail_recursive_calls', 'record_jump_cond']
['output_asm_insn', 'record_jump_cond', 'reload_as_needed']
['copy_insn_list', 'copy_loop_headers', 'cse_end_of_basic_block', 'delete_output_reload', 'find_if_header', 'find_reloads_address', 'find_split_point', 'noce_get_alt_condition', 'nonoverlapping_memrefs_p', 'ssa_const_prop', 'store_expr']
['copy_loop_body', 'copy_loop_headers', 'expand_function_end', 'find_if_header', 'fold_rtx', 'insn_extract', 'legitimize_address', 'output_asm_insn', 'simplify_giv_expr']
['can_combine_p', 'expand_function_end', 'find_reloads_address', 'output_asm_insn', 'reload', 'subst_asm_stack_regs']
['copy_loop_headers', 'expand_inline_function', 'find_if_header', 'find_if_header', 'optimize_sibling_and_tail_recursive_calls']
['df_analyse_1']
['final_scan_insn']
['move_for_stack_reg', 'move_for_stack_reg']
['move_for_stack_reg', 'move_for_stack_reg']
['life_analysis']
['commit_edge_insertions']
['final']
['gen_lowpart_for_combine']
['emit_group_store', 'final_scan_insn']
['move_for_stack_reg', 'move_for_stack_reg']
['move_for_stack_reg', 'move_for_stack_reg']
['life_analysis']
['commit_edge_insertions']
['final']
['gen_lowpart_for_combine']
['emit_group_store']
['noce_get_condition', 'noce_get_condition', 'noce_get_condition']
['noce_get_condition', 'noce_get_condition', 'noce_get_condition']
['noce_get_condition', 'noce_get_condition', 'noce_get_condition']
['life_analysis']
['cse_end_of_basic_block', 'cse_end_of_basic_block']
['gen_lowpart_for_combine']
['oprs_unchanged_p']
['final_scan_insn']
['move_for_stack_reg', 'move_for_stack_reg']
['move_for_stack_reg', 'move_for_stack_reg']
['life_analysis']
['commit_edge_insertions']
['gen_lowpart_for_combine']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_scan_insn']
['move_for_stack_reg', 'move_for_stack_reg']
['move_for_stack_reg', 'move_for_stack_reg']
['life_analysis']
['commit_edge_insertions']
['final']
['gen_lowpart_for_combine']
['final_scan_insn']
['noce_get_condition', 'noce_get_condition', 'noce_get_condition']
['noce_get_condition', 'noce_get_condition', 'noce_get_condition']
['noce_get_condition', 'noce_get_condition', 'noce_get_condition']
['life_analysis']
['cse_end_of_basic_block', 'cse_end_of_basic_block']
['gen_lowpart_for_combine']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['emit_group_store', 'final_scan_insn']
['move_for_stack_reg', 'move_for_stack_reg']
['move_for_stack_reg', 'move_for_stack_reg']
['life_analysis']
['commit_edge_insertions']
['final']
['gen_lowpart_for_combine']
['final_scan_insn']
['noce_get_condition', 'noce_get_condition', 'noce_get_condition']
['noce_get_condition', 'noce_get_condition', 'noce_get_condition']
['noce_get_condition', 'noce_get_condition', 'noce_get_condition']
['life_analysis']
['rm_line_notes']
['final']
['gen_lowpart_for_combine']
['convert_regs_2', 'convert_regs_2', 'convert_regs_2', 'convert_regs_2', 'convert_regs_2', 'convert_regs_2', 'convert_regs_2', 'convert_regs_2']
['convert_regs_2', 'convert_regs_2', 'convert_regs_2', 'convert_regs_2', 'convert_regs_2', 'convert_regs_2', 'convert_regs_2', 'convert_regs_2']
['convert_regs_2', 'convert_regs_2', 'convert_regs_2', 'convert_regs_2', 'convert_regs_2', 'convert_regs_2', 'convert_regs_2', 'convert_regs_2']
['convert_regs_2', 'convert_regs_2', 'convert_regs_2', 'convert_regs_2', 'convert_regs_2', 'convert_regs_2', 'convert_regs_2', 'convert_regs_2']
['convert_regs_2']
['convert_regs_2']
['convert_regs_2']
['convert_regs_2']
['convert_regs_2']
['convert_regs_2']
['convert_regs_2']
['convert_regs_2']
['df_insn_refs_record']
['df_insn_refs_record', 'df_insn_refs_record']
['df_insn_refs_record']
['df_analyse_1']
['df_ref_record']
['df_ref_record', 'insert', 'sched_analyze_1']
['df_ref_record', 'df_ref_record', 'df_ref_record', 'df_ref_record']
['df_ref_record', 'df_ref_record', 'df_ref_record', 'df_ref_record']
['df_ref_record', 'df_ref_record', 'df_ref_record', 'df_ref_record']
['df_ref_record', 'df_ref_record', 'df_ref_record', 'df_ref_record']
['df_ref_record']
['decompose']
['decompose']
['adjust_address_1', 'df_uses_record']
['df_uses_record']
['df_uses_record']
['df_uses_record']
['diagnostic_finish']
['diagnostic_for_decl', 'report_diagnostic']
['diagnostic_for_decl', 'report_diagnostic']
['diagnostic_for_decl', 'fatal_io_error', 'report_diagnostic', 'sorry', 'verbatim']
['diagnostic_for_decl', 'fatal_io_error', 'sorry', 'verbatim']
['diagnostic_for_decl']
['diagnostic_for_decl']
['diagnostic_for_decl']
['diagnostic_for_decl']
['set_diagnostic_context']
['combine_givs', 'combine_givs', 'compute_transp', 'compute_transp']
['combine_givs', 'combine_givs', 'compute_transp', 'compute_transp']
['_cpp_lex_token', '_cpp_temp_token', 'find_mem_givs', 'find_mem_givs']
['_cpp_lex_token', '_cpp_temp_token', 'find_mem_givs', 'find_mem_givs']
['find_mem_givs']
['start_init']
['alloc_gcse_mem', 'combine_instructions', 'cse_main']
['cselib_finish']
['apply_args_size']
['apply_args_size']
['distribute_bit_expr']
['distribute_bit_expr', 'distribute_bit_expr', 'distribute_bit_expr', 'distribute_bit_expr']
['distribute_bit_expr', 'distribute_bit_expr', 'distribute_bit_expr', 'distribute_bit_expr']
['distribute_bit_expr']
['decode_addr_const', 'distribute_bit_expr']
['distribute_bit_expr', 'distribute_bit_expr', 'distribute_bit_expr', 'distribute_bit_expr']
['distribute_bit_expr', 'distribute_bit_expr', 'distribute_bit_expr', 'distribute_bit_expr']
['distribute_bit_expr']
['distribute_links', 'subst_indexed_address']
['distribute_links']
['distribute_links', 'distribute_links']
['distribute_links', 'distribute_links']
['distribute_links', 'distribute_links']
['distribute_links', 'distribute_links']
['distribute_links']
['distribute_notes']
['delete_noop_moves']
['adjust_address_1', 'distribute_notes', 'record_giv', 'schedule_block']
['eliminate_regs']
['consec_sets_giv', 'expand_compound_operation', 'local_alloc']
['elimination_effects', 'for_each_insn_in_loop']
['record_jump_cond']
['can_combine_p', 'distribute_notes', 'elimination_effects', 'elimination_effects', 'expand_function_end', 'find_reloads_address', 'for_each_insn_in_loop', 'get_attr_type', 'maybe_eliminate_biv_1', 'move_deaths', 'output_asm_insn', 'subst_constants']
['sched_analyze_1', 'sched_analyze_1']
['div_and_round_double', 'div_and_round_double']
['div_and_round_double']
['div_and_round_double', 'div_and_round_double']
['run_directive']
['do_case']
['do_cmp_and_jump']
['do_compare_and_jump']
['do_compare_rtx_and_jump']
['c_expand_body', 'c_expand_body', 'c_lex', 'c_lex', 'find_basic_blocks', 'open_dump_file', 'open_dump_file', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation', 'yylex', 'yylex']
['c_expand_body', 'c_lex', 'open_dump_file', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation', 'yylex']
['do_cmp_and_jump']
['do_cmp_and_jump']
['expand_fix']
['do_jump_by_parts_equality', 'do_jump_by_parts_equality']
['do_jump_by_parts_equality', 'do_jump_by_parts_equality']
['do_jump_by_parts_equality', 'do_jump_by_parts_equality', 'do_jump_by_parts_equality', 'do_jump_by_parts_equality']
['do_jump_by_parts_equality', 'do_jump_by_parts_equality', 'do_jump_by_parts_equality', 'do_jump_by_parts_equality']
['do_jump_by_parts_equality_rtx', 'do_jump_by_parts_equality_rtx']
['do_jump_by_parts_equality_rtx', 'do_jump_by_parts_equality_rtx']
['do_jump_by_parts_equality_rtx', 'do_jump_by_parts_equality_rtx']
['do_jump_by_parts_equality_rtx', 'do_jump_by_parts_equality_rtx']
['do_jump_by_parts_equality_rtx', 'do_jump_by_parts_equality_rtx']
['do_jump_by_parts_equality_rtx', 'do_jump_by_parts_equality_rtx']
['classify_argument']
['do_jump_by_parts_greater_rtx']
['do_jump_by_parts_greater_rtx']
['compute_transp', 'constrain_operands', 'gen_split_1214', 'simplify_rtx']
['count_pseudo']
['emit_libcall_block']
['assemble_variable']
['assemble_variable', 'assemble_variable']
['assemble_variable', 'assemble_variable']
['force_operand', 'squeeze_notes', 'subst_indexed_address']
['refers_to_regno_for_reload_p']
['force_operand', 'squeeze_notes', 'subst_indexed_address']
['do_store_flag', 'do_store_flag', 'get_set_constructor_bits', 'output_init_element', 'split_tree']
['do_store_flag']
['do_store_flag']
['do_store_flag']
['do_SUBST']
['do_SUBST']
['do_SUBST', 'recog_for_combine']
['do_SUBST', 'recog_for_combine']
['do_SUBST', 'do_SUBST', 'recog_for_combine', 'recog_for_combine']
['do_SUBST', 'do_SUBST', 'recog_for_combine', 'recog_for_combine']
['do_SUBST', 'recog_for_combine']
['do_SUBST', 'recog_for_combine']
['do_SUBST', 'recog_for_combine']
['do_SUBST', 'recog_for_combine']
['do_SUBST', 'do_SUBST', 'recog_for_combine', 'recog_for_combine']
['do_SUBST', 'do_SUBST', 'recog_for_combine', 'recog_for_combine']
['do_SUBST', 'recog_for_combine']
['do_SUBST', 'recog_for_combine']
['allocate_dynamic_stack_space']
['try_tablejump']
['try_tablejump']
['probe_stack_range', 'probe_stack_range']
['try_tablejump']
['try_tablejump']
['try_tablejump']
['doing_eh']
['doing_eh']
['gen_split_1181', 'gen_split_1182', 'gen_split_1236']
['want_to_gcse_p']
['doloop_optimize']
['doloop_optimize']
['offset_address', 'record_value_for_reg', 'save_for_inline', 'set_mem_alias_set', 'set_mem_align', 'set_mem_attributes', 'set_mem_expr', 'set_mem_offset']
['dump_bb']
['cfg_layout_finalize', 'cfg_layout_finalize', 'extract_constrain_insn_cached', 'extract_insn_cached', 'find_reg']
['cfg_layout_finalize', 'cfg_layout_finalize', 'extract_constrain_insn_cached', 'extract_insn_cached', 'find_reg']
['debug_bitmap_file', 'debug_bitmap_file', 'flow_loop_dump', 'print_reg']
['find_reg']
['find_reg']
['flow_loop_dump']
['flow_loop_dump', 'print_reg']
['flow_loop_dump']
['dw2_asm_output_nstring', 'maybe_read_dollar_number', 'output_asm_name', 'parse_string', 'read_filename_string']
['do_store_flag']
['flow_loop_dump', 'print_reg']
['do_store_flag']
['add_location_or_const_value_attribute', 'gen_lowpart_for_combine']
['add_location_or_const_value_attribute', 'gen_lowpart_for_combine']
['dump_edge_info']
['dump_flow_info']
['dump_flow_info']
['dump_flow_info']
['dump_global_regs']
['queue_and_dump_index']
['queue_and_dump_index']
['dump_node']
['dump_node']
['dump_node']
['dump_node']
['dump_node']
['dump_node']
['dump_node']
['dump_node']
['dump_prediction']
['regclass', 'regclass']
['regclass', 'regclass']
['regclass']
['dump_regset']
['dump_regset']
['dump_sbitmap']
['initializer_constant_valid_p']
['int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p']
['int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p']
['expand_function_start']
['compute_transp', 'constrain_operands', 'gen_split_1214', 'simplify_rtx']
['compute_transp', 'constrain_operands', 'gen_split_1214', 'simplify_rtx']
['expand_builtin_expect_jump']
['expand_builtin_expect_jump']
['dw2_asm_output_addr', 'dw2_asm_output_offset']
['dw2_asm_output_delta']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'cselib_process_insn', 'dw2_asm_output_encoded_addr_rtx', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_eh_return', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_force_to_memory', 'ix86_force_to_memory', 'load_pic_register', 'output_cfi', 'output_constant_def', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'trampoline_address', 'trampoline_address']
['dw2_asm_output_nstring']
['dw2_asm_output_nstring']
['dw2_asm_output_nstring']
['dw2_asm_output_nstring']
['dw2_asm_output_nstring']
['dw2_asm_output_addr', 'dw2_asm_output_offset']
['expand_end_bindings']
['dwarf2out_abstract_function', 'dwarf2out_source_line', 'gen_decl_die', 'gen_subprogram_die']
['dwarf2out_begin_prologue']
['dwarf2out_begin_prologue']
['dwarf2out_abstract_function', 'dwarf2out_source_line', 'gen_decl_die', 'gen_subprogram_die']
['restore_line_notes', 'restore_line_notes']
['build_compound_literal', 'cselib_finish', 'restore_line_notes']
['add_fde_cfi', 'dwarf2out_frame_debug']
['add_fde_cfi', 'dwarf2out_frame_debug']
['add_fde_cfi', 'dwarf2out_frame_debug', 'dwarf2out_frame_debug']
['add_fde_cfi']
['dwarf2out_decl']
['dwarf2out_decl', 'gen_decl_die', 'gen_decl_die', 'gen_subprogram_die', 'gen_subprogram_die']
['gen_block_die']
['gen_block_die']
['gen_block_die']
['dwarf2out_abstract_function', 'dwarf2out_source_line', 'gen_decl_die', 'gen_subprogram_die']
['gen_block_die']
['gen_block_die']
['dwarf2out_frame_debug']
['dwarf2out_frame_debug']
['dwarf2out_frame_debug']
['dwarf2out_frame_debug']
['add_fde_cfi', 'dwarf2out_frame_debug', 'dwarf2out_frame_debug']
['dwarf2out_frame_debug']
['dwarf2out_frame_debug']
['dwarf2out_frame_debug']
['dwarf2out_frame_debug']
['add_fde_cfi', 'dwarf2out_frame_debug']
['add_fde_cfi', 'dwarf2out_frame_debug']
['add_fde_cfi', 'dwarf2out_frame_debug', 'dwarf2out_frame_debug']
['dwarf2out_frame_debug']
['dwarf2out_frame_debug']
['dwarf2out_frame_debug']
['protect_from_queue']
['dwarf2out_frame_debug_expr']
['dwarf2out_frame_debug_expr']
['dwarf2out_frame_debug_expr']
['dwarf2out_frame_debug_expr']
['dwarf2out_frame_debug_expr', 'dwarf2out_frame_debug_expr']
['dwarf2out_frame_debug_expr', 'dwarf2out_frame_debug_expr']
['dwarf2out_frame_debug_expr']
['dwarf2out_frame_debug_expr']
['dwarf2out_frame_debug_expr']
['dwarf2out_frame_debug_expr']
['dwarf2out_frame_debug_expr', 'force_operand']
['dwarf2out_frame_debug_expr']
['gen_block_die']
['dwarf2out_abstract_function', 'dwarf2out_source_line', 'gen_decl_die', 'gen_subprogram_die']
['dwarf2out_frame_debug']
['dwarf2out_begin_prologue', 'dwarf2out_frame_debug']
['dwarf2out_frame_debug']
['dwarf2out_begin_prologue']
['dwarf2out_frame_debug']
['dwarf2out_frame_debug_expr']
['gen_block_die']
['gen_block_die']
['dwarf_stack_op_name']
['change_address_1']
['alloc_gcse_mem']
['ereal_from_int', 'ereal_from_int', 'ereal_from_int', 'ereal_from_int', 'ereal_from_uint', 'ereal_from_uint', 'ereal_from_uint', 'ereal_from_uint']
['clear_edges']
['eh_data_format_name']
['eiremain']
['eiremain']
['eliminate_constant_term']
['eliminate_constant_term']
['eliminate_constant_term']
['eliminate_phi']
['eliminate_regs', 'move_for_stack_reg']
['eliminate_regs']
['eliminate_regs', 'find_dummy_reload', 'sched_analyze_2']
['adjust_address_1', 'cselib_process_insn', 'eliminate_regs', 'gen_reload', 'simplify_binary_operation']
['check_asm_stack_operands', 'eliminate_regs', 'express_from', 'noce_get_alt_condition', 'record_jump_cond', 'subst_constants']
['eliminate_regs']
['eliminate_regs', 'expand_call', 'force_operand', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'gen_sequence', 'make_memloc', 'simplify_binary_operation', 'simplify_giv_expr', 'simplify_unary_operation']
['copy_loop_body', 'eliminate_regs_in_insn', 'emit_library_call_value_1', 'record_giv']
['consec_sets_giv', 'expand_compound_operation', 'local_alloc']
['legitimize_pic_address']
['apply_distributive_law', 'convert_from_ssa', 'copy_insn_list', 'expand_inline_function', 'store_expr']
['eliminate_regs_in_insn']
['convert_from_ssa', 'fixup_var_refs_1', 'nonoverlapping_memrefs_p', 'simplify_shift_const']
['compute_forward_dependences', 'copy_loop_headers', 'cse_basic_block', 'delete_related_insns', 'eliminate_regs_in_insn', 'find_basic_blocks', 'find_if_header', 'fixup_var_refs_insn', 'redirect_edge_and_branch', 'reload_cse_regs', 'scan_loop', 'try_crossjump_to_edge']
['delete_output_reload', 'eliminate_regs_in_insn', 'emit_libcall_block', 'emit_swap_insn', 'expand_inline_function', 'find_split_point', 'loop_iterations', 'oprs_not_set_p', 'reload_cse_regs', 'ssa_eliminate_dead_code', 'subst_stack_regs_pat', 'try_combine']
['mark_used_regs']
['eliminate_regs_in_insn']
['reload_cse_regs', 'subst_constants']
['can_combine_p', 'concat_loc_descriptor', 'copy_loop_body', 'final', 'local_alloc', 'optimize_sibling_and_tail_recursive_calls', 'print_rtl_graph_with_bb', 'print_rtx', 'rm_line_notes', 'simplify_giv_expr', 'ssa_eliminate_dead_code', 'subst_asm_stack_regs', 'try_crossjump_to_edge', 'visit_expression']
['subst_asm_stack_regs']
['visit_expression']
['elimination_effects']
['elimination_effects']
['elimination_effects', 'elimination_effects', 'elimination_effects', 'elimination_effects']
['elimination_effects', 'elimination_effects', 'elimination_effects', 'elimination_effects']
['elimination_effects']
['elimination_effects']
['elimination_effects', 'elimination_effects', 'elimination_effects', 'elimination_effects']
['elimination_effects', 'elimination_effects', 'elimination_effects', 'elimination_effects']
['emdnorm']
['emdnorm']
['emdnorm']
['emdnorm']
['emdnorm']
['emdnorm']
['emdnorm']
['clear_storage', 'emit_block_move']
['expand_call']
['clear_storage', 'clear_storage', 'emit_block_move', 'emit_block_move', 'expand_call', 'expand_call']
['emit_case_nodes']
['constant_subword', 'convert_move', 'do_compare_rtx_and_jump', 'expand_complex_abs', 'expand_unop', 'expand_unop', 'gen_lowpart_common', 'get_secondary_mem', 'int_mode_for_mode', 'ix86_expand_move', 'ix86_hard_regno_mode_ok', 'ix86_libcall_value', 'nonzero_bits', 'simplify_ternary_operation', 'simplify_ternary_operation']
['output_asm_name']
['emit_unop_insn']
['emit_unop_insn']
['emit_unop_insn']
['emit_cmp_and_jump_insns']
['emit_cmp_and_jump_insns']
['emit_cmp_and_jump_insns']
['allocate_dynamic_stack_space']
['emit_stack_save']
['emit_cmp_and_jump_insns']
['emit_conditional_move', 'emit_push_insn']
['emit_conditional_move']
['emit_conditional_move']
['emit_conditional_move']
['emit_conditional_move', 'emit_conditional_move']
['emit_conditional_move']
['emit_conditional_move']
['emit_conditional_move']
['emit_group_load']
['emit_group_load']
['emit_group_load']
['emit_group_load']
['emit_group_load']
['emit_group_load']
['emit_group_load']
['emit_group_load', 'emit_group_load']
['emit_group_load', 'emit_group_load']
['expand_field_assignment', 'fold_rtx', 'legitimize_address', 'memrefs_conflict_p', 'record_giv', 'simplify_comparison', 'thread_prologue_and_epilogue_insns', 'try_crossjump_to_edge', 'validate_replace_rtx_1']
['copy_loop_headers', 'cse_insn', 'memrefs_conflict_p', 'scan_loop', 'schedule_block', 'simplify_comparison', 'try_crossjump_to_edge']
['emit_group_store', 'reload']
['emit_group_store']
['emit_group_store']
['move_deaths']
['emit_group_load', 'emit_group_store']
['emit_group_store']
['emit_group_store']
['emit_group_store']
['emit_indirect_jump']
['emit_indirect_jump']
['clear_reload_reg_in_use']
['get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_imm_disp', 'get_attr_length_immediate', 'get_attr_length_immediate', 'get_attr_length_immediate', 'get_attr_length_immediate', 'get_attr_mode', 'get_attr_modrm', 'get_attr_pent_pair', 'get_attr_prefix_0f', 'get_attr_type', 'get_attr_type']
['clear_reload_reg_in_use', 'finish_spills']
['emit_insns_after', 'expr_killed_p', 'oprs_unchanged_p']
['emit_insns_after']
['emit_insns_after']
['emit_insns_after']
['emit_insns_after', 'emit_insns_after']
['emit_insns_after', 'emit_insns_after']
['emit_insns_after']
['emit_insns_after']
['emit_insns_after']
['emit_insns_after']
['emit_insns_after']
['emit_insns_after']
['emit_insns_after']
['emit_libcall_block', 'loop_optimize']
['emit_libcall_block']
['emit_libcall_block', 'simplify_binary_operation']
['emit_libcall_block', 'gen_reload']
['emit_libcall_block', 'loop_optimize']
['emit_libcall_block', 'emit_swap_insn', 'find_split_point']
['emit_libcall_block']
['can_throw_external', 'can_throw_internal', 'convert_from_eh_region_ranges', 'delete_insn', 'delete_noop_moves', 'emit_libcall_block', 'hash_scan_set', 'mark_all_labels', 'reg_scan_mark_refs']
['adjust_address_1', 'cselib_process_insn', 'eliminate_regs', 'gen_reload', 'simplify_binary_operation']
['consec_sets_giv', 'expand_compound_operation', 'local_alloc']
['emit_library_call_value_1']
['cse_end_of_basic_block', 'delete_output_reload', 'find_reloads_address', 'find_split_point', 'noce_get_alt_condition']
['emit_move_insn']
['emit_move_insn']
['emit_move_insn']
['emit_move_insn_1']
['emit_move_insn_1']
['emit_move_insn_1']
['emit_move_insn_1']
['emit_move_insn_1']
['emit_move_insn_1']
['compare_for_stack_reg', 'emit_no_conflict_block']
['emit_no_conflict_block']
['emit_no_conflict_block']
['copy_insn_list', 'eliminate_regs', 'emit_libcall_block', 'emit_no_conflict_block', 'emit_swap_insn', 'find_split_point', 'loop_iterations', 'make_compound_operation', 'make_extraction', 'memrefs_conflict_p', 'move_for_stack_reg', 'plus_constant_wide', 'record_jump_cond', 'ssa_eliminate_dead_code']
['emit_no_conflict_block']
['noce_get_condition']
['noce_get_condition']
['protect_from_queue', 'protect_from_queue']
['reload_cse_simplify_operands', 'verify_flow_info']
['peephole2_optimize']
['gen_cond_trap']
['gen_cond_trap']
['emit_pop_insn']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['biv_total_increment']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['gen_lowpart_for_combine']
['print_rtl_graph_with_bb']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'cselib_process_insn', 'dw2_asm_output_encoded_addr_rtx', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_eh_return', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_force_to_memory', 'ix86_force_to_memory', 'load_pic_register', 'output_cfi', 'output_constant_def', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'trampoline_address', 'trampoline_address']
['expand_mult']
['emit_push_insn']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'cselib_process_insn', 'dw2_asm_output_encoded_addr_rtx', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_eh_return', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_force_to_memory', 'ix86_force_to_memory', 'load_pic_register', 'output_cfi', 'output_constant_def', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'trampoline_address', 'trampoline_address']
['canonicalize_condition', 'gen_lowpart_for_combine']
['free_for_value_p']
['canonicalize_condition', 'gen_lowpart_for_combine']
['free_for_value_p']
['canonicalize_condition', 'gen_lowpart_for_combine']
['free_for_value_p']
['add_location_or_const_value_attribute', 'gen_lowpart_for_combine']
['add_location_or_const_value_attribute', 'gen_lowpart_for_combine']
['simplify_subreg']
['convert_move', 'ereal_from_int', 'ereal_from_uint']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'cselib_process_insn', 'dw2_asm_output_encoded_addr_rtx', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_eh_return', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_force_to_memory', 'ix86_force_to_memory', 'load_pic_register', 'output_cfi', 'output_constant_def', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'trampoline_address', 'trampoline_address']
['emit_single_push_insn']
['emit_single_push_insn']
['emit_stack_restore']
['emit_stack_save']
['emit_stack_save']
['emit_stack_save']
['emit_stack_save']
['emit_store_flag']
['emit_store_flag_force']
['copy_insn_list', 'distribute_notes', 'emit_libcall_block', 'emit_no_conflict_block', 'emit_swap_insn', 'find_reloads_address_1', 'find_split_point', 'find_split_point', 'make_compound_operation', 'make_extraction', 'mark_used_regs', 'memrefs_conflict_p', 'print_rtl_graph_with_bb', 'record_jump_cond', 'try_combine']
['compare_for_stack_reg', 'compare_for_stack_reg', 'move_for_stack_reg', 'purge_hard_subreg_sets']
['known_cond']
['cleanup_barriers', 'emit_insns_after', 'emit_swap_insn']
['emit_swap_insn', 'refers_to_regno_p']
['emit_swap_insn', 'move_for_stack_reg']
['emit_swap_insn']
['emit_unop_insn']
['emit_unop_insn']
['emit_unop_insn']
['emit_unop_insn']
['find_replacement']
['constrain_operands', 'gen_split_1214']
['error', 'error_with_file_and_line', 'internal_error', 'pedwarn', 'pedwarn_with_file_and_line', 'record_one_set', 'record_one_set', 'warning', 'warning_with_file_and_line']
['emit_store_flag_force', 'ix86_expand_fp_movcc', 'ix86_expand_fp_movcc']
['equiv_constant']
['ereal_from_int', 'ereal_from_uint']
['ereal_from_int', 'ereal_from_int', 'ereal_from_int', 'ereal_from_int', 'ereal_from_uint', 'ereal_from_uint', 'ereal_from_uint', 'ereal_from_uint']
['ereal_from_int', 'ereal_from_int', 'ereal_from_int', 'ereal_from_int', 'ereal_from_uint', 'ereal_from_uint', 'ereal_from_uint', 'ereal_from_uint']
['ereal_from_int', 'ereal_from_int', 'ereal_from_int', 'ereal_from_int', 'ereal_from_uint', 'ereal_from_uint', 'ereal_from_uint', 'ereal_from_uint']
['ereal_from_int', 'ereal_from_int', 'ereal_from_int', 'ereal_from_int', 'ereal_from_uint', 'ereal_from_uint', 'ereal_from_uint', 'ereal_from_uint']
['ereal_from_int', 'ereal_from_uint']
['ereal_from_int', 'ereal_from_int', 'ereal_from_int', 'ereal_from_int', 'ereal_from_uint', 'ereal_from_uint', 'ereal_from_uint', 'ereal_from_uint']
['ereal_from_int', 'ereal_from_int', 'ereal_from_int', 'ereal_from_int', 'ereal_from_uint', 'ereal_from_uint', 'ereal_from_uint', 'ereal_from_uint']
['ereal_from_int', 'ereal_from_int', 'ereal_from_int', 'ereal_from_int', 'ereal_from_uint', 'ereal_from_uint', 'ereal_from_uint', 'ereal_from_uint']
['ereal_from_int', 'ereal_from_int', 'ereal_from_int', 'ereal_from_int', 'ereal_from_uint', 'ereal_from_uint', 'ereal_from_uint', 'ereal_from_uint']
['ereal_ldexp']
['ereal_to_decimal']
['ereal_to_decimal']
['ereal_to_decimal']
['ereal_to_decimal']
['ereal_to_decimal']
['ereal_to_decimal']
['ereal_to_decimal']
['ereal_to_decimal']
['specqsort']
['error', 'error_with_file_and_line', 'internal_error', 'pedwarn', 'pedwarn_with_file_and_line', 'warning', 'warning_with_file_and_line']
['error', 'error', 'error_with_file_and_line', 'error_with_file_and_line', 'pedwarn', 'pedwarn', 'pedwarn_with_file_and_line', 'pedwarn_with_file_and_line', 'warning', 'warning', 'warning_with_file_and_line', 'warning_with_file_and_line']
['error', 'error', 'error_with_file_and_line', 'error_with_file_and_line', 'pedwarn', 'pedwarn', 'pedwarn_with_file_and_line', 'pedwarn_with_file_and_line', 'warning', 'warning', 'warning_with_file_and_line', 'warning_with_file_and_line']
['error_for_asm']
['error_init', 'error_init', 'pedwarn_init', 'pedwarn_init', 'warning_init', 'warning_init']
['error_init', 'pedwarn_init', 'warning_init']
['error_init', 'error_init', 'pedwarn_init', 'pedwarn_init', 'warning_init', 'warning_init']
['error_with_decl']
['error', 'error_with_file_and_line', 'internal_error', 'pedwarn', 'pedwarn_with_file_and_line', 'warning', 'warning_with_file_and_line']
['error', 'error', 'error_with_file_and_line', 'error_with_file_and_line', 'pedwarn', 'pedwarn', 'pedwarn_with_file_and_line', 'pedwarn_with_file_and_line', 'warning', 'warning', 'warning_with_file_and_line', 'warning_with_file_and_line']
['error', 'error', 'error_with_file_and_line', 'error_with_file_and_line', 'pedwarn', 'pedwarn', 'pedwarn_with_file_and_line', 'pedwarn_with_file_and_line', 'warning', 'warning', 'warning_with_file_and_line', 'warning_with_file_and_line']
['parse_output_constraint']
['dw2_asm_output_nstring']
['maybe_read_dollar_number']
['int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p']
['int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p']
['int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p']
['int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p']
['try_combine']
['change_address_1', 'convert_from_ssa', 'copy_loop_headers', 'emit_library_call_value_1', 'expand_function_end', 'expand_inline_function', 'expand_inline_function', 'expected_value_to_br_prob', 'find_if_header', 'find_if_header', 'find_if_header', 'find_reloads_address', 'find_split_point', 'fixup_var_refs_1', 'gen_reload', 'if_then_else_cond', 'insn_extract', 'insns_match_p', 'local_alloc', 'loop_iterations', 'loop_iterations', 'loop_iterations', 'noce_get_alt_condition', 'nonoverlapping_memrefs_p', 'optimize_sibling_and_tail_recursive_calls', 'protect_from_queue', 'purge_addressof_1', 'purge_addressof_1', 'push_to_sequence', 'record_jump_cond', 'redirect_edge_and_branch', 'simplify_shift_const', 'simplify_shift_const', 'store_bit_field', 'thread_prologue_and_epilogue_insns', 'thread_prologue_and_epilogue_insns']
['loop_iterations', 'simplify_shift_const', 'subst_constants', 'subst_stack_regs_pat', 'thread_prologue_and_epilogue_insns']
['estimate_probability']
['count_one_set']
['noce_get_condition']
['known_cond']
['alloc_gcse_mem']
['resolve_operand_name_1']
['etrunci', 'etrunci']
['etrunci', 'etrunci']
['eval_subst']
['eval_subst']
['eval_subst']
['eval_subst']
['exact_real_inverse']
['ssa_const_prop', 'ssa_const_prop']
['ssa_const_prop']
['exp_equiv_p']
['expand_abs']
['expand_arg']
['expand_shift']
['emit_group_store', 'expand_shift', 'ix86_va_start', 'ix86_va_start', 'ix86_va_start']
['expand_shift', 'ix86_va_start']
['expand_shift']
['ix86_va_start']
['ix86_va_start']
['expand_assignment']
['expand_assignment']
['expand_assignment']
['expand_assignment']
['expand_assignment', 'expr_size']
['allocate_dynamic_stack_space', 'expand_eh_region_end_cleanup', 'expand_end_bindings', 'legitimize_pic_address']
['expand_builtin_return_addr', 'ix86_emit_restore_regs_using_mov']
['emit_group_load']
['gen_peephole2_1264', 'gen_peephole2_1266']
['insert_restore']
['expand_twoval_binop', 'expand_twoval_binop']
['ix86_emit_restore_regs_using_mov', 'ix86_emit_save_regs_using_mov']
['change_address']
['gen_peephole2_1264', 'gen_peephole2_1266']
['fixup_memory_subreg', 'insert_restore']
['ix86_emit_restore_regs_using_mov']
['ix86_split_long_move']
['gen_lowpart_for_combine', 'gen_lowpart_for_combine']
['offset_address']
['expand_assignment']
['expand_builtin_expect_jump']
['expand_builtin_expect_jump']
['expand_builtin_expect_jump']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'cselib_process_insn', 'dw2_asm_output_encoded_addr_rtx', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_eh_return', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_force_to_memory', 'ix86_force_to_memory', 'load_pic_register', 'output_cfi', 'output_constant_def', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'trampoline_address', 'trampoline_address']
['classify_argument']
['emit_indirect_jump', 'push_block']
['expand_builtin_init_dwarf_reg_sizes']
['expand_builtin_longjmp']
['expand_builtin_longjmp']
['expand_builtin_longjmp']
['immed_real_const']
['classify_argument']
['compute_transp']
['allocate_dynamic_stack_space']
['expand_builtin_memset']
['expand_builtin_memset']
['expand_builtin_memset']
['expand_builtin_memset']
['expand_builtin_memset']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'cselib_process_insn', 'dw2_asm_output_encoded_addr_rtx', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_eh_return', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_force_to_memory', 'ix86_force_to_memory', 'load_pic_register', 'output_cfi', 'output_constant_def', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'trampoline_address', 'trampoline_address']
['do_store_flag']
['do_store_flag']
['change_address']
['gen_peephole2_1264', 'gen_peephole2_1266']
['fixup_memory_subreg', 'insert_restore']
['expand_builtin_return_addr']
['expand_builtin_return_addr']
['expand_builtin_return_addr']
['expand_builtin_va_arg']
['compute_forward_dependences']
['expand_end_bindings']
['expand_builtin_setjmp_setup']
['expand_builtin_setjmp_setup']
['allocate_dynamic_stack_space']
['allocate_dynamic_stack_space', 'have_add2_insn']
['allocate_dynamic_stack_space', 'have_add2_insn']
['allocate_dynamic_stack_space']
['move_by_pieces']
['emit_cmp_and_jump_insns', 'emit_cmp_and_jump_insns', 'expand_fix', 'probe_stack_range']
['expand_builtin_va_arg']
['expand_builtin_va_arg']
['expand_builtin_va_arg']
['std_expand_builtin_va_arg']
['std_expand_builtin_va_arg']
['distribute_notes', 'expand_call', 'noce_get_alt_condition', 'subst_asm_stack_regs']
['eliminate_regs', 'expand_call', 'force_operand', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'gen_sequence', 'make_memloc', 'simplify_binary_operation', 'simplify_giv_expr', 'simplify_unary_operation']
['emit_block_move']
['make_tree']
['expand_call']
['expand_call']
['peep2_next_insn']
['optimize_inline_calls']
['optimize_inline_calls']
['expand_complex_abs']
['expand_complex_abs', 'expand_increment', 'expand_twoval_binop', 'expand_unop']
['expand_complex_abs']
['expand_complex_abs']
['expand_complex_abs']
['expand_complex_abs']
['expand_complex_abs']
['distribute_notes', 'noce_get_alt_condition', 'scan_loop', 'simplify_giv_expr', 'simplify_relational_operation']
['expand_compound_operation']
['expand_compound_operation']
['expand_compound_operation']
['expand_compound_operation']
['expand_compound_operation']
['expand_fix', 'expand_float', 'find_reloads_subreg_address']
['expand_compound_operation', 'expand_compound_operation']
['expand_compound_operation', 'expand_compound_operation']
['expand_compound_operation', 'expand_compound_operation']
['compute_transp']
['expand_decl']
['expand_decl', 'store_bit_field', 'subst_constants']
['expand_decl']
['expand_decl']
['copy_loop_body', 'expand_function_end', 'fold_rtx', 'legitimize_address', 'output_asm_insn']
['expand_decl', 'trampoline_address']
['expand_decl']
['expand_decl']
['expand_decl']
['expand_decl']
['expand_decl']
['expand_decl']
['expand_decl', 'save_stack_pointer']
['expand_decl']
['expand_decl']
['expand_decl_cleanup']
['expand_eh_region_end_cleanup', 'expand_end_bindings']
['expand_eh_region_end_cleanup']
['expand_eh_return']
['copy_loop_body', 'expand_end_bindings']
['expand_end_bindings']
['expand_end_bindings']
['expand_end_bindings']
['expand_eh_region_end_cleanup', 'expand_end_bindings']
['expand_end_bindings']
['expand_end_bindings']
['expand_end_bindings', 'expand_end_bindings']
['expand_end_bindings', 'expand_end_bindings']
['expand_end_bindings']
['expand_end_bindings']
['expand_end_bindings']
['expand_end_bindings']
['int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p']
['final_scan_insn']
['print_rtl_graph_with_bb']
['can_combine_p', 'cse_set_around_loop', 'emit_group_load']
['gen_sequence']
['expand_start_bindings_and_block']
['force_nonfallthru_and_redirect']
['noce_get_condition', 'noce_get_condition', 'noce_get_condition']
['noce_get_condition', 'noce_get_condition', 'noce_get_condition']
['noce_get_condition', 'noce_get_condition', 'noce_get_condition']
['noce_get_condition', 'noce_get_condition', 'noce_get_condition']
['noce_get_condition', 'noce_get_condition', 'noce_get_condition']
['life_analysis']
['purge_line_number_notes']
['commit_edge_insertions']
['immediate_operand']
['purge_line_number_notes']
['expand_field_assignment']
['expand_field_assignment']
['expand_field_assignment']
['expand_field_assignment']
['expand_field_assignment']
['expand_field_assignment']
['simplify_unary_operation']
['expand_field_assignment']
['expand_field_assignment']
['expand_field_assignment', 'expand_field_assignment']
['expand_field_assignment', 'expand_field_assignment']
['expand_field_assignment', 'expand_field_assignment']
['expand_field_assignment', 'expand_field_assignment']
['expand_fix']
['expand_fix']
['expand_fix', 'expand_fix']
['expand_fix']
['expand_fix', 'expand_fix']
['expand_fix']
['expand_fix']
['expand_fix']
['expand_fix']
['expand_fix', 'expand_fix']
['expand_float']
['expand_float']
['expand_float']
['expand_float']
['expand_float', 'find_reloads_subreg_address']
['expand_float']
['expand_float']
['expand_float']
['emit_library_call_value_1', 'expand_function_end', 'gen_reload', 'insns_match_p', 'local_alloc', 'noce_get_alt_condition', 'simplify_shift_const', 'store_bit_field']
['expand_function_end']
['copy_loop_body', 'expand_function_end', 'fold_rtx', 'legitimize_address', 'output_asm_insn']
['expand_function_end']
['expand_function_end', 'find_reloads_address', 'output_asm_insn']
['convert_from_ssa', 'expand_function_end', 'validate_replace_rtx_1']
['expand_function_end']
['expand_function_end']
['expand_function_start']
['expand_function_start']
['expand_function_start']
['expand_function_start']
['expand_goto', 'expand_inline_function', 'loop_optimize', 'reposition_prologue_and_epilogue_notes']
['expand_goto']
['expand_goto']
['expand_goto', 'gen_reload', 'reposition_prologue_and_epilogue_notes']
['expand_goto']
['expand_goto', 'expand_goto']
['expand_goto', 'expand_goto']
['expand_goto']
['expand_goto']
['expand_goto', 'expand_goto']
['expand_goto', 'expand_goto']
['expand_goto']
['expand_goto']
['expand_goto_internal']
['expand_inc']
['expand_increment']
['expand_complex_abs', 'expand_increment', 'expand_twoval_binop', 'expand_unop']
['expand_increment', 'expand_increment']
['expand_increment', 'expand_increment']
['expand_increment']
['expand_increment']
['expand_increment', 'expand_increment']
['expand_increment', 'expand_increment']
['expand_increment']
['expand_increment']
['expand_increment']
['expand_increment']
['expand_increment']
['expand_increment']
['expand_increment']
['expand_inline_function']
['expand_goto', 'expand_inline_function', 'loop_optimize', 'reposition_prologue_and_epilogue_notes']
['copy_rtx_and_substitute', 'insn_extract']
['convert_from_eh_region_ranges', 'delete_output_reload', 'emit_insns_after', 'expand_inline_function', 'expr_killed_p', 'fold_rtx', 'mark_set_1', 'move_deaths', 'oprs_unchanged_p', 'sched_analyze_2', 'schedule_block', 'shorten_branches', 'subst_stack_regs_pat', 'try_combine']
['schedule_block']
['compare_for_stack_reg', 'eliminate_regs_in_insn', 'expand_inline_function', 'store_expr']
['convert_from_ssa', 'fixup_var_refs_1', 'nonoverlapping_memrefs_p', 'simplify_shift_const']
['regmove_optimize']
['expand_main_function']
['expand_mult']
['expand_mult']
['expand_mult']
['expand_mult']
['expand_mult']
['expand_mult']
['expand_mult_add']
['expand_mult_add']
['expand_mult_add']
['expand_mult_add']
['expand_mult_add']
['expand_mult_add']
['expand_mult_add']
['expand_mult_add']
['expand_mult_add', 'expand_mult_add']
['expand_mult_add', 'expand_mult_add']
['expand_mult_highpart']
['expand_mult_highpart']
['expand_mult_highpart']
['expand_mult_highpart']
['expand_mult_highpart']
['expand_mult_highpart']
['expand_mult_highpart']
['expand_mult_highpart']
['expand_mult_highpart']
['expand_mult_highpart_adjust']
['expand_mult_highpart_adjust']
['rebuild_jump_labels', 'rebuild_jump_labels', 'rebuild_jump_labels']
['expand_end_bindings', 'expand_end_bindings']
['find_reg']
['find_reg']
['find_reg']
['find_reg']
['peep2_find_free_register', 'peep2_find_free_register']
['peep2_find_free_register', 'peep2_find_free_register']
['peep2_find_free_register', 'peep2_find_free_register']
['peep2_find_free_register', 'peep2_find_free_register']
['find_reg']
['find_reg']
['find_reg']
['find_reg']
['expand_return']
['expand_return']
['expand_mult_highpart']
['expand_mult_highpart']
['expand_start_bindings_and_block']
['expand_start_case', 'run_directive']
['expand_stmt']
['expand_stmt']
['expand_stmt']
['c_add_case_label', 'c_add_case_label']
['c_add_case_label', 'c_add_case_label']
['expand_twoval_binop']
['expand_twoval_binop']
['expand_twoval_binop', 'expand_twoval_binop']
['expand_twoval_binop']
['expand_complex_abs', 'expand_increment', 'expand_twoval_binop', 'expand_unop']
['expand_twoval_binop', 'expand_twoval_binop']
['expand_twoval_binop', 'expand_twoval_binop']
['expand_twoval_binop']
['expand_twoval_binop']
['expand_twoval_binop']
['expand_twoval_binop']
['expand_unop', 'expand_unop']
['expand_complex_abs', 'expand_increment', 'expand_twoval_binop', 'expand_unop']
['expand_unop']
['expand_unop', 'expand_unop']
['expand_unop']
['expand_unop']
['expand_unop']
['expected_value_to_br_prob', 'push_to_sequence']
['copy_loop_headers', 'expected_value_to_br_prob', 'squeeze_notes']
['expected_value_to_br_prob']
['expected_value_to_br_prob', 'expected_value_to_br_prob']
['expected_value_to_br_prob', 'expected_value_to_br_prob']
['expected_value_to_br_prob', 'expr_killed_p', 'oprs_unchanged_p']
['expected_value_to_br_prob']
['expected_value_to_br_prob']
['expected_value_to_br_prob', 'expected_value_to_br_prob']
['expected_value_to_br_prob', 'expected_value_to_br_prob']
['expand_builtin_expect_jump']
['emit_insns_after', 'expr_killed_p', 'oprs_unchanged_p']
['expr_killed_p']
['expected_value_to_br_prob', 'expr_killed_p', 'oprs_unchanged_p']
['expr_killed_p']
['expr_killed_p']
['expr_killed_p', 'oprs_unchanged_p']
['expr_killed_p']
['expand_assignment', 'expr_size']
['check_asm_stack_operands', 'eliminate_regs', 'express_from', 'noce_get_alt_condition', 'record_jump_cond', 'subst_constants']
['express_from']
['express_from']
['express_from_1', 'scan_loop']
['express_from_1']
['express_from_1', 'express_from_1']
['express_from_1', 'express_from_1']
['expunge_block', 'expunge_block_nocompact']
['expunge_block', 'expunge_block_nocompact']
['expunge_block', 'expunge_block_nocompact']
['expunge_block', 'expunge_block_nocompact']
['expunge_block', 'expunge_block_nocompact', 'merge_blocks_nomove']
['expunge_block', 'expunge_block_nocompact']
['expunge_block', 'expunge_block_nocompact']
['expunge_block', 'expunge_block_nocompact']
['expunge_block', 'expunge_block_nocompact']
['expunge_block', 'expunge_block_nocompact']
['expunge_block', 'expunge_block_nocompact']
['expunge_block', 'expunge_block_nocompact', 'merge_blocks_nomove']
['expunge_block', 'expunge_block_nocompact']
['expunge_block', 'expunge_block_nocompact']
['extend_value_for_giv', 'extend_value_for_giv']
['extend_value_for_giv', 'extend_value_for_giv']
['extend_value_for_giv', 'extend_value_for_giv']
['extend_value_for_giv', 'extend_value_for_giv']
['combine_instructions', 'extract_bit_field']
['adjust_address_1', 'copy_insn_list', 'emit_library_call_value_1', 'extract_bit_field', 'noce_get_alt_condition']
['emit_no_conflict_block']
['simplify_giv_expr']
['extract_constrain_insn_cached', 'extract_insn_cached']
['extract_constrain_insn_cached', 'extract_insn_cached']
['extract_constrain_insn_cached']
['extract_fixed_bit_field']
['extract_fixed_bit_field']
['extract_fixed_bit_field']
['extract_insn', 'peephole2_insns', 'recog', 'split_insns']
['extract_insn']
['extract_insn']
['extract_insn']
['extract_insn']
['extract_insn']
['extract_insn']
['extract_insn']
['extract_insn']
['extract_insn']
['extract_insn']
['extract_insn']
['extract_insn']
['extract_insn']
['extract_insn']
['extract_constrain_insn_cached', 'extract_insn_cached']
['extract_constrain_insn_cached', 'extract_insn_cached']
['extract_split_bit_field']
['extract_split_bit_field']
['extract_split_bit_field']
['verify_flow_info']
['status_warning']
['fatal_io_error', 'sorry', 'verbatim']
['fatal_io_error', 'sorry', 'verbatim']
['fatal_io_error', 'sorry']
['fatal_io_error']
['fatal_io_error']
['fatal_io_error', 'sorry']
['fatal_io_error']
['fatal_io_error']
['print_operand']
['field_byte_offset']
['concat_loc_descriptor', 'final']
['final', 'rebuild_jump_labels']
['final']
['final', 'merge_blocks_nomove']
['final']
['final', 'final', 'merge_blocks_nomove', 'merge_blocks_nomove']
['final', 'final', 'merge_blocks_nomove', 'merge_blocks_nomove']
['final']
['final', 'final', 'final', 'final']
['final', 'final', 'final', 'final']
['final', 'final', 'final', 'final']
['final', 'final', 'final', 'final']
['final']
['final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value']
['final_biv_value']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value']
['final_biv_value']
['final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value']
['final_giv_value']
['final_giv_value']
['final_scan_insn']
['final_scan_insn', 'final_scan_insn']
['final_scan_insn', 'final_scan_insn']
['staticp']
['finalize_type_size']
['finalize_type_size']
['gen_binary']
['gen_binary']
['gen_binary']
['gen_binary']
['build1', 'cpp_push_buffer', 'output_asm_insn', 'reposition_prologue_and_epilogue_notes']
['subst_indexed_address']
['find_base_term', 'memory_address', 'replace_pseudos_in_call_usage', 'restore_line_notes']
['find_base_term']
['find_base_term', 'replace_pseudos_in_call_usage', 'replace_pseudos_in_call_usage']
['find_base_term']
['find_base_term']
['find_base_term', 'find_base_term']
['find_base_term']
['find_base_term']
['find_base_term']
['find_base_term', 'find_base_term']
['known_cond', 'num_sign_bit_copies', 'record_value_for_reg']
['find_base_term', 'memory_address', 'replace_pseudos_in_call_usage', 'restore_line_notes']
['record_value_for_reg', 'true_dependence']
['num_sign_bit_copies', 'record_value_for_reg']
['num_sign_bit_copies']
['find_base_term']
['find_base_term']
['cse_main', 'merge_blocks_nomove', 'restore_line_notes', 'rm_line_notes', 'rm_line_notes', 'save_line_notes']
['adjust_address_1', 'copy_loop_headers', 'cselib_process_insn', 'eliminate_regs_in_insn', 'find_basic_blocks']
['compute_forward_dependences', 'copy_loop_headers', 'cse_basic_block', 'delete_related_insns', 'eliminate_regs_in_insn', 'find_basic_blocks', 'find_if_header', 'fixup_var_refs_insn', 'redirect_edge_and_branch', 'reload_cse_regs', 'scan_loop', 'try_crossjump_to_edge']
['find_basic_blocks']
['find_basic_blocks']
['find_basic_blocks']
['find_basic_blocks']
['find_basic_blocks']
['find_basic_blocks']
['find_basic_blocks']
['find_basic_blocks']
['merge_blocks_nomove', 'tidy_fallthru_edge']
['simplify_rtx']
['find_comparison_args']
['find_comparison_args']
['find_comparison_args']
['find_comparison_args', 'find_comparison_args', 'find_comparison_args', 'rm_line_notes']
['find_comparison_args']
['find_comparison_args']
['find_comparison_args', 'find_comparison_args', 'find_comparison_args', 'rm_line_notes']
['find_comparison_args', 'find_comparison_args', 'find_comparison_args', 'rm_line_notes']
['eliminate_regs', 'find_dummy_reload', 'sched_analyze_2']
['find_dummy_reload']
['copy_loop_headers', 'find_dummy_reload', 'insn_extract', 'redirect_edge_and_branch']
['find_dummy_reload']
['find_dummy_reload']
['find_dummy_reload']
['find_dummy_reload', 'find_dummy_reload']
['find_dummy_reload', 'find_dummy_reload']
['combine_givs']
['find_equiv_reg']
['copy_loop_body', 'find_equiv_reg', 'local_alloc', 'optimize_sibling_and_tail_recursive_calls']
['find_equiv_reg']
['find_equiv_reg']
['find_equiv_reg']
['find_equiv_reg', 'find_equiv_reg']
['find_equiv_reg']
['find_free_reg']
['find_free_reg']
['find_free_reg']
['find_free_reg']
['mark_reg']
['mark_reg']
['reg_is_born']
['reg_is_born']
['clear_reload_reg_in_use', 'insert', 'mark_used_regs_combine']
['calculate_dominance_info', 'find_free_reg', 'insert', 'mark_reg_death', 'mark_used_regs_combine', 'regrename_optimize']
['copy_loop_headers', 'find_if_header']
['compute_forward_dependences', 'copy_loop_headers', 'cse_basic_block', 'delete_related_insns', 'eliminate_regs_in_insn', 'find_basic_blocks', 'find_if_header', 'fixup_var_refs_insn', 'redirect_edge_and_branch', 'reload_cse_regs', 'scan_loop', 'try_crossjump_to_edge']
['adjust_address_1', 'check_asm_stack_operands', 'convert_from_ssa', 'copy_loop_body', 'copy_loop_body', 'copy_loop_headers', 'copy_rtx_and_substitute', 'cse_basic_block', 'cse_insn', 'eliminate_regs', 'expand_function_end', 'express_from', 'find_dummy_reload', 'find_equiv_reg', 'find_if_header', 'find_reloads_address', 'find_split_point', 'find_split_point', 'fixup_var_refs_1', 'insn_extract', 'insn_extract', 'insn_extract', 'insn_extract', 'insn_extract', 'legitimize_address', 'local_alloc', 'local_alloc', 'noce_get_alt_condition', 'optimize_sibling_and_tail_recursive_calls', 'optimize_sibling_and_tail_recursive_calls', 'optimize_sibling_and_tail_recursive_calls', 'optimize_sibling_and_tail_recursive_calls', 'optimize_sibling_and_tail_recursive_calls', 'print_rtl_graph_with_bb', 'print_rtx', 'purge_addressof_1', 'purge_line_number_notes', 'record_jump_cond', 'record_jump_cond', 'redirect_edge_and_branch', 'redirect_edge_and_branch', 'regmove_optimize', 'reload_cse_regs', 'restore_line_notes', 'save_for_inline', 'simplify_binary_operation', 'simplify_giv_expr', 'store_bit_field', 'subst_constants', 'subst_constants', 'subst_stack_regs_pat', 'try_crossjump_to_edge', 'try_crossjump_to_edge', 'validate_replace_rtx_1']
['subst_asm_stack_regs']
['fixup_var_refs_1', 'nonoverlapping_memrefs_p']
['loop_iterations', 'thread_prologue_and_epilogue_insns']
['find_if_header']
['ggc_mark_trees']
['constrain_operands', 'find_matches']
['find_matches', 'ix86_attr_length_immediate_default']
['find_matches']
['find_matches']
['find_matches']
['find_matches', 'find_matches']
['find_matches', 'find_matches']
['find_matches', 'find_matches']
['find_matches', 'find_matches']
['find_matches', 'find_matches']
['find_matches', 'find_matches']
['find_mem_givs', 'find_mem_givs']
['find_mem_givs', 'find_mem_givs']
['find_mem_givs']
['find_mem_givs', 'find_mem_givs']
['find_mem_givs', 'find_mem_givs']
['find_mem_givs']
['find_mem_givs']
['find_oldest_value_reg']
['cselib_lookup', 'find_oldest_value_reg']
['find_oldest_value_reg']
['find_placeholder']
['find_reg']
['find_reg']
['find_reg']
['find_reg']
['find_reg']
['find_reg']
['peep2_find_free_register']
['find_reg']
['cselib_invalidate_regno', 'kill_value', 'mark_reload_reg_in_use', 'peep2_find_free_register']
['find_reg']
['find_reg_fusage']
['find_regno_fusage']
['find_regno_note']
['canonicalize_condition']
['mark_home_live']
['subst_constants']
['global_alloc', 'move_for_stack_reg', 'subst_stack_regs_pat']
['expand_inline_function']
['adjust_address_1', 'copy_loop_headers', 'find_if_header', 'protect_from_queue', 'record_jump_cond', 'simplify_binary_operation', 'split_1']
['copy_loop_headers', 'distribute_links', 'find_reloads', 'find_reloads', 'find_reloads_address_1', 'general_induction_var', 'get_attr_prefix_0f', 'if_then_else_cond', 'record_dead_and_set_regs', 'record_value_for_reg', 'regrename_optimize', 'rename_block', 'simplify_relational_operation', 'simplify_relational_operation', 'subst_indexed_address']
['simplify_relational_operation']
['apply_change_group', 'copy_insn_notes', 'emit_libcall_block', 'gen_reload', 'get_attr_prefix_0f', 'if_then_else_cond', 'ix86_split_long_move', 'ix86_split_to_parts', 'loop_iterations', 'loop_optimize', 'loop_optimize', 'make_extraction', 'memory_address', 'move_deaths', 'move_for_stack_reg', 'nonoverlapping_memrefs_p', 'nonoverlapping_memrefs_p', 'push_reload', 'record_jump_cond', 'regmove_optimize', 'reload_cse_regs', 'rm_other_notes', 'save_for_inline', 'shorten_branches', 'subst_asm_stack_regs', 'try_copy_prop', 'unroll_loop', 'visit_expression']
['cse_end_of_basic_block', 'delete_output_reload', 'find_reloads_address', 'find_split_point', 'noce_get_alt_condition']
['find_reloads_address']
['find_reloads_address']
['expand_function_end', 'find_reloads_address', 'output_asm_insn']
['find_reloads_address', 'find_split_point', 'insn_extract', 'optimize_sibling_and_tail_recursive_calls']
['find_reloads_address_1', 'mark_used_regs', 'try_combine']
['find_reloads_address_1']
['cse_insn', 'find_reloads_address_1', 'noce_get_condition', 'record_giv', 'scan_loop', 'sched_analyze_2', 'unroll_loop']
['find_reloads_address_1']
['find_reloads_address_1']
['find_reloads_address_1']
['find_reloads_address_1']
['find_reloads_address_1']
['expand_inline_function', 'find_reloads_address_1', 'insn_extract']
['find_reloads_address_part', 'unroll_loop']
['find_reloads_address_part']
['find_reloads_address_part']
['find_reloads_address_part']
['find_reloads_address_part']
['find_reloads_address_part']
['find_reloads_address_part']
['find_reloads_address_part', 'find_reloads_address_part']
['find_reloads_address_part', 'find_reloads_address_part']
['expand_float', 'find_reloads_subreg_address']
['find_reloads_subreg_address', 'find_reloads_toplev']
['find_reloads_toplev']
['find_reloads_toplev']
['find_reloads_toplev']
['find_reloads_toplev']
['find_reloads_toplev']
['find_reloads_subreg_address', 'find_reloads_toplev']
['find_reloads_toplev']
['find_replacement']
['find_replacement']
['find_replacement']
['find_replacement']
['emit_group_store']
['eliminate_regs_in_insn']
['move_deaths', 'refers_to_regno_for_reload_p', 'reposition_prologue_and_epilogue_notes', 'reposition_prologue_and_epilogue_notes']
['oprs_not_set_p', 'oprs_unchanged_p', 'purge_line_number_notes', 'restore_line_notes']
['force_operand', 'refers_to_regno_p']
['save_line_notes']
['save_line_notes']
['reload_combine_note_use']
['oprs_not_set_p', 'oprs_unchanged_p', 'purge_line_number_notes', 'restore_line_notes']
['copy_insn_1']
['find_single_use_1', 'find_single_use_1']
['find_single_use_1', 'find_single_use_1']
['reload_combine_note_use']
['mark_used_regs']
['sched_analyze_1', 'sched_analyze_1']
['find_single_use_1']
['find_single_use_1']
['find_single_use_1']
['find_single_use_1']
['find_single_use_1']
['find_single_use_1', 'find_single_use_1']
['find_single_use_1', 'find_single_use_1']
['find_single_use_1']
['find_single_use_1']
['find_single_use_1']
['find_single_use_1', 'find_single_use_1']
['find_single_use_1', 'find_single_use_1']
['emit_libcall_block', 'emit_swap_insn', 'find_split_point']
['cse_end_of_basic_block', 'delete_output_reload', 'find_reloads_address', 'find_split_point', 'noce_get_alt_condition']
['find_split_point', 'init_alias_analysis']
['find_split_point']
['find_split_point']
['find_split_point', 'optimize_sibling_and_tail_recursive_calls', 'purge_addressof_1']
['find_reloads_address', 'find_split_point', 'insn_extract', 'optimize_sibling_and_tail_recursive_calls']
['find_split_point']
['find_split_point']
['eliminate_regs_in_insn', 'find_split_point', 'fixup_var_refs_1', 'if_then_else_cond']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['emit_group_store', 'emit_group_store']
['gen_lowpart_for_combine', 'life_analysis']
['gen_lowpart_for_combine']
['hash_scan_set']
['hash_scan_set']
['hash_scan_set']
['plus_constant_wide']
['replace_call_placeholder']
['named_section_flags']
['find_valid_class']
['find_valid_class']
['finish_eh_generation']
['finish_eh_generation', 'finish_eh_generation', 'ix86_emit_save_regs_using_mov']
['finish_eh_generation', 'finish_eh_generation']
['finish_eh_generation', 'ix86_emit_save_regs_using_mov']
['finish_enum']
['finish_enum']
['finish_init']
['finish_init', 'pop_init_level', 'pop_init_level']
['finish_init']
['finish_init', 'finish_init']
['finish_init', 'finish_init']
['finish_init', 'pop_init_level', 'set_designator', 'set_init_index', 'set_init_label', 'set_init_label']
['finish_init']
['finish_init']
['finish_init']
['finish_init']
['finish_spills']
['finish_spills']
['finish_struct']
['fix_lexical_addr']
['fix_lexical_addr']
['get_attr_modrm', 'get_attr_modrm']
['fixup_abnormal_edges']
['copyprop_hardreg_forward', 'copyprop_hardreg_forward']
['fixup_memory_subreg']
['fixup_memory_subreg']
['fixup_memory_subreg']
['cleanup_barriers']
['fixup_stack_1']
['estimate_probability', 'subst_stack_regs_pat']
['fold_rtx', 'purge_addressof_1', 'ssa_eliminate_dead_code']
['expand_inline_function']
['compare_for_stack_reg', 'delete_noop_moves', 'expand_function_end', 'fixup_var_refs_1', 'fold_rtx', 'local_alloc', 'mark_all_labels', 'offset_address', 'rtl_for_decl_location']
['fixup_var_refs_1', 'sched_analyze_2', 'thread_prologue_and_epilogue_insns']
['purge_addressof_1', 'ssa_eliminate_dead_code']
['regmove_optimize']
['compute_forward_dependences', 'copy_loop_headers', 'cse_basic_block', 'delete_related_insns', 'eliminate_regs_in_insn', 'find_basic_blocks', 'find_if_header', 'fixup_var_refs_insn', 'redirect_edge_and_branch', 'reload_cse_regs', 'scan_loop', 'try_crossjump_to_edge']
['fixup_var_refs_insn', 'visit_expression']
['cse_basic_block', 'fixup_var_refs_insn', 'local_alloc']
['fixup_var_refs_insn']
['fixup_var_refs_insn']
['fixup_var_refs_insn']
['flow_delete_block_noexpunge']
['rm_line_notes', 'scope_to_insns_initialize']
['push_to_sequence']
['emit_insns_after', 'emit_insns_after']
['cleanup_barriers', 'emit_insns_after', 'emit_insns_after', 'final', 'move_for_stack_reg', 'purge_line_number_notes', 'purge_line_number_notes', 'purge_line_number_notes', 'push_to_sequence', 'rm_line_notes', 'scope_to_insns_initialize', 'simplify_plus_minus']
['flow_loops_find']
['flow_loops_find']
['flow_loops_find']
['flow_loops_find']
['sched_analyze_insn', 'sched_analyze_insn']
['sched_analyze_insn', 'sched_analyze_insn']
['find_base_term', 'find_base_term']
['fold_binary_op_with_conditional_arg']
['output_init_element']
['immed_real_const', 'real_onep', 'real_twop', 'real_zerop']
['expand_assignment', 'expr_size']
['really_start_incremental_init']
['mark_set_1']
['can_combine_p', 'reload', 'subst_asm_stack_regs']
['fold_rtx']
['compute_forward_dependences', 'delete_noop_moves', 'find_equiv_reg', 'fold_rtx', 'legitimize_address', 'mark_all_labels', 'offset_address', 'purge_addressof_1', 'thread_prologue_and_epilogue_insns', 'validate_replace_rtx_1']
['redirect_edge_and_branch']
['record_giv']
['apply_distributive_law', 'copy_insn_list', 'df_uses_record', 'estimate_probability', 'fold_rtx', 'instantiate_virtual_regs_1', 'make_compound_operation', 'optimize_sibling_and_tail_recursive_calls', 'record_value_for_reg', 'reload', 'reload_cse_regs', 'reload_cse_regs', 'simplify_giv_expr', 'simplify_plus_minus', 'ssa_eliminate_dead_code', 'subst_constants', 'subst_stack_regs_pat', 'thread_prologue_and_epilogue_insns', 'try_crossjump_to_edge']
['compare_for_stack_reg', 'copy_insn_notes', 'dwarf2out_frame_debug_expr', 'emit_no_conflict_block']
['gcse_main']
['for_each_insn_in_loop', 'replace_pseudos_in_call_usage', 'try_copy_prop']
['for_each_insn_in_loop']
['for_each_insn_in_loop']
['for_each_insn_in_loop']
['for_each_insn_in_loop']
['for_each_insn_in_loop']
['copy_loop_body', 'distribute_notes', 'elimination_effects', 'noce_get_alt_condition', 'scan_loop', 'simplify_giv_expr', 'simplify_relational_operation']
['for_each_insn_in_loop']
['for_each_insn_in_loop']
['for_each_insn_in_loop']
['for_each_insn_in_loop', 'for_each_insn_in_loop']
['for_each_insn_in_loop', 'for_each_insn_in_loop']
['find_single_use_1', 'mark_used_regs', 'protect_from_queue', 'record_dead_and_set_regs', 'subst_constants']
['num_sign_bit_copies']
['cfg_layout_finalize', 'compute_transp', 'find_base_term', 'noce_get_condition', 'rtl_for_decl_location']
['mark_all_labels']
['assemble_start_function', 'function_section']
['adjust_address_1', 'compare_for_stack_reg', 'convert_from_eh_region_ranges', 'copy_loop_headers', 'distribute_notes', 'eliminate_regs', 'expand_inline_function', 'find_if_header', 'legitimize_pic_address', 'record_giv', 'record_jump_cond', 'redirect_edge_and_branch', 'reposition_prologue_and_epilogue_notes', 'schedule_block', 'ssa_const_prop', 'subst_constants']
['apply_change_group', 'clear_storage', 'clear_storage', 'clear_storage', 'distribute_notes', 'elimination_effects', 'elimination_effects', 'emit_block_move', 'emit_block_move', 'emit_block_move', 'expand_call', 'expand_call', 'expand_mult_add', 'expand_mult_add', 'expand_shift', 'find_reloads_address_1', 'find_reloads_address_1', 'find_reloads_address_1', 'for_each_insn_in_loop', 'if_then_else_cond', 'ix86_va_start', 'ix86_va_start', 'ix86_va_start', 'ix86_va_start', 'loop_iterations', 'loop_optimize', 'make_extraction', 'make_tree', 'move_deaths', 'noce_get_alt_condition', 'nonoverlapping_memrefs_p', 'rm_other_notes', 'save_line_notes', 'schedule_block', 'squeeze_notes', 'std_expand_builtin_va_start', 'store_expr', 'subst_asm_stack_regs', 'subst_asm_stack_regs', 'visit_expression']
['can_combine_p', 'clear_storage', 'copy_rtx_and_substitute', 'expand_call', 'expand_function_end', 'gen_sequence', 'if_then_else_cond', 'insn_extract', 'record_giv', 'schedule_block', 'simplify_giv_expr', 'ssa_const_prop', 'ssa_eliminate_dead_code', 'subst_asm_stack_regs', 'visit_expression']
['free_basic_block_vars']
['can_combine_p', 'cse_set_around_loop', 'df_ref_record', 'df_ref_record', 'df_ref_record', 'df_ref_record', 'estimate_probability', 'merge_blocks_nomove', 'noce_get_condition', 'push_to_sequence', 'refers_to_regno_p', 'reposition_prologue_and_epilogue_notes', 'rm_other_notes', 'save_line_notes']
['can_combine_p', 'cse_set_around_loop', 'df_ref_record', 'df_ref_record', 'df_ref_record', 'df_ref_record', 'estimate_probability', 'merge_blocks_nomove', 'noce_get_condition', 'push_to_sequence', 'refers_to_regno_p', 'reposition_prologue_and_epilogue_notes', 'rm_other_notes', 'save_line_notes']
['ssa_const_prop']
['ssa_const_prop']
['gen_binary', 'gen_lowpart_for_combine']
['refers_to_regno_for_reload_p']
['ssa_const_prop']
['force_nonfallthru_and_redirect', 'force_nonfallthru_and_redirect']
['force_nonfallthru_and_redirect']
['force_nonfallthru_and_redirect']
['merge_blocks_nomove']
['force_not_mem']
['eliminate_regs', 'expand_call', 'force_operand', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'gen_sequence', 'make_memloc', 'simplify_binary_operation', 'simplify_giv_expr', 'simplify_unary_operation']
['force_operand', 'save_for_inline']
['force_operand']
['force_operand']
['force_operand']
['find_base_term']
['force_operand']
['force_operand']
['force_operand', 'force_operand']
['force_operand', 'force_operand']
['force_operand']
['force_to_mode']
['force_to_mode']
['force_to_mode']
['force_to_mode']
['peephole2_optimize']
['simplify_rtx']
['add_location_or_const_value_attribute']
['add_location_or_const_value_attribute']
['form_sum', 'make_extraction']
['form_sum']
['form_sum']
['form_sum']
['form_sum']
['form_sum']
['form_sum', 'form_sum']
['form_sum', 'form_sum']
['form_sum', 'form_sum']
['form_sum', 'form_sum']
['form_sum']
['output_asm_insn']
['get_attr_mode']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_i387']
['get_attr_i387']
['get_attr_i387']
['get_attr_i387']
['get_attr_i387']
['get_attr_i387']
['get_attr_athlon_fpunits']
['get_attr_i387']
['get_attr_i387']
['get_attr_prefix_rep']
['get_attr_pent_pair', 'get_attr_prefix_0f', 'get_attr_prefix_rep', 'insn_current_length', 'insn_default_length']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_i387']
['get_attr_i387']
['get_attr_i387']
['get_attr_i387']
['get_attr_i387']
['get_attr_i387']
['get_attr_athlon_fpunits']
['get_attr_i387']
['get_attr_i387']
['get_attr_imm_disp', 'get_attr_prefix_0f']
['get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits']
['get_attr_length_immediate']
['function_units_used']
['get_attr_length_immediate']
['function_units_used']
['get_attr_length_immediate']
['function_units_used']
['get_attr_length_immediate']
['get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits']
['get_attr_length_immediate']
['get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits']
['get_attr_length_immediate']
['get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits']
['get_attr_length_immediate']
['function_units_used']
['get_attr_length_immediate']
['get_attr_i387']
['free_after_compilation']
['free_after_compilation']
['free_after_compilation']
['free_after_compilation']
['free_after_compilation']
['free_after_compilation']
['free_after_compilation']
['free_after_compilation']
['free_after_compilation']
['free_basic_block_vars']
['set_diagnostic_context']
['free_for_value_p']
['free_for_value_p']
['free_gcse_mem']
['memory_address', 'memory_address']
['expand_fix']
['function_cannot_inline_p']
['function_cannot_inline_p']
['function_cannot_inline_p']
['assemble_start_function', 'function_section']
['assemble_start_function', 'function_section']
['function_units_used']
['function_units_used']
['function_units_used']
['extend_value_for_giv', 'extend_value_for_giv']
['gcse_main', 'gcse_main']
['gcse_main', 'gcse_main']
['gcse_main']
['gcse_main', 'gcse_main']
['gcse_main', 'gcse_main']
['gcse_main', 'gcse_main']
['gcse_main', 'gcse_main']
['gcse_main', 'gcse_main']
['gcse_main', 'gcse_main']
['gcse_main', 'get_attr_prefix_0f']
['gcse_main']
['gcse_main']
['gcse_main']
['gen_add2_insn']
['gen_add2_insn']
['gen_add2_insn']
['gen_add2_insn']
['gen_add2_insn']
['gen_add3_insn', 'gen_sub3_insn']
['gen_add3_insn', 'gen_sub3_insn']
['gen_add3_insn', 'gen_sub3_insn']
['gen_add3_insn', 'gen_sub3_insn']
['gen_add3_insn', 'gen_sub3_insn']
['rtx_equal_for_field_assignment_p']
['scope_die_for']
['gen_type', 'gen_type']
['gen_aux_info_record']
['eliminate_regs', 'expand_call', 'force_operand', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'gen_sequence', 'make_memloc', 'simplify_binary_operation', 'simplify_giv_expr', 'simplify_unary_operation']
['gen_binary']
['gen_binary', 'gen_lowpart_for_combine']
['gen_binary']
['gen_binary', 'gen_lowpart_for_combine']
['gen_binary']
['gen_binary', 'gen_lowpart_for_combine']
['gen_binary', 'gen_binary', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'gen_sequence', 'make_memloc', 'simplify_unary_operation']
['gen_block_die']
['gen_call']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'cselib_process_insn', 'dw2_asm_output_encoded_addr_rtx', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_eh_return', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_force_to_memory', 'ix86_force_to_memory', 'load_pic_register', 'output_cfi', 'output_constant_def', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'trampoline_address', 'trampoline_address']
['gen_call_pop', 'gen_call_value_pop']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'cselib_process_insn', 'dw2_asm_output_encoded_addr_rtx', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_eh_return', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_force_to_memory', 'ix86_force_to_memory', 'load_pic_register', 'output_cfi', 'output_constant_def', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'trampoline_address', 'trampoline_address']
['gen_call_value']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'cselib_process_insn', 'dw2_asm_output_encoded_addr_rtx', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_eh_return', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_force_to_memory', 'ix86_force_to_memory', 'load_pic_register', 'output_cfi', 'output_constant_def', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'trampoline_address', 'trampoline_address']
['gen_call_pop', 'gen_call_value_pop']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'cselib_process_insn', 'dw2_asm_output_encoded_addr_rtx', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_eh_return', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_force_to_memory', 'ix86_force_to_memory', 'load_pic_register', 'output_cfi', 'output_constant_def', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'trampoline_address', 'trampoline_address']
['gen_cmpstrsi']
['gen_cmpstrsi']
['build_compound_literal']
['dbxout_type']
['dbxout_type']
['dbxout_type']
['dbxout_symbol_location']
['dbxout_type']
['gen_cond_trap']
['gen_conditional_trap']
['general_induction_var']
['purge_addressof']
['dwarf2out_abstract_function', 'dwarf2out_source_line', 'gen_decl_die', 'gen_subprogram_die']
['dwarf2out_decl', 'gen_decl_die', 'gen_decl_die', 'gen_subprogram_die', 'gen_subprogram_die']
['dwarf2out_decl', 'gen_decl_die', 'gen_decl_die', 'gen_subprogram_die', 'gen_subprogram_die']
['expand_increment']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'cselib_process_insn', 'dw2_asm_output_encoded_addr_rtx', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_eh_return', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_force_to_memory', 'ix86_force_to_memory', 'load_pic_register', 'output_cfi', 'output_constant_def', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'trampoline_address', 'trampoline_address']
['gen_eh_return']
['gen_move_insn', 'gen_move_insn']
['function_cannot_inline_p']
['function_cannot_inline_p']
['copy_insn_list', 'try_copy_prop']
['const_hash', 'gen_formal_types_die']
['gen_highpart']
['gen_lexical_block_die']
['ix86_function_value']
['dwarf2out_frame_debug']
['gen_lexical_block_die']
['gen_lowpart']
['eliminate_regs', 'expand_call', 'force_operand', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'gen_sequence', 'make_memloc', 'simplify_binary_operation', 'simplify_giv_expr', 'simplify_unary_operation']
['gen_lowpart_common']
['gen_lowpart_common', 'get_secondary_mem']
['gen_lowpart_common']
['gen_lowpart_common']
['gen_lowpart_common']
['gen_lowpart_common']
['gen_lowpart_common']
['gen_lowpart_common']
['gen_lowpart_common']
['eliminate_regs', 'expand_call', 'force_operand', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'gen_sequence', 'make_memloc', 'simplify_binary_operation', 'simplify_giv_expr', 'simplify_unary_operation']
['subst']
['gen_lowpart_for_combine']
['gen_lowpart_for_combine']
['gen_lowpart_for_combine']
['gen_binary', 'gen_binary', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'gen_sequence', 'make_memloc', 'simplify_unary_operation']
['gen_lowpart_for_combine']
['gen_binary', 'gen_lowpart_for_combine']
['gen_binary', 'gen_binary', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'gen_sequence', 'make_memloc', 'simplify_unary_operation']
['subst']
['gen_lowpart_for_combine']
['gen_lowpart_for_combine', 'gen_lowpart_for_combine']
['gen_lowpart_for_combine', 'gen_lowpart_for_combine']
['gen_binary', 'gen_lowpart_for_combine']
['gen_sse_movdfcc', 'gen_sse_movsfcc']
['gen_sse_movdfcc', 'gen_sse_movsfcc']
['gen_mem_addressof']
['gen_move_insn']
['gen_move_insn', 'gen_move_insn']
['gen_move_insn', 'gen_move_insn']
['gen_peephole2_1164', 'gen_peephole2_1165']
['gen_peephole2_1164', 'gen_peephole2_1165']
['gen_peephole2_1262']
['gen_peephole2_1263']
['gen_peephole2_1264', 'gen_peephole2_1266']
['gen_peephole2_1264', 'gen_peephole2_1266']
['gen_reg_rtx']
['emit_libcall_block', 'gen_reload']
['gen_reload', 'ix86_split_long_move', 'ix86_split_to_parts', 'move_for_stack_reg', 'try_copy_prop']
['gen_reload', 'protect_from_queue']
['adjust_address_1', 'cselib_process_insn', 'eliminate_regs', 'gen_reload', 'simplify_binary_operation']
['emit_library_call_value_1', 'expand_function_end', 'gen_reload', 'insns_match_p', 'local_alloc', 'noce_get_alt_condition', 'simplify_shift_const', 'store_bit_field']
['gen_reload']
['gen_reload']
['expand_goto', 'gen_reload', 'reposition_prologue_and_epilogue_notes']
['gen_reload']
['gen_rtvec', 'gen_rtvec_v']
['gen_rtvec']
['gen_rtvec']
['gen_rtvec', 'gen_rtvec']
['gen_rtvec', 'gen_rtvec']
['gen_rtvec', 'gen_rtvec']
['gen_rtvec']
['gen_rtvec']
['gen_rtvec']
['gen_rtvec_v']
['gen_rtvec_v']
['gen_rtvec_v']
['gen_rtvec_v']
['gen_rtvec_v']
['gen_rtvec_v']
['gen_rtvec_v']
['gen_rtvec_v']
['gen_rtvec_v']
['find_oldest_value_reg', 'simplify_unary_operation']
['eliminate_regs', 'expand_call', 'force_operand', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'gen_sequence', 'make_memloc', 'simplify_binary_operation', 'simplify_giv_expr', 'simplify_unary_operation']
['gen_sequence']
['gen_sequence']
['gen_sequence']
['gen_sequence', 'oprs_not_set_p']
['gen_sequence', 'gen_sequence']
['gen_sequence', 'gen_sequence']
['gen_sequence', 'gen_sequence', 'squeeze_notes', 'squeeze_notes']
['gen_sequence', 'gen_sequence', 'squeeze_notes', 'squeeze_notes']
['gen_sequence']
['gen_binary', 'gen_binary', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'gen_sequence', 'make_memloc', 'simplify_unary_operation']
['gen_split_1010']
['gen_split_1010']
['gen_split_1010']
['gen_split_1087', 'gen_split_1088', 'gen_split_954', 'gen_split_955', 'gen_split_956', 'gen_split_957', 'gen_split_958', 'gen_split_959', 'gen_split_962']
['gen_split_1087', 'gen_split_1088']
['gen_split_1087']
['gen_split_1087', 'gen_split_1088', 'gen_split_954', 'gen_split_955', 'gen_split_956', 'gen_split_957', 'gen_split_958', 'gen_split_959', 'gen_split_962']
['gen_split_1087', 'gen_split_1088']
['ix86_expand_fp_movcc']
['copy_most_rtx']
['ix86_expand_fp_movcc']
['copy_most_rtx']
['ix86_expand_fp_movcc']
['copy_most_rtx']
['gen_split_1157']
['gen_split_1158']
['gen_split_1181', 'gen_split_950']
['gen_split_1181', 'gen_split_1182', 'gen_split_950']
['gen_split_1181', 'gen_split_1182', 'gen_split_1236']
['gen_split_1181', 'gen_split_1182', 'gen_split_1236']
['gen_split_1181', 'gen_split_950']
['gen_split_1182']
['gen_split_1181', 'gen_split_1182', 'gen_split_950']
['gen_split_1181', 'gen_split_1182', 'gen_split_1236']
['gen_split_1181', 'gen_split_1182', 'gen_split_1236']
['gen_split_1182']
['gen_split_1214']
['gen_split_1214']
['gen_split_1214']
['gen_split_1230']
['gen_split_1232']
['gen_split_1232']
['gen_split_1181', 'gen_split_1182', 'gen_split_1236']
['gen_split_1181', 'gen_split_1182', 'gen_split_1236']
['decompose']
['gen_split_1181', 'gen_split_950']
['gen_split_1181', 'gen_split_1182', 'gen_split_950']
['gen_split_1181', 'gen_split_950']
['gen_split_1087', 'gen_split_1088', 'gen_split_954', 'gen_split_955', 'gen_split_956', 'gen_split_957', 'gen_split_958', 'gen_split_959', 'gen_split_962']
['gen_split_954', 'gen_split_955', 'gen_split_961']
['gen_split_954', 'gen_split_956', 'gen_split_958', 'gen_split_959']
['gen_split_1087', 'gen_split_1088', 'gen_split_954', 'gen_split_955', 'gen_split_956', 'gen_split_957', 'gen_split_958', 'gen_split_959', 'gen_split_962']
['gen_split_954', 'gen_split_955', 'gen_split_961']
['gen_split_955', 'gen_split_957']
['gen_split_1087', 'gen_split_1088', 'gen_split_954', 'gen_split_955', 'gen_split_956', 'gen_split_957', 'gen_split_958', 'gen_split_959', 'gen_split_962']
['gen_split_954', 'gen_split_956', 'gen_split_958', 'gen_split_959']
['gen_split_1087', 'gen_split_1088', 'gen_split_954', 'gen_split_955', 'gen_split_956', 'gen_split_957', 'gen_split_958', 'gen_split_959', 'gen_split_962']
['gen_split_955', 'gen_split_957']
['gen_split_1087', 'gen_split_1088', 'gen_split_954', 'gen_split_955', 'gen_split_956', 'gen_split_957', 'gen_split_958', 'gen_split_959', 'gen_split_962']
['gen_split_954', 'gen_split_956', 'gen_split_958', 'gen_split_959']
['gen_split_958']
['gen_split_1087', 'gen_split_1088', 'gen_split_954', 'gen_split_955', 'gen_split_956', 'gen_split_957', 'gen_split_958', 'gen_split_959', 'gen_split_962']
['gen_split_954', 'gen_split_956', 'gen_split_958', 'gen_split_959']
['gen_split_959']
['gen_split_961']
['gen_split_954', 'gen_split_955', 'gen_split_961']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'cselib_process_insn', 'dw2_asm_output_encoded_addr_rtx', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_eh_return', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_force_to_memory', 'ix86_force_to_memory', 'load_pic_register', 'output_cfi', 'output_constant_def', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'trampoline_address', 'trampoline_address']
['gen_split_1087', 'gen_split_1088', 'gen_split_954', 'gen_split_955', 'gen_split_956', 'gen_split_957', 'gen_split_958', 'gen_split_959', 'gen_split_962']
['gen_split_962']
['gen_sse_movdfcc', 'gen_sse_movsfcc']
['gen_sse_movdfcc', 'gen_sse_movsfcc']
['expand_increment']
['gen_add2_insn']
['gen_add2_insn']
['allocate_dynamic_stack_space']
['allocate_dynamic_stack_space']
['allocate_dynamic_stack_space']
['allocate_dynamic_stack_space', 'have_add2_insn']
['allocate_dynamic_stack_space', 'have_add2_insn']
['allocate_dynamic_stack_space']
['gen_add2_insn']
['gen_add3_insn', 'gen_sub3_insn']
['gen_add3_insn', 'gen_sub3_insn']
['gen_add3_insn', 'gen_sub3_insn']
['gen_add3_insn', 'gen_sub3_insn']
['gen_add3_insn', 'gen_sub3_insn']
['dwarf2out_decl', 'gen_decl_die', 'gen_decl_die', 'gen_subprogram_die', 'gen_subprogram_die']
['dwarf2out_abstract_function', 'dwarf2out_source_line', 'gen_decl_die', 'gen_subprogram_die']
['dwarf2out_decl', 'gen_decl_die', 'gen_decl_die', 'gen_subprogram_die', 'gen_subprogram_die']
['gen_block_die']
['gen_tablejump']
['gen_tablejump']
['compare_constant_1', 'gen_type', 'gen_type']
['gen_type']
['compare_constant_1', 'gen_type', 'gen_type']
['scope_die_for']
['scope_die_for']
['gen_sse_movdfcc', 'gen_sse_movsfcc']
['gen_sse_movdfcc', 'gen_sse_movsfcc']
['general_induction_var', 'record_value_for_reg', 'simplify_relational_operation']
['general_induction_var']
['general_induction_var']
['general_induction_var']
['general_operand']
['general_operand']
['general_operand']
['expand_stmt']
['expand_stmt']
['genrtl_for_stmt']
['get_alias_set']
['get_alias_set']
['get_alias_set']
['get_alias_set', 'get_alias_set']
['get_frame_alias_set']
['get_arg_pointer_save_area']
['get_attr_athlon_decode']
['get_attr_athlon_decode', 'get_attr_athlon_decode', 'get_attr_athlon_decode']
['get_attr_athlon_decode', 'get_attr_athlon_decode', 'get_attr_athlon_decode']
['get_attr_athlon_decode', 'get_attr_athlon_decode', 'get_attr_athlon_decode']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits']
['get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits']
['get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits']
['get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits']
['get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits']
['get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits']
['get_attr_athlon_fpunits', 'get_attr_modrm']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_pent_pair']
['get_attr_i387']
['get_attr_i387', 'get_attr_i387', 'get_attr_i387']
['get_attr_i387', 'get_attr_i387', 'get_attr_i387']
['get_attr_i387', 'get_attr_i387', 'get_attr_i387']
['get_attr_i387']
['get_attr_imm_disp']
['get_attr_imm_disp', 'get_attr_imm_disp']
['get_attr_imm_disp', 'get_attr_length_immediate', 'get_attr_modrm', 'get_attr_pent_pair', 'get_attr_type']
['get_attr_imm_disp', 'get_attr_imm_disp']
['get_attr_imm_disp']
['get_attr_imm_disp', 'get_attr_modrm']
['get_attr_imm_disp', 'get_attr_imm_disp', 'get_attr_imm_disp', 'get_attr_imm_disp']
['get_attr_imm_disp', 'get_attr_imm_disp', 'get_attr_imm_disp', 'get_attr_imm_disp']
['get_attr_imm_disp', 'get_attr_imm_disp', 'get_attr_imm_disp', 'get_attr_imm_disp']
['get_attr_imm_disp', 'get_attr_imm_disp', 'get_attr_imm_disp', 'get_attr_imm_disp']
['get_attr_imm_disp']
['get_attr_length_address']
['get_attr_length_address']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_imm_disp', 'get_attr_length_immediate', 'get_attr_modrm', 'get_attr_pent_pair', 'get_attr_type']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_length_immediate', 'get_attr_length_immediate', 'get_attr_length_immediate', 'get_attr_modrm', 'get_attr_modrm', 'get_attr_modrm']
['get_attr_length_immediate', 'get_attr_length_immediate']
['get_attr_length_immediate', 'get_attr_length_immediate']
['get_attr_length_immediate', 'get_attr_length_immediate', 'get_attr_length_immediate', 'get_attr_modrm', 'get_attr_modrm', 'get_attr_modrm']
['get_attr_length_immediate']
['get_attr_length_immediate', 'get_attr_length_immediate', 'get_attr_length_immediate', 'get_attr_modrm', 'get_attr_modrm', 'get_attr_modrm']
['get_attr_length_immediate']
['get_attr_memory']
['get_attr_memory', 'get_attr_memory']
['get_attr_memory']
['get_attr_memory', 'get_attr_modrm']
['get_attr_memory']
['get_attr_memory']
['get_attr_memory']
['get_attr_memory']
['get_attr_memory', 'get_attr_memory']
['get_attr_memory']
['get_attr_memory']
['get_attr_memory']
['get_attr_memory', 'get_attr_memory']
['get_attr_memory']
['get_attr_memory', 'get_attr_memory']
['get_attr_mode']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_mode']
['get_attr_mode', 'get_attr_prefix_0f']
['get_attr_modrm']
['get_attr_imm_disp', 'get_attr_modrm']
['get_attr_modrm']
['get_attr_i387', 'get_attr_i387', 'get_attr_i387', 'get_attr_imm_disp', 'get_attr_length_immediate', 'get_attr_length_immediate', 'get_attr_length_immediate', 'get_attr_modrm', 'get_attr_modrm', 'get_attr_modrm', 'get_attr_modrm', 'get_attr_modrm', 'get_attr_modrm', 'get_attr_pent_pair', 'insn_default_length', 'insn_default_length', 'insn_default_length']
['get_attr_modrm']
['get_attr_athlon_fpunits', 'get_attr_modrm']
['get_attr_imm_disp', 'get_attr_length_immediate', 'get_attr_modrm', 'get_attr_pent_pair', 'get_attr_type']
['get_attr_i387', 'get_attr_i387', 'get_attr_i387', 'get_attr_imm_disp', 'get_attr_length_immediate', 'get_attr_length_immediate', 'get_attr_length_immediate', 'get_attr_modrm', 'get_attr_modrm', 'get_attr_modrm', 'get_attr_modrm', 'get_attr_modrm', 'get_attr_modrm', 'get_attr_pent_pair', 'insn_default_length', 'insn_default_length', 'insn_default_length']
['get_attr_memory', 'get_attr_modrm']
['get_attr_modrm', 'get_attr_modrm']
['get_attr_modrm', 'get_attr_modrm']
['get_attr_length_immediate']
['get_attr_modrm', 'get_attr_modrm']
['get_attr_modrm', 'get_attr_modrm']
['get_attr_athlon_fpunits']
['get_attr_pent_pair']
['get_attr_pent_pair']
['get_attr_pent_pair']
['get_attr_length_immediate']
['get_attr_pent_pair']
['get_attr_pent_pair']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_imm_disp', 'get_attr_length_immediate', 'get_attr_modrm', 'get_attr_pent_pair', 'get_attr_type']
['get_attr_length_immediate']
['get_attr_pent_pair']
['get_attr_memory', 'get_attr_modrm']
['get_attr_pent_pair']
['get_attr_type']
['get_attr_mode', 'get_attr_prefix_0f']
['get_attr_imm_disp', 'get_attr_pent_pair']
['get_attr_length_immediate', 'get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_athlon_decode', 'get_attr_athlon_decode', 'get_attr_athlon_decode']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['adjust_address_1', 'can_combine_p', 'copy_loop_body', 'cselib_process_insn', 'delete_output_reload', 'distribute_links', 'eliminate_regs', 'elimination_effects', 'expand_function_end', 'find_single_use_1', 'gen_reload', 'move_deaths', 'simplify_binary_operation', 'subst_indexed_address']
['get_attr_prefix_0f']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_mode', 'get_attr_prefix_0f']
['get_attr_prefix_0f']
['get_attr_prefix_0f', 'get_attr_prefix_0f']
['get_attr_prefix_0f']
['get_attr_pent_pair']
['get_attr_prefix_0f', 'get_attr_prefix_0f']
['get_attr_prefix_0f', 'get_attr_prefix_0f']
['get_attr_modrm', 'get_attr_pent_pair', 'get_attr_pent_pair', 'get_attr_pent_pair', 'get_attr_prefix_0f', 'get_attr_prefix_0f', 'get_attr_type', 'insn_default_length', 'insn_default_length', 'insn_default_length']
['get_attr_modrm', 'get_attr_pent_pair', 'get_attr_pent_pair', 'get_attr_pent_pair', 'get_attr_prefix_0f', 'get_attr_prefix_0f', 'get_attr_type', 'insn_default_length', 'insn_default_length', 'insn_default_length']
['get_attr_prefix_0f', 'get_attr_prefix_0f']
['get_attr_prefix_0f', 'get_attr_prefix_0f']
['get_attr_prefix_0f', 'get_attr_prefix_0f']
['get_attr_prefix_0f']
['get_attr_prefix_data16']
['get_attr_prefix_rep']
['can_combine_p', 'get_attr_type']
['get_attr_type']
['get_attr_length_immediate', 'get_attr_length_immediate']
['get_attr_type']
['get_attr_type']
['get_attr_imm_disp', 'get_attr_length_immediate', 'get_attr_modrm', 'get_attr_pent_pair', 'get_attr_type']
['get_attr_mode', 'get_attr_prefix_0f']
['dwarf2out_frame_debug']
['get_condition_for_loop']
['get_exception_pointer']
['get_file_function_name_long']
['get_file_function_name_long']
['get_file_function_name_long']
['get_file_function_name_long']
['get_file_function_name_long']
['get_file_function_name_long']
['get_file_function_name_long']
['get_file_function_name_long']
['get_file_function_name_long']
['get_file_function_name_long']
['get_frame_alias_set']
['get_frame_alias_set']
['get_frame_alias_set', 'get_varargs_alias_set']
['get_frame_alias_set', 'get_varargs_alias_set']
['get_frame_alias_set']
['get_frame_alias_set']
['get_func_hard_reg_initial_val']
['get_func_hard_reg_initial_val']
['get_func_hard_reg_initial_val']
['get_inner_reference']
['get_inner_reference']
['get_insn_name']
['move_by_pieces']
['emit_unop_insn']
['get_insn_name']
['function_cannot_inline_p']
['get_last_value']
['get_last_value']
['get_last_value']
['get_last_value']
['get_last_value']
['get_last_value']
['get_last_value']
['get_last_value', 'get_last_value']
['get_last_value', 'get_last_value']
['get_last_value']
['get_last_value']
['get_last_value_validate']
['rtx_equal_for_memref_p', 'type_lists_compatible_p']
['set_mem_alias_set', 'set_mem_expr', 'set_mem_offset']
['invalidate_any_buried_refs']
['lookup_cfa_1']
['compare_constant_1', 'compare_constant_1', 'decode_addr_const', 'record_constant_1', 'record_constant_1', 'safe_from_p']
['simple_cst_equal']
['compare_constant_1']
['simple_cst_equal', 'simple_cst_equal']
['convert_modes', 'convert_modes']
['convert_modes', 'convert_modes']
['c_alignof_expr', 'c_alignof_expr']
['compute_forward_dependences', 'purge_addressof']
['compute_forward_dependences', 'purge_addressof']
['c_expand_body', 'c_expand_body', 'c_expand_body', 'c_lex', 'cleanup_cfg', 'open_dump_file', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_decl_compilation', 'yylex']
['gen_lowpart_common', 'get_secondary_mem']
['get_secondary_mem']
['get_set_constructor_bits']
['get_set_constructor_bits']
['get_set_constructor_bits']
['get_set_constructor_bits', 'get_set_constructor_bits']
['get_set_constructor_bits']
['get_set_constructor_bits', 'get_set_constructor_bits']
['get_set_constructor_bits']
['get_set_constructor_bits']
['compute_transp']
['compute_transp']
['dump_node']
['get_varargs_alias_set']
['get_varargs_alias_set']
['get_frame_alias_set', 'get_varargs_alias_set']
['get_frame_alias_set', 'get_varargs_alias_set']
['get_varargs_alias_set']
['get_varargs_alias_set']
['force_nonfallthru_and_redirect', 'force_nonfallthru_and_redirect']
['gen_binary', 'gen_lowpart_for_combine', 'print_rtl_graph_with_bb', 'recog_for_combine', 'safe_from_p', 'timevar_push']
['recog_for_combine']
['expand_stmt']
['doing_eh']
['ggc_alloc']
['ggc_alloc']
['ggc_alloc']
['ggc_alloc']
['ggc_alloc_string']
['ggc_collect', 'ggc_collect']
['ggc_collect', 'ggc_collect']
['ggc_collect']
['ggc_get_size']
['store_split_bit_field']
['cse_end_of_basic_block', 'record_value_for_reg']
['find_comparison_args', 'find_comparison_args', 'find_comparison_args']
['cse_end_of_basic_block', 'cse_end_of_basic_block']
['find_comparison_args', 'find_comparison_args', 'find_comparison_args']
['find_comparison_args', 'find_comparison_args', 'find_comparison_args']
['cselib_finish']
['ggc_mark_trees']
['ggc_mark_trees']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['classify_argument']
['ggc_set_mark']
['global_alloc', 'global_alloc']
['global_alloc', 'global_alloc']
['global_alloc', 'move_for_stack_reg', 'subst_stack_regs_pat']
['global_alloc', 'life_analysis']
['df_analyse_1']
['global_alloc']
['global_alloc']
['global_alloc']
['global_alloc']
['global_alloc']
['global_alloc']
['global_alloc']
['global_alloc']
['global_alloc']
['global_alloc']
['global_alloc', 'global_alloc', 'global_alloc', 'global_alloc', 'global_alloc', 'global_alloc']
['spill_hard_reg']
['expand_stmt', 'immed_double_const', 'output_constant_def_contents', 'output_constant_def_contents', 'variable_section']
['parmlist_tags_warning']
['grokfield']
['emit_libcall_block']
['assemble_start_function', 'function_section']
['assemble_start_function', 'function_section']
['emit_group_load']
['emit_group_load']
['named_section_flags']
['named_section_flags']
['elimination_effects', 'elimination_effects']
['elimination_effects', 'elimination_effects']
['elimination_effects', 'elimination_effects', 'elimination_effects', 'elimination_effects']
['elimination_effects', 'elimination_effects', 'elimination_effects', 'elimination_effects']
['refers_to_regno_for_reload_p']
['refers_to_regno_for_reload_p']
['find_single_use_1']
['find_single_use_1']
['assemble_start_function', 'function_section']
['oprs_unchanged_p']
['oprs_unchanged_p']
['expand_builtin_va_arg']
['expand_builtin_va_arg']
['nonzero_bits', 'simplify_subreg']
['hard_reg_set_here_p', 'reload_combine_note_use']
['calls_function_1']
['hash_expr_1']
['hash_expr_1']
['hash_expr_1']
['hash_rtx']
['hash_rtx']
['copy_loop_headers', 'delete_output_reload', 'expand_decl', 'hash_scan_set', 'loop_optimize', 'make_compound_operation', 'make_extraction', 'maybe_eliminate_biv_1']
['hash_scan_set', 'new_cselib_val']
['can_throw_external', 'can_throw_internal', 'convert_from_eh_region_ranges', 'delete_insn', 'delete_noop_moves', 'emit_libcall_block', 'hash_scan_set', 'mark_all_labels', 'reg_scan_mark_refs']
['hash_scan_set']
['hash_scan_set']
['hash_scan_set']
['hash_scan_set']
['have_add2_insn']
['have_add2_insn']
['have_add2_insn']
['print_rtl_with_bb', 'print_rtl_with_bb', 'print_rtl_with_bb']
['build_function_call', 'c_expand_return', 'valid_compound_expr_initializer']
['purge_addressof']
['purge_addressof']
['allocate_dynamic_stack_space']
['allocate_dynamic_stack_space']
['allocate_dynamic_stack_space']
['allocate_dynamic_stack_space']
['allocate_dynamic_stack_space']
['allocate_dynamic_stack_space']
['allocate_dynamic_stack_space']
['allocate_dynamic_stack_space']
['check_format_info_recurse', 'lex_number']
['output_asm_insn']
['apply_args_size', 'find_equiv_reg', 'find_equiv_reg', 'replace_pseudos_in_call_usage', 'simple_cst_equal']
['complete_array_type', 'print_rtx', 'rename_block']
['emit_libcall_block']
['ht_create']
['ht_create']
['ht_create']
['ht_create']
['ht_create']
['ht_create']
['ggc_collect']
['ggc_collect']
['bitmap_operation']
['classify_argument']
['bitmap_operation']
['classify_argument']
['bitmap_operation']
['protect_from_queue', 'record_jump_cond']
['apply_change_group']
['insns_match_p']
['copy_insn_list', 'try_copy_prop']
['copy_insn_list', 'insns_match_p', 'purge_line_number_notes', 'purge_line_number_notes', 'reposition_prologue_and_epilogue_notes', 'restore_line_notes', 'rm_other_notes']
['form_sum', 'rm_line_notes']
['form_sum', 'rm_line_notes']
['expand_builtin_memset', 'find_dummy_reload', 'form_sum', 'trampoline_address']
['if_then_else_cond', 'redirect_edge_and_branch']
['if_then_else_cond', 'schedule_block']
['if_then_else_cond', 'nonoverlapping_memrefs_p', 'push_reload', 'regmove_optimize']
['copy_rtx_and_substitute', 'if_then_else_cond', 'try_combine']
['if_then_else_cond']
['eliminate_regs_in_insn', 'find_split_point', 'fixup_var_refs_1', 'if_then_else_cond']
['if_then_else_cond']
['if_then_else_cond']
['if_then_else_cond']
['if_then_else_cond']
['immed_double_const']
['immed_real_const']
['immed_real_const']
['immed_real_const_1']
['immediate_operand']
['output_constant_def_contents', 'output_constant_def_contents', 'variable_section']
['assemble_start_function', 'assemble_variable', 'function_section', 'output_constant', 'output_constructor', 'output_constructor', 'output_constructor', 'output_constructor']
['cse_set_around_loop', 'final_scan_insn', 'make_compound_operation']
['safe_from_p', 'safe_from_p']
['gen_lowpart_for_combine']
['scope_to_insns_initialize']
['decompose']
['decompose']
['decompose']
['expand_end_bindings', 'update_temp_slot_address']
['refers_to_regno_p']
['legitimize_pic_address']
['legitimize_pic_address']
['print_rtl_with_bb']
['cse_set_around_loop']
['concat_loc_descriptor', 'memrefs_conflict_p', 'memrefs_conflict_p']
['expand_increment']
['life_analysis']
['life_analysis', 'mem_loc_descriptor']
['cfg_layout_finalize', 'cfg_layout_finalize', 'hash_scan_set']
['expand_compound_operation']
['find_split_point', 'init_alias_analysis']
['extract_bit_field']
['subst_constants']
['init_alias_analysis']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'cselib_process_insn', 'dw2_asm_output_encoded_addr_rtx', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_eh_return', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_force_to_memory', 'ix86_force_to_memory', 'load_pic_register', 'output_cfi', 'output_constant_def', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'trampoline_address', 'trampoline_address']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'cselib_process_insn', 'dw2_asm_output_encoded_addr_rtx', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_eh_return', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_force_to_memory', 'ix86_force_to_memory', 'load_pic_register', 'output_cfi', 'output_constant_def', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'trampoline_address', 'trampoline_address']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'cselib_process_insn', 'dw2_asm_output_encoded_addr_rtx', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_eh_return', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_force_to_memory', 'ix86_force_to_memory', 'load_pic_register', 'output_cfi', 'output_constant_def', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'trampoline_address', 'trampoline_address']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'cselib_process_insn', 'dw2_asm_output_encoded_addr_rtx', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_eh_return', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_force_to_memory', 'ix86_force_to_memory', 'load_pic_register', 'output_cfi', 'output_constant_def', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'trampoline_address', 'trampoline_address']
['ereal_to_decimal', 'ereal_to_decimal']
['init_builtins']
['init_builtins']
['init_builtins']
['gen_block_die']
['save_for_inline']
['init_cumulative_args']
['init_cumulative_args']
['ggc_mark_trees']
['ggc_mark_trees']
['init_deps']
['init_deps']
['init_deps']
['init_deps']
['optimize_bit_field']
['gen_type_die', 'gen_type_die']
['lookup_filename', 'lookup_filename']
['lookup_filename', 'lookup_filename']
['apply_result_size', 'expand_stmt', 'extract_insn', 'oprs_unchanged_p']
['init_flow']
['init_flow']
['can_combine_p', 'cse_set_around_loop', 'cse_set_around_loop', 'emit_group_store', 'final_scan_insn', 'recog_5']
['can_combine_p', 'cse_set_around_loop', 'cse_set_around_loop', 'emit_group_store', 'final_scan_insn', 'recog_5']
['ix86_split_to_parts', 'save_for_inline']
['output_asm_insn']
['gen_move_insn', 'gen_move_insn']
['init_flow']
['init_flow']
['expand_fix']
['find_comparison_args', 'nonzero_bits', 'restore_line_notes', 'rtl_for_decl_location']
['set_diagnostic_context']
['real_value_from_int_cst', 'real_value_from_int_cst']
['real_value_from_int_cst', 'real_value_from_int_cst']
['apply_distributive_law', 'convert_from_ssa', 'copy_insn_list', 'expand_decl', 'force_operand', 'insn_dead_p', 'ix86_va_arg', 'record_value_for_reg', 'save_for_inline', 'simplify_binary_operation', 'try_combine']
['make_extraction']
['count_one_set', 'final_scan_insn', 'simplify_plus_minus', 'validate_replace_rtx_1']
['commit_edge_insertions']
['insn_dead_p']
['init_propagate_block_info']
['try_copy_prop']
['init_propagate_block_info']
['gen_binary', 'gen_lowpart_for_combine']
['cleanup_barriers', 'emit_swap_insn']
['cleanup_barriers', 'emit_swap_insn']
['init_propagate_block_info']
['combine_regs']
['find_comparison_args']
['convert_move']
['make_decl_rtl']
['find_valid_class', 'find_valid_class']
['find_valid_class', 'find_valid_class']
['combine_regs']
['combine_regs']
['expand_builtin_longjmp', 'gen_split_961', 'output_constant_def']
['change_address_1', 'mark_all_labels']
['init_save_areas']
['init_save_areas']
['combine_instructions']
['init_temp_slots']
['maybe_eliminate_biv']
['function_cannot_inline_p']
['initial_reg_note_copy']
['expand_shift', 'ix86_va_start', 'ix86_va_start', 'ix86_va_start']
['expand_shift', 'ix86_va_start']
['ix86_va_start', 'ix86_va_start']
['ix86_va_start', 'ix86_va_start']
['update_temp_slot_address']
['commit_edge_insertions', 'emit_group_load', 'replace_pseudos_in_call_usage']
['validize_mem']
['emit_libcall_block', 'memory_address', 'memory_address']
['optimize_inline_calls']
['try_copy_prop']
['insns_match_p', 'try_copy_prop']
['purge_addressof']
['purge_addressof']
['purge_addressof', 'purge_addressof']
['find_base_term']
['recog_5']
['recog_5']
['purge_addressof']
['purge_addressof']
['purge_addressof', 'purge_addressof']
['find_base_term']
['known_cond', 'recog_5']
['known_cond', 'recog_5']
['initializer_constant_valid_p']
['initializer_constant_valid_p']
['initializer_constant_valid_p', 'initializer_constant_valid_p']
['initializer_constant_valid_p', 'initializer_constant_valid_p']
['initializer_constant_valid_p']
['initializer_constant_valid_p']
['optimize_inline_calls']
['optimize_inline_calls']
['walk_tree', 'walk_tree']
['copy_insn_notes', 'dwarf2out_frame_debug_expr', 'protect_from_queue']
['make_extraction']
['cse_insn', 'emit_libcall_block', 'gcse_main', 'simplify_binary_operation']
['df_ref_record', 'insert', 'sched_analyze_1']
['insert']
['setup_save_areas']
['insert']
['mark_used_regs_combine']
['calculate_dominance_info']
['pushlevel']
['insert_one_insn']
['insert_regs']
['insert_regs']
['insert_regs']
['insert_regs']
['insert_regs']
['insert_restore']
['insert_restore']
['insert_restore']
['simplify_subreg']
['convert_move']
['memory_address', 'memory_address']
['def_cfa_1']
['insn_current_length']
['combine_instructions', 'copy_loop_headers', 'insn_dead_p', 'safe_from_p', 'store_by_pieces_1']
['insn_dead_p', 'mark_set_1']
['insn_dead_p']
['insn_dead_p']
['insn_dead_p']
['insn_dead_p']
['insn_dead_p', 'insn_dead_p']
['insn_dead_p', 'insn_dead_p']
['insn_dead_p']
['insn_dead_p']
['insn_dead_p']
['insn_dead_p']
['insn_default_length']
['insn_default_length', 'insn_default_length', 'insn_default_length']
['insn_default_length', 'insn_default_length', 'insn_default_length']
['insn_default_length', 'insn_default_length', 'insn_default_length']
['insn_extract', 'store_bit_field']
['copy_loop_headers', 'find_dummy_reload', 'insn_extract', 'redirect_edge_and_branch']
['optimize_sibling_and_tail_recursive_calls', 'print_rtx', 'simplify_giv_expr', 'try_crossjump_to_edge']
['copy_insn_list', 'nonoverlapping_memrefs_p', 'ssa_const_prop', 'store_expr']
['copy_rtx_and_substitute', 'cse_basic_block', 'insn_extract', 'optimize_sibling_and_tail_recursive_calls', 'regmove_optimize']
['optimize_sibling_and_tail_recursive_calls']
['if_then_else_cond', 'redirect_edge_and_branch']
['copy_rtx_and_substitute', 'insn_extract', 'insn_extract', 'mark_set_1', 'mark_used_regs']
['adjust_address_1', 'copy_insn_list', 'copy_insn_list', 'copy_loop_body', 'copy_rtx_and_substitute', 'copy_rtx_and_substitute', 'cse_basic_block', 'eliminate_regs_in_insn', 'emit_library_call_value_1', 'emit_library_call_value_1', 'expand_inline_function', 'expected_value_to_br_prob', 'extract_bit_field', 'find_reloads_address_1', 'fold_rtx', 'for_each_insn_in_loop', 'if_then_else_cond', 'insn_extract', 'insn_extract', 'insn_extract', 'insn_extract', 'insn_extract', 'loop_iterations', 'make_compound_operation', 'noce_get_alt_condition', 'nonoverlapping_memrefs_p', 'optimize_sibling_and_tail_recursive_calls', 'optimize_sibling_and_tail_recursive_calls', 'optimize_sibling_and_tail_recursive_calls', 'output_asm_insn', 'print_rtx', 'purge_addressof_1', 'push_to_sequence', 'record_giv', 'redirect_edge_and_branch', 'regmove_optimize', 'replace_pseudos_in_call_usage', 'simplify_comparison', 'simplify_giv_expr', 'simplify_giv_expr', 'simplify_plus_minus', 'ssa_const_prop', 'ssa_eliminate_dead_code', 'store_expr', 'try_copy_prop', 'try_crossjump_to_edge']
['move_deaths', 'try_combine']
['insn_variable_length_p']
['reload_cse_simplify_set']
['cpp_lookup']
['insns_match_p']
['emit_library_call_value_1', 'expand_function_end', 'gen_reload', 'insns_match_p', 'local_alloc', 'noce_get_alt_condition', 'simplify_shift_const', 'store_bit_field']
['insns_match_p']
['insns_match_p']
['insns_match_p']
['insns_match_p', 'insns_match_p']
['insns_match_p', 'insns_match_p']
['insns_match_p']
['insns_match_p']
['insns_match_p']
['instantiate_decl']
['instantiate_decl']
['instantiate_decl']
['instantiate_decl', 'instantiate_decl']
['instantiate_decl']
['instantiate_decl']
['instantiate_decl', 'instantiate_decl']
['instantiate_decl']
['instantiate_virtual_regs_1']
['apply_distributive_law', 'instantiate_virtual_regs_1', 'record_value_for_reg']
['instantiate_virtual_regs_1']
['instantiate_virtual_regs_1']
['instantiate_virtual_regs_1']
['instantiate_virtual_regs_1']
['instantiate_virtual_regs_1']
['instantiate_virtual_regs_1']
['instantiate_virtual_regs_1']
['instantiate_virtual_regs_1']
['instantiate_virtual_regs_1']
['instantiate_virtual_regs_1', 'instantiate_virtual_regs_1']
['instantiate_virtual_regs_1', 'instantiate_virtual_regs_1']
['schedule_insns', 'schedule_insns']
['schedule_insns', 'schedule_insns']
['ssa_const_prop', 'ssa_const_prop']
['ssa_const_prop', 'ssa_const_prop']
['check_asm_operands']
['check_asm_operands']
['timevar_pop']
['int_fits_type_p']
['int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p']
['int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p']
['int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p']
['int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p']
['expand_builtin_return_addr', 'ix86_function_value']
['int_mode_for_mode', 'ix86_libcall_value']
['vasprintf']
['internal_error']
['error', 'error_with_file_and_line', 'internal_error', 'pedwarn', 'pedwarn_with_file_and_line', 'warning', 'warning_with_file_and_line']
['internal_error', 'internal_error']
['internal_error', 'internal_error']
['invalidate']
['apply_args_size', 'copyprop_hardreg_forward', 'mark_reg_death', 'reg_is_born']
['invalidate']
['invalidate_any_buried_refs']
['copyprop_hardreg_forward', 'count_or_remove_death_notes', 'dead_or_set_regno_p', 'find_regno_note', 'mention_regs', 'record_dead_and_set_regs']
['cselib_invalidate_rtx']
['concat_loc_descriptor']
['invert_exp_1']
['invert_exp_1']
['calls_function_1']
['compare_tree_int']
['optimize_minmax_comparison']
['rtx_equal_for_field_assignment_p']
['check_asm_stack_operands', 'cleanup_subreg_operands', 'constrain_operands', 'find_matches', 'ix86_attr_length_immediate_default', 'preprocess_constraints', 'reload_cse_simplify_operands', 'reload_cse_simplify_operands']
['cleanup_subreg_operands']
['split_2']
['announce_function']
['check_asm_stack_operands', 'copyprop_hardreg_forward', 'ix86_attr_length_address_default', 'reload_cse_simplify_operands', 'reload_cse_simplify_operands']
['ix86_attr_length_address_default']
['find_matches', 'ix86_attr_length_immediate_default']
['ix86_attr_length_immediate_default']
['ix86_attr_length_immediate_default']
['ix86_attr_length_immediate_default']
['ix86_attr_length_immediate_default']
['ix86_cc_mode']
['gen_lowpart_common', 'mark_set_regs']
['gen_lowpart_common', 'mark_set_regs']
['gen_lowpart_common', 'mark_set_regs']
['global_alloc']
['global_alloc']
['global_alloc']
['dw2_asm_output_nstring', 'dw2_asm_output_nstring']
['ix86_emit_restore_regs_using_mov']
['ix86_emit_restore_regs_using_mov']
['ix86_emit_restore_regs_using_mov']
['ix86_emit_restore_regs_using_mov']
['ix86_emit_restore_regs_using_mov']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'cselib_process_insn', 'dw2_asm_output_encoded_addr_rtx', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_eh_return', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_force_to_memory', 'ix86_force_to_memory', 'load_pic_register', 'output_cfi', 'output_constant_def', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'trampoline_address', 'trampoline_address']
['expand_eh_return', 'finish_eh_generation', 'finish_eh_generation', 'finish_eh_generation', 'init_alias_analysis', 'ix86_emit_save_regs_using_mov', 'life_analysis', 'loop_regs_scan']
['ix86_emit_save_regs_using_mov']
['ix86_emit_save_regs_using_mov']
['ix86_emit_save_regs_using_mov']
['emit_libcall_block']
['compute_transp', 'constrain_operands', 'gen_split_1214']
['allocate_dynamic_stack_space']
['allocate_dynamic_stack_space']
['allocate_dynamic_stack_space']
['allocate_dynamic_stack_space']
['allocate_dynamic_stack_space']
['allocate_dynamic_stack_space', 'canonicalize_condition']
['allocate_dynamic_stack_space', 'canonicalize_condition']
['convert_modes', 'convert_modes']
['convert_modes', 'convert_modes']
['ix86_expand_move']
['emit_unop_insn']
['expand_increment', 'expand_increment']
['expand_increment', 'expand_increment']
['expand_increment', 'expand_increment']
['expand_increment', 'expand_increment']
['ix86_expand_compare']
['ix86_expand_epilogue']
['expand_eh_return']
['ix86_expand_epilogue']
['ix86_expand_epilogue']
['ix86_expand_epilogue', 'ix86_expand_epilogue']
['ix86_expand_fp_movcc', 'ix86_expand_fp_movcc']
['ix86_expand_fp_movcc', 'ix86_expand_fp_movcc']
['ix86_expand_fp_movcc', 'ix86_expand_fp_movcc']
['ix86_expand_fp_movcc', 'ix86_expand_fp_movcc']
['ix86_expand_fp_movcc']
['ix86_expand_fp_movcc']
['ix86_expand_fp_movcc']
['ix86_expand_fp_movcc']
['ix86_expand_fp_movcc']
['ix86_expand_fp_movcc']
['ix86_expand_fp_movcc', 'ix86_expand_fp_movcc']
['ix86_expand_fp_movcc', 'ix86_expand_fp_movcc']
['extend_value_for_giv', 'extend_value_for_giv']
['add_location_or_const_value_attribute', 'gen_lowpart_for_combine']
['canonicalize_condition']
['add_location_or_const_value_attribute', 'gen_lowpart_for_combine']
['add_location_or_const_value_attribute', 'gen_lowpart_for_combine']
['canonicalize_condition']
['ix86_expand_move']
['ix86_expand_move']
['ix86_expand_prologue']
['ix86_expand_prologue']
['ix86_expand_setcc']
['ix86_expand_setcc']
['allocate_dynamic_stack_space']
['allocate_dynamic_stack_space']
['canonicalize_condition']
['canonicalize_condition']
['canonicalize_condition']
['canonicalize_condition']
['convert_modes', 'convert_modes']
['convert_modes', 'convert_modes']
['gen_cond_trap']
['allocate_dynamic_stack_space', 'gen_cond_trap']
['gen_cond_trap']
['allocate_dynamic_stack_space']
['allocate_dynamic_stack_space']
['allocate_dynamic_stack_space']
['allocate_dynamic_stack_space', 'canonicalize_condition']
['allocate_dynamic_stack_space', 'canonicalize_condition']
['canonicalize_condition']
['canonicalize_condition']
['convert_modes', 'convert_modes']
['convert_modes', 'convert_modes']
['canon_reg', 'emit_unop_insn', 'gen_cond_trap']
['allocate_dynamic_stack_space']
['gen_cond_trap']
['allocate_dynamic_stack_space']
['expand_increment']
['canonicalize_condition']
['canonicalize_condition']
['allocate_dynamic_stack_space']
['gen_cond_trap']
['allocate_dynamic_stack_space']
['allocate_dynamic_stack_space', 'gen_cond_trap']
['emit_unop_insn']
['allocate_dynamic_stack_space']
['allocate_dynamic_stack_space']
['do_store_flag', 'emit_conditional_move', 'gen_add2_insn']
['do_store_flag', 'emit_conditional_move', 'gen_add2_insn']
['convert_modes', 'convert_modes']
['convert_modes', 'convert_modes']
['allocate_dynamic_stack_space']
['allocate_dynamic_stack_space']
['emit_unop_insn']
['allocate_dynamic_stack_space']
['allocate_dynamic_stack_space']
['do_store_flag', 'emit_conditional_move', 'gen_add2_insn']
['do_store_flag', 'emit_conditional_move', 'gen_add2_insn']
['emit_unop_insn']
['convert_modes', 'convert_modes']
['convert_modes', 'convert_modes']
['allocate_dynamic_stack_space']
['emit_unop_insn']
['offset_address']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'cselib_process_insn', 'dw2_asm_output_encoded_addr_rtx', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_eh_return', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_force_to_memory', 'ix86_force_to_memory', 'load_pic_register', 'output_cfi', 'output_constant_def', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'trampoline_address', 'trampoline_address']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'cselib_process_insn', 'dw2_asm_output_encoded_addr_rtx', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_eh_return', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_force_to_memory', 'ix86_force_to_memory', 'load_pic_register', 'output_cfi', 'output_constant_def', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'trampoline_address', 'trampoline_address']
['print_operand']
['print_operand']
['print_operand']
['print_operand']
['print_operand']
['print_operand']
['ix86_function_value']
['expand_builtin_va_arg']
['ix86_function_value', 'standard_80387_constant_p']
['ix86_function_value']
['legitimize_pic_address']
['legitimize_pic_address']
['legitimize_pic_address']
['ix86_hard_regno_mode_ok']
['int_mode_for_mode', 'ix86_libcall_value']
['ix86_preferred_reload_class']
['ix86_prepare_fp_compare_args']
['ix86_prepare_fp_compare_args']
['ix86_prepare_fp_compare_args']
['ix86_prepare_fp_compare_args']
['ix86_register_move_cost', 'reg_dies', 'regno_clobbered_p']
['ix86_register_move_cost', 'reg_fits_class_p']
['ix86_return_in_memory']
['ix86_return_in_memory']
['ix86_return_in_memory']
['immed_real_const']
['ix86_setup_incoming_varargs']
['ix86_setup_incoming_varargs', 'ix86_setup_incoming_varargs', 'ix86_setup_incoming_varargs', 'ix86_setup_incoming_varargs']
['ix86_setup_incoming_varargs', 'ix86_setup_incoming_varargs', 'ix86_setup_incoming_varargs', 'ix86_setup_incoming_varargs']
['ix86_setup_incoming_varargs']
['ix86_setup_incoming_varargs']
['ix86_setup_incoming_varargs', 'ix86_setup_incoming_varargs', 'ix86_setup_incoming_varargs', 'ix86_setup_incoming_varargs']
['ix86_setup_incoming_varargs', 'ix86_setup_incoming_varargs', 'ix86_setup_incoming_varargs', 'ix86_setup_incoming_varargs']
['gen_reload', 'ix86_split_long_move', 'ix86_split_to_parts', 'move_for_stack_reg', 'try_copy_prop']
['ix86_split_long_move']
['ix86_split_long_move']
['ix86_split_long_move']
['ix86_split_long_move']
['ix86_split_long_move']
['ix86_split_long_move']
['ix86_split_long_move', 'ix86_split_long_move']
['ix86_split_long_move', 'ix86_split_long_move']
['ix86_split_long_move', 'ix86_split_long_move']
['ix86_split_long_move', 'ix86_split_long_move']
['gen_reload', 'ix86_split_long_move', 'ix86_split_to_parts', 'move_for_stack_reg', 'try_copy_prop']
['ix86_split_to_parts']
['ix86_split_to_parts']
['ix86_split_to_parts']
['ix86_split_to_parts']
['ix86_split_to_parts']
['ix86_va_arg', 'simplify_binary_operation']
['ix86_va_arg', 'try_combine']
['ix86_va_arg']
['ix86_va_start']
['ix86_va_start']
['ix86_va_start']
['ix86_va_start']
['ix86_va_start']
['ix86_va_start']
['ix86_va_start']
['copy_insn_1']
['copy_insn_1']
['expunge_block', 'expunge_block_nocompact']
['ix86_zero_extend_to_Pmode']
['ix86_zero_extend_to_Pmode']
['get_attr_length_immediate', 'get_attr_memory', 'get_attr_mode', 'get_attr_modrm', 'get_attr_pent_pair', 'get_attr_type', 'insn_current_length']
['get_attr_memory']
['get_attr_length_immediate', 'get_attr_length_immediate', 'get_attr_memory']
['get_attr_type']
['get_attr_length_immediate']
['get_attr_memory']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_length_immediate', 'get_attr_length_immediate']
['get_attr_length_immediate', 'get_attr_length_immediate']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_memory']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_memory']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_length_address', 'get_attr_length_immediate', 'get_attr_memory', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['function_units_used']
['get_attr_length_address', 'get_attr_length_immediate', 'get_attr_memory', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['insn_current_length', 'insn_default_length']
['get_attr_prefix_0f']
['get_attr_memory']
['get_attr_length_immediate', 'get_attr_length_immediate', 'get_attr_memory']
['get_attr_type']
['get_attr_length_immediate']
['get_attr_memory']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_length_immediate', 'get_attr_length_immediate']
['get_attr_length_immediate', 'get_attr_length_immediate']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_memory']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_memory']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_length_address', 'get_attr_length_immediate', 'get_attr_memory', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['function_units_used']
['get_attr_length_address', 'get_attr_length_immediate', 'get_attr_memory', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_mode']
['get_attr_length_immediate', 'get_attr_length_immediate', 'get_attr_memory']
['get_attr_memory']
['get_attr_type']
['get_attr_imm_disp', 'get_attr_length_immediate', 'get_attr_modrm', 'get_attr_pent_pair', 'get_attr_type']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_prefix_0f']
['get_attr_length_immediate']
['get_attr_memory']
['get_attr_pent_pair']
['get_attr_length_immediate']
['get_attr_memory']
['get_attr_pent_pair']
['get_attr_pent_pair']
['get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_length_immediate']
['get_attr_memory']
['get_attr_memory']
['get_attr_memory']
['get_attr_type']
['get_attr_pent_pair', 'get_attr_type', 'insn_current_length']
['function_units_used', 'get_attr_imm_disp', 'get_attr_length_immediate', 'get_attr_modrm', 'get_attr_pent_pair', 'get_attr_type']
['get_attr_type']
['function_units_used']
['function_units_used']
['get_attr_i387']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_prefix_0f']
['function_units_used']
['function_units_used']
['get_attr_imm_disp', 'get_attr_length_immediate', 'get_attr_mode', 'get_attr_modrm', 'get_attr_pent_pair', 'get_attr_prefix_0f', 'get_attr_type', 'get_attr_type', 'get_attr_type']
['function_units_used']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['function_units_used']
['function_units_used']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['function_units_used', 'get_attr_imm_disp', 'get_attr_length_immediate', 'get_attr_modrm', 'get_attr_pent_pair', 'get_attr_type']
['get_attr_athlon_decode']
['get_attr_athlon_decode']
['function_units_used', 'get_attr_imm_disp', 'get_attr_length_immediate', 'get_attr_modrm', 'get_attr_pent_pair', 'get_attr_type']
['get_attr_type']
['function_units_used']
['function_units_used']
['get_attr_i387']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_prefix_0f']
['function_units_used']
['function_units_used']
['get_attr_imm_disp', 'get_attr_length_immediate', 'get_attr_mode', 'get_attr_modrm', 'get_attr_pent_pair', 'get_attr_prefix_0f', 'get_attr_type', 'get_attr_type', 'get_attr_type']
['function_units_used']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['function_units_used']
['function_units_used']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['function_units_used', 'get_attr_imm_disp', 'get_attr_length_immediate', 'get_attr_modrm', 'get_attr_pent_pair', 'get_attr_type']
['get_attr_length_address']
['function_units_used', 'get_attr_length_immediate']
['get_attr_type']
['function_units_used']
['function_units_used']
['function_units_used']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_prefix_0f']
['function_units_used']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['function_units_used']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_i387']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_memory']
['function_units_used']
['get_attr_memory']
['get_attr_length_address']
['get_attr_mode']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_athlon_fpunits']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['insn_default_length']
['get_attr_prefix_0f', 'get_attr_prefix_rep', 'insn_current_length']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_athlon_fpunits']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_length_address']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_mode', 'insn_default_length']
['get_attr_athlon_decode', 'get_attr_athlon_decode', 'get_attr_athlon_decode', 'get_attr_pent_pair']
['get_attr_memory']
['get_attr_length_immediate', 'get_attr_memory', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_athlon_decode', 'get_attr_athlon_decode', 'get_attr_athlon_decode', 'get_attr_pent_pair']
['get_attr_length_address']
['get_attr_length_address']
['get_attr_athlon_decode']
['get_attr_prefix_0f']
['get_attr_athlon_decode', 'get_attr_athlon_decode', 'get_attr_athlon_decode', 'get_attr_pent_pair']
['get_attr_memory']
['get_attr_length_immediate', 'get_attr_memory', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_athlon_decode', 'get_attr_athlon_decode', 'get_attr_athlon_decode', 'get_attr_pent_pair']
['get_attr_length_address']
['get_attr_length_address']
['get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_memory']
['get_attr_memory', 'get_attr_memory']
['get_attr_memory']
['get_attr_memory', 'get_attr_modrm']
['get_attr_memory']
['get_attr_memory', 'get_attr_memory']
['get_attr_length_address']
['get_attr_length_address']
['get_attr_type']
['get_attr_memory']
['get_attr_memory']
['get_attr_pent_pair']
['get_attr_pent_pair']
['get_attr_pent_pair']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_athlon_decode', 'insn_current_length']
['get_attr_athlon_decode']
['get_attr_memory']
['get_attr_memory']
['get_attr_pent_pair']
['get_attr_pent_pair']
['get_attr_pent_pair']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_length_address']
['get_attr_memory']
['get_attr_memory']
['get_attr_memory', 'get_attr_memory']
['get_attr_memory']
['get_attr_memory']
['get_attr_memory']
['get_attr_pent_pair']
['get_attr_memory']
['get_attr_memory']
['get_attr_memory']
['get_attr_pent_pair']
['get_attr_memory']
['get_attr_pent_pair']
['get_attr_length_immediate']
['get_attr_pent_pair']
['get_attr_length_immediate', 'get_attr_length_immediate']
['get_attr_pent_pair']
['find_comparison_args']
['convert_move']
['add_AT_location_description', 'concat_loc_descriptor']
['kill_value']
['kill_value', 'known_cond', 'replace_rtx', 'simplify_replace_rtx', 'simplify_rtx', 'true_regnum']
['kill_value']
['kill_value']
['known_cond']
['known_cond', 'num_sign_bit_copies', 'record_value_for_reg']
['known_cond']
['known_cond']
['kill_value', 'known_cond', 'replace_rtx', 'simplify_replace_rtx', 'simplify_rtx', 'true_regnum']
['known_cond', 'replace_rtx', 'simplify_rtx']
['known_cond', 'known_cond']
['known_cond']
['known_cond', 'known_cond']
['known_cond']
['staticp']
['rest_of_decl_compilation', 'rest_of_type_compilation']
['rest_of_decl_compilation', 'rest_of_type_compilation']
['output_addressed_constants']
['dwarf2out_abstract_function', 'dwarf2out_source_line', 'gen_decl_die', 'gen_subprogram_die']
['gen_block_die']
['layout_decl']
['get_inner_reference']
['finish_enum']
['invalidate_any_buried_refs']
['optimize_sibling_and_tail_recursive_calls']
['legitimize_address']
['legitimize_address', 'redirect_edge_and_branch', 'reload_cse_regs', 'subst_constants']
['legitimize_pic_address']
['legitimize_pic_address']
['legitimize_pic_address']
['legitimize_pic_address']
['legitimize_pic_address', 'legitimize_pic_address']
['legitimize_pic_address', 'legitimize_pic_address']
['legitimize_pic_address']
['legitimize_pic_address']
['legitimize_pic_address']
['legitimize_pic_address']
['legitimize_pic_address']
['legitimize_pic_address']
['legitimize_pic_address']
['legitimize_pic_address']
['legitimize_pic_address']
['c_lex']
['lex_number', 'maybe_read_dollar_number']
['lex_number']
['lex_number', 'lex_number']
['lex_number', 'lex_number']
['lex_number']
['lex_number']
['lex_number']
['lex_number']
['lex_number', 'lex_number']
['lex_number', 'lex_number']
['lex_number']
['global_alloc', 'life_analysis']
['life_analysis']
['life_analysis']
['life_analysis']
['life_analysis']
['life_analysis']
['life_analysis']
['convert_from_eh_region_ranges', 'life_analysis']
['life_analysis']
['life_analysis', 'life_analysis']
['life_analysis', 'life_analysis']
['life_analysis']
['life_analysis']
['expr_killed_p']
['expr_killed_p']
['peep2_reg_dead_p']
['memory_address', 'memory_address']
['output_format']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'cselib_process_insn', 'dw2_asm_output_encoded_addr_rtx', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_eh_return', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_force_to_memory', 'ix86_force_to_memory', 'load_pic_register', 'output_cfi', 'output_constant_def', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'trampoline_address', 'trampoline_address']
['add_AT_location_description']
['loc_descriptor_from_tree']
['emit_library_call_value_1', 'expand_function_end', 'gen_reload', 'insns_match_p', 'local_alloc', 'noce_get_alt_condition', 'simplify_shift_const', 'store_bit_field']
['consec_sets_giv', 'expand_compound_operation', 'local_alloc']
['cse_basic_block', 'fixup_var_refs_insn', 'local_alloc']
['copy_loop_body', 'find_equiv_reg', 'local_alloc', 'optimize_sibling_and_tail_recursive_calls']
['copy_loop_body', 'local_alloc', 'print_rtl_graph_with_bb']
['subst_asm_stack_regs']
['want_to_gcse_p']
['lookup_cfa_1']
['lookup_cfa_1']
['offset_address']
['lookup_field']
['lookup_field']
['lookup_field']
['lookup_field']
['lookup_filename']
['lookup_filename']
['lookup_filename']
['lookup_filename', 'lookup_filename']
['lookup_filename', 'lookup_filename']
['ggc_set_mark']
['loop_giv_dump']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['elimination_effects']
['elimination_effects']
['instantiate_decl', 'instantiate_decl']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['combine_givs']
['get_set_constructor_bits']
['get_set_constructor_bits']
['expand_fix', 'expand_fix']
['find_single_use_1', 'find_single_use_1']
['find_single_use_1', 'find_single_use_1']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['hash_scan_set']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['combine_givs']
['combine_givs']
['can_throw_external', 'can_throw_internal', 'convert_from_eh_region_ranges', 'copy_insn_1', 'delete_insn', 'delete_noop_moves', 'emit_libcall_block', 'expand_decl', 'expand_goto', 'find_base_term', 'gen_binary', 'gen_lowpart_for_combine', 'hash_scan_set', 'mark_all_labels', 'oprs_not_set_p', 'oprs_unchanged_p', 'print_rtl_graph_with_bb', 'purge_line_number_notes', 'recog_for_combine', 'reg_scan_mark_refs', 'replace_pseudos_in_call_usage', 'replace_pseudos_in_call_usage', 'restore_line_notes', 'rm_line_notes', 'rm_line_notes', 'safe_from_p', 'subst_indexed_address', 'true_dependence']
['expand_twoval_binop']
['expand_twoval_binop']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['ssa_const_prop']
['memory_address']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['get_set_constructor_bits']
['get_set_constructor_bits']
['change_address', 'change_address']
['change_address', 'change_address']
['combine_givs']
['cfg_layout_finalize', 'compute_transp', 'compute_transp', 'copy_insn_notes', 'cse_basic_block', 'expected_value_to_br_prob', 'expr_killed_p', 'find_base_term', 'gen_binary', 'gen_binary', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'gen_sequence', 'life_analysis', 'noce_get_condition', 'oprs_not_set_p', 'oprs_unchanged_p', 'rm_line_notes', 'rtl_for_decl_location', 'shorten_branches', 'split_all_insns', 'try_copy_prop']
['rename_block']
['rename_block']
['rename_block']
['rename_block']
['force_operand']
['force_operand']
['force_operand']
['loop_iterations', 'thread_prologue_and_epilogue_insns']
['find_if_header', 'loop_iterations', 'purge_addressof_1', 'thread_prologue_and_epilogue_insns']
['copy_insn_notes', 'redirect_edge_and_branch']
['copy_loop_headers']
['thread_prologue_and_epilogue_insns']
['apply_change_group', 'loop_iterations', 'loop_optimize', 'reload_cse_regs']
['loop_iterations']
['loop_iterations']
['loop_iterations']
['loop_iv_add_mult_emit_before']
['loop_iv_add_mult_hoist']
['loop_iv_add_mult_sink']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['biv_total_increment']
['combine_givs', 'expr_killed_p', 'final', 'gen_sequence']
['cse_end_of_basic_block', 'oprs_unchanged_p']
['print_rtl_with_bb']
['combine_givs', 'combine_givs']
['combine_givs', 'combine_givs']
['combine_givs']
['combine_givs', 'expr_killed_p', 'final', 'gen_sequence']
['build_compound_literal']
['build_compound_literal']
['can_throw_external', 'can_throw_internal', 'combine_givs', 'convert_from_eh_region_ranges', 'delete_insn', 'delete_noop_moves', 'emit_libcall_block', 'hash_scan_set', 'mark_all_labels', 'num_sign_bit_copies', 'record_value_for_reg', 'reg_scan_mark_refs']
['gen_lowpart_for_combine', 'life_analysis']
['gen_lowpart_for_combine']
['hash_scan_set']
['hash_scan_set']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['pedwarn_with_decl']
['biv_total_increment', 'biv_total_increment', 'combine_givs', 'combine_givs']
['biv_total_increment', 'biv_total_increment', 'combine_givs', 'combine_givs']
['optimize_mode_switching']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['apply_change_group', 'loop_optimize']
['emit_libcall_block', 'loop_optimize']
['loop_optimize']
['emit_libcall_block', 'loop_optimize']
['copy_loop_headers', 'delete_output_reload', 'expand_decl', 'hash_scan_set', 'loop_optimize', 'make_compound_operation', 'make_extraction', 'maybe_eliminate_biv_1']
['loop_optimize']
['expand_goto', 'expand_inline_function', 'loop_optimize', 'reposition_prologue_and_epilogue_notes']
['loop_optimize']
['loop_regs_scan']
['make_compound_operation']
['emit_no_conflict_block', 'make_compound_operation', 'memrefs_conflict_p']
['copy_loop_headers', 'delete_output_reload', 'expand_decl', 'hash_scan_set', 'loop_optimize', 'make_compound_operation', 'make_extraction', 'maybe_eliminate_biv_1']
['make_compound_operation']
['make_compound_operation']
['make_compound_operation']
['make_compound_operation']
['reloads_conflict']
['reloads_conflict']
['make_decl_rtl']
['make_decl_rtl']
['make_decl_rtl']
['make_decl_rtl']
['choose_hard_reg_mode', 'copyprop_hardreg_forward', 'mark_referenced_regs', 'reg_is_born']
['form_sum', 'make_extraction']
['make_extraction']
['make_extraction']
['copy_loop_headers', 'delete_output_reload', 'expand_decl', 'hash_scan_set', 'loop_optimize', 'make_compound_operation', 'make_extraction', 'maybe_eliminate_biv_1']
['make_extraction']
['emit_stack_save', 'validize_mem', 'want_to_gcse_p']
['eliminate_constant_term']
['eliminate_regs', 'expand_call', 'force_operand', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'gen_sequence', 'make_memloc', 'simplify_binary_operation', 'simplify_giv_expr', 'simplify_unary_operation']
['make_memloc', 'make_memloc']
['make_memloc', 'make_memloc']
['make_memloc']
['make_memloc']
['gen_binary', 'gen_binary', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'gen_sequence', 'make_memloc', 'simplify_unary_operation']
['print_exp', 'print_exp', 'print_exp', 'print_exp']
['insert_regs']
['insert_regs']
['copy_list', 'copy_node', 'make_node']
['make_preds_opaque']
['insert_regs']
['insert_regs']
['insert_regs']
['insert_regs']
['memory_address', 'memory_address']
['make_tree']
['make_tree']
['make_tree_vec']
['mark_all_labels']
['delete_noop_moves', 'mark_all_labels', 'offset_address']
['mark_all_labels']
['mark_all_labels']
['mark_all_labels']
['mark_all_labels']
['can_throw_external', 'can_throw_internal', 'convert_from_eh_region_ranges', 'delete_insn', 'delete_noop_moves', 'emit_libcall_block', 'hash_scan_set', 'mark_all_labels', 'reg_scan_mark_refs']
['delete_noop_moves', 'delete_noop_moves', 'mark_all_labels', 'mark_all_labels']
['delete_noop_moves', 'delete_noop_moves', 'mark_all_labels', 'mark_all_labels']
['mark_effect']
['mark_effect']
['add_location_or_const_value_attribute']
['add_location_or_const_value_attribute', 'num_sign_bit_copies']
['mark_home_live']
['ereal_from_int', 'ereal_from_uint', 'nonzero_bits']
['convert_move']
['set_mem_alias_set', 'set_mem_expr', 'set_mem_offset']
['mark_referenced_regs']
['mark_referenced_regs']
['clear_reload_reg_in_use', 'insert', 'mark_used_regs_combine']
['calculate_dominance_info', 'insert', 'mark_referenced_regs', 'mark_used_regs_combine', 'reg_is_born', 'wipe_dead_reg']
['add_location_or_const_value_attribute']
['add_location_or_const_value_attribute']
['add_location_or_const_value_attribute']
['add_location_or_const_value_attribute']
['mark_reg']
['add_location_or_const_value_attribute']
['peep2_reg_dead_p']
['apply_args_size', 'mark_reg_death']
['mark_reg_death']
['mark_reg_death']
['calculate_dominance_info', 'calculate_dominance_info', 'clear_dead_regs', 'clear_reload_reg_in_use', 'compute_use_by_pseudos', 'find_free_reg', 'insert', 'mark_referenced_regs', 'mark_reg_death', 'mark_used_regs_combine', 'peep2_find_free_register', 'reg_is_born', 'regrename_optimize', 'save_call_clobbered_regs', 'save_call_clobbered_regs', 'setup_save_areas', 'wipe_dead_reg']
['calculate_dominance_info', 'mark_reg_death']
['insert', 'mark_reg_death']
['calculate_dominance_info', 'mark_reg_death', 'mark_reg_death', 'mark_used_regs_combine']
['calculate_dominance_info', 'calculate_dominance_info', 'calculate_dominance_info', 'mark_reg_death']
['ereal_from_int', 'ereal_from_uint', 'nonzero_bits']
['convert_move']
['add_location_or_const_value_attribute']
['peep2_reg_dead_p']
['life_analysis']
['mark_reload_reg_in_use']
['subst_stack_regs']
['setup_save_areas']
['calculate_dominance_info']
['clear_reload_reg_in_use', 'insert', 'mark_used_regs_combine', 'subst_stack_regs']
['calculate_dominance_info', 'calculate_dominance_info']
['calculate_dominance_info', 'calculate_dominance_info']
['consec_sets_giv', 'expand_compound_operation', 'local_alloc']
['insn_dead_p', 'mark_set_1']
['compare_for_stack_reg', 'emit_no_conflict_block', 'extract_bit_field', 'loop_optimize', 'simplify_comparison']
['mark_set_1']
['alloc_gcse_mem', 'apply_distributive_law', 'compute_forward_dependences', 'copy_loop_headers', 'distribute_notes', 'extract_bit_field', 'find_equiv_reg', 'gen_reload', 'mark_set_1', 'mark_set_1', 'reload_combine_note_use', 'reload_cse_regs', 'try_combine']
['extract_bit_field', 'insert', 'loop_optimize', 'mark_set_1', 'simplify_comparison']
['extract_bit_field']
['find_split_point', 'init_alias_analysis', 'mark_set_1', 'output_asm_insn', 'reload_combine_note_use']
['copy_loop_body', 'find_equiv_reg', 'local_alloc', 'optimize_sibling_and_tail_recursive_calls']
['compute_forward_dependences', 'fold_rtx', 'fold_rtx', 'legitimize_address', 'legitimize_address', 'purge_addressof_1', 'thread_prologue_and_epilogue_insns', 'validate_replace_rtx_1']
['find_single_use_1', 'mark_used_regs', 'protect_from_queue', 'record_dead_and_set_regs', 'subst_constants']
['find_single_use_1']
['find_base_term']
['gen_lowpart_for_combine']
['mark_set_regs']
['mark_set_regs']
['general_induction_var']
['find_base_term']
['gen_lowpart_for_combine']
['convert_from_ssa']
['add_location_or_const_value_attribute']
['add_location_or_const_value_attribute']
['add_location_or_const_value_attribute']
['add_location_or_const_value_attribute']
['peephole2_optimize']
['compute_transp']
['ereal_from_int', 'ereal_from_uint', 'nonzero_bits']
['convert_move']
['spill_hard_reg']
['spill_hard_reg']
['count_spilled_pseudo', 'reload_inner_reg_of_subreg']
['find_reloads_address_1', 'mark_used_regs', 'try_combine']
['mark_used_regs']
['adjust_address_1', 'expand_field_assignment', 'init_propagate_block_info', 'make_extraction', 'mark_used_regs', 'simplify_comparison', 'simplify_giv_expr', 'try_crossjump_to_edge']
['adjust_address_1', 'memrefs_conflict_p']
['strength_reduce']
['mark_used_regs']
['mark_used_regs']
['mark_used_regs']
['mark_used_regs']
['mark_used_regs']
['mark_used_regs']
['mark_used_regs']
['count_or_remove_death_notes', 'insert_one_insn']
['insert', 'mark_used_regs_combine']
['setup_save_areas']
['calculate_dominance_info', 'insert', 'mark_used_regs_combine']
['calculate_dominance_info', 'insert', 'mark_used_regs_combine', 'mark_used_regs_combine']
['calculate_dominance_info']
['calculate_dominance_info', 'calculate_dominance_info', 'calculate_dominance_info', 'calculate_dominance_info', 'calculate_dominance_info', 'subst_stack_regs']
['may_trap_p']
['may_trap_p']
['may_trap_p']
['may_trap_p']
['maybe_eliminate_biv']
['maybe_eliminate_biv_1', 'maybe_eliminate_biv_1']
['maybe_eliminate_biv_1', 'maybe_eliminate_biv_1']
['maybe_eliminate_biv_1', 'maybe_eliminate_biv_1']
['maybe_eliminate_biv_1', 'maybe_eliminate_biv_1']
['maybe_eliminate_biv_1']
['adjust_address_1', 'copy_insn_list', 'emit_library_call_value_1', 'extract_bit_field', 'noce_get_alt_condition']
['maybe_eliminate_biv_1']
['maybe_eliminate_biv_1', 'maybe_eliminate_biv_1']
['maybe_eliminate_biv_1', 'maybe_eliminate_biv_1']
['redirect_edge_and_branch']
['fixup_var_refs_insn', 'maybe_eliminate_biv_1', 'visit_expression']
['can_combine_p', 'concat_loc_descriptor', 'final', 'find_split_point', 'get_attr_type', 'maybe_eliminate_biv_1', 'output_asm_insn', 'ssa_const_prop']
['split_4']
['split_4']
['lex_number', 'maybe_read_dollar_number']
['maybe_read_dollar_number']
['maybe_read_dollar_number']
['read_filename_string']
['mem_loc_descriptor']
['mem_loc_descriptor']
['mem_loc_descriptor']
['mem_loc_descriptor']
['mem_loc_descriptor']
['mem_loc_descriptor']
['mem_loc_descriptor', 'mem_loc_descriptor']
['mem_loc_descriptor', 'mem_loc_descriptor']
['mem_loc_descriptor']
['mem_loc_descriptor']
['mem_loc_descriptor']
['find_base_term', 'memory_address', 'replace_pseudos_in_call_usage', 'restore_line_notes']
['check_insn_for_givs', 'memory_address']
['memory_address', 'record_jump_cond']
['memory_address']
['memory_address', 'memory_address']
['memory_address', 'memory_address']
['memory_address']
['memory_address']
['memory_address']
['memory_address']
['memory_address']
['adjust_address_1', 'memrefs_conflict_p']
['emit_no_conflict_block', 'make_compound_operation', 'memrefs_conflict_p']
['memrefs_conflict_p']
['memrefs_conflict_p']
['memrefs_conflict_p']
['memrefs_conflict_p']
['memrefs_conflict_p']
['compute_transp', 'constrain_operands', 'gen_split_1214', 'simplify_rtx']
['mention_regs']
['merge_attributes']
['delete_noop_moves', 'merge_blocks_nomove', 'simplify_binary_operation']
['cse_main', 'merge_blocks_nomove', 'scan_loop', 'sge_plus_constant']
['merge_blocks_nomove']
['merge_blocks_nomove']
['final', 'merge_blocks_nomove']
['expunge_block', 'expunge_block_nocompact', 'merge_blocks_nomove']
['merge_blocks_nomove']
['merge_blocks_nomove']
['merge_blocks_nomove']
['merge_blocks_nomove']
['merge_blocks_nomove']
['final', 'final', 'merge_blocks_nomove', 'merge_blocks_nomove']
['final', 'final', 'merge_blocks_nomove', 'merge_blocks_nomove']
['maybe_eliminate_biv_1', 'maybe_eliminate_biv_1', 'output_constant_def_contents', 'variable_section']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['merge_weak']
['mergeable_string_section', 'output_constant_def_contents', 'output_constant_pool', 'readonly_data_section', 'variable_section', 'variable_section']
['mergeable_string_section', 'output_constant_def_contents', 'output_constant_pool', 'readonly_data_section', 'variable_section']
['get_insn_name', 'peep2_next_insn']
['get_insn_name', 'peep2_next_insn']
['get_insn_name', 'peep2_next_insn']
['peephole2_optimize']
['compute_transp']
['ereal_from_int', 'ereal_from_uint', 'nonzero_bits']
['convert_move']
['dwarf2out_frame_debug_expr']
['split_2']
['wipe_dead_reg', 'wipe_dead_reg']
['recog_for_combine']
['recog_for_combine']
['recog_for_combine']
['ereal_from_int', 'ereal_from_uint', 'nonzero_bits']
['convert_move']
['move_block_to_reg']
['move_by_pieces']
['move_deaths']
['check_asm_stack_operands', 'insns_match_p', 'subst_indexed_address']
['distribute_notes']
['if_then_else_cond', 'mark_used_regs']
['simplify_shift_const', 'split_1']
['mark_used_regs', 'move_deaths']
['move_deaths']
['move_deaths', 'offsettable_address_p']
['move_deaths']
['move_deaths']
['move_deaths']
['move_deaths']
['move_for_stack_reg']
['eliminate_regs', 'move_for_stack_reg']
['gen_reload', 'ix86_split_long_move', 'ix86_split_to_parts', 'move_for_stack_reg', 'try_copy_prop']
['global_alloc', 'move_for_stack_reg', 'subst_stack_regs_pat']
['move_for_stack_reg']
['move_for_stack_reg', 'move_for_stack_reg']
['move_for_stack_reg', 'move_for_stack_reg']
['move_for_stack_reg']
['move_for_stack_reg']
['move_for_stack_reg']
['move_for_stack_reg']
['move_for_stack_reg']
['move_for_stack_reg']
['print_rtl_graph_with_bb']
['loop_iterations']
['emit_group_store']
['emit_group_store']
['emit_group_store', 'recog_5', 'simplify_plus_minus']
['loop_iterations']
['emit_group_load', 'estimate_probability', 'print_rtl_graph_with_bb']
['print_rtl_graph_with_bb']
['mtherr']
['clear_edges']
['print_exp']
['lex_number', 'lex_number']
['named_section_flags']
['named_section_flags']
['new_alias_set']
['_cpp_get_buff']
['_cpp_get_buff']
['build1', 'cpp_push_buffer', 'cpp_push_buffer']
['hash_scan_set', 'new_cselib_val']
['_cpp_lex_token', '_cpp_temp_token']
['eliminate_regs', 'expand_call', 'force_operand', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'gen_sequence', 'make_memloc', 'simplify_binary_operation', 'simplify_giv_expr', 'simplify_unary_operation']
['simplify_unary_operation']
['gen_binary', 'gen_binary', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'gen_sequence', 'make_memloc', 'simplify_unary_operation']
['_cpp_lex_token', '_cpp_temp_token']
['mark_used_regs']
['replace_pseudos_in_call_usage']
['memory_address']
['combine_givs']
['expand_builtin_memset', 'find_dummy_reload', 'form_sum', 'trampoline_address']
['commit_edge_insertions', 'commit_edge_insertions', 'cse_set_around_loop', 'dwarf2out_frame_debug_expr', 'expand_goto', 'expr_killed_p', 'find_equiv_reg', 'hash_scan_set', 'insns_match_p', 'insns_match_p', 'memrefs_conflict_p', 'merge_blocks_nomove', 'oprs_not_set_p', 'oprs_unchanged_p', 'restore_line_notes', 'split_all_insns', 'subst_indexed_address']
['noce_emit_cmove']
['noce_emit_cmove']
['noce_emit_cmove']
['noce_emit_cmove']
['expand_compound_operation', 'noce_emit_cmove', 'replace_rtx', 'replace_rtx', 'write_dependence_p']
['compute_transp']
['noce_emit_store_flag']
['noce_get_alt_condition']
['check_asm_stack_operands', 'eliminate_regs', 'express_from', 'noce_get_alt_condition', 'record_jump_cond', 'subst_constants']
['emit_library_call_value_1', 'expand_function_end', 'gen_reload', 'insns_match_p', 'local_alloc', 'noce_get_alt_condition', 'simplify_shift_const', 'store_bit_field']
['distribute_notes', 'noce_get_alt_condition', 'scan_loop', 'simplify_giv_expr', 'simplify_relational_operation']
['adjust_address_1', 'copy_insn_list', 'emit_library_call_value_1', 'extract_bit_field', 'noce_get_alt_condition']
['cse_end_of_basic_block', 'delete_output_reload', 'find_reloads_address', 'find_split_point', 'noce_get_alt_condition']
['noce_get_alt_condition']
['mark_set_1', 'noce_get_alt_condition']
['distribute_notes', 'expand_call', 'noce_get_alt_condition', 'subst_asm_stack_regs']
['cse_insn', 'find_reloads_address_1', 'noce_get_condition', 'record_giv', 'scan_loop', 'sched_analyze_2', 'unroll_loop']
['noce_get_condition', 'print_rtl_with_bb', 'sched_analyze_2']
['noce_get_condition']
['noce_get_condition']
['noce_get_condition']
['noce_get_condition']
['noce_get_condition']
['noce_get_condition', 'noce_get_condition', 'noce_get_condition']
['noce_get_condition', 'noce_get_condition', 'noce_get_condition']
['noce_get_condition', 'noce_get_condition', 'noce_get_condition']
['reversed_comparison_code_parts']
['memory_address', 'memory_address']
['decompose', 'validize_mem']
['validize_mem']
['extend_value_for_giv', 'extend_value_for_giv']
['want_to_gcse_p']
['want_to_gcse_p']
['memory_address', 'memory_address']
['memory_address', 'memory_address']
['want_to_gcse_p']
['memory_address', 'memory_address']
['memory_address', 'memory_address']
['emit_libcall_block']
['add_location_or_const_value_attribute']
['canonicalize_condition']
['canonicalize_condition']
['compute_transp', 'find_replacement', 'simplify_rtx']
['gen_tablejump']
['emit_libcall_block', 'memory_address', 'memory_address']
['compute_transp', 'find_replacement', 'simplify_rtx']
['emit_libcall_block']
['compute_transp', 'find_replacement', 'simplify_rtx']
['build_complex_type', 'build_complex_type', 'print_mem_expr']
['build_complex_type', 'build_complex_type', 'print_mem_expr']
['cleanup_barriers', 'combine_regs', 'convert_from_eh_region_ranges', 'cse_end_of_basic_block', 'df_uses_record', 'emit_insns_after', 'emit_insns_after', 'emit_swap_insn', 'estimate_probability', 'final', 'move_for_stack_reg', 'offsettable_address_p', 'purge_addressof', 'purge_line_number_notes', 'purge_line_number_notes', 'purge_line_number_notes', 'push_to_sequence', 'record_value_for_reg', 'record_value_for_reg', 'rm_line_notes', 'save_for_inline', 'scope_to_insns_initialize', 'shorten_branches', 'simplify_plus_minus', 'simplify_plus_minus', 'simplify_plus_minus', 'subst_indexed_address']
['nonmemory_operand']
['convert_from_ssa', 'nonoverlapping_memrefs_p']
['nonoverlapping_memrefs_p']
['nonoverlapping_memrefs_p']
['copy_insn_list', 'nonoverlapping_memrefs_p', 'ssa_const_prop', 'store_expr']
['if_then_else_cond', 'nonoverlapping_memrefs_p', 'push_reload', 'regmove_optimize']
['nonoverlapping_memrefs_p']
['fixup_var_refs_1', 'nonoverlapping_memrefs_p']
['convert_from_ssa', 'fixup_var_refs_1', 'nonoverlapping_memrefs_p', 'simplify_shift_const']
['nonoverlapping_memrefs_p']
['nonzero_bits']
['nonzero_bits']
['nonzero_bits']
['nonzero_bits']
['nonzero_bits']
['add_location_or_const_value_attribute']
['add_location_or_const_value_attribute']
['nothrow_function_p']
['nothrow_function_p']
['nothrow_function_p']
['nothrow_function_p']
['nothrow_function_p']
['nothrow_function_p']
['canonicalize_condition']
['canonicalize_condition']
['known_cond', 'num_sign_bit_copies', 'record_value_for_reg']
['num_sign_bit_copies']
['num_sign_bit_copies']
['num_sign_bit_copies']
['num_sign_bit_copies', 'record_value_for_reg']
['num_sign_bit_copies']
['num_sign_bit_copies']
['num_sign_bit_copies']
['num_sign_bit_copies']
['num_sign_bit_copies']
['num_sign_bit_copies']
['num_sign_bit_copies']
['num_sign_bit_copies']
['objects_must_conflict_p']
['delete_noop_moves', 'mark_all_labels', 'offset_address']
['offset_address', 'offset_address', 'set_mem_alias_set', 'set_mem_alias_set', 'set_mem_expr', 'set_mem_expr', 'set_mem_offset', 'set_mem_offset']
['offset_address', 'offset_address', 'set_mem_alias_set', 'set_mem_alias_set', 'set_mem_expr', 'set_mem_expr', 'set_mem_offset', 'set_mem_offset']
['offset_address']
['offset_address']
['offset_address']
['offset_address']
['offset_address']
['offset_address', 'set_mem_alias_set', 'set_mem_expr', 'set_mem_offset']
['offset_address', 'set_mem_alias_set', 'set_mem_expr', 'set_mem_offset']
['offset_address']
['offset_address']
['offset_address', 'set_mem_alias_set', 'set_mem_expr', 'set_mem_offset']
['offset_address']
['change_address_1', 'offset_address']
['offsettable_address_p']
['offsettable_address_p']
['offsettable_address_p']
['offsettable_address_p']
['offsettable_address_p']
['offsettable_address_p']
['offsettable_nonstrict_memref_p']
['offsettable_nonstrict_memref_p']
['allocate_reg_info', 'optimize_mode_switching']
['open_dump_file', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation']
['open_dump_file', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation']
['operands_match_p', 'reg_overlap_mentioned_for_reload_p']
['operands_match_p', 'reg_overlap_mentioned_for_reload_p', 'reg_overlap_mentioned_p', 'rtx_renumbered_equal_p']
['operands_match_p']
['operands_match_p', 'refers_to_regno_p']
['oprs_not_set_p']
['oprs_not_set_p']
['gen_sequence', 'oprs_not_set_p']
['oprs_not_set_p']
['oprs_not_set_p']
['expr_killed_p']
['oprs_not_set_p']
['oprs_not_set_p']
['oprs_not_set_p']
['expr_killed_p']
['oprs_unchanged_p']
['oprs_unchanged_p']
['oprs_unchanged_p', 'oprs_unchanged_p']
['oprs_unchanged_p', 'oprs_unchanged_p']
['oprs_unchanged_p', 'oprs_unchanged_p']
['oprs_unchanged_p', 'oprs_unchanged_p']
['optimize_bit_field']
['optimize_bit_field']
['optimize_inline_calls']
['optimize_inline_calls']
['optimize_inline_calls']
['optimize_minmax_comparison']
['optimize_minmax_comparison']
['optimize_mode_switching']
['optimize_mode_switching']
['optimize_mode_switching']
['optimize_mode_switching']
['optimize_mode_switching']
['optimize_mode_switching']
['optimize_mode_switching']
['optimize_mode_switching']
['optimize_mode_switching']
['optimize_mode_switching', 'optimize_mode_switching', 'optimize_mode_switching']
['optimize_mode_switching', 'optimize_mode_switching', 'optimize_mode_switching']
['optimize_mode_switching', 'optimize_mode_switching', 'optimize_mode_switching']
['optimize_mode_switching']
['optimize_mode_switching']
['optimize_mode_switching']
['optimize_mode_switching']
['optimize_mode_switching']
['optimize_mode_switching']
['optimize_mode_switching']
['expand_function_end', 'find_reloads_address', 'output_asm_insn']
['output_asm_insn']
['simplify_giv_expr']
['convert_from_ssa', 'expand_function_end', 'validate_replace_rtx_1']
['legitimize_address', 'redirect_edge_and_branch', 'reload_cse_regs', 'subst_constants']
['reload_cse_regs']
['copy_loop_headers', 'find_dummy_reload', 'insn_extract', 'redirect_edge_and_branch']
['insn_extract', 'simplify_comparison', 'simplify_plus_minus']
['copy_rtx_and_substitute', 'cse_basic_block', 'insn_extract', 'optimize_sibling_and_tail_recursive_calls', 'regmove_optimize']
['bitmap_copy', 'bitmap_equal_p', 'bitmap_operation', 'eiremain', 'emdnorm', 'expunge_block', 'expunge_block_nocompact', 'flow_delete_block_noexpunge']
['clear_emit_caches', 'restore_emit_status']
['clear_emit_caches', 'restore_emit_status']
['clear_emit_caches', 'restore_emit_status']
['life_analysis']
['clear_emit_caches', 'restore_emit_status']
['clear_emit_caches', 'restore_emit_status']
['clear_emit_caches', 'restore_emit_status']
['clear_emit_caches', 'life_analysis', 'restore_emit_status']
['do_store_flag', 'simplify_replace_rtx']
['function_cannot_inline_p']
['gen_split_1181', 'gen_split_1182', 'gen_split_1236']
['gen_split_1181', 'gen_split_1182', 'gen_split_1236']
['gen_split_1181', 'gen_split_1182', 'gen_split_1236']
['gen_split_1181', 'gen_split_1182', 'gen_split_1236']
['gen_split_1181', 'gen_split_1182', 'gen_split_1236']
['gen_split_1181', 'gen_split_1182', 'gen_split_1236']
['gen_split_1181', 'gen_split_1182', 'gen_split_1236']
['gen_split_1181', 'gen_split_1182', 'gen_split_1236']
['ereal_to_decimal', 'ereal_to_decimal']
['ereal_to_decimal']
['ereal_to_decimal']
['ereal_to_decimal']
['dwarf2out_frame_debug']
['dwarf2out_frame_debug']
['apply_args_size']
['ereal_to_decimal']
['apply_args_size']
['ereal_to_decimal', 'ereal_to_decimal']
['ereal_to_decimal', 'ereal_to_decimal']
['find_base_term', 'find_base_term']
['find_base_term', 'find_base_term']
['emit_conditional_move', 'emit_push_insn', 'ix86_split_to_parts', 'print_operand_address', 'print_operand_address']
['find_base_term', 'find_base_term']
['make_memloc']
['output_addressed_constants']
['output_addressed_constants']
['redirect_edge_and_branch']
['distribute_notes', 'expand_call', 'noce_get_alt_condition', 'subst_asm_stack_regs']
['init_alias_analysis', 'maybe_eliminate_biv_1', 'move_deaths', 'output_asm_insn', 'output_asm_insn', 'redirect_edge_and_branch', 'subst_indexed_address']
['find_split_point', 'optimize_sibling_and_tail_recursive_calls', 'purge_addressof_1']
['copy_loop_body', 'find_equiv_reg', 'local_alloc', 'optimize_sibling_and_tail_recursive_calls']
['output_asm_insn']
['output_asm_insn']
['output_asm_insn']
['output_asm_name']
['output_asm_name']
['output_asm_insn']
['debug_reload_to_stream', 'debug_reload_to_stream']
['output_asm_name']
['push_to_sequence']
['rm_line_notes', 'scope_to_insns_initialize']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'cselib_process_insn', 'dw2_asm_output_encoded_addr_rtx', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_eh_return', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_force_to_memory', 'ix86_force_to_memory', 'load_pic_register', 'output_cfi', 'output_constant_def', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'trampoline_address', 'trampoline_address']
['output_constant']
['assemble_variable', 'output_constant', 'output_constructor', 'output_constructor', 'output_constructor', 'output_constructor']
['output_constant']
['output_constant']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'cselib_process_insn', 'dw2_asm_output_encoded_addr_rtx', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_eh_return', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_force_to_memory', 'ix86_force_to_memory', 'load_pic_register', 'output_cfi', 'output_constant_def', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'trampoline_address', 'trampoline_address']
['output_constant_def']
['output_constant_def_contents', 'variable_section']
['output_constant_def_contents']
['mergeable_string_section', 'output_constant_def_contents', 'output_constant_pool', 'readonly_data_section', 'variable_section']
['mergeable_string_section', 'output_constant_def_contents', 'output_constant_pool', 'readonly_data_section', 'variable_section', 'variable_section']
['output_constant_def_contents']
['output_constant_def_contents', 'variable_section']
['mergeable_string_section', 'output_constant_def_contents', 'output_constant_pool', 'readonly_data_section', 'variable_section', 'variable_section']
['mergeable_string_section', 'output_constant_def_contents', 'output_constant_pool', 'readonly_data_section', 'variable_section']
['output_constant_pool']
['output_constant_pool']
['expand_builtin_expect_jump']
['assemble_variable', 'output_constant', 'output_constructor', 'output_constructor', 'output_constructor', 'output_constructor']
['output_constant', 'output_constructor', 'output_constructor', 'output_constructor']
['build_array_type']
['assemble_variable', 'output_constant', 'output_constructor', 'output_constructor', 'output_constructor', 'output_constructor']
['output_constructor']
['store_by_pieces_1']
['output_verbatim']
['output_verbatim']
['output_verbatim']
['output_verbatim']
['output_verbatim']
['output_verbatim']
['output_verbatim']
['diagnostic_finish']
['find_base_term', 'find_base_term']
['output_format']
['output_format']
['output_format', 'output_format']
['free_for_value_p', 'peep2_reg_dead_p']
['build_type_attribute_variant']
['make_memloc', 'reg_alternate_class']
['output_init_element']
['output_format']
['output_verbatim']
['dw2_asm_output_nstring']
['output_verbatim']
['output_verbatim']
['output_verbatim']
['output_verbatim']
['output_verbatim']
['output_verbatim']
['output_verbatim']
['output_verbatim']
['output_verbatim']
['print_rtx', 'print_rtx']
['reload_combine_note_use', 'replace_call_placeholder']
['make_decl_rtl']
['delete_output_reload', 'get_frame_alias_set', 'get_varargs_alias_set']
['check_asm_operands', 'ix86_split_long_move', 'read_filename_string']
['ix86_split_long_move']
['ix86_split_long_move']
['ix86_split_long_move']
['ix86_split_long_move']
['ggc_alloc_string']
['get_attr_length_immediate', 'ix86_expand_move']
['delete_output_reload']
['ggc_alloc_string']
['size_int_type_wide']
['get_frame_alias_set', 'get_varargs_alias_set']
['get_frame_alias_set', 'get_varargs_alias_set', 'get_varargs_alias_set']
['peephole2_optimize', 'rename_block']
['_cpp_get_buff']
['parmlist_tags_warning', 'parmlist_tags_warning']
['parmlist_tags_warning', 'parmlist_tags_warning']
['parmlist_tags_warning']
['cpp_push_buffer']
['expand_builtin_va_arg']
['expand_builtin_va_arg']
['parse_number']
['_cpp_get_buff']
['read_filename_string']
['read_filename_string']
['cpp_lookup']
['parse_output_constraint']
['parse_output_constraint']
['_cpp_append_extend_buff', '_cpp_extend_buff']
['_cpp_get_buff']
['parse_number']
['parse_number']
['set_mem_attributes']
['staticp']
['staticp']
['set_mem_attributes']
['diagnostic_for_decl', 'parse_input_constraint']
['diagnostic_for_decl', 'parse_input_constraint']
['diagnostic_for_decl', 'parse_input_constraint']
['_cpp_append_extend_buff', '_cpp_extend_buff']
['parse_string']
['_cpp_lex_token', '_cpp_temp_token']
['error', 'error_with_file_and_line', 'internal_error', 'pedwarn', 'pedwarn_with_file_and_line', 'warning', 'warning_with_file_and_line']
['error', 'error', 'error_with_file_and_line', 'error_with_file_and_line', 'pedwarn', 'pedwarn', 'pedwarn_with_file_and_line', 'pedwarn_with_file_and_line', 'warning', 'warning', 'warning_with_file_and_line', 'warning_with_file_and_line']
['error', 'error', 'error_with_file_and_line', 'error_with_file_and_line', 'pedwarn', 'pedwarn', 'pedwarn_with_file_and_line', 'pedwarn_with_file_and_line', 'warning', 'warning', 'warning_with_file_and_line', 'warning_with_file_and_line']
['pedwarn_c99']
['error_init', 'error_init', 'pedwarn_init', 'pedwarn_init', 'warning_init', 'warning_init']
['error_init', 'pedwarn_init', 'warning_init']
['error_init', 'error_init', 'pedwarn_init', 'pedwarn_init', 'warning_init', 'warning_init']
['pedwarn_with_decl']
['error', 'error_with_file_and_line', 'internal_error', 'pedwarn', 'pedwarn_with_file_and_line', 'warning', 'warning_with_file_and_line']
['error', 'error', 'error_with_file_and_line', 'error_with_file_and_line', 'pedwarn', 'pedwarn', 'pedwarn_with_file_and_line', 'pedwarn_with_file_and_line', 'warning', 'warning', 'warning_with_file_and_line', 'warning_with_file_and_line']
['error', 'error', 'error_with_file_and_line', 'error_with_file_and_line', 'pedwarn', 'pedwarn', 'pedwarn_with_file_and_line', 'pedwarn_with_file_and_line', 'warning', 'warning', 'warning_with_file_and_line', 'warning_with_file_and_line']
['peep2_find_free_register', 'peep2_find_free_register', 'peep2_reg_dead_p', 'peep2_regno_dead_p']
['peep2_find_free_register']
['peep2_find_free_register', 'peep2_find_free_register', 'peep2_reg_dead_p', 'peep2_regno_dead_p']
['peep2_find_free_register']
['peep2_find_free_register']
['peep2_find_free_register']
['peep2_find_free_register']
['choose_hard_reg_mode', 'count_one_set', 'reg_is_born']
['mark_effect']
['peep2_find_free_register']
['peep2_find_free_register']
['peep2_find_free_register']
['peep2_find_free_register']
['invalidate']
['choose_hard_reg_mode']
['reg_is_born']
['peep2_next_insn']
['peep2_reg_dead_p', 'peep2_regno_dead_p']
['peep2_reg_dead_p']
['peep2_reg_dead_p', 'peep2_regno_dead_p']
['recog', 'recog_29', 'recog_30']
['recog_23', 'recog_30', 'recog_5', 'recog_5', 'split_4']
['peephole2_insns', 'peephole2_insns']
['recog', 'recog_29', 'recog_30']
['peephole2_insns', 'peephole2_insns', 'peephole2_insns', 'peephole2_insns', 'peephole2_insns', 'peephole2_insns', 'peephole2_insns', 'peephole2_insns', 'peephole2_insns', 'peephole2_insns']
['recog_23', 'recog_30', 'recog_5', 'recog_5', 'split_4']
['peephole2_insns']
['recog', 'recog_29', 'recog_30']
['recog_23', 'recog_30', 'recog_5', 'recog_5', 'split_4']
['peephole2_insns', 'peephole2_insns']
['recog', 'recog_29', 'recog_30']
['peephole2_insns', 'peephole2_insns', 'peephole2_insns', 'peephole2_insns', 'peephole2_insns', 'peephole2_insns', 'peephole2_insns', 'peephole2_insns', 'peephole2_insns', 'peephole2_insns']
['recog_23', 'recog_30', 'recog_5', 'recog_5', 'split_4']
['peephole2_insns', 'peephole2_insns']
['recog', 'recog_29', 'recog_30']
['peephole2_insns']
['peephole2_insns']
['peephole2_insns']
['peephole2_insns']
['peephole2_insns']
['recog', 'recog_29']
['peephole2_insns', 'recog', 'recog_26', 'recog_26', 'recog_29', 'recog_29', 'recog_30', 'recog_30', 'recog_5', 'split_4', 'split_4']
['peephole2_insns']
['peephole2_insns']
['peephole2_insns', 'peephole2_insns']
['recog_29']
['recog_29']
['peephole2_insns', 'peephole2_insns']
['recog', 'recog_29']
['extract_insn', 'peephole2_insns', 'recog', 'split_insns']
['peephole2_insns']
['peephole2_insns']
['peephole2_insns']
['peephole2_insns']
['peephole2_insns']
['peephole2_insns']
['peephole2_insns']
['peephole2_insns']
['peephole2_insns']
['peephole2_insns']
['peephole2_insns']
['peephole2_insns']
['peephole2_insns']
['peephole2_insns']
['peephole2_optimize']
['peephole2_optimize']
['peephole2_optimize']
['peephole2_optimize']
['peephole2_optimize']
['peephole2_optimize']
['peephole2_optimize']
['peephole2_optimize']
['peephole2_optimize']
['peephole2_optimize']
['peephole2_optimize']
['peephole2_optimize']
['peephole2_optimize']
['peephole2_optimize']
['peephole2_optimize']
['peephole2_optimize']
['get_attr_athlon_decode', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_type', 'insn_current_length', 'insn_default_length']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_i387']
['get_attr_athlon_fpunits']
['get_attr_i387']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_pent_pair', 'insn_current_length']
['get_attr_athlon_decode', 'get_attr_athlon_fpunits', 'get_attr_imm_disp', 'get_attr_prefix_0f', 'get_attr_prefix_rep', 'insn_current_length']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_i387']
['get_attr_athlon_fpunits']
['get_attr_i387']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_pent_pair', 'get_attr_prefix_rep', 'insn_current_length']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_mode']
['get_attr_memory']
['get_attr_memory', 'get_attr_memory']
['get_attr_memory']
['get_attr_mode', 'get_attr_prefix_0f']
['get_attr_memory', 'get_attr_memory', 'get_attr_modrm']
['get_attr_memory']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_length_immediate', 'get_attr_length_immediate', 'get_attr_memory', 'get_attr_memory', 'get_attr_mode', 'get_attr_prefix_0f', 'get_attr_type']
['get_attr_athlon_decode']
['get_attr_memory']
['get_attr_memory', 'get_attr_memory']
['get_attr_mode', 'get_attr_prefix_0f']
['get_attr_imm_disp', 'get_attr_length_immediate', 'get_attr_modrm', 'get_attr_pent_pair', 'get_attr_type']
['get_attr_mode', 'get_attr_prefix_0f']
['get_attr_memory']
['get_attr_memory']
['get_attr_memory', 'get_attr_memory', 'get_attr_modrm']
['get_attr_memory']
['get_attr_memory']
['get_attr_memory']
['get_attr_memory', 'get_attr_memory']
['get_attr_memory']
['get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_modrm']
['get_attr_memory', 'get_attr_memory']
['get_attr_i387']
['get_attr_i387']
['get_attr_athlon_decode', 'get_attr_imm_disp', 'get_attr_prefix_0f', 'get_attr_prefix_rep']
['get_attr_memory']
['get_attr_memory', 'get_attr_memory']
['get_attr_memory']
['get_attr_mode', 'get_attr_prefix_0f']
['get_attr_memory', 'get_attr_memory', 'get_attr_modrm']
['get_attr_memory']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_length_immediate', 'get_attr_length_immediate', 'get_attr_memory', 'get_attr_memory', 'get_attr_mode', 'get_attr_prefix_0f', 'get_attr_type']
['get_attr_i387', 'get_attr_imm_disp']
['get_attr_memory']
['get_attr_mode', 'get_attr_prefix_0f']
['get_attr_imm_disp', 'get_attr_length_immediate', 'get_attr_modrm', 'get_attr_pent_pair', 'get_attr_type']
['get_attr_memory']
['get_attr_memory']
['get_attr_memory']
['get_attr_memory']
['get_attr_length_immediate']
['get_attr_length_immediate', 'get_attr_length_immediate', 'get_attr_memory', 'get_attr_memory', 'get_attr_mode', 'get_attr_prefix_0f', 'get_attr_type']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_length_immediate', 'get_attr_memory', 'get_attr_memory', 'get_attr_mode', 'get_attr_prefix_0f', 'get_attr_type']
['get_attr_memory']
['get_attr_memory']
['get_attr_type']
['get_attr_type']
['get_attr_memory']
['get_attr_memory']
['get_attr_mode', 'get_attr_type']
['get_attr_memory']
['get_attr_memory']
['get_attr_memory']
['get_attr_type']
['get_attr_type']
['get_attr_length_address', 'get_attr_length_immediate', 'get_attr_memory', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['function_units_used']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_memory']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_memory']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_memory']
['get_attr_memory', 'get_attr_memory']
['get_attr_memory', 'get_attr_memory']
['get_attr_memory', 'get_attr_memory']
['get_attr_memory', 'get_attr_memory']
['get_attr_athlon_decode', 'get_attr_i387', 'get_attr_prefix_0f', 'get_attr_prefix_rep', 'insn_current_length', 'insn_default_length']
['get_attr_imm_disp']
['get_attr_memory']
['get_attr_memory']
['get_attr_memory']
['get_attr_type']
['get_attr_type']
['get_attr_length_address', 'get_attr_length_immediate', 'get_attr_memory', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['function_units_used']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_memory']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_memory']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_memory']
['get_attr_memory', 'get_attr_memory']
['get_attr_memory', 'get_attr_memory']
['get_attr_memory', 'get_attr_memory']
['get_attr_memory', 'get_attr_memory']
['get_attr_imm_disp', 'get_attr_mode']
['get_attr_memory']
['get_attr_memory']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_memory']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_memory']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_memory']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_memory']
['get_attr_memory']
['get_attr_memory']
['get_attr_memory']
['get_attr_memory']
['get_attr_memory']
['get_attr_type']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_imm_disp', 'get_attr_mode', 'get_attr_type']
['get_attr_memory']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_length_immediate']
['get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_length_immediate']
['get_attr_memory']
['get_attr_memory']
['get_attr_type']
['get_attr_type']
['get_attr_memory']
['get_attr_memory']
['get_attr_mode', 'get_attr_prefix_0f']
['get_attr_mode', 'get_attr_prefix_0f']
['get_attr_length_address', 'get_attr_length_immediate', 'get_attr_memory', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['function_units_used']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_memory']
['get_attr_athlon_decode']
['get_attr_athlon_decode']
['get_attr_memory']
['get_attr_length_immediate']
['get_attr_length_immediate']
['get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_length_immediate']
['get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_length_immediate']
['get_attr_memory']
['get_attr_memory']
['get_attr_type']
['get_attr_type']
['get_attr_memory']
['get_attr_memory']
['get_attr_mode', 'get_attr_prefix_0f']
['get_attr_mode', 'get_attr_prefix_0f']
['get_attr_length_address', 'get_attr_length_immediate', 'get_attr_memory', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['function_units_used']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_memory']
['get_attr_imm_disp']
['get_attr_memory']
['get_attr_memory', 'get_attr_memory']
['get_attr_memory']
['get_attr_mode', 'get_attr_prefix_0f']
['get_attr_mode', 'get_attr_prefix_0f']
['get_attr_mode', 'get_attr_prefix_0f']
['get_attr_mode', 'get_attr_prefix_0f']
['get_attr_athlon_decode', 'get_attr_athlon_decode', 'get_attr_athlon_decode']
['get_attr_memory']
['get_attr_memory']
['get_attr_memory']
['get_attr_memory']
['get_attr_memory']
['get_attr_memory']
['get_attr_memory']
['get_attr_length_immediate']
['get_attr_memory']
['get_attr_imm_disp', 'get_attr_mode', 'get_attr_prefix_rep']
['plus_constant_wide']
['plus_constant_wide']
['plus_constant_wide']
['plus_constant_wide']
['plus_constant_wide']
['plus_constant_wide']
['plus_constant_wide']
['plus_constant_wide', 'plus_constant_wide', 'plus_constant_wide']
['plus_constant_wide', 'plus_constant_wide', 'plus_constant_wide']
['plus_constant_wide', 'plus_constant_wide', 'plus_constant_wide']
['plus_constant_wide']
['plus_constant_wide']
['really_start_incremental_init']
['split_tree']
['decode_addr_const', 'self_promoting_args_p']
['finish_init', 'pop_init_level', 'pop_init_level']
['finish_init', 'pop_init_level', 'pop_init_level']
['finish_init', 'pop_init_level', 'set_designator', 'set_init_index', 'set_init_label', 'set_init_label']
['pop_init_level']
['pop_init_level']
['pop_init_level']
['pop_init_level']
['pop_init_level']
['pop_init_level']
['pop_init_level']
['pop_init_level']
['pop_init_level']
['ereal_from_int', 'ereal_from_uint', 'nonzero_bits']
['convert_move']
['insn_default_length']
['insn_current_length']
['get_attr_memory']
['get_attr_memory']
['get_attr_pent_pair']
['get_attr_pent_pair']
['get_attr_pent_pair']
['get_attr_memory']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_athlon_fpunits']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_athlon_fpunits']
['insn_current_length']
['get_attr_athlon_decode', 'insn_current_length']
['get_attr_memory']
['get_attr_memory']
['get_attr_pent_pair']
['get_attr_pent_pair']
['get_attr_pent_pair']
['get_attr_memory']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_athlon_fpunits']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_athlon_fpunits']
['get_attr_imm_disp', 'get_attr_type', 'insn_current_length']
['get_attr_memory']
['get_attr_memory']
['get_attr_pent_pair']
['get_attr_pent_pair']
['get_attr_pent_pair']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_length_address']
['insn_current_length']
['emit_libcall_block']
['oprs_unchanged_p']
['oprs_unchanged_p']
['delete_output_reload']
['apply_distributive_law', 'apply_distributive_law']
['apply_distributive_law', 'apply_distributive_law']
['expand_mult_highpart']
['classify_argument']
['precondition_loop_p']
['precondition_loop_p']
['predict_insn_def']
['cse_basic_block']
['predict_insn_def']
['predict_insn_def']
['emit_cmp_and_jump_insns', 'num_sign_bit_copies']
['allocate_dynamic_stack_space']
['emit_cmp_and_jump_insns', 'emit_cmp_and_jump_insns', 'expand_fix']
['emit_cmp_and_jump_insns', 'emit_cmp_and_jump_insns', 'expand_fix']
['prepare_function_start']
['prepare_function_start']
['prepare_function_start']
['prepare_function_start']
['prepare_function_start']
['allocate_dynamic_stack_space', 'have_add2_insn']
['allocate_dynamic_stack_space', 'have_add2_insn']
['have_add2_insn']
['emit_conditional_move', 'emit_conditional_move']
['emit_conditional_move', 'emit_conditional_move']
['check_asm_stack_operands', 'cleanup_subreg_operands', 'constrain_operands', 'preprocess_constraints', 'reload_cse_simplify_operands', 'reload_cse_simplify_operands']
['preprocess_constraints', 'preprocess_constraints', 'reload_cse_simplify_operands']
['preprocess_constraints']
['preprocess_constraints']
['preprocess_constraints', 'preprocess_constraints', 'reload_cse_simplify_operands']
['preprocess_constraints']
['preprocess_constraints']
['get_set_constructor_bits']
['shallow_copy_rtx']
['shallow_copy_rtx']
['shallow_copy_rtx']
['print_exp']
['shallow_copy_rtx']
['shallow_copy_rtx']
['print_rtl_with_bb']
['gen_binary', 'gen_binary', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'gen_sequence', 'make_memloc', 'simplify_unary_operation']
['compare_tree_int']
['print_mem_expr']
['build_complex_type', 'build_complex_type', 'print_mem_expr']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['start_init']
['cselib_finish']
['calls_function_1']
['optimize_inline_calls']
['compare_tree_int']
['optimize_inline_calls']
['optimize_inline_calls']
['optimize_inline_calls']
['compare_tree_int']
['print_exp', 'print_operand']
['print_exp', 'print_operand', 'print_operand']
['print_operand']
['print_operand']
['print_operand', 'print_operand']
['print_operand', 'print_operand']
['print_operand_address']
['change_address', 'change_address', 'print_exp']
['print_reg']
['legitimize_pic_address']
['find_split_point', 'init_alias_analysis', 'instantiate_virtual_regs_1', 'mark_used_regs', 'print_rtl_graph_with_bb']
['copy_insn_list', 'insn_extract', 'nonoverlapping_memrefs_p', 'refers_to_regno_p', 'ssa_const_prop', 'store_expr']
['mark_used_regs', 'purge_addressof_1', 'record_giv', 'redirect_edge_and_branch', 'schedule_block']
['print_rtl_graph_with_bb']
['print_rtl_graph_with_bb']
['print_rtl_graph_with_bb']
['print_rtl_graph_with_bb']
['print_rtl_graph_with_bb']
['print_rtl_graph_with_bb', 'print_rtl_graph_with_bb']
['print_rtl_graph_with_bb', 'print_rtl_graph_with_bb']
['print_rtl_graph_with_bb']
['print_rtl_graph_with_bb']
['print_rtl_graph_with_bb']
['get_attr_prefix_0f', 'get_attr_prefix_0f', 'hash_scan_set', 'instantiate_virtual_regs_1', 'instantiate_virtual_regs_1', 'peephole2_optimize', 'recog_23', 'wipe_dead_reg']
['noce_get_condition', 'print_rtl_with_bb', 'sched_analyze_2']
['print_rtl_with_bb', 'print_rtl_with_bb', 'print_rtl_with_bb']
['print_rtl_with_bb', 'print_rtl_with_bb', 'print_rtl_with_bb']
['print_rtl_with_bb', 'print_rtl_with_bb', 'print_rtl_with_bb']
['print_rtl_with_bb']
['copy_insn_list', 'nonoverlapping_memrefs_p', 'ssa_const_prop', 'store_expr']
['print_rtx']
['print_rtx']
['print_rtx', 'print_rtx']
['print_rtx']
['print_rtx']
['print_rtx']
['error_init', 'pedwarn_init', 'warning_init']
['emit_insns_after', 'emit_insns_after']
['declare_nonlocal_label', 'do_store_flag', 'emit_stack_save', 'hash_scan_set']
['cse_main']
['cleanup_barriers', 'emit_insns_after', 'emit_insns_after', 'final', 'move_for_stack_reg', 'purge_line_number_notes', 'purge_line_number_notes', 'purge_line_number_notes', 'push_to_sequence', 'rm_line_notes', 'scope_to_insns_initialize', 'simplify_plus_minus']
['do_store_flag', 'hash_scan_set', 'simplify_subreg']
['print_value']
['print_value']
['rm_line_notes', 'scope_to_insns_initialize']
['set_mem_attributes']
['probe_stack_range']
['probe_stack_range']
['probe_stack_range']
['probe_stack_range']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'cselib_process_insn', 'dw2_asm_output_encoded_addr_rtx', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_eh_return', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_force_to_memory', 'ix86_force_to_memory', 'load_pic_register', 'output_cfi', 'output_constant_def', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'trampoline_address', 'trampoline_address']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'cselib_process_insn', 'dw2_asm_output_encoded_addr_rtx', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_eh_return', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_force_to_memory', 'ix86_force_to_memory', 'load_pic_register', 'output_cfi', 'output_constant_def', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'trampoline_address', 'trampoline_address']
['process_init_element', 'process_init_element']
['process_init_element', 'process_init_element']
['process_init_element', 'process_init_element']
['process_init_element', 'process_init_element']
['process_init_element']
['process_init_element']
['process_insert_insn']
['regclass_init']
['timevar_pop']
['cleanup_barriers', 'cse_end_of_basic_block', 'emit_insns_after', 'emit_insns_after', 'final', 'move_for_stack_reg', 'purge_line_number_notes', 'purge_line_number_notes', 'purge_line_number_notes', 'push_to_sequence', 'rm_line_notes', 'scope_to_insns_initialize']
['print_rtl_with_bb']
['ix86_split_to_parts']
['process_reg_param']
['offset_address']
['schedule_insns', 'schedule_insns']
['schedule_insns', 'schedule_insns']
['consec_sets_giv']
['sched_analyze_insn']
['propagate_one_insn']
['compute_forward_dependences', 'protect_from_queue', 'split_all_insns', 'subst_indexed_address', 'tidy_fallthru_edge']
['protect_from_queue']
['protect_from_queue']
['protect_from_queue']
['protect_from_queue', 'record_jump_cond']
['gen_reload', 'protect_from_queue']
['protect_from_queue']
['protect_from_queue']
['protect_from_queue']
['protect_from_queue', 'protect_from_queue']
['protect_from_queue', 'protect_from_queue']
['delete_insn', 'insn_dead_p']
['find_free_reg']
['regclass']
['ix86_attr_length_address_default']
['find_reg']
['ix86_attr_length_address_default']
['purge_addressof']
['purge_addressof']
['find_reg']
['find_reg']
['purge_addressof']
['purge_addressof']
['purge_addressof']
['purge_addressof']
['purge_addressof']
['purge_addressof', 'purge_addressof']
['purge_addressof', 'purge_addressof']
['purge_addressof']
['purge_addressof']
['purge_addressof']
['purge_addressof']
['insert']
['copy_insn_list', 'delete_output_reload', 'emit_libcall_block', 'emit_no_conflict_block', 'emit_swap_insn', 'express_from_1', 'find_split_point', 'make_compound_operation', 'make_extraction', 'memrefs_conflict_p', 'record_jump_cond', 'scan_loop', 'try_combine']
['copy_insn_list', 'distribute_notes', 'emit_libcall_block', 'emit_no_conflict_block', 'emit_swap_insn', 'find_reloads_address_1', 'find_split_point', 'find_split_point', 'make_compound_operation', 'make_extraction', 'mark_used_regs', 'memrefs_conflict_p', 'print_rtl_graph_with_bb', 'record_jump_cond', 'try_combine']
['insn_extract', 'simplify_giv_expr']
['compute_forward_dependences', 'distribute_notes', 'mark_all_labels', 'purge_addressof_1']
['delete_noop_moves', 'find_equiv_reg', 'mark_all_labels', 'mark_all_labels', 'offset_address', 'purge_addressof_1']
['adjust_address_1', 'change_address_1', 'convert_from_ssa', 'copy_insn_list', 'cse_end_of_basic_block', 'cselib_process_insn', 'delete_output_reload', 'eliminate_regs', 'expand_inline_function', 'find_base_term', 'find_if_header', 'find_reloads_address', 'find_split_point', 'find_split_point', 'fixup_var_refs_1', 'gen_reload', 'loop_iterations', 'loop_iterations', 'memory_address', 'move_deaths', 'noce_get_alt_condition', 'nonoverlapping_memrefs_p', 'nonoverlapping_memrefs_p', 'nonoverlapping_memrefs_p', 'optimize_sibling_and_tail_recursive_calls', 'purge_addressof_1', 'purge_addressof_1', 'purge_addressof_1', 'replace_pseudos_in_call_usage', 'restore_line_notes', 'simplify_binary_operation', 'simplify_shift_const', 'ssa_const_prop', 'store_expr', 'thread_prologue_and_epilogue_insns', 'thread_prologue_and_epilogue_insns', 'try_combine']
['purge_hard_subreg_sets']
['purge_hard_subreg_sets']
['purge_hard_subreg_sets', 'purge_hard_subreg_sets']
['purge_hard_subreg_sets', 'purge_hard_subreg_sets']
['purge_line_number_notes']
['purge_line_number_notes']
['purge_line_number_notes']
['purge_line_number_notes', 'rm_other_notes']
['purge_line_number_notes', 'purge_line_number_notes', 'purge_line_number_notes']
['purge_line_number_notes']
['purge_line_number_notes', 'purge_line_number_notes', 'purge_line_number_notes']
['purge_line_number_notes']
['purge_line_number_notes', 'purge_line_number_notes', 'purge_line_number_notes']
['purge_line_number_notes']
['purge_line_number_notes', 'purge_line_number_notes']
['purge_line_number_notes', 'purge_line_number_notes']
['purge_line_number_notes', 'purge_line_number_notes']
['purge_line_number_notes', 'purge_line_number_notes']
['peephole2_optimize']
['compute_transp']
['start_init']
['pop_init_level']
['pop_init_level', 'push_init_level', 'start_init']
['pop_init_level', 'push_init_level', 'push_init_level', 'start_init']
['error_init', 'error_init', 'pedwarn_init', 'pedwarn_init', 'warning_init', 'warning_init']
['push_block']
['push_block']
['push_init_level', 'set_designator']
['push_init_level']
['push_init_level', 'push_init_level']
['push_init_level']
['push_init_level']
['push_init_level']
['push_init_level', 'start_init']
['push_init_level', 'push_init_level']
['push_init_level', 'push_init_level']
['pop_init_level', 'push_init_level', 'push_init_level']
['push_init_level', 'push_init_level']
['push_init_level']
['start_init']
['pop_init_level']
['pop_init_level', 'push_init_level', 'start_init']
['pop_init_level', 'push_init_level', 'push_init_level', 'start_init']
['error_init', 'error_init', 'pedwarn_init', 'pedwarn_init', 'warning_init', 'warning_init']
['set_init_label']
['set_init_label']
['finish_init', 'pop_init_level', 'set_designator', 'set_init_index', 'set_init_label', 'set_init_label']
['set_init_label']
['set_init_label']
['distribute_notes', 'expand_decl', 'find_single_use_1', 'mark_set_1', 'mark_used_regs', 'mark_used_regs', 'noce_get_alt_condition', 'refers_to_regno_p', 'scan_loop', 'simplify_giv_expr', 'simplify_relational_operation', 'subst_asm_stack_regs']
['remove_address_replacements', 'remove_address_replacements']
['allocate_dynamic_stack_space']
['expand_twoval_binop']
['emit_conditional_move']
['combine_regs']
['start_init']
['pop_init_level']
['pop_init_level', 'push_init_level', 'start_init']
['pop_init_level', 'push_init_level', 'push_init_level', 'start_init']
['error_init', 'error_init', 'pedwarn_init', 'pedwarn_init', 'warning_init', 'warning_init']
['push_to_full_sequence', 'push_to_full_sequence']
['push_to_full_sequence', 'push_to_full_sequence']
['push_to_full_sequence', 'push_to_sequence', 'push_topmost_sequence', 'start_sequence']
['expected_value_to_br_prob', 'push_to_sequence']
['push_to_sequence', 'push_to_sequence']
['push_to_sequence', 'push_to_sequence']
['push_to_full_sequence', 'push_to_sequence', 'push_topmost_sequence', 'start_sequence']
['push_to_sequence']
['push_to_sequence']
['push_topmost_sequence', 'push_topmost_sequence', 'start_sequence', 'start_sequence']
['push_topmost_sequence', 'push_topmost_sequence', 'start_sequence', 'start_sequence']
['push_to_full_sequence', 'push_to_sequence', 'push_topmost_sequence', 'start_sequence']
['push_topmost_sequence', 'push_topmost_sequence']
['push_topmost_sequence', 'push_topmost_sequence']
['set_decl_abstract_flags', 'set_decl_origin_self']
['int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p']
['int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p', 'int_fits_type_p']
['pushlevel']
['pushlevel']
['pushlevel']
['pushlevel']
['compute_transp']
['compute_transp']
['put_condition_code']
['put_condition_code']
['put_condition_code']
['put_condition_code']
['put_condition_code']
['put_var_into_stack']
['qty_sugg_compare', 'qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare']
['qty_sugg_compare', 'qty_sugg_compare']
['queue_and_dump_index']
['queue_and_dump_index']
['copy_loop_body', 'copy_rtx_and_substitute', 'eliminate_regs_in_insn', 'emit_no_conflict_block', 'expand_end_bindings', 'extract_bit_field', 'loop_iterations', 'make_compound_operation', 'memrefs_conflict_p', 'reload', 'ssa_eliminate_dead_code', 'try_combine']
['cse_set_around_loop']
['copy_insn_notes', 'expected_value_to_br_prob', 'expr_killed_p', 'gen_sequence', 'oprs_not_set_p', 'oprs_unchanged_p', 'rm_line_notes', 'split_all_insns', 'try_copy_prop']
['concat_loc_descriptor']
['expr_killed_p', 'merge_blocks_nomove', 'oprs_not_set_p', 'oprs_unchanged_p', 'restore_line_notes', 'split_all_insns']
['combine_givs', 'expr_killed_p', 'final', 'gen_sequence']
['reachable_next_level']
['reachable_next_level']
['read_filename_string']
['read_filename_string']
['asm_fprintf', 'check_format_info_recurse', 'print_value']
['read_name_map']
['check_format_info_recurse', 'lex_number']
['mergeable_string_section', 'output_constant_def_contents', 'output_constant_pool', 'readonly_data_section', 'variable_section', 'variable_section']
['mergeable_string_section', 'output_constant_def_contents', 'output_constant_pool', 'readonly_data_section', 'variable_section']
['real_onep', 'real_twop', 'real_zerop']
['real_onep', 'real_twop', 'real_zerop']
['real_value_from_int_cst']
['real_value_from_int_cst']
['real_value_from_int_cst']
['real_value_truncate']
['real_value_truncate']
['real_onep', 'real_twop', 'real_zerop']
['really_start_incremental_init']
['really_start_incremental_init']
['really_start_incremental_init']
['really_start_incremental_init']
['final', 'rebuild_jump_labels']
['rebuild_jump_labels', 'rebuild_jump_labels', 'rebuild_jump_labels']
['rebuild_jump_labels', 'rebuild_jump_labels', 'rebuild_jump_labels']
['rebuild_jump_labels', 'rebuild_jump_labels', 'rebuild_jump_labels']
['rebuild_jump_labels']
['extract_insn', 'peephole2_insns', 'recog', 'split_insns']
['recog', 'recog']
['recog', 'recog']
['recog']
['recog', 'recog_5', 'recog_5', 'recog_5']
['get_attr_length_address']
['recog']
['recog']
['recog', 'recog_29', 'recog_30']
['recog_23', 'recog_30', 'recog_5', 'recog_5', 'split_4']
['recog_23', 'recog_30', 'recog_5', 'recog_5', 'split_4']
['recog', 'recog_29']
['recog', 'recog_29', 'recog_30']
['recog', 'recog_29', 'recog_30']
['recog_5']
['recog_29']
['recog_23', 'recog_23']
['recog_23', 'recog_23']
['recog_5']
['recog_5', 'recog_5']
['recog_29']
['recog_23']
['cleanup_subreg_operands', 'peephole2_insns', 'recog', 'recog', 'recog_23', 'recog_26', 'recog_26', 'recog_26', 'recog_30', 'recog_30', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'split_4', 'split_4', 'split_4']
['recog_23', 'recog_23', 'recog_23', 'recog_26', 'recog_26', 'recog_26', 'recog_29', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['cleanup_subreg_operands']
['cleanup_subreg_operands']
['recog_23', 'recog_23', 'recog_23', 'recog_26', 'recog_26', 'recog_26', 'recog_29', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['recog_5']
['cleanup_subreg_operands']
['cleanup_subreg_operands']
['peephole2_insns', 'recog', 'recog', 'recog_23', 'recog_26', 'recog_29', 'recog_29', 'recog_29', 'recog_29', 'recog_30', 'recog_30', 'recog_5', 'recog_5', 'recog_5']
['cleanup_subreg_operands', 'peephole2_insns', 'recog', 'recog', 'recog_23', 'recog_26', 'recog_26', 'recog_26', 'recog_30', 'recog_30', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'split_4', 'split_4', 'split_4']
['peephole2_insns']
['recog_29']
['peephole2_insns']
['recog_29']
['recog_5', 'recog_5']
['recog_29']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['cleanup_subreg_operands']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['recog_5', 'recog_5']
['recog_29']
['recog_5']
['recog_29']
['recog', 'recog', 'recog_5', 'recog_5', 'recog_5']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['recog_5']
['recog_29']
['recog_5']
['recog_29']
['recog_5']
['recog_5']
['recog_29']
['recog_5', 'recog_5']
['recog_29']
['recog_5']
['recog_29']
['recog_5']
['recog_29']
['peephole2_insns', 'recog_26', 'recog_5']
['recog_26', 'recog_29']
['recog', 'recog', 'recog_23', 'recog_30', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'split_4', 'split_4', 'split_4']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['recog', 'recog_29']
['peephole2_insns']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['recog_29']
['recog', 'recog', 'recog_23', 'recog_30', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'split_4', 'split_4', 'split_4']
['recog_29']
['peephole2_insns']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['recog_29']
['peephole2_insns']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['recog_29']
['recog', 'recog_29']
['recog_5']
['recog_5']
['recog_5']
['recog_29']
['recog_5']
['recog_29']
['recog_5']
['recog_29']
['recog_5', 'recog_5']
['recog_29']
['recog_5']
['recog_29']
['recog', 'recog_29', 'recog_30']
['peephole2_insns']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['cleanup_subreg_operands']
['cleanup_subreg_operands']
['peephole2_insns']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['cleanup_subreg_operands']
['cleanup_subreg_operands']
['recog', 'recog_29', 'recog_30']
['recog_23', 'recog_30', 'recog_5', 'recog_5', 'split_4']
['recog_23', 'recog_30', 'recog_5', 'recog_5', 'split_4']
['recog', 'recog_29', 'recog_30']
['recog', 'recog', 'recog_23', 'recog_30', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'split_4', 'split_4', 'split_4']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['recog_23', 'recog_23']
['peephole2_insns']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['recog_23', 'recog_23']
['peephole2_insns']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['recog_23', 'recog_23']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['recog', 'recog_29']
['recog_5']
['recog', 'recog_29']
['recog', 'recog_29']
['recog_5']
['recog_5']
['cleanup_subreg_operands']
['split_2']
['peephole2_insns']
['split_4', 'split_4']
['recog', 'recog', 'recog', 'recog_23', 'recog_23', 'split_1', 'split_2', 'split_2', 'split_2', 'split_2', 'split_insns', 'split_insns']
['recog_5']
['recog_23']
['recog', 'recog_29']
['recog_5']
['force_operand']
['scan_one_insn']
['scan_one_insn']
['peephole2_insns']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['cleanup_subreg_operands']
['cleanup_subreg_operands']
['recog', 'recog', 'recog_23', 'recog_30', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'split_4', 'split_4', 'split_4']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['cleanup_subreg_operands']
['cleanup_subreg_operands']
['recog', 'recog', 'recog_5', 'recog_5', 'recog_5']
['recog', 'recog_29', 'recog_30']
['recog_23', 'recog_30', 'recog_5', 'recog_5', 'split_4']
['recog_23', 'recog_30', 'recog_5', 'recog_5', 'split_4']
['cleanup_subreg_operands']
['split_2']
['recog', 'recog_29', 'recog_30']
['recog_23', 'recog_30', 'recog_5', 'recog_5', 'split_4']
['recog_23', 'recog_30', 'recog_5', 'recog_5', 'split_4']
['recog', 'recog_29']
['peephole2_insns']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['recog', 'recog', 'recog_23', 'recog_30', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'split_4', 'split_4', 'split_4']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['recog_23', 'recog_23']
['peephole2_insns']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['recog_23', 'recog_23']
['peephole2_insns']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['recog_23', 'recog_23']
['recog_5', 'recog_5']
['recog_23']
['recog_23']
['peephole2_insns']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['cleanup_subreg_operands']
['cleanup_subreg_operands']
['recog', 'recog', 'recog', 'recog_23', 'recog_30', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'split_4', 'split_4', 'split_4']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['cleanup_subreg_operands']
['cleanup_subreg_operands']
['recog', 'recog', 'recog_23', 'recog_30', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'split_4', 'split_4', 'split_4']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['cleanup_subreg_operands']
['cleanup_subreg_operands']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['recog', 'recog_29']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['recog', 'recog_29']
['recog_23']
['recog_23']
['recog_23', 'recog_23']
['recog', 'recog', 'recog_5', 'recog_5', 'recog_5']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['recog', 'recog_29']
['scan_one_insn']
['recog_23']
['recog_23', 'recog_23']
['recog_23']
['recog_23', 'recog_23']
['recog_23']
['recog_23']
['recog_23', 'recog_23']
['recog_23', 'recog_23']
['recog_23']
['recog_23']
['recog_23', 'recog_23']
['recog_23', 'recog_23']
['recog_23']
['recog_23']
['recog_23', 'recog_23']
['recog_23']
['recog_23']
['recog_23']
['recog_23']
['recog_23']
['cleanup_subreg_operands']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['recog', 'recog_29']
['recog_23']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['recog', 'recog_29']
['recog_23']
['recog_23']
['recog_23', 'recog_23']
['recog', 'recog', 'recog_5', 'recog_5', 'recog_5']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['recog', 'recog_29']
['scan_one_insn']
['recog_23']
['cleanup_subreg_operands']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['recog', 'recog_29']
['find_reloads_toplev']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['recog', 'recog_29']
['scan_one_insn']
['recog_23']
['recog_23', 'recog_23']
['recog', 'recog', 'recog_5', 'recog_5', 'recog_5']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['recog', 'recog_29']
['scan_one_insn']
['recog_23']
['recog_26']
['recog_26']
['recog_26']
['recog_26', 'split_1']
['recog_26']
['recog_26']
['recog_26']
['recog_26']
['recog_26']
['recog_26']
['recog_26']
['recog_26']
['peephole2_insns']
['recog_29']
['recog', 'recog_29']
['peephole2_insns']
['peephole2_insns']
['recog_29']
['recog', 'recog_29']
['peephole2_insns']
['recog', 'recog_29']
['peephole2_insns', 'recog', 'recog', 'recog', 'recog', 'recog_23', 'recog_23', 'recog_23', 'recog_23', 'recog_26', 'recog_29', 'recog_29', 'recog_29', 'recog_29', 'recog_29', 'recog_30', 'recog_30', 'recog_30', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'split_4', 'split_4', 'split_4', 'split_4', 'split_4', 'split_4', 'split_4', 'split_4']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['recog_30', 'split_4', 'split_4']
['peephole2_insns']
['recog_5']
['peephole2_insns']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['recog_30', 'split_4', 'split_4']
['recog_5']
['peephole2_insns']
['recog_29']
['peephole2_insns']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['recog_29', 'recog_29']
['recog_29']
['recog_29']
['recog_29']
['recog_29', 'recog_29']
['recog_29', 'split_4']
['recog_29']
['recog_29']
['recog_29', 'recog_29']
['recog_29']
['recog_29']
['recog_29']
['recog_29', 'recog_29']
['recog_29']
['recog_29']
['recog_29']
['recog', 'recog_29', 'recog_30']
['recog_23', 'recog_30', 'recog_5', 'recog_5', 'split_4']
['recog', 'recog_29', 'recog_30']
['recog_5', 'recog_5']
['recog_23', 'recog_30', 'recog_5', 'recog_5', 'split_4']
['cleanup_subreg_operands']
['cleanup_subreg_operands']
['recog', 'recog_29']
['recog_23', 'recog_30', 'recog_5', 'recog_5', 'split_4']
['recog', 'recog_29', 'recog_30']
['recog_5']
['recog_5']
['recog', 'recog_29', 'recog_30']
['recog_30', 'recog_30']
['recog_30']
['recog_30']
['recog_30']
['recog_30']
['recog_30']
['recog_30', 'recog_30']
['recog_30']
['recog_30']
['recog_30']
['recog_30']
['recog_30']
['recog_29']
['recog', 'recog_29']
['recog_29', 'recog_29', 'split_4']
['recog_30', 'split_4', 'split_4']
['recog_5']
['peephole2_insns']
['peephole2_insns']
['peephole2_insns']
['peephole2_insns']
['peephole2_insns']
['peephole2_insns', 'recog_30']
['split_2', 'split_2']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['peephole2_insns', 'recog_30']
['split_2', 'split_2']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['recog', 'recog_29']
['recog', 'recog_29']
['recog', 'recog_29']
['recog_29']
['peephole2_insns']
['recog_5', 'recog_5']
['peephole2_insns']
['recog_29']
['peephole2_insns']
['recog_29']
['recog_23', 'recog_23']
['recog', 'recog', 'recog_23', 'recog_30', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'split_4', 'split_4', 'split_4']
['recog_23', 'recog_23']
['recog_5']
['recog_5']
['recog_5']
['recog_5']
['peephole2_insns']
['recog_5']
['recog', 'recog_5', 'recog_5', 'recog_5']
['recog_5']
['recog', 'recog_5', 'recog_5', 'recog_5']
['recog', 'recog_5', 'recog_5']
['recog', 'recog_5', 'recog_5']
['recog', 'recog_5', 'recog_5', 'recog_5']
['recog_5']
['recog_5']
['recog_5']
['recog_5']
['recog_5']
['recog_5']
['peephole2_insns']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['split_4']
['recog_23']
['peephole2_insns']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['split_4']
['recog_23']
['cleanup_subreg_operands']
['cleanup_subreg_operands']
['peephole2_insns']
['peephole2_insns']
['recog_5']
['peephole2_insns']
['recog_5']
['peephole2_insns']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['split_4']
['recog_23']
['peephole2_insns']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['split_4']
['recog_23']
['cleanup_subreg_operands']
['cleanup_subreg_operands']
['recog', 'recog_29', 'recog_30']
['recog_5', 'recog_5']
['recog_5', 'recog_5']
['recog_23', 'recog_30', 'recog_5', 'recog_5', 'split_4']
['recog', 'recog_29', 'recog_30']
['recog_5']
['recog_23', 'recog_23']
['recog_5']
['cleanup_subreg_operands']
['cleanup_subreg_operands']
['recog_5']
['cleanup_subreg_operands']
['cleanup_subreg_operands']
['recog_5']
['recog_23', 'recog_23']
['recog_23', 'recog_30', 'recog_5', 'recog_5', 'split_4']
['recog', 'recog_29', 'recog_30']
['recog_5', 'recog_5']
['recog_5', 'recog_5']
['recog_23', 'recog_30', 'recog_5', 'recog_5', 'split_4']
['recog', 'recog_29', 'recog_30']
['recog_5']
['recog_23', 'recog_23']
['recog_5']
['cleanup_subreg_operands']
['cleanup_subreg_operands']
['recog_5']
['cleanup_subreg_operands']
['cleanup_subreg_operands']
['recog_5']
['recog_23', 'recog_23']
['recog_23', 'recog_30', 'recog_5', 'recog_5', 'split_4']
['do_SUBST', 'recog_for_combine']
['do_SUBST', 'recog_for_combine']
['do_SUBST', 'do_SUBST', 'recog_for_combine', 'recog_for_combine']
['do_SUBST', 'do_SUBST', 'recog_for_combine', 'recog_for_combine']
['do_SUBST', 'recog_for_combine']
['do_SUBST', 'recog_for_combine']
['recog_for_combine']
['recog_for_combine']
['recog_for_combine', 'recog_for_combine']
['recog_for_combine']
['recog_for_combine']
['recog_for_combine']
['recog_for_combine']
['recog_for_combine', 'recog_for_combine']
['recog_for_combine', 'recog_for_combine']
['recog_for_combine']
['recog_for_combine']
['recog_for_combine']
['recog_for_combine', 'recog_for_combine']
['record_address_regs']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'cselib_process_insn', 'dw2_asm_output_encoded_addr_rtx', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_eh_return', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_force_to_memory', 'ix86_force_to_memory', 'load_pic_register', 'output_cfi', 'output_constant_def', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'trampoline_address', 'trampoline_address']
['find_mem_givs', 'find_mem_givs']
['alloc_aux_for_blocks', 'alloc_aux_for_edges', 'ix86_attr_length_address_default']
['compare_constant_1', 'compare_constant_1', 'decode_addr_const', 'record_constant_1', 'record_constant_1', 'safe_from_p']
['compare_constant_1', 'compare_constant_1', 'decode_addr_const', 'record_constant_1', 'record_constant_1', 'safe_from_p']
['record_constant_1']
['record_constant_1']
['record_constant_1']
['record_constant_1']
['record_dead_and_set_regs']
['record_dead_and_set_regs']
['record_dead_and_set_regs', 'record_value_for_reg']
['record_dead_and_set_regs']
['hard_reg_set_here_p', 'reload_combine_note_use']
['record_dead_and_set_regs']
['record_dead_and_set_regs']
['record_dead_and_set_regs']
['record_dead_and_set_regs']
['record_dead_and_set_regs']
['record_dead_and_set_regs']
['record_dead_and_set_regs']
['record_dead_and_set_regs']
['record_dead_and_set_regs']
['rtx_equal_for_field_assignment_p']
['want_to_gcse_p']
['adjust_address_1', 'distribute_notes', 'record_giv', 'schedule_block']
['cse_insn', 'find_reloads_address_1', 'noce_get_condition', 'record_giv', 'scan_loop', 'sched_analyze_2', 'unroll_loop']
['for_each_insn_in_loop', 'visit_expression']
['adjust_address_1', 'eliminate_regs_in_insn', 'gcse_main', 'mark_used_regs', 'memrefs_conflict_p', 'record_giv']
['record_giv']
['emit_library_call_value_1', 'expand_function_end', 'gen_reload', 'insns_match_p', 'local_alloc', 'noce_get_alt_condition', 'simplify_shift_const', 'store_bit_field']
['record_giv']
['record_giv']
['protect_from_queue', 'record_jump_cond']
['memory_address', 'record_jump_cond']
['check_asm_stack_operands', 'eliminate_regs', 'express_from', 'noce_get_alt_condition', 'record_jump_cond', 'subst_constants']
['record_jump_cond']
['record_jump_cond']
['record_jump_cond']
['compute_hash_table', 'compute_hash_table']
['oprs_unchanged_p']
['want_to_gcse_p']
['ix86_attr_length_address_default']
['alloc_aux_for_edges', 'delete_insn', 'instantiate_decl', 'instantiate_decl']
['record_one_set', 'record_one_set']
['record_one_set', 'record_one_set']
['record_one_set']
['record_one_set']
['record_one_set', 'record_one_set']
['record_one_set', 'record_one_set']
['reload_cse_simplify_operands']
['extract_insn', 'preprocess_constraints']
['reload_cse_simplify_operands']
['reload_cse_simplify_operands']
['cleanup_subreg_operands']
['get_attr_prefix_0f', 'get_attr_prefix_0f', 'get_attr_prefix_0f']
['peephole2_insns', 'peephole2_insns', 'recog', 'recog', 'recog', 'recog', 'recog_23', 'recog_23', 'recog_23', 'recog_23', 'recog_23', 'recog_26', 'recog_26', 'recog_26', 'recog_26', 'recog_26', 'recog_26', 'recog_26', 'recog_29', 'recog_29', 'recog_29', 'recog_29', 'recog_29', 'recog_29', 'recog_29', 'recog_29', 'recog_30', 'recog_30', 'recog_30', 'recog_30', 'recog_30', 'recog_30', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'split_4', 'split_4', 'split_4', 'split_4', 'split_4', 'split_4', 'split_4', 'split_4']
['cleanup_subreg_operands']
['split_2']
['function_units_used', 'get_attr_athlon_decode', 'get_attr_athlon_decode', 'get_attr_athlon_decode']
['check_asm_stack_operands', 'cleanup_subreg_operands', 'cleanup_subreg_operands', 'constrain_operands', 'find_matches', 'find_matches', 'ix86_attr_length_immediate_default', 'preprocess_constraints', 'preprocess_constraints', 'reload_cse_simplify_operands', 'reload_cse_simplify_operands', 'reload_cse_simplify_operands']
['reload_cse_simplify_operands']
['extract_insn', 'extract_insn']
['extract_insn']
['extract_insn']
['extract_insn', 'extract_insn']
['extract_insn']
['extract_insn']
['record_reg_classes']
['constrain_operands', 'constrain_operands']
['known_cond', 'num_sign_bit_copies', 'record_value_for_reg']
['cse_insn']
['constrain_operands', 'find_reloads_address_1', 'scan_one_insn']
['record_dead_and_set_regs', 'record_value_for_reg']
['mark_used_regs', 'record_giv', 'subst_asm_stack_regs']
['if_then_else_cond']
['store_split_bit_field']
['insns_match_p', 'instantiate_virtual_regs_1']
['record_value_for_reg']
['choose_hard_reg_mode']
['record_value_for_reg']
['record_value_for_reg']
['legitimize_address', 'redirect_edge_and_branch', 'reload_cse_regs', 'subst_constants']
['compute_forward_dependences', 'copy_loop_headers', 'cse_basic_block', 'delete_related_insns', 'eliminate_regs_in_insn', 'find_basic_blocks', 'find_if_header', 'fixup_var_refs_insn', 'redirect_edge_and_branch', 'reload_cse_regs', 'scan_loop', 'try_crossjump_to_edge']
['optimize_sibling_and_tail_recursive_calls', 'print_rtx', 'simplify_giv_expr', 'try_crossjump_to_edge']
['ssa_const_prop']
['copy_rtx_and_substitute', 'cse_basic_block', 'insn_extract', 'optimize_sibling_and_tail_recursive_calls', 'regmove_optimize']
['copy_loop_headers', 'ix86_va_arg', 'redirect_edge_and_branch', 'scan_loop', 'try_combine']
['tidy_fallthru_edge']
['shorten_branches']
['redirect_edge_succ_nodup', 'remove_edge']
['redirect_edge_succ_nodup', 'remove_edge']
['redirect_edge_succ_nodup', 'remove_edge']
['redirect_edge_succ_nodup', 'remove_edge']
['refers_to_regno_for_reload_p']
['refers_to_regno_for_reload_p']
['refers_to_regno_for_reload_p']
['refers_to_regno_for_reload_p']
['refers_to_regno_for_reload_p']
['refers_to_regno_for_reload_p']
['alloc_gcse_mem', 'refers_to_regno_p']
['refers_to_regno_p']
['refers_to_regno_p']
['refers_to_regno_p']
['refers_to_regno_p']
['emit_swap_insn', 'refers_to_regno_p']
['operands_match_p', 'refers_to_regno_p']
['refers_to_regno_p']
['refers_to_regno_p']
['refers_to_regno_p']
['refers_to_regno_p']
['refers_to_regno_p']
['allocate_reg_info', 'reg_alternate_class', 'reg_preferred_class']
['reg_alternate_class']
['add_location_or_const_value_attribute']
['peep2_reg_dead_p']
['reg_bitfield_target_p']
['reg_bitfield_target_p']
['add_location_or_const_value_attribute']
['peep2_reg_dead_p']
['add_location_or_const_value_attribute']
['add_location_or_const_value_attribute']
['ix86_register_move_cost', 'reg_dies', 'regno_clobbered_p']
['ix86_register_move_cost', 'reg_fits_class_p']
['reg_is_born']
['reg_is_born']
['clear_reload_reg_in_use', 'insert', 'mark_used_regs_combine']
['calculate_dominance_info', 'insert', 'mark_referenced_regs', 'mark_used_regs_combine', 'reg_is_born', 'wipe_dead_reg']
['reg_is_born']
['reg_is_born']
['expand_builtin_return_addr', 'ix86_function_value']
['operands_match_p', 'reg_overlap_mentioned_for_reload_p']
['operands_match_p', 'reg_overlap_mentioned_for_reload_p', 'reg_overlap_mentioned_p', 'rtx_renumbered_equal_p']
['reg_overlap_mentioned_for_reload_p']
['reg_overlap_mentioned_p']
['operands_match_p', 'reg_overlap_mentioned_for_reload_p', 'reg_overlap_mentioned_p', 'rtx_renumbered_equal_p']
['reg_overlap_mentioned_p']
['allocate_reg_info', 'reg_alternate_class', 'reg_preferred_class']
['reg_preferred_class']
['can_throw_external', 'can_throw_internal', 'convert_from_eh_region_ranges', 'delete_insn', 'delete_noop_moves', 'emit_libcall_block', 'hash_scan_set', 'mark_all_labels', 'reg_scan_mark_refs']
['reg_scan_mark_refs']
['reg_to_stack']
['regclass']
['regclass']
['allocate_reg_info', 'regclass']
['regclass', 'regclass']
['regclass', 'regclass']
['regclass']
['regclass']
['regclass']
['regclass']
['regclass']
['regclass', 'regclass']
['regclass', 'regclass']
['regclass']
['regclass']
['regclass']
['regclass']
['combine_regs']
['combine_regs']
['regclass_init']
['regclass_init', 'regclass_init']
['regclass_init', 'regclass_init']
['regclass_init', 'regclass_init']
['regclass_init', 'regclass_init']
['regclass_init', 'regclass_init']
['regclass_init', 'regclass_init']
['regclass_init', 'regclass_init']
['regclass_init', 'regclass_init']
['regclass_init', 'regclass_init']
['regclass_init', 'regclass_init']
['regclass_init']
['register_operand']
['copy_rtx_and_substitute', 'cse_basic_block', 'insn_extract', 'optimize_sibling_and_tail_recursive_calls', 'regmove_optimize']
['regmove_optimize']
['if_then_else_cond', 'nonoverlapping_memrefs_p', 'push_reload', 'regmove_optimize']
['cse_insn', 'regmove_optimize']
['global_alloc', 'move_for_stack_reg', 'subst_stack_regs_pat']
['delete_noop_moves']
['regmove_optimize']
['df_analyse_1']
['adjust_address_1', 'copy_insn_list', 'copy_loop_body', 'cse_insn', 'eliminate_regs_in_insn', 'emit_library_call_value_1', 'emit_library_call_value_1', 'extract_bit_field', 'find_if_header', 'fold_rtx', 'for_each_insn_in_loop', 'loop_iterations', 'noce_get_alt_condition', 'optimize_sibling_and_tail_recursive_calls', 'output_asm_insn', 'print_rtx', 'purge_addressof_1', 'record_giv', 'regmove_optimize', 'replace_pseudos_in_call_usage', 'simplify_giv_expr', 'ssa_eliminate_dead_code', 'ssa_eliminate_dead_code', 'thread_prologue_and_epilogue_insns', 'try_copy_prop', 'try_crossjump_to_edge', 'unroll_loop']
['ix86_register_move_cost', 'reg_dies', 'regno_clobbered_p']
['ix86_va_arg', 'regrename_optimize', 'simplify_binary_operation', 'try_combine']
['apply_distributive_law', 'copy_loop_headers', 'insn_dead_p', 'regrename_optimize']
['cse_insn', 'cse_insn', 'find_reloads', 'find_reloads', 'find_reloads_address_1', 'find_single_use_1', 'fixup_var_refs_1', 'instantiate_virtual_regs_1', 'loop_iterations', 'mark_used_regs', 'noce_get_condition', 'protect_from_queue', 'record_dead_and_set_regs', 'record_giv', 'regmove_optimize', 'regrename_optimize', 'reload', 'scan_loop', 'sched_analyze_2', 'subst_constants', 'unroll_loop']
['find_reloads_address_1']
['regrename_optimize']
['regrename_optimize']
['regrename_optimize']
['setup_save_areas']
['compute_use_by_pseudos', 'regrename_optimize']
['regrename_optimize', 'regrename_optimize']
['regrename_optimize', 'regrename_optimize']
['calculate_dominance_info', 'calculate_dominance_info', 'clear_dead_regs', 'mark_reg_death', 'regrename_optimize', 'subst_stack_regs']
['calculate_dominance_info', 'clear_dead_regs', 'clear_dead_regs', 'mark_reg_death', 'save_call_clobbered_regs', 'save_call_clobbered_regs', 'subst_stack_regs']
['calculate_dominance_info', 'clear_dead_regs', 'clear_dead_regs', 'mark_reg_death', 'save_call_clobbered_regs', 'save_call_clobbered_regs', 'subst_stack_regs']
['ggc_alloc']
['ggc_alloc']
['extract_bit_field']
['legitimize_address', 'redirect_edge_and_branch', 'reload_cse_regs', 'subst_constants']
['distribute_notes', 'emit_insns_after', 'expr_killed_p', 'fold_rtx', 'if_then_else_cond', 'legitimize_pic_address', 'make_compound_operation', 'memory_address', 'oprs_unchanged_p', 'print_rtl_graph_with_bb', 'record_jump_cond', 'redirect_edge_and_branch', 'schedule_block', 'schedule_block', 'simplify_comparison', 'ssa_const_prop', 'unroll_loop', 'visit_expression']
['emit_group_store', 'reload']
['cse_insn', 'find_if_header', 'find_split_point', 'init_alias_analysis', 'mark_used_regs']
['delete_output_reload', 'eliminate_regs', 'emit_libcall_block', 'emit_swap_insn', 'estimate_probability', 'expand_inline_function', 'find_split_point', 'move_for_stack_reg', 'oprs_not_set_p', 'reload_cse_regs', 'subst_stack_regs_pat']
['force_to_mode', 'gcse_main', 'protect_from_queue', 'protect_from_queue', 'record_jump_cond']
['reload_as_needed']
['known_cond', 'reload_as_needed', 'reload_as_needed']
['convert_from_eh_region_ranges', 'mark_set_1', 'record_jump_cond']
['distribute_notes', 'expand_call', 'noce_get_alt_condition', 'record_jump_cond', 'subst_asm_stack_regs']
['canonicalize_condition']
['canonicalize_condition']
['add_location_or_const_value_attribute']
['peep2_reg_dead_p']
['memory_address', 'memory_address']
['decompose']
['add_location_or_const_value_attribute']
['peephole2_optimize']
['compute_transp']
['ereal_from_int', 'ereal_from_uint', 'nonzero_bits']
['convert_move', 'ereal_from_int', 'ereal_from_uint']
['ereal_from_int', 'ereal_from_uint', 'nonzero_bits']
['convert_move']
['hard_reg_set_here_p', 'reload_combine_note_use']
['reload_combine_note_use']
['reload_combine_note_use']
['reload_combine_note_use']
['compute_transp']
['emit_swap_insn']
['check_asm_stack_operands', 'distribute_links', 'dwarf2out_frame_debug_expr']
['dwarf2out_frame_debug_expr']
['compute_transp']
['recog_for_combine', 'recog_for_combine', 'record_value_for_reg']
['recog_for_combine']
['compute_transp']
['compute_forward_dependences', 'copy_loop_headers', 'cse_basic_block', 'delete_related_insns', 'eliminate_regs_in_insn', 'find_basic_blocks', 'find_if_header', 'fixup_var_refs_insn', 'redirect_edge_and_branch', 'reload_cse_regs', 'scan_loop', 'try_crossjump_to_edge']
['reload_cse_regs']
['legitimize_address', 'redirect_edge_and_branch', 'reload_cse_regs', 'subst_constants']
['reload_cse_regs', 'subst_stack_regs_pat']
['reload_cse_regs']
['reload_cse_regs']
['reload_cse_regs']
['reload_cse_regs']
['reload_cse_regs']
['reload_cse_regs']
['reload_cse_regs']
['eliminate_regs_in_insn', 'find_if_header', 'gen_reload', 'protect_from_queue']
['eliminate_regs_in_insn', 'subst_stack_regs_pat', 'validate_replace_rtx_1']
['concat_loc_descriptor', 'copy_insn_notes', 'final', 'for_each_insn_in_loop', 'replace_pseudos_in_call_usage', 'rm_other_notes', 'save_line_notes', 'squeeze_notes', 'try_copy_prop']
['estimate_probability']
['init_propagate_block_info']
['init_propagate_block_info']
['gen_sequence']
['copy_insn_list']
['copy_insn_list', 'purge_line_number_notes', 'purge_line_number_notes', 'restore_line_notes', 'rm_other_notes']
['find_single_use_1']
['combine_instructions', 'delete_output_reload']
['reload_cse_simplify_operands', 'reload_cse_simplify_operands']
['reload_cse_simplify_operands', 'reload_cse_simplify_operands']
['reload_cse_simplify_operands']
['reload_cse_simplify_operands']
['check_asm_stack_operands', 'copyprop_hardreg_forward', 'ix86_attr_length_address_default', 'reload_cse_simplify_operands', 'reload_cse_simplify_operands']
['check_asm_stack_operands', 'cleanup_subreg_operands', 'constrain_operands', 'preprocess_constraints', 'reload_cse_simplify_operands', 'reload_cse_simplify_operands']
['reload_cse_simplify_operands']
['reload_cse_simplify_operands']
['reload_cse_simplify_operands']
['check_asm_stack_operands', 'copyprop_hardreg_forward', 'ix86_attr_length_address_default', 'reload_cse_simplify_operands', 'reload_cse_simplify_operands']
['reload_cse_simplify_operands']
['check_asm_stack_operands', 'cleanup_subreg_operands', 'constrain_operands', 'preprocess_constraints', 'reload_cse_simplify_operands', 'reload_cse_simplify_operands']
['preprocess_constraints', 'preprocess_constraints', 'reload_cse_simplify_operands']
['reload_cse_simplify_operands']
['reload_cse_simplify_operands']
['reload_cse_simplify_set']
['reload_cse_simplify_set']
['reload_cse_simplify_set']
['reload_cse_simplify_set']
['reload_cse_simplify_set']
['reload_cse_simplify_set']
['reload_inner_reg_of_subreg']
['add_location_or_const_value_attribute']
['peep2_reg_dead_p']
['reload_reg_free_p']
['reload_reg_reaches_end_p']
['reloads_conflict']
['ggc_mark_trees']
['optimize_inline_calls']
['walk_tree', 'walk_tree']
['remove_address_replacements', 'remove_address_replacements']
['remove_address_replacements', 'remove_address_replacements']
['redirect_edge_succ_nodup', 'remove_edge']
['redirect_edge_succ_nodup', 'remove_edge']
['redirect_edge_succ_nodup', 'remove_edge']
['redirect_edge_succ_nodup', 'remove_edge']
['cselib_invalidate_rtx']
['cselib_invalidate_rtx']
['compare_for_stack_reg', 'find_reloads_address_1', 'record_value_for_reg', 'rename_block']
['rename_block']
['rename_block']
['rename_block']
['rename_block']
['rename_block']
['rename_block']
['rename_block']
['rename_block']
['run_directive']
['replace_call_placeholder']
['replace_call_placeholder']
['replace_call_placeholder']
['copy_loop_headers', 'instantiate_virtual_regs_1', 'record_dead_and_set_regs']
['known_cond', 'num_sign_bit_copies', 'record_value_for_reg']
['record_dead_and_set_regs']
['df_uses_record', 'expand_end_bindings', 'find_single_use_1', 'refers_to_regno_for_reload_p', 'validate_replace_rtx_1']
['copyprop_hardreg_forward']
['num_sign_bit_copies', 'record_value_for_reg']
['num_sign_bit_copies']
['print_rtl_graph_with_bb']
['instantiate_virtual_regs_1']
['instantiate_virtual_regs_1']
['instantiate_virtual_regs_1']
['simplify_rtx']
['replace_pseudos_in_call_usage', 'validate_replace_rtx_1']
['for_each_insn_in_loop', 'replace_pseudos_in_call_usage', 'try_copy_prop']
['find_base_term', 'memory_address', 'replace_pseudos_in_call_usage', 'restore_line_notes']
['replace_pseudos_in_call_usage']
['replace_pseudos_in_call_usage']
['replace_pseudos_in_call_usage']
['replace_pseudos_in_call_usage', 'replace_pseudos_in_call_usage']
['replace_pseudos_in_call_usage', 'replace_pseudos_in_call_usage']
['replace_pseudos_in_call_usage']
['find_base_term', 'replace_pseudos_in_call_usage', 'replace_pseudos_in_call_usage']
['replace_pseudos_in_call_usage']
['find_base_term', 'replace_pseudos_in_call_usage', 'replace_pseudos_in_call_usage']
['replace_pseudos_in_call_usage', 'replace_pseudos_in_call_usage']
['replace_pseudos_in_call_usage', 'replace_pseudos_in_call_usage']
['replace_pseudos_in_call_usage']
['output_asm_insn']
['replace_regs']
['replace_regs']
['replace_regs', 'replace_regs']
['replace_regs', 'replace_regs']
['replace_regs', 'replace_regs', 'replace_regs']
['replace_regs', 'replace_regs', 'replace_regs']
['replace_regs', 'replace_regs', 'replace_regs']
['expand_compound_operation', 'noce_emit_cmove', 'replace_rtx', 'replace_rtx', 'write_dependence_p']
['known_cond', 'replace_rtx', 'simplify_rtx']
['expand_compound_operation', 'noce_emit_cmove', 'replace_rtx', 'replace_rtx', 'write_dependence_p']
['kill_value', 'known_cond', 'replace_rtx', 'simplify_replace_rtx', 'simplify_rtx', 'true_regnum']
['diagnostic_for_decl', 'report_diagnostic']
['diagnostic_for_decl', 'report_diagnostic']
['fatal_io_error']
['fatal_io_error', 'report_diagnostic', 'sorry', 'verbatim']
['fatal_io_error', 'report_diagnostic', 'sorry', 'verbatim']
['fatal_io_error', 'report_diagnostic', 'sorry']
['fatal_io_error']
['report_diagnostic', 'report_diagnostic']
['report_diagnostic', 'report_diagnostic']
['expand_goto', 'expand_inline_function', 'loop_optimize', 'reposition_prologue_and_epilogue_notes']
['reposition_prologue_and_epilogue_notes']
['eliminate_regs_in_insn']
['expand_goto', 'gen_reload', 'reposition_prologue_and_epilogue_notes']
['reposition_prologue_and_epilogue_notes']
['reposition_prologue_and_epilogue_notes']
['insns_match_p', 'purge_line_number_notes']
['reposition_prologue_and_epilogue_notes']
['reposition_prologue_and_epilogue_notes', 'reposition_prologue_and_epilogue_notes']
['reposition_prologue_and_epilogue_notes']
['reposition_prologue_and_epilogue_notes', 'reposition_prologue_and_epilogue_notes']
['reposition_prologue_and_epilogue_notes', 'reposition_prologue_and_epilogue_notes']
['expand_goto', 'gen_reload', 'reposition_prologue_and_epilogue_notes']
['asm_fprintf', 'asm_operand_ok', 'check_format_info_recurse', 'check_format_info_recurse', 'check_format_info_recurse', 'requires_inout']
['asm_operand_ok']
['asm_fprintf']
['requires_inout']
['resolve_operand_name_1']
['parse_output_constraint']
['resolve_unique_section']
['rest_of_compilation']
['c_expand_body', 'rest_of_compilation', 'rest_of_compilation']
['c_expand_body', 'c_expand_body', 'rest_of_compilation', 'rest_of_compilation']
['open_dump_file', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation']
['open_dump_file', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation']
['c_expand_body', 'rest_of_compilation', 'rest_of_compilation']
['c_expand_body', 'c_expand_body', 'rest_of_compilation', 'rest_of_compilation']
['rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation']
['open_dump_file', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation']
['open_dump_file', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation']
['rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation']
['rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation']
['open_dump_file', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation']
['open_dump_file', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation']
['rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation']
['rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation']
['rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation']
['open_dump_file', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation', 'rest_of_compilation']
['rest_of_compilation']
['rest_of_decl_compilation']
['rest_of_decl_compilation']
['rest_of_decl_compilation', 'rest_of_type_compilation']
['rest_of_decl_compilation', 'rest_of_type_compilation']
['rest_of_decl_compilation', 'rest_of_type_compilation']
['rest_of_decl_compilation', 'rest_of_type_compilation']
['clear_emit_caches', 'restore_emit_status']
['clear_emit_caches', 'restore_emit_status']
['restore_line_notes', 'save_for_inline']
['restore_line_notes']
['find_base_term', 'memory_address', 'replace_pseudos_in_call_usage', 'restore_line_notes']
['restore_line_notes']
['restore_line_notes', 'restore_line_notes']
['restore_line_notes', 'restore_line_notes']
['restore_line_notes']
['restore_line_notes']
['restore_line_notes']
['restore_line_notes']
['restore_line_notes', 'restore_line_notes']
['restore_line_notes', 'restore_line_notes']
['restore_line_notes']
['restore_line_notes', 'restore_line_notes', 'restore_line_notes']
['restore_line_notes', 'restore_line_notes', 'restore_line_notes']
['restore_line_notes', 'restore_line_notes', 'restore_line_notes']
['get_attr_imm_disp']
['get_attr_memory']
['get_attr_memory']
['get_attr_memory']
['get_attr_memory']
['get_attr_length_immediate', 'get_attr_memory', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_memory']
['get_attr_memory']
['get_attr_length_immediate', 'get_attr_pent_pair']
['get_attr_memory']
['get_attr_memory']
['get_attr_length_immediate', 'get_attr_length_immediate', 'get_attr_pent_pair']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_pent_pair', 'get_attr_prefix_0f']
['get_attr_memory']
['get_attr_memory']
['get_attr_memory']
['get_attr_memory']
['get_attr_memory']
['change_address']
['gen_peephole2_1264', 'gen_peephole2_1266']
['fixup_memory_subreg']
['reversed_comparison_code']
['cselib_subst_to_values']
['reversed_comparison_code_parts']
['compute_forward_dependences', 'convert_from_eh_region_ranges', 'copy_loop_headers', 'cse_basic_block', 'delete_related_insns', 'eliminate_regs_in_insn', 'find_basic_blocks', 'find_if_header', 'fixup_var_refs_insn', 'life_analysis', 'redirect_edge_and_branch', 'reload_cse_regs', 'scan_loop', 'split_all_insns', 'try_crossjump_to_edge']
['print_rtl_with_bb']
['compute_forward_dependences', 'convert_from_eh_region_ranges', 'copy_loop_headers', 'cse_basic_block', 'delete_related_insns', 'eliminate_regs_in_insn', 'find_basic_blocks', 'find_if_header', 'fixup_var_refs_insn', 'life_analysis', 'redirect_edge_and_branch', 'reload_cse_regs', 'scan_loop', 'split_all_insns', 'try_crossjump_to_edge']
['gen_binary', 'gen_binary', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'gen_sequence', 'make_memloc', 'make_memloc', 'simplify_unary_operation']
['rm_line_notes', 'rm_other_notes']
['rm_line_notes']
['rm_line_notes']
['rm_line_notes']
['rm_line_notes', 'rm_line_notes']
['rm_line_notes', 'rm_line_notes']
['rm_line_notes']
['rm_line_notes']
['rm_line_notes']
['rm_line_notes']
['rm_line_notes']
['rm_line_notes']
['rm_line_notes']
['rm_line_notes']
['rm_line_notes']
['rm_line_notes']
['rm_line_notes', 'scope_to_insns_initialize']
['rm_line_notes', 'rm_other_notes']
['rm_other_notes']
['rm_other_notes']
['rm_other_notes']
['find_base_term', 'memory_address', 'replace_pseudos_in_call_usage', 'restore_line_notes']
['purge_line_number_notes', 'rm_other_notes']
['rm_other_notes']
['rm_other_notes']
['rm_other_notes', 'rm_other_notes', 'squeeze_notes', 'squeeze_notes']
['rm_other_notes', 'rm_other_notes', 'squeeze_notes', 'squeeze_notes']
['rm_other_notes']
['rm_other_notes', 'rm_other_notes']
['rm_other_notes', 'rm_other_notes']
['rm_other_notes', 'rm_other_notes']
['expand_decl', 'expand_function_start', 'trampoline_address']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'cselib_process_insn', 'dw2_asm_output_encoded_addr_rtx', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_eh_return', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_force_to_memory', 'ix86_force_to_memory', 'load_pic_register', 'output_cfi', 'output_constant_def', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'trampoline_address', 'trampoline_address']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'cselib_process_insn', 'dw2_asm_output_encoded_addr_rtx', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_eh_return', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_force_to_memory', 'ix86_force_to_memory', 'load_pic_register', 'output_cfi', 'output_constant_def', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'trampoline_address', 'trampoline_address']
['apply_distributive_law', 'compare_for_stack_reg', 'distribute_notes', 'expand_builtin_memset', 'fixup_var_refs_1', 'force_operand', 'insn_dead_p', 'local_alloc', 'mark_all_labels', 'mark_set_1', 'rtl_for_decl_location', 'save_for_inline', 'store_bit_field', 'subst_constants', 'trampoline_address']
['rtl_for_decl_location']
['rtl_for_decl_location']
['cfg_layout_finalize', 'find_base_term', 'gen_sequence', 'noce_get_condition', 'oprs_not_set_p', 'rtl_for_decl_location']
['rtl_for_decl_location']
['rtl_for_decl_location']
['rtx_cost']
['rtx_equal_for_cselib_p']
['rtx_equal_for_cselib_p']
['rtx_equal_for_field_assignment_p']
['rtx_equal_for_field_assignment_p']
['rtx_equal_for_memref_p']
['regmove_optimize', 'rtx_renumbered_equal_p']
['rtx_renumbered_equal_p']
['rtx_renumbered_equal_p']
['rtx_renumbered_equal_p']
['operands_match_p', 'reg_overlap_mentioned_for_reload_p', 'reg_overlap_mentioned_p', 'rtx_renumbered_equal_p']
['expand_start_case', 'run_directive']
['bitmap_set_bit', 'run_directive']
['run_directive']
['run_directive']
['run_directive']
['run_directive']
['run_directive']
['run_directive']
['protect_from_queue', 'record_jump_cond']
['safe_from_p']
['safe_from_p']
['safe_from_p']
['safe_from_p']
['safe_from_p']
['replace_regs', 'replace_regs']
['replace_regs', 'replace_regs']
['expand_builtin_memset', 'find_dummy_reload', 'form_sum', 'trampoline_address']
['calls_function_1']
['find_matches', 'std_expand_builtin_va_start']
['clear_reload_reg_in_use', 'insert', 'mark_used_regs_combine']
['calculate_dominance_info', 'save_call_clobbered_regs', 'save_call_clobbered_regs']
['save_call_clobbered_regs']
['calculate_dominance_info', 'save_call_clobbered_regs', 'save_call_clobbered_regs']
['clear_reload_reg_in_use', 'insert', 'mark_used_regs_combine']
['find_free_reg']
['output_asm_insn']
['restore_line_notes', 'save_for_inline']
['save_for_inline']
['force_operand', 'save_for_inline']
['copy_insn_notes', 'save_for_inline', 'unroll_loop']
['save_for_inline']
['save_for_inline']
['save_for_inline', 'save_for_inline']
['save_for_inline', 'save_for_inline']
['save_for_inline', 'save_for_inline', 'save_for_inline']
['save_for_inline', 'save_for_inline', 'save_for_inline']
['save_for_inline', 'save_for_inline', 'save_for_inline']
['save_for_inline']
['save_for_inline']
['save_line_notes', 'squeeze_notes']
['save_line_notes']
['save_line_notes']
['save_line_notes']
['expand_decl', 'save_stack_pointer']
['scan_loop']
['scan_loop']
['express_from_1', 'scan_loop']
['compute_forward_dependences', 'copy_loop_headers', 'cse_basic_block', 'delete_related_insns', 'eliminate_regs_in_insn', 'find_basic_blocks', 'find_if_header', 'fixup_var_refs_insn', 'redirect_edge_and_branch', 'reload_cse_regs', 'scan_loop', 'try_crossjump_to_edge']
['scan_loop']
['cse_main', 'merge_blocks_nomove', 'scan_loop', 'sge_plus_constant']
['cse_insn', 'find_reloads_address_1', 'noce_get_condition', 'record_giv', 'scan_loop', 'sched_analyze_2', 'unroll_loop']
['distribute_notes', 'noce_get_alt_condition', 'scan_loop', 'simplify_giv_expr', 'simplify_relational_operation']
['scan_loop']
['convert_from_ssa', 'eliminate_regs', 'find_split_point', 'loop_iterations', 'move_for_stack_reg', 'nonoverlapping_memrefs_p', 'optimize_sibling_and_tail_recursive_calls', 'optimize_sibling_and_tail_recursive_calls', 'plus_constant_wide', 'reload_cse_regs', 'ssa_eliminate_dead_code', 'subst_stack_regs_pat', 'thread_prologue_and_epilogue_insns']
['copy_loop_headers', 'insn_extract', 'record_dead_and_set_regs', 'scan_one_insn', 'scan_one_insn', 'subst_asm_stack_regs', 'subst_constants', 'try_crossjump_to_edge']
['copy_loop_headers', 'find_reloads_address_1', 'record_dead_and_set_regs', 'scan_one_insn', 'scan_one_insn', 'subst_asm_stack_regs', 'subst_constants', 'thread_prologue_and_epilogue_insns', 'try_crossjump_to_edge', 'visit_expression']
['scan_one_insn']
['scan_one_insn']
['scan_one_insn']
['scan_one_insn']
['scan_one_insn']
['scan_one_insn']
['scan_one_insn', 'scan_one_insn']
['scan_one_insn', 'scan_one_insn']
['scan_one_insn']
['scan_one_insn']
['scan_rtx']
['scan_rtx']
['scan_rtx']
['replace_oldest_value_addr']
['scan_rtx']
['scan_rtx_reg']
['scan_rtx_reg']
['emit_libcall_block']
['delete_output_reload']
['copy_loop_body', 'expand_end_bindings']
['mark_set_1', 'mem_loc_descriptor']
['sched_analyze_2']
['sched_analyze_2']
['sched_analyze_2']
['mark_used_regs']
['delete_output_reload']
['cse_set_around_loop']
['init_deps']
['df_ref_record', 'insert', 'sched_analyze_1']
['sched_analyze_1', 'sched_analyze_1']
['sched_analyze_1', 'sched_analyze_1']
['sched_analyze_1']
['sched_analyze_2']
['sched_analyze_2']
['sched_analyze_2']
['sched_analyze_2', 'subst_stack_regs_pat']
['sched_analyze_2']
['sched_analyze_2']
['combine_instructions', 'sched_analyze_2']
['noce_get_condition', 'print_rtl_with_bb', 'sched_analyze_2']
['cse_insn', 'find_reloads_address_1', 'noce_get_condition', 'record_giv', 'scan_loop', 'sched_analyze_2', 'unroll_loop']
['eliminate_regs', 'find_dummy_reload', 'sched_analyze_2']
['sched_analyze_insn', 'sched_analyze_insn']
['sched_analyze_insn', 'sched_analyze_insn']
['sched_analyze_insn']
['sched_analyze_insn']
['sched_analyze_insn']
['sched_analyze_insn', 'sched_analyze_insn']
['adjust_address_1', 'distribute_notes', 'record_giv', 'schedule_block']
['schedule_block']
['cse_insn', 'schedule_block']
['schedule_block']
['if_then_else_cond', 'schedule_block']
['schedule_block']
['schedule_block']
['copy_rtx_and_substitute', 'schedule_block']
['schedule_block']
['schedule_insns']
['replace_pseudos_in_call_usage']
['size_int_type_wide']
['optimize_mode_switching']
['schedule_insns', 'schedule_insns']
['schedule_insns', 'schedule_insns']
['schedule_insns', 'schedule_insns']
['schedule_insns', 'schedule_insns']
['schedule_insns']
['schedule_insns']
['schedule_insns']
['alloc_gcse_mem']
['alloc_gcse_mem']
['find_base_term']
['expand_end_bindings']
['internal_error', 'internal_error']
['new_alias_set']
['alloc_gcse_mem']
['convert_from_eh_region_ranges', 'life_analysis']
['dwarf2out_decl']
['for_each_insn_in_loop', 'replace_pseudos_in_call_usage', 'try_copy_prop']
['cse_insn', 'find_reloads_address_1', 'noce_get_condition', 'record_giv', 'scan_loop', 'sched_analyze_2', 'unroll_loop']
['move_for_stack_reg']
['force_nonfallthru_and_redirect']
['force_nonfallthru_and_redirect']
['rm_line_notes', 'squeeze_notes']
['protect_from_queue', 'protect_from_queue', 'store_by_pieces_1']
['force_nonfallthru_and_redirect']
['force_nonfallthru_and_redirect']
['offset_address']
['scope_to_insns_initialize', 'simplify_comparison']
['rm_line_notes', 'scope_to_insns_initialize']
['scope_to_insns_initialize', 'scope_to_insns_initialize']
['scope_to_insns_initialize', 'scope_to_insns_initialize']
['scope_to_insns_initialize']
['scope_to_insns_initialize']
['scope_to_insns_initialize']
['scope_to_insns_initialize']
['scope_to_insns_initialize']
['purge_addressof']
['purge_addressof']
['self_promoting_args_p']
['self_promoting_args_p']
['set_decl_abstract_flags', 'set_decl_origin_self']
['set_decl_abstract_flags', 'set_decl_origin_self']
['finish_init', 'pop_init_level', 'set_designator', 'set_init_index', 'set_init_label', 'set_init_label']
['push_init_level', 'set_designator']
['set_diagnostic_context']
['set_diagnostic_context', 'set_diagnostic_context']
['set_diagnostic_context', 'set_diagnostic_context']
['set_init_index']
['set_init_index']
['set_init_index']
['finish_init', 'pop_init_level', 'set_designator', 'set_init_index', 'set_init_label', 'set_init_label']
['set_init_index']
['set_init_index']
['finish_init', 'pop_init_level', 'set_designator', 'set_init_index', 'set_init_label', 'set_init_label']
['set_init_label']
['set_init_label']
['finish_init', 'pop_init_level', 'set_designator', 'set_init_index', 'set_init_label', 'set_init_label']
['set_init_label']
['set_init_label']
['compute_forward_dependences', 'copy_loop_headers', 'cse_basic_block', 'delete_related_insns', 'eliminate_regs_in_insn', 'find_basic_blocks', 'find_if_header', 'fixup_var_refs_insn', 'redirect_edge_and_branch', 'reload_cse_regs', 'scan_loop', 'try_crossjump_to_edge']
['find_single_use_1']
['apply_change_group']
['find_base_term']
['check_asm_stack_operands', 'cleanup_barriers', 'expand_goto', 'save_for_inline']
['cleanup_barriers', 'cleanup_barriers']
['delete_related_insns', 'delete_related_insns', 'delete_related_insns']
['delete_related_insns', 'delete_related_insns', 'delete_related_insns']
['offset_address', 'offset_address', 'set_mem_alias_set', 'set_mem_alias_set', 'set_mem_expr', 'set_mem_expr', 'set_mem_offset', 'set_mem_offset']
['offset_address', 'offset_address', 'set_mem_alias_set', 'set_mem_alias_set', 'set_mem_expr', 'set_mem_expr', 'set_mem_offset', 'set_mem_offset']
['offset_address', 'set_mem_alias_set', 'set_mem_expr', 'set_mem_offset']
['offset_address', 'set_mem_alias_set', 'set_mem_expr', 'set_mem_offset']
['set_mem_alias_set', 'set_mem_expr', 'set_mem_offset']
['set_mem_alias_set', 'set_mem_expr', 'set_mem_offset']
['set_mem_alias_set', 'set_mem_expr', 'set_mem_offset']
['offset_address', 'set_mem_alias_set', 'set_mem_expr', 'set_mem_offset']
['set_mem_align', 'set_mem_align']
['set_mem_align', 'set_mem_align']
['set_mem_align']
['set_mem_align']
['set_mem_align']
['set_mem_align']
['set_mem_align']
['set_mem_attributes', 'set_mem_attributes']
['set_mem_attributes', 'set_mem_attributes']
['set_mem_attributes']
['set_mem_attributes']
['set_mem_attributes']
['set_mem_attributes']
['set_mem_attributes']
['offset_address', 'offset_address', 'set_mem_alias_set', 'set_mem_alias_set', 'set_mem_expr', 'set_mem_expr', 'set_mem_offset', 'set_mem_offset']
['offset_address', 'offset_address', 'set_mem_alias_set', 'set_mem_alias_set', 'set_mem_expr', 'set_mem_expr', 'set_mem_offset', 'set_mem_offset']
['offset_address', 'set_mem_alias_set', 'set_mem_expr', 'set_mem_offset']
['offset_address', 'set_mem_alias_set', 'set_mem_expr', 'set_mem_offset']
['set_mem_alias_set', 'set_mem_expr', 'set_mem_offset']
['set_mem_alias_set', 'set_mem_expr', 'set_mem_offset']
['set_mem_alias_set', 'set_mem_expr', 'set_mem_offset']
['offset_address', 'set_mem_alias_set', 'set_mem_expr', 'set_mem_offset']
['offset_address', 'offset_address', 'set_mem_alias_set', 'set_mem_alias_set', 'set_mem_expr', 'set_mem_expr', 'set_mem_offset', 'set_mem_offset']
['offset_address', 'offset_address', 'set_mem_alias_set', 'set_mem_alias_set', 'set_mem_expr', 'set_mem_expr', 'set_mem_offset', 'set_mem_offset']
['offset_address', 'set_mem_alias_set', 'set_mem_expr', 'set_mem_offset']
['offset_address', 'set_mem_alias_set', 'set_mem_expr', 'set_mem_offset']
['set_mem_alias_set', 'set_mem_expr', 'set_mem_offset']
['set_mem_alias_set', 'set_mem_expr', 'set_mem_offset']
['set_mem_alias_set', 'set_mem_expr', 'set_mem_offset']
['offset_address', 'set_mem_alias_set', 'set_mem_expr', 'set_mem_offset']
['set_nonincremental_init']
['concat_loc_descriptor', 'concat_loc_descriptor']
['ggc_alloc']
['peephole2_optimize']
['compute_transp']
['peephole2_optimize']
['compute_transp']
['find_reg']
['find_reg']
['add_location_or_const_value_attribute']
['free_for_value_p']
['find_reg']
['find_reg']
['find_reg']
['add_location_or_const_value_attribute']
['add_location_or_const_value_attribute']
['find_reg']
['set_reload_reg']
['set_reload_reg']
['add_AT_location_description']
['set_unique_reg_note']
['ereal_from_int', 'ereal_from_uint', 'nonzero_bits']
['convert_move']
['calculate_dominance_info', 'calculate_dominance_info', 'clear_dead_regs', 'clear_reload_reg_in_use', 'compute_use_by_pseudos', 'find_free_reg', 'insert', 'mark_referenced_regs', 'mark_reg_death', 'mark_used_regs_combine', 'peep2_find_free_register', 'reg_is_born', 'save_call_clobbered_regs', 'save_call_clobbered_regs', 'setup_save_areas', 'wipe_dead_reg']
['compute_use_by_pseudos', 'setup_save_areas']
['compute_use_by_pseudos', 'setup_save_areas', 'setup_save_areas']
['mark_reg_death', 'mark_used_regs_combine']
['setup_save_areas']
['expand_field_assignment']
['shadow_tag_warned']
['shallow_copy_rtx']
['shallow_copy_rtx', 'shallow_copy_rtx']
['shallow_copy_rtx', 'shallow_copy_rtx']
['shallow_copy_rtx']
['shallow_copy_rtx']
['shallow_copy_rtx', 'shallow_copy_rtx']
['shallow_copy_rtx', 'shallow_copy_rtx']
['shallow_copy_rtx']
['shallow_copy_rtx']
['copy_rtx_and_substitute', 'cse_insn', 'emit_insns_after', 'emit_no_conflict_block', 'expand_inline_function', 'expr_killed_p', 'nonoverlapping_memrefs_p', 'oprs_unchanged_p', 'record_jump_cond', 'regmove_optimize', 'reload_cse_regs', 'schedule_block', 'schedule_block', 'scope_to_insns_initialize', 'shorten_branches', 'simplify_comparison']
['shorten_branches']
['shorten_branches']
['shorten_branches', 'split_all_insns']
['shorten_branches', 'subst_indexed_address', 'tidy_fallthru_edge']
['signed_or_unsigned_type']
['signed_or_unsigned_type']
['signed_or_unsigned_type']
['signed_or_unsigned_type']
['signed_or_unsigned_type']
['signed_type']
['signed_type']
['signed_type']
['signed_type']
['signed_type']
['simple_cst_equal', 'simple_cst_equal']
['simple_cst_equal']
['simple_cst_equal', 'simple_cst_equal']
['simple_cst_equal', 'simple_cst_equal']
['simple_cst_equal', 'simple_cst_equal']
['simple_type_promotes_to']
['simplify_and_const_int']
['simplify_and_const_int']
['delete_noop_moves', 'merge_blocks_nomove', 'simplify_binary_operation']
['scan_loop']
['compare_for_stack_reg', 'expand_end_bindings', 'force_operand', 'gen_reload', 'ix86_va_arg', 'local_alloc', 'protect_from_queue', 'record_value_for_reg', 'rtl_for_decl_location', 'save_for_inline', 'simplify_binary_operation', 'try_combine']
['copy_loop_body', 'eliminate_regs_in_insn', 'emit_library_call_value_1', 'record_giv']
['combine_instructions', 'extract_bit_field']
['eliminate_regs', 'expand_call', 'force_operand', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'gen_sequence', 'make_memloc', 'simplify_binary_operation', 'simplify_giv_expr', 'simplify_unary_operation']
['c_alignof_expr', 'c_alignof_expr']
['emit_group_store']
['gen_peephole2_1263']
['scope_to_insns_initialize', 'simplify_comparison']
['simplify_comparison']
['simplify_comparison']
['copy_loop_headers', 'cse_insn', 'memrefs_conflict_p', 'scan_loop', 'schedule_block', 'simplify_comparison', 'try_crossjump_to_edge']
['eliminate_regs_in_insn', 'find_split_point', 'fixup_var_refs_1', 'if_then_else_cond']
['copy_insn_notes', 'eliminate_regs', 'emit_insns_after', 'expand_inline_function', 'expr_killed_p', 'find_dummy_reload', 'fold_rtx', 'oprs_unchanged_p', 'purge_addressof_1', 'sched_analyze_2', 'schedule_block', 'shorten_branches', 'ssa_const_prop', 'ssa_eliminate_dead_code']
['fixup_var_refs_1', 'sched_analyze_2', 'thread_prologue_and_epilogue_insns']
['do_cmp_and_jump']
['instantiate_decl', 'instantiate_decl', 'memory_address', 'plus_constant_wide']
['combine_instructions', 'consec_sets_giv', 'copy_loop_body', 'simplify_giv_expr']
['simplify_giv_expr']
['distribute_notes', 'noce_get_alt_condition', 'scan_loop', 'simplify_giv_expr', 'simplify_relational_operation']
['simplify_giv_expr']
['eliminate_regs', 'expand_call', 'force_operand', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'gen_sequence', 'make_memloc', 'simplify_binary_operation', 'simplify_giv_expr', 'simplify_unary_operation']
['optimize_sibling_and_tail_recursive_calls', 'print_rtx', 'simplify_giv_expr', 'try_crossjump_to_edge']
['validize_mem']
['expand_float']
['noce_emit_store_flag']
['ereal_from_int', 'ereal_from_uint']
['convert_modes', 'ereal_from_int', 'ereal_from_uint']
['convert_modes', 'ereal_from_int', 'ereal_from_uint']
['ereal_from_int', 'ereal_from_uint']
['convert_modes', 'ereal_from_int', 'ereal_from_uint']
['emit_group_load', 'instantiate_virtual_regs_1', 'recog_5', 'validate_replace_rtx_1']
['emit_group_store', 'recog_5']
['find_equiv_reg']
['plus_constant_wide']
['memrefs_conflict_p']
['memrefs_conflict_p']
['force_operand']
['force_operand']
['force_operand']
['force_operand']
['expand_field_assignment', 'expand_field_assignment']
['expand_field_assignment']
['alloc_gcse_mem', 'apply_distributive_law', 'compute_forward_dependences', 'copy_loop_headers', 'df_ref_record', 'eliminate_regs_in_insn', 'fixup_var_refs_1', 'fold_rtx', 'legitimize_address', 'mark_all_labels', 'mark_set_1', 'print_rtl_graph_with_bb', 'purge_addressof_1', 'subst_stack_regs_pat', 'thread_prologue_and_epilogue_insns', 'validate_replace_rtx_1', 'validate_replace_rtx_1']
['make_compound_operation']
['loop_iterations']
['df_uses_record', 'fold_rtx', 'reload_cse_regs']
['copy_insn_notes', 'if_then_else_cond', 'offsettable_address_p', 'simplify_plus_minus']
['count_one_set']
['simplify_plus_minus']
['cse_main', 'find_single_use_1', 'find_single_use_1', 'rm_other_notes', 'rm_other_notes', 'simplify_plus_minus', 'simplify_plus_minus', 'simplify_plus_minus', 'squeeze_notes', 'squeeze_notes', 'squeeze_notes']
['rm_other_notes', 'rm_other_notes', 'simplify_plus_minus', 'simplify_plus_minus', 'simplify_plus_minus', 'squeeze_notes', 'store_by_pieces_1']
['store_split_bit_field']
['simplify_relational_operation']
['distribute_notes', 'noce_get_alt_condition', 'scan_loop', 'simplify_giv_expr', 'simplify_relational_operation']
['simplify_relational_operation']
['simplify_relational_operation']
['simplify_replace_rtx']
['simplify_replace_rtx']
['simplify_replace_rtx']
['simplify_replace_rtx']
['kill_value', 'known_cond', 'replace_rtx', 'simplify_replace_rtx', 'simplify_rtx', 'true_regnum']
['simplify_rtx', 'simplify_rtx']
['known_cond', 'replace_rtx', 'simplify_rtx']
['simplify_rtx', 'simplify_rtx']
['kill_value', 'known_cond', 'replace_rtx', 'simplify_replace_rtx', 'simplify_rtx', 'true_regnum']
['simplify_rtx']
['simplify_rtx']
['simplify_rtx']
['nonzero_bits']
['do_SUBST', 'do_SUBST', 'recog_for_combine', 'recog_for_combine']
['do_SUBST', 'do_SUBST', 'recog_for_combine', 'recog_for_combine']
['decompose']
['memory_address', 'memory_address']
['do_SUBST', 'recog_for_combine']
['estimate_probability']
['adjust_address_1', 'copy_insn_list', 'copy_loop_body', 'cse_insn', 'eliminate_regs_in_insn', 'emit_library_call_value_1', 'emit_library_call_value_1', 'extract_bit_field', 'find_if_header', 'fold_rtx', 'for_each_insn_in_loop', 'loop_iterations', 'noce_get_alt_condition', 'optimize_sibling_and_tail_recursive_calls', 'output_asm_insn', 'print_rtx', 'purge_addressof_1', 'record_giv', 'regmove_optimize', 'replace_pseudos_in_call_usage', 'simplify_giv_expr', 'ssa_eliminate_dead_code', 'ssa_eliminate_dead_code', 'thread_prologue_and_epilogue_insns', 'try_copy_prop', 'try_crossjump_to_edge', 'unroll_loop']
['simplify_subreg']
['simplify_subreg']
['simplify_subreg']
['simplify_subreg']
['simplify_subtraction']
['simplify_subtraction']
['simplify_ternary_operation']
['simplify_ternary_operation']
['simplify_ternary_operation']
['eliminate_regs', 'expand_call', 'force_operand', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'gen_sequence', 'make_memloc', 'simplify_binary_operation', 'simplify_giv_expr', 'simplify_unary_operation']
['simplify_unary_operation']
['simplify_unary_operation']
['gen_binary', 'gen_binary', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'gen_sequence', 'make_memloc', 'simplify_unary_operation']
['c_alignof_expr', 'c_alignof_expr']
['assemble_start_function', 'bitmap_copy', 'cleanup_subreg_operands', 'cleanup_subreg_operands', 'consec_sets_giv', 'consec_sets_giv', 'function_section', 'recog', 'recog', 'recog_23', 'recog_23', 'recog_26', 'recog_5', 'recog_5', 'recog_5', 'scan_one_insn']
['assemble_start_function', 'bitmap_copy', 'check_asm_stack_operands', 'cleanup_subreg_operands', 'cleanup_subreg_operands', 'consec_sets_giv', 'consec_sets_giv', 'function_section', 'make_memloc', 'recog', 'recog', 'recog', 'recog_23', 'recog_23', 'recog_26', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'scan_one_insn']
['assemble_start_function', 'bitmap_copy', 'check_asm_stack_operands', 'cleanup_subreg_operands', 'cleanup_subreg_operands', 'consec_sets_giv', 'consec_sets_giv', 'function_section', 'recog', 'recog', 'recog', 'recog_23', 'recog_23', 'recog_26', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'recog_5', 'scan_one_insn']
['extend_value_for_giv', 'extend_value_for_giv']
['size_int_type_wide']
['size_int_type_wide']
['size_int_type_wide']
['size_int_type_wide', 'size_int_type_wide']
['size_int_type_wide']
['size_int_type_wide']
['size_int_type_wide', 'size_int_type_wide']
['size_int_type_wide', 'size_int_type_wide']
['size_int_type_wide']
['size_int_type_wide', 'size_int_type_wide']
['size_int_type_wide', 'size_int_type_wide']
['size_int_type_wide']
['size_int_type_wide']
['size_int_type_wide']
['size_int_type_wide']
['size_int_type_wide', 'size_int_type_wide']
['parse_string']
['expected_value_to_br_prob', 'push_to_sequence']
['copy_loop_headers', 'expected_value_to_br_prob', 'squeeze_notes']
['check_insn_for_givs', 'move_deaths', 'simplify_plus_minus']
['consec_sets_giv', 'ix86_split_long_move']
['recog_29', 'recog_30', 'recog_30']
['recog_29', 'recog_30', 'recog_30']
['dwarf2out_frame_debug_expr', 'dwarf2out_frame_debug_expr']
['compute_forward_dependences', 'compute_forward_dependences']
['oprs_not_set_p']
['squeeze_notes']
['skip_escaped_newlines']
['skip_escaped_newlines']
['skip_escaped_newlines']
['skip_escaped_newlines']
['parse_string']
['read_filename_string']
['fatal_io_error', 'sorry', 'verbatim']
['fatal_io_error', 'sorry', 'verbatim']
['fatal_io_error', 'sorry']
['sorry']
['sorry']
['fatal_io_error', 'sorry']
['sorry']
['sorry']
['specqsort']
['specqsort']
['specqsort']
['specqsort', 'specqsort']
['specqsort', 'specqsort']
['specqsort']
['specqsort']
['specqsort']
['specqsort']
['error_init', 'pedwarn_init', 'warning_init']
['dump_flow_info']
['verify_flow_info']
['dump_flow_info', 'regclass']
['spill_hard_reg']
['splay_tree_insert']
['simplify_shift_const', 'split_1']
['split_1']
['split_1']
['split_1', 'split_1']
['split_1']
['split_1']
['recog_26', 'split_1']
['split_1']
['split_1', 'split_1']
['split_2', 'split_2', 'split_insns', 'split_insns']
['split_2', 'split_2']
['split_2', 'split_2', 'split_2']
['split_2', 'split_2', 'split_2']
['split_2', 'split_2', 'split_2']
['split_2']
['split_2']
['split_2']
['split_2']
['split_2']
['split_2', 'split_2']
['split_2']
['split_2']
['split_2']
['split_2', 'split_2', 'split_insns', 'split_insns']
['split_2', 'split_2']
['split_2']
['split_2', 'split_2']
['split_2']
['recog', 'recog_29']
['peephole2_insns']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['recog', 'recog_29', 'recog_29', 'recog_30', 'recog_5', 'split_4', 'split_4']
['peephole2_insns']
['recog_30']
['split_4']
['peephole2_insns']
['recog_23', 'recog_23', 'recog_23', 'recog_29', 'recog_29', 'recog_29', 'split_4', 'split_4', 'split_4']
['recog', 'recog_29', 'recog_29', 'recog_30', 'recog_5', 'split_4', 'split_4']
['peephole2_insns']
['recog_30']
['split_4']
['recog', 'recog_29']
['split_4', 'split_4']
['split_4']
['split_4']
['split_4']
['split_4']
['split_4']
['split_4']
['split_4']
['recog_29', 'split_4']
['split_4']
['split_4']
['split_4']
['split_4']
['split_4', 'split_4']
['split_4']
['split_4']
['split_4']
['split_4']
['compute_forward_dependences', 'protect_from_queue', 'split_all_insns', 'subst_indexed_address', 'tidy_fallthru_edge']
['split_all_insns']
['split_all_insns']
['split_all_insns']
['split_all_insns']
['split_all_insns']
['split_all_insns']
['convert_move', 'convert_move']
['convert_move', 'convert_move']
['gen_lowpart_for_combine']
['cse_set_around_loop', 'regrename_optimize']
['cselib_lookup', 'cselib_lookup', 'cselib_lookup']
['peephole2_optimize', 'peephole2_optimize', 'peephole2_optimize', 'peephole2_optimize', 'peephole2_optimize']
['peephole2_optimize', 'peephole2_optimize', 'peephole2_optimize', 'peephole2_optimize', 'peephole2_optimize', 'start_init']
['life_analysis']
['life_analysis']
['apply_change_group', 'apply_change_group']
['memory_address']
['reload_combine_note_use']
['change_address_1', 'offset_address']
['extract_insn', 'peephole2_insns', 'recog', 'split_insns']
['split_2', 'split_2', 'split_insns', 'split_insns']
['split_insns']
['split_2', 'split_2', 'split_insns', 'split_insns']
['split_insns']
['split_tree']
['split_tree']
['save_line_notes', 'squeeze_notes']
['copy_loop_headers', 'expected_value_to_br_prob', 'squeeze_notes']
['squeeze_notes']
['rm_other_notes', 'rm_other_notes', 'squeeze_notes', 'squeeze_notes']
['rm_other_notes', 'rm_other_notes', 'squeeze_notes', 'squeeze_notes']
['gen_sequence', 'gen_sequence', 'squeeze_notes', 'squeeze_notes']
['gen_sequence', 'gen_sequence', 'squeeze_notes', 'squeeze_notes']
['squeeze_notes', 'squeeze_notes']
['squeeze_notes', 'squeeze_notes']
['squeeze_notes']
['squeeze_notes']
['squeeze_notes']
['squeeze_notes']
['squeeze_notes']
['squeeze_notes']
['squeeze_notes']
['ssa_const_prop']
['ssa_const_prop']
['copy_insn_list', 'nonoverlapping_memrefs_p', 'ssa_const_prop', 'store_expr']
['ssa_const_prop']
['ssa_const_prop']
['ssa_const_prop']
['ssa_const_prop']
['ssa_const_prop']
['ssa_const_prop']
['ssa_const_prop']
['ssa_const_prop']
['ssa_const_prop']
['ssa_const_prop']
['ssa_const_prop']
['can_combine_p']
['fixup_var_refs_1', 'nonoverlapping_memrefs_p']
['copy_insn_list', 'eliminate_regs_in_insn', 'loop_iterations', 'optimize_sibling_and_tail_recursive_calls', 'ssa_eliminate_dead_code', 'thread_prologue_and_epilogue_insns', 'try_combine']
['fixup_var_refs_1', 'loop_iterations', 'regmove_optimize']
['cleanup_barriers', 'combine_instructions', 'emit_libcall_block', 'emit_libcall_block', 'loop_optimize', 'loop_optimize', 'purge_addressof_1', 'reload_cse_regs', 'shorten_branches', 'ssa_eliminate_dead_code', 'ssa_eliminate_dead_code', 'ssa_eliminate_dead_code', 'try_crossjump_to_edge', 'unroll_loop']
['ssa_eliminate_dead_code']
['combine_instructions', 'reload', 'reload_cse_regs', 'simplify_shift_const', 'ssa_eliminate_dead_code', 'ssa_eliminate_dead_code', 'subst_constants', 'subst_stack_regs_pat', 'try_crossjump_to_edge']
['adjust_address_1', 'copy_insn_list', 'cse_end_of_basic_block', 'cse_insn', 'cselib_process_insn', 'delete_output_reload', 'eliminate_regs', 'find_base_term', 'find_if_header', 'find_reloads_address', 'find_split_point', 'find_split_point', 'for_each_insn_in_loop', 'gen_reload', 'memory_address', 'move_deaths', 'noce_get_alt_condition', 'nonoverlapping_memrefs_p', 'nonoverlapping_memrefs_p', 'optimize_sibling_and_tail_recursive_calls', 'purge_addressof_1', 'regmove_optimize', 'replace_pseudos_in_call_usage', 'replace_pseudos_in_call_usage', 'restore_line_notes', 'simplify_binary_operation', 'ssa_const_prop', 'ssa_eliminate_dead_code', 'store_expr', 'thread_prologue_and_epilogue_insns', 'try_combine', 'try_copy_prop', 'unroll_loop']
['ssa_eliminate_dead_code']
['ix86_expand_fp_movcc', 'ix86_expand_fp_movcc']
['stabilize_reference']
['stabilize_reference']
['stabilize_reference']
['stabilize_reference']
['ix86_function_value', 'standard_80387_constant_p']
['start_function']
['start_function']
['start_function']
['start_function']
['start_init']
['start_init']
['start_init']
['start_init']
['start_init']
['start_init']
['push_init_level', 'start_init']
['start_init']
['start_init']
['push_topmost_sequence', 'push_topmost_sequence', 'start_sequence', 'start_sequence']
['push_topmost_sequence', 'push_topmost_sequence', 'start_sequence', 'start_sequence']
['push_to_full_sequence', 'push_to_sequence', 'push_topmost_sequence', 'start_sequence']
['staticp']
['status_warning']
['std_expand_builtin_va_arg']
['std_expand_builtin_va_arg']
['std_expand_builtin_va_start']
['std_expand_builtin_va_start']
['std_expand_builtin_va_start']
['std_expand_builtin_va_start']
['expand_decl', 'store_bit_field', 'subst_constants']
['emit_library_call_value_1', 'expand_function_end', 'gen_reload', 'insns_match_p', 'local_alloc', 'noce_get_alt_condition', 'simplify_shift_const', 'store_bit_field']
['insn_extract', 'store_bit_field']
['copy_insn_list', 'ix86_va_arg', 'simplify_binary_operation']
['cse_insn', 'find_reloads_address_1', 'noce_get_condition', 'record_giv', 'scan_loop', 'sched_analyze_2', 'unroll_loop']
['optimize_sibling_and_tail_recursive_calls']
['store_by_pieces_1']
['store_by_pieces_1']
['expand_call', 'expand_call']
['clear_storage', 'expand_call', 'expand_mult_add', 'ix86_va_start']
['store_constructor_field']
['store_expr']
['store_expr']
['store_expr']
['copy_insn_list', 'nonoverlapping_memrefs_p', 'ssa_const_prop', 'store_expr']
['store_expr']
['store_field']
['store_field']
['store_fixed_bit_field']
['store_fixed_bit_field']
['store_fixed_bit_field']
['store_init_value']
['store_init_value']
['store_init_value']
['shadow_tag_warned', 'store_parm_decls', 'store_parm_decls']
['store_split_bit_field']
['store_split_bit_field']
['store_split_bit_field']
['store_split_bit_field']
['store_split_bit_field']
['store_split_bit_field']
['store_split_bit_field']
['store_split_bit_field']
['purge_addressof_1', 'ssa_eliminate_dead_code']
['combine_instructions', 'reload', 'reload_cse_regs', 'simplify_shift_const', 'ssa_eliminate_dead_code', 'ssa_eliminate_dead_code', 'subst_constants', 'subst_stack_regs_pat', 'try_crossjump_to_edge']
['mark_all_labels', 'simplify_comparison', 'simplify_comparison', 'thread_prologue_and_epilogue_insns', 'try_crossjump_to_edge']
['adjust_address_1', 'copy_insn_list', 'cse_end_of_basic_block', 'cse_insn', 'cselib_process_insn', 'delete_output_reload', 'eliminate_regs', 'find_base_term', 'find_if_header', 'find_reloads_address', 'find_split_point', 'find_split_point', 'for_each_insn_in_loop', 'gen_reload', 'memory_address', 'move_deaths', 'noce_get_alt_condition', 'nonoverlapping_memrefs_p', 'nonoverlapping_memrefs_p', 'optimize_sibling_and_tail_recursive_calls', 'purge_addressof_1', 'regmove_optimize', 'replace_pseudos_in_call_usage', 'replace_pseudos_in_call_usage', 'restore_line_notes', 'simplify_binary_operation', 'ssa_const_prop', 'ssa_eliminate_dead_code', 'store_expr', 'thread_prologue_and_epilogue_insns', 'try_combine', 'try_copy_prop', 'unroll_loop']
['adjust_address_1', 'cselib_process_insn', 'eliminate_regs', 'find_base_term', 'find_if_header', 'find_reloads', 'fold_rtx', 'gen_reload', 'gen_reload', 'ix86_split_long_move', 'ix86_split_to_parts', 'memory_address', 'move_for_stack_reg', 'replace_pseudos_in_call_usage', 'restore_line_notes', 'simplify_binary_operation', 'try_copy_prop']
['df_ref_record']
['copy_loop_body', 'df_analyse_1', 'eliminate_regs_in_insn', 'emit_library_call_value_1', 'protect_from_queue', 'record_giv', 'record_jump_cond']
['combine_instructions', 'df_analyse_1', 'extract_bit_field', 'protect_from_queue', 'strength_reduce', 'strength_reduce', 'strength_reduce', 'strength_reduce']
['combine_instructions', 'df_analyse_1', 'emit_library_call_value_1', 'expand_function_end', 'extract_bit_field', 'gen_reload', 'insns_match_p', 'local_alloc', 'noce_get_alt_condition', 'protect_from_queue', 'record_jump_cond', 'simplify_shift_const', 'store_bit_field', 'strength_reduce', 'strength_reduce', 'strength_reduce']
['combine_instructions', 'consec_sets_giv', 'copy_insn_notes', 'df_analyse_1', 'expand_compound_operation', 'extract_bit_field', 'local_alloc', 'save_for_inline', 'strength_reduce', 'strength_reduce', 'strength_reduce', 'unroll_loop']
['string_constant']
['string_constant']
['decode_reg_name', 'lex_number', 'lex_number', 'maybe_read_dollar_number']
['subreg_hard_regno']
['simplify_rtx']
['peephole2_optimize']
['subreg_regno']
['subreg_regno', 'true_regnum']
['subreg_regno_offset']
['subreg_regno_offset']
['subst']
['expand_abs', 'print_operand']
['save_for_inline']
['subst', 'subst']
['subst']
['subst', 'subst']
['subst']
['record_jump_cond']
['distribute_notes', 'expand_call', 'noce_get_alt_condition', 'subst_asm_stack_regs']
['form_sum', 'make_extraction', 'try_combine', 'validate_replace_rtx_1']
['can_combine_p', 'copy_loop_body', 'copy_rtx_and_substitute', 'find_reloads_address', 'find_split_point', 'gen_sequence', 'insn_extract', 'local_alloc', 'optimize_sibling_and_tail_recursive_calls', 'print_rtl_graph_with_bb', 'rm_line_notes', 'ssa_eliminate_dead_code', 'subst_asm_stack_regs', 'visit_expression']
['move_for_stack_reg', 'subst_asm_stack_regs', 'subst_asm_stack_regs']
['instantiate_virtual_regs_1', 'schedule_block', 'subst_asm_stack_regs']
['subst_asm_stack_regs']
['subst_asm_stack_regs']
['visit_expression']
['subst_asm_stack_regs', 'subst_asm_stack_regs']
['find_single_use_1', 'get_attr_prefix_0f', 'if_then_else_cond', 'schedule_block', 'subst_asm_stack_regs', 'try_combine']
['subst_indexed_address']
['subst_constants']
['store_bit_field', 'subst_constants']
['expand_decl', 'store_bit_field', 'subst_constants']
['check_asm_stack_operands', 'eliminate_regs', 'express_from', 'noce_get_alt_condition', 'record_jump_cond', 'subst_constants']
['subst_constants']
['legitimize_address', 'redirect_edge_and_branch', 'reload_cse_regs', 'subst_constants']
['subst_constants']
['subst_constants']
['compute_forward_dependences', 'protect_from_queue', 'split_all_insns', 'subst_indexed_address', 'tidy_fallthru_edge']
['subst_indexed_address']
['distribute_links', 'subst_indexed_address']
['subst_indexed_address']
['subst_indexed_address']
['subst_indexed_address']
['subst_indexed_address']
['subst_indexed_address']
['subst_indexed_address']
['subst_indexed_address', 'tidy_fallthru_edge']
['subst_indexed_address']
['subst_indexed_address']
['subst_indexed_address']
['subst_indexed_address']
['subst_indexed_address']
['subst_stack_regs']
['subst_stack_regs']
['subst_stack_regs']
['subst_stack_regs']
['find_free_reg', 'mark_referenced_regs', 'peep2_find_free_register', 'reg_is_born', 'subst_stack_regs', 'wipe_dead_reg']
['subst_stack_regs']
['subst_stack_regs']
['subst_stack_regs']
['calculate_dominance_info']
['calculate_dominance_info', 'calculate_dominance_info']
['clear_reload_reg_in_use', 'subst_stack_regs']
['simplify_shift_const', 'subst_stack_regs_pat']
['sched_analyze_2', 'subst_stack_regs_pat']
['global_alloc', 'move_for_stack_reg', 'subst_stack_regs_pat']
['subst_stack_regs_pat']
['subst_stack_regs_pat']
['reload_cse_regs', 'subst_stack_regs_pat']
['insn_extract', 'subst_stack_regs_pat']
['estimate_probability', 'subst_stack_regs_pat']
['subst_stack_regs_pat']
['find_split_point']
['compute_forward_dependences', 'protect_from_queue', 'split_all_insns', 'subst_indexed_address', 'tidy_fallthru_edge']
['delete_noop_moves', 'expand_goto', 'gen_reload', 'reposition_prologue_and_epilogue_notes', 'rtx_renumbered_equal_p']
['reposition_prologue_and_epilogue_notes']
['emit_group_load', 'emit_group_store', 'expand_goto', 'expand_goto', 'purge_addressof', 'purge_addressof', 'record_value_for_reg', 'replace_pseudos_in_call_usage', 'reposition_prologue_and_epilogue_notes', 'reposition_prologue_and_epilogue_notes', 'shorten_branches', 'subst_indexed_address', 'subst_indexed_address', 'tidy_fallthru_edge']
['scope_to_insns_initialize']
['tidy_fallthru_edge']
['split_all_insns']
['subst_indexed_address', 'tidy_fallthru_edge']
['scope_to_insns_initialize']
['swap_rtx_condition_1']
['sched_analyze_1', 'sched_analyze_1']
['output_constant']
['assemble_start_function', 'function_section']
['check_insn_for_givs']
['purge_line_number_notes', 'purge_line_number_notes', 'restore_line_notes', 'store_split_bit_field']
['do_store_flag']
['do_store_flag']
['thread_prologue_and_epilogue_insns']
['fold_rtx', 'thread_prologue_and_epilogue_insns', 'validate_replace_rtx_1']
['noce_get_alt_condition', 'try_crossjump_to_edge']
['reload_cse_regs']
['copy_loop_headers', 'thread_prologue_and_epilogue_insns']
['can_combine_p', 'change_address_1', 'consec_sets_giv', 'convert_from_ssa', 'copy_insn_notes', 'copy_loop_headers', 'eliminate_regs_in_insn', 'expand_compound_operation', 'expand_inline_function', 'expected_value_to_br_prob', 'find_if_header', 'find_split_point', 'fixup_var_refs_1', 'fixup_var_refs_1', 'if_then_else_cond', 'insn_extract', 'local_alloc', 'loop_iterations', 'loop_iterations', 'make_compound_operation', 'nonoverlapping_memrefs_p', 'purge_addressof_1', 'purge_addressof_1', 'reload', 'save_for_inline', 'simplify_shift_const', 'squeeze_notes', 'subst_asm_stack_regs', 'subst_stack_regs_pat', 'thread_prologue_and_epilogue_insns', 'thread_prologue_and_epilogue_insns', 'unroll_loop']
['regmove_optimize']
['find_if_header', 'fold_rtx']
['cse_set_around_loop']
['compute_forward_dependences', 'protect_from_queue', 'split_all_insns', 'subst_indexed_address', 'tidy_fallthru_edge']
['tidy_fallthru_edge']
['subst_indexed_address', 'tidy_fallthru_edge']
['scope_to_insns_initialize', 'timevar_push']
['timevar_pop']
['timevar_pop']
['timevar_pop', 'timevar_pop']
['timevar_pop', 'timevar_pop']
['timevar_push']
['process_init_element', 'process_init_element', 'timevar_pop']
['timevar_push', 'timevar_push']
['timevar_push']
['timevar_push']
['timevar_push']
['timevar_push', 'timevar_push']
['timevar_push']
['trampoline_address']
['trampoline_address']
['trampoline_address']
['trampoline_address']
['expand_decl', 'trampoline_address']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'cselib_process_insn', 'dw2_asm_output_encoded_addr_rtx', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_eh_return', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_force_to_memory', 'ix86_force_to_memory', 'load_pic_register', 'output_cfi', 'output_constant_def', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'trampoline_address', 'trampoline_address']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'break_out_memory_refs', 'cselib_process_insn', 'dw2_asm_output_encoded_addr_rtx', 'emit_push_insn', 'emit_single_push_insn', 'expand_builtin_extract_return_addr', 'expand_builtin_next_arg', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_eh_return', 'gen_split_961', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'init_alias_analysis', 'ix86_force_to_memory', 'ix86_force_to_memory', 'load_pic_register', 'output_cfi', 'output_constant_def', 'probe_stack_range', 'probe_stack_range', 'record_address_regs', 'trampoline_address', 'trampoline_address']
['tree_cons']
['copy_most_rtx']
['output_asm_insn', 'write_dependence_p']
['skip_escaped_newlines']
['true_dependence', 'write_dependence_p']
['true_dependence']
['true_dependence', 'write_dependence_p']
['true_dependence']
['true_dependence']
['kill_value', 'known_cond', 'replace_rtx', 'simplify_replace_rtx', 'simplify_rtx', 'true_regnum']
['subreg_regno', 'true_regnum']
['dump_node']
['type_lists_compatible_p']
['field_byte_offset']
['adjust_address_1', 'cleanup_barriers', 'copy_insn_list', 'copy_insn_notes', 'delete_output_reload', 'distribute_notes', 'eliminate_regs', 'eliminate_regs', 'emit_libcall_block', 'emit_library_call_value_1', 'emit_no_conflict_block', 'expand_end_bindings', 'expand_goto', 'extract_bit_field', 'find_dummy_reload', 'legitimize_pic_address', 'loop_optimize', 'noce_get_alt_condition', 'print_rtl_graph_with_bb', 'sched_analyze_2', 'ssa_const_prop']
['compare_for_stack_reg', 'eliminate_regs_in_insn', 'expand_inline_function', 'extract_bit_field', 'make_extraction', 'mark_set_1', 'noce_get_alt_condition', 'optimize_sibling_and_tail_recursive_calls', 'reposition_prologue_and_epilogue_notes', 'scan_one_insn']
['redirect_edge_and_branch']
['reload_cse_regs']
['eliminate_regs_in_insn', 'fixup_var_refs_1', 'sched_analyze_2']
['purge_addressof_1']
['can_combine_p', 'copy_loop_body', 'elimination_effects', 'get_attr_type', 'loop_iterations', 'subst_asm_stack_regs', 'subst_asm_stack_regs', 'thread_prologue_and_epilogue_insns', 'try_combine', 'visit_expression', 'visit_expression']
['concat_loc_descriptor', 'final', 'try_combine']
['can_combine_p', 'purge_addressof_1', 'rm_other_notes', 'ssa_eliminate_dead_code', 'try_combine']
['combine_instructions', 'distribute_notes', 'emit_insns_after', 'expr_killed_p', 'legitimize_pic_address', 'memory_address', 'oprs_unchanged_p', 'print_rtl_graph_with_bb', 'record_jump_cond', 'redirect_edge_and_branch', 'reload_cse_regs', 'schedule_block', 'ssa_eliminate_dead_code', 'ssa_eliminate_dead_code', 'try_crossjump_to_edge']
['for_each_insn_in_loop', 'replace_pseudos_in_call_usage', 'try_copy_prop']
['gen_reload', 'ix86_split_long_move', 'ix86_split_to_parts', 'move_for_stack_reg', 'try_copy_prop']
['try_copy_prop']
['try_copy_prop']
['try_copy_prop']
['try_copy_prop']
['copy_insn_list', 'try_copy_prop']
['try_copy_prop']
['copy_insn_list', 'try_copy_prop']
['copy_insn_notes', 'try_copy_prop']
['try_copy_prop']
['move_for_stack_reg']
['subst_stack_regs_pat']
['simplify_comparison', 'try_crossjump_to_edge']
['optimize_sibling_and_tail_recursive_calls', 'print_rtx', 'simplify_giv_expr', 'try_crossjump_to_edge']
['try_crossjump_to_edge']
['try_crossjump_to_edge']
['try_crossjump_to_edge']
['ssa_eliminate_dead_code', 'try_crossjump_to_edge']
['compute_forward_dependences', 'copy_loop_headers', 'cse_basic_block', 'delete_related_insns', 'eliminate_regs_in_insn', 'find_basic_blocks', 'find_if_header', 'fixup_var_refs_insn', 'redirect_edge_and_branch', 'reload_cse_regs', 'scan_loop', 'try_crossjump_to_edge']
['try_crossjump_to_edge']
['try_split']
['rtx_renumbered_equal_p', 'try_split', 'try_split']
['rtx_renumbered_equal_p', 'try_split', 'try_split']
['try_tablejump']
['try_tablejump']
['try_tablejump']
['try_tablejump']
['try_tablejump']
['try_tablejump']
['try_tablejump']
['try_tablejump']
['try_tablejump']
['try_tablejump']
['emit_group_store', 'final_scan_insn']
['check_insn_for_givs']
['emit_group_load']
['emit_group_load']
['cse_set_around_loop', 'emit_group_load']
['can_combine_p', 'instantiate_virtual_regs_1', 'loop_iterations', 'print_rtl_graph_with_bb']
['copy_insn_list']
['finish_init', 'start_init']
['c_expand_start_cond']
['expand_goto', 'gen_reload', 'reposition_prologue_and_epilogue_notes']
['c_expand_body', 'rest_of_compilation', 'rest_of_compilation']
['expand_mult', 'expand_mult', 'expand_mult', 'expand_mult', 'expand_mult_highpart_adjust']
['expand_mult', 'expand_mult', 'expand_mult', 'expand_mult', 'expand_mult_highpart_adjust']
['signed_or_unsigned_type']
['set_nonincremental_init', 'signed_or_unsigned_type']
['set_nonincremental_init', 'signed_or_unsigned_type']
['c_alignof', 'c_sizeof', 'signed_or_unsigned_type']
['set_nonincremental_init', 'signed_or_unsigned_type', 'signed_or_unsigned_type']
['type_lists_compatible_p']
['do_SUBST', 'recog_for_combine']
['do_SUBST', 'recog_for_combine']
['do_SUBST', 'recog_for_combine']
['do_SUBST', 'recog_for_combine']
['do_SUBST', 'recog_for_combine']
['do_SUBST', 'recog_for_combine']
['combine_instructions', 'copy_loop_headers', 'insn_dead_p', 'safe_from_p', 'store_by_pieces_1']
['copy_loop_body', 'eliminate_regs_in_insn', 'emit_library_call_value_1', 'record_giv']
['find_reloads_address', 'find_split_point', 'insn_extract', 'nonoverlapping_memrefs_p', 'optimize_sibling_and_tail_recursive_calls', 'save_line_notes', 'squeeze_notes', 'store_expr']
['adjust_address_1', 'copy_insn_list', 'copy_loop_body', 'cse_insn', 'eliminate_regs_in_insn', 'emit_library_call_value_1', 'emit_library_call_value_1', 'extract_bit_field', 'find_if_header', 'fold_rtx', 'for_each_insn_in_loop', 'loop_iterations', 'noce_get_alt_condition', 'optimize_sibling_and_tail_recursive_calls', 'output_asm_insn', 'print_rtx', 'purge_addressof_1', 'record_giv', 'regmove_optimize', 'replace_pseudos_in_call_usage', 'simplify_giv_expr', 'ssa_eliminate_dead_code', 'ssa_eliminate_dead_code', 'thread_prologue_and_epilogue_insns', 'try_copy_prop', 'try_crossjump_to_edge', 'unroll_loop']
['find_base_term', 'find_if_header', 'fold_rtx', 'force_to_mode', 'memory_address', 'protect_from_queue', 'replace_pseudos_in_call_usage', 'restore_line_notes']
['record_dead_and_set_regs', 'record_value_for_reg', 'regrename_optimize', 'try_combine']
['check_insn_for_givs', 'memory_address']
['copy_insn_1', 'ggc_mark_trees']
['unsave_expr']
['unsave_expr']
['ggc_mark_trees']
['signed_type']
['signed_or_unsigned_type']
['signed_type']
['signed_or_unsigned_type']
['signed_type']
['signed_or_unsigned_type']
['signed_type']
['signed_or_unsigned_type']
['unsigned_type']
['unsigned_type']
['unsigned_type']
['unsigned_type']
['unsigned_type']
['expand_stmt', 'extract_insn']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['consec_sets_giv', 'consec_sets_giv']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['force_operand', 'ix86_return_in_memory', 'mem_loc_descriptor']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['combine_givs']
['force_operand']
['walk_tree']
['walk_tree']
['force_operand', 'squeeze_notes', 'subst_indexed_address']
['memory_address']
['rest_of_compilation']
['rest_of_compilation']
['add_location_or_const_value_attribute']
['peep2_reg_dead_p']
['add_location_or_const_value_attribute']
['add_location_or_const_value_attribute']
['combine_regs']
['combine_regs']
['combine_regs']
['combine_regs']
['combine_regs']
['find_reg_fusage']
['update_temp_slot_address']
['update_temp_slot_address']
['update_temp_slot_address']
['update_temp_slot_address']
['update_temp_slot_address']
['update_temp_slot_address']
['update_temp_slot_address']
['find_reg_fusage']
['emit_libcall_block']
['emit_libcall_block', 'memory_address', 'memory_address', 'want_to_gcse_p']
['valid_compound_expr_initializer']
['reachable_next_level']
['expand_fix']
['validate_change']
['copy_insn_list', 'oprs_not_set_p', 'optimize_sibling_and_tail_recursive_calls', 'scan_one_insn', 'thread_prologue_and_epilogue_insns', 'thread_prologue_and_epilogue_insns', 'try_combine']
['emit_insns_after']
['estimate_probability', 'make_compound_operation', 'simplify_plus_minus']
['eliminate_regs_in_insn', 'expand_inline_function', 'schedule_block', 'simplify_giv_expr', 'store_bit_field', 'subst_constants']
['check_insn_for_givs', 'compare_for_stack_reg', 'convert_from_ssa', 'eliminate_regs_in_insn', 'expand_goto', 'expand_inline_function', 'fixup_var_refs_1', 'memory_address', 'nonoverlapping_memrefs_p', 'reposition_prologue_and_epilogue_notes', 'simplify_shift_const', 'simplify_shift_const', 'ssa_const_prop', 'subst_stack_regs_pat', 'try_crossjump_to_edge']
['validize_mem']
['mergeable_string_section', 'output_constant_def_contents', 'output_constant_pool', 'readonly_data_section', 'variable_section', 'variable_section']
['mergeable_string_section', 'output_constant_def_contents', 'output_constant_pool', 'readonly_data_section', 'variable_section']
['output_constant_def_contents', 'variable_section']
['output_constant_def_contents', 'variable_section']
['output_constant_def_contents', 'variable_section']
['output_constant_def_contents']
['vasprintf']
['vasprintf']
['vasprintf']
['verbatim']
['verbatim']
['fatal_io_error', 'sorry', 'verbatim']
['fatal_io_error', 'sorry', 'verbatim']
['verbatim']
['verbatim']
['verbatim']
['verbatim']
['verify_flow_info']
['verify_flow_info']
['verify_flow_info']
['verify_flow_info']
['finish_spills', 'finish_spills']
['calls_function_1']
['constrain_operands']
['visit_expression']
['visit_expression']
['visit_expression']
['visit_expression']
['visit_expression']
['subst_asm_stack_regs', 'visit_expression']
['visit_expression']
['visit_expression']
['visualize_scheduled_insns']
['walk_tree']
['walk_tree']
['walk_tree', 'walk_tree']
['walk_tree', 'walk_tree']
['walk_tree']
['walk_tree']
['walk_tree']
['walk_tree', 'walk_tree']
['walk_tree', 'walk_tree']
['want_to_gcse_p']
['want_to_gcse_p', 'want_to_gcse_p']
['want_to_gcse_p']
['want_to_gcse_p']
['want_to_gcse_p']
['want_to_gcse_p']
['want_to_gcse_p', 'want_to_gcse_p']
['want_to_gcse_p']
['want_to_gcse_p']
['error', 'error_with_file_and_line', 'internal_error', 'pedwarn', 'pedwarn_with_file_and_line', 'warning', 'warning_with_file_and_line']
['error', 'error', 'error_with_file_and_line', 'error_with_file_and_line', 'pedwarn', 'pedwarn', 'pedwarn_with_file_and_line', 'pedwarn_with_file_and_line', 'warning', 'warning', 'warning_with_file_and_line', 'warning_with_file_and_line']
['error', 'error', 'error_with_file_and_line', 'error_with_file_and_line', 'pedwarn', 'pedwarn', 'pedwarn_with_file_and_line', 'pedwarn_with_file_and_line', 'warning', 'warning', 'warning_with_file_and_line', 'warning_with_file_and_line']
['warning_with_decl']
['error_init', 'error_init', 'pedwarn_init', 'pedwarn_init', 'warning_init', 'warning_init']
['error_init', 'pedwarn_init', 'warning_init']
['error_init', 'error_init', 'pedwarn_init', 'pedwarn_init', 'warning_init', 'warning_init']
['warning_with_decl']
['error', 'error_with_file_and_line', 'internal_error', 'pedwarn', 'pedwarn_with_file_and_line', 'warning', 'warning_with_file_and_line']
['error', 'error', 'error_with_file_and_line', 'error_with_file_and_line', 'pedwarn', 'pedwarn', 'pedwarn_with_file_and_line', 'pedwarn_with_file_and_line', 'warning', 'warning', 'warning_with_file_and_line', 'warning_with_file_and_line']
['error', 'error', 'error_with_file_and_line', 'error_with_file_and_line', 'pedwarn', 'pedwarn', 'pedwarn_with_file_and_line', 'pedwarn_with_file_and_line', 'warning', 'warning', 'warning_with_file_and_line', 'warning_with_file_and_line']
['c_alignof_expr', 'c_alignof_expr']
['widen_operand']
['widen_operand']
['wipe_dead_reg']
['wipe_dead_reg']
['wipe_dead_reg', 'wipe_dead_reg']
['wipe_dead_reg', 'wipe_dead_reg']
['wipe_dead_reg']
['wipe_dead_reg']
['wipe_dead_reg']
['clear_reload_reg_in_use', 'insert', 'mark_used_regs_combine']
['calculate_dominance_info', 'insert', 'mark_referenced_regs', 'mark_used_regs_combine', 'reg_is_born', 'wipe_dead_reg']
['true_dependence', 'write_dependence_p']
['write_dependence_p']
['true_dependence', 'write_dependence_p']
['expand_compound_operation', 'noce_emit_cmove', 'replace_rtx', 'replace_rtx', 'write_dependence_p']
['write_dependence_p']
['x86_field_alignment']
['x86_order_regs_for_local_alloc', 'x86_order_regs_for_local_alloc', 'x86_order_regs_for_local_alloc', 'x86_order_regs_for_local_alloc']
['x86_order_regs_for_local_alloc', 'x86_order_regs_for_local_alloc', 'x86_order_regs_for_local_alloc', 'x86_order_regs_for_local_alloc']
['x86_order_regs_for_local_alloc', 'x86_order_regs_for_local_alloc']
['x86_order_regs_for_local_alloc', 'x86_order_regs_for_local_alloc']
['x86_order_regs_for_local_alloc', 'x86_order_regs_for_local_alloc', 'x86_order_regs_for_local_alloc', 'x86_order_regs_for_local_alloc']
['x86_order_regs_for_local_alloc', 'x86_order_regs_for_local_alloc', 'x86_order_regs_for_local_alloc', 'x86_order_regs_for_local_alloc']
['x86_order_regs_for_local_alloc', 'x86_order_regs_for_local_alloc']
['x86_order_regs_for_local_alloc', 'x86_order_regs_for_local_alloc']
['x86_order_regs_for_local_alloc', 'x86_order_regs_for_local_alloc']
['x86_order_regs_for_local_alloc', 'x86_order_regs_for_local_alloc']
['x86_order_regs_for_local_alloc', 'x86_order_regs_for_local_alloc']
['x86_order_regs_for_local_alloc', 'x86_order_regs_for_local_alloc']
['xexit']
['timevar_pop']
['xstrerror']
['yyerror']
['yylex']
['yylex']
['yylex']
['extend_value_for_giv', 'extend_value_for_giv']
