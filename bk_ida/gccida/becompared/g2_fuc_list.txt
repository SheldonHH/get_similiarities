['_cpp_get_buff']
['_cpp_get_buff']
['_cpp_lex_token']
['_cpp_lex_token']
['add_bound_info', 'add_data_member_location_attribute', 'dwarf2out_abstract_function', 'dwarf2out_decl', 'gen_subroutine_type_die', 'gen_variable_die', 'splice_child_die']
['add_bound_info']
['add_byte_size_attribute']
['add_byte_size_attribute']
['add_byte_size_attribute']
['add_byte_size_attribute']
['add_byte_size_attribute']
['add_bound_info', 'add_data_member_location_attribute', 'dwarf2out_abstract_function', 'dwarf2out_decl', 'gen_subroutine_type_die', 'gen_variable_die', 'splice_child_die']
['add_data_member_location_attribute']
['add_dependence']
['add_double']
['add_double']
['dwarf2out_cfi_label']
['dwarf2out_cfi_label']
['dwarf2out_cfi_label']
['dwarf2out_cfi_label']
['dwarf2out_cfi_label']
['grokfield']
['gen_formal_parameter_die', 'gen_variable_die']
['expand_goto', 'mem_loc_descriptor']
['add_byte_size_attribute']
['gen_formal_parameter_die', 'gen_variable_die']
['gen_formal_parameter_die', 'gen_variable_die']
['gen_formal_parameter_die', 'gen_variable_die']
['adjust_address_1', 'copy_insn_notes', 'eliminate_regs_in_insn', 'for_each_insn_in_loop', 'gen_call_pop', 'gen_reload', 'make_extraction', 'subst_stack_regs_pat', 'trampoline_address']
['store_bit_field']
['back_branch_in_range_p', 'canonicalize_condition', 'cleanup_barriers', 'compute_forward_dependences', 'copy_loop_headers', 'cse_basic_block', 'cse_insn', 'delete_related_insns', 'eliminate_regs_in_insn', 'expand_inline_function', 'find_basic_blocks', 'find_split_point', 'if_convert', 'local_alloc', 'reload_cse_regs', 'reload_cse_regs', 'scan_loop', 'store_bit_field', 'thread_prologue_and_epilogue_insns']
['fixup_var_refs_1', 'rtx_renumbered_equal_p']
['calculate_giv_inc', 'cse_basic_block', 'nonoverlapping_memrefs_p', 'sched_analyze_2']
['cse_insn']
['copy_insn_list', 'copy_loop_headers', 'expand_decl', 'fixup_var_refs_1', 'nonoverlapping_memrefs_p']
['adjust_address_1']
['emit_libcall_block', 'expand_goto', 'for_each_insn_in_loop', 'restore_line_notes', 'rm_other_notes', 'sge_plus_constant']
['change_address_1', 'replace_equiv_address_nv']
['change_address_1', 'replace_equiv_address_nv']
['find_reloads_address_part']
['change_address_1', 'change_address_1', 'replace_equiv_address_nv', 'replace_equiv_address_nv']
['change_address_1', 'change_address_1', 'replace_equiv_address_nv', 'replace_equiv_address_nv']
['change_address_1', 'change_address_1', 'change_address_1', 'change_address_1', 'replace_equiv_address_nv', 'replace_equiv_address_nv', 'replace_equiv_address_nv', 'replace_equiv_address_nv']
['change_address_1', 'change_address_1', 'replace_equiv_address_nv', 'replace_equiv_address_nv']
['change_address_1', 'change_address_1', 'replace_equiv_address_nv', 'replace_equiv_address_nv']
['change_address_1', 'change_address_1', 'change_address_1', 'change_address_1', 'replace_equiv_address_nv', 'replace_equiv_address_nv', 'replace_equiv_address_nv', 'replace_equiv_address_nv']
['replace_equiv_address_nv']
['replace_equiv_address_nv']
['change_address_1', 'change_address_1', 'change_address_1', 'change_address_1', 'replace_equiv_address_nv', 'replace_equiv_address_nv', 'replace_equiv_address_nv', 'replace_equiv_address_nv']
['change_address_1', 'change_address_1', 'replace_equiv_address_nv', 'replace_equiv_address_nv', 'replace_equiv_address_nv']
['change_address_1', 'change_address_1', 'replace_equiv_address_nv', 'replace_equiv_address_nv', 'replace_equiv_address_nv']
['change_address_1', 'change_address_1', 'change_address_1', 'change_address_1', 'replace_equiv_address_nv', 'replace_equiv_address_nv', 'replace_equiv_address_nv', 'replace_equiv_address_nv']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'emit_move_insn_1', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_main_function', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_tablejump', 'legitimize_address', 'probe_stack_range', 'push_block', 'round_push', 'round_trampoline_addr']
['alloc_EXPR_LIST']
['gen_sequence', 'gen_sequence']
['gen_sequence', 'gen_sequence']
['copy_loop_body', 'make_extraction', 'replace_pseudos_in_call_usage']
['consec_sets_giv', 'loop_optimize', 'scan_loop']
['allocate_dynamic_stack_space']
['extract_fixed_bit_field']
['sge_plus_constant']
['allocate_dynamic_stack_space']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'emit_move_insn_1', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_main_function', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_tablejump', 'legitimize_address', 'probe_stack_range', 'push_block', 'round_push', 'round_trampoline_addr']
['allocate_dynamic_stack_space']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'emit_move_insn_1', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_main_function', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_tablejump', 'legitimize_address', 'probe_stack_range', 'push_block', 'round_push', 'round_trampoline_addr']
['allocate_dynamic_stack_space']
['allocate_dynamic_stack_space']
['allocate_dynamic_stack_space']
['allocate_dynamic_stack_space']
['alter_reg']
['alter_reg']
['alter_reg']
['alter_subreg']
['true_dependence', 'write_dependence_p']
['write_dependence_p']
['true_dependence', 'true_dependence', 'write_dependence_p']
['true_dependence', 'true_dependence', 'write_dependence_p', 'write_dependence_p']
['true_dependence', 'true_dependence', 'write_dependence_p', 'write_dependence_p']
['extract_left_shift', 'find_reloads_toplev', 'kill_value', 'noce_emit_cmove', 'replace_regs', 'replace_rtx', 'replace_rtx', 'simplify_rtx', 'simplify_rtx', 'write_dependence_p']
['write_dependence_p']
['apply_args_size']
['apply_args_size']
['apply_args_size']
['apply_args_size']
['apply_args_size']
['find_reg', 'subreg_regno_offset', 'subreg_regno_offset']
['apply_args_size']
['apply_args_size']
['apply_args_size']
['apply_args_size']
['apply_args_size']
['apply_args_size']
['apply_args_size']
['init_propagate_block_info', 'legitimize_address', 'local_alloc', 'record_giv']
['apply_change_group']
['apply_change_group']
['replace_pseudos_in_call_usage', 'sge_plus_constant', 'swap_rtx_condition']
['cancel_changes']
['apply_change_group']
['ix86_zero_extend_to_Pmode']
['apply_distributive_law']
['apply_distributive_law']
['apply_distributive_law', 'copy_insn_1', 'find_reloads_subreg_address', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'make_memloc', 'protect_from_queue', 'simplify_giv_expr']
['apply_distributive_law']
['simplify_relational_operation']
['apply_distributive_law']
['apply_distributive_law']
['apply_distributive_law']
['apply_distributive_law']
['apply_distributive_law', 'apply_distributive_law']
['apply_distributive_law', 'apply_distributive_law']
['apply_distributive_law', 'apply_distributive_law']
['apply_result_size']
['apply_result_size']
['apply_result_size']
['apply_result_size']
['apply_result_size']
['apply_result_size']
['apply_result_size']
['apply_result_size']
['apply_result_size']
['apply_result_size']
['apply_result_size']
['apply_result_size']
['apply_result_size']
['apply_result_size']
['asm_fprintf']
['asm_fprintf', 'requires_inout']
['back_branch_in_range_p']
['back_branch_in_range_p', 'canonicalize_condition', 'cleanup_barriers', 'compute_forward_dependences', 'copy_loop_headers', 'cse_basic_block', 'cse_insn', 'delete_related_insns', 'eliminate_regs_in_insn', 'find_basic_blocks', 'if_convert', 'reload_cse_regs', 'scan_loop']
['back_branch_in_range_p', 'replace_pseudos_in_call_usage', 'rm_line_notes', 'sge_plus_constant']
['back_branch_in_range_p']
['back_branch_in_range_p']
['back_branch_in_range_p']
['back_branch_in_range_p', 'cleanup_barriers']
['back_branch_in_range_p']
['back_branch_in_range_p']
['back_branch_in_range_p']
['back_branch_in_range_p', 'back_branch_in_range_p']
['back_branch_in_range_p', 'back_branch_in_range_p']
['back_branch_in_range_p', 'back_branch_in_range_p', 'rm_line_notes', 'rm_line_notes']
['back_branch_in_range_p', 'back_branch_in_range_p', 'rm_line_notes', 'rm_line_notes']
['back_branch_in_range_p']
['binary_fp_operator', 'binary_fp_operator']
['binary_fp_operator', 'binary_fp_operator']
['remove_edge', 'remove_edge', 'remove_edge']
['bitmap_clear_bit']
['clear_edges', 'clear_edges', 'remove_edge', 'remove_edge', 'remove_edge']
['bitmap_copy', 'bitmap_operation', 'bitmap_set_bit']
['record_one_set']
['bitmap_copy', 'bitmap_operation', 'bitmap_set_bit']
['record_one_set']
['remove_edge', 'remove_edge', 'remove_edge']
['clear_edges', 'clear_edges', 'remove_edge', 'remove_edge', 'remove_edge']
['clear_edges', 'clear_edges', 'remove_edge', 'remove_edge', 'remove_edge']
['bitmap_copy', 'bitmap_operation', 'bitmap_set_bit']
['record_one_set']
['clear_edges', 'clear_edges', 'remove_edge', 'remove_edge', 'remove_edge']
['bitmap_copy', 'bitmap_operation', 'bitmap_set_bit']
['record_one_set']
['biv_total_increment', 'biv_total_increment']
['biv_total_increment', 'biv_total_increment']
['biv_total_increment', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['biv_total_increment']
['clear_edges', 'emit_prefetch_instructions']
['clear_edges', 'emit_prefetch_instructions']
['biv_total_increment']
['merge_blocks_nomove']
['emit_prefetch_instructions']
['biv_total_increment', 'biv_total_increment']
['biv_total_increment', 'biv_total_increment']
['biv_total_increment']
['biv_total_increment', 'biv_total_increment']
['biv_total_increment', 'biv_total_increment']
['biv_total_increment', 'emit_prefetch_instructions']
['build1', 'unsave_expr']
['make_node']
['make_node']
['make_node']
['make_node']
['make_node']
['make_node']
['make_node']
['make_node']
['std_expand_builtin_va_start']
['build1', 'unsave_expr']
['tree_int_cst_lt']
['make_node']
['make_node']
['make_node']
['make_node']
['make_node']
['make_node']
['make_node']
['build1', 'unsave_expr']
['make_node']
['make_node']
['make_node']
['make_node']
['make_node']
['calculate_giv_inc', 'if_then_else_cond']
['calculate_giv_inc', 'reload_cse_regs']
['calculate_giv_inc', 'cse_basic_block', 'nonoverlapping_memrefs_p', 'sched_analyze_2']
['calculate_giv_inc', 'distribute_notes', 'elimination_effects', 'force_operand', 'force_to_mode', 'nonoverlapping_memrefs_p']
['calculate_giv_inc']
['calculate_giv_inc']
['calculate_giv_inc']
['calculate_giv_inc']
['call_insn_operand', 'call_insn_operand']
['call_insn_operand', 'call_insn_operand']
['gen_type', 'gen_type']
['cancel_changes']
['canon_hash']
['canon_hash']
['canon_reg']
['canon_rtx']
['canon_true_dependence']
['find_reloads_address', 'move_movables', 'reload']
['back_branch_in_range_p', 'canonicalize_condition', 'cleanup_barriers', 'compute_forward_dependences', 'copy_loop_headers', 'cse_basic_block', 'cse_insn', 'delete_related_insns', 'eliminate_regs_in_insn', 'find_basic_blocks', 'if_convert', 'reload_cse_regs', 'scan_loop']
['apply_change_group', 'compute_transp', 'convert_from_eh_region_ranges', 'purge_addressof_1']
['canonicalize_condition', 'ix86_split_long_move']
['canonicalize_condition']
['canonicalize_condition']
['canonicalize_condition']
['canonicalize_condition']
['canonicalize_condition']
['canonicalize_condition']
['back_branch_in_range_p', 'cleanup_barriers']
['get_true_reg', 'mark_all_labels']
['change_address_1', 'protect_from_queue', 'update_temp_slot_address']
['final', 'find_base_value', 'gen_call', 'gen_call_pop', 'try_replace_reg']
['change_address_1']
['change_address_1', 'replace_equiv_address_nv']
['change_address_1']
['change_address_1', 'change_address_1']
['change_address_1', 'change_address_1']
['invalidate']
['change_address_1', 'change_address_1']
['change_address_1', 'change_address_1']
['change_address_1', 'change_address_1', 'change_address_1', 'change_address_1']
['change_address_1', 'change_address_1', 'change_address_1', 'change_address_1']
['change_address_1', 'change_address_1']
['check_asm_operands']
['check_asm_stack_operands', 'invalidate', 'swap_rtx_condition']
['copy_loop_headers', 'delete_address_reloads', 'ix86_decompose_address', 'subst', 'try_copy_prop']
['copy_loop_body', 'make_extraction', 'replace_pseudos_in_call_usage']
['check_asm_stack_operands']
['check_asm_stack_operands', 'constrain_operands', 'copyprop_hardreg_forward', 'regrename_optimize']
['check_asm_stack_operands']
['check_asm_stack_operands', 'cleanup_subreg_operands', 'preprocess_constraints', 'regrename_optimize']
['check_asm_stack_operands']
['check_asm_stack_operands']
['check_asm_stack_operands', 'check_asm_stack_operands', 'check_asm_stack_operands']
['check_asm_stack_operands', 'check_asm_stack_operands', 'check_asm_stack_operands']
['check_asm_stack_operands']
['check_asm_stack_operands']
['check_asm_stack_operands', 'check_asm_stack_operands', 'check_asm_stack_operands']
['check_insn_for_givs', 'check_insn_for_givs']
['check_insn_for_givs', 'check_insn_for_givs']
['check_insn_for_givs']
['check_insn_for_givs']
['check_insn_for_givs']
['check_insn_for_givs']
['check_insn_for_givs']
['check_insn_for_givs', 'check_insn_for_givs']
['check_insn_for_givs', 'check_insn_for_givs']
['set_reload_reg', 'set_reload_reg']
['clear_reload_reg_in_use', 'subreg_regno_offset']
['clear_reload_reg_in_use']
['clear_storage']
['clear_storage']
['expand_shift']
['clear_storage']
['clear_storage']
['ix86_split_long_move', 'record_giv']
['canonicalize_condition', 'ix86_split_long_move', 'validate_replace_rtx_1']
['ix86_split_fp_branch']
['instantiate_virtual_regs_1']
['apply_distributive_law']
['combinable_i3pat']
['apply_change_group']
['rtx_varies_p']
['dwarf2out_frame_debug', 'rm_line_notes', 'scope_to_insns_initialize']
['apply_distributive_law']
['set_reload_reg']
['combine_simplify_rtx', 'copy_insn_notes']
['gen_call_value_pop', 'protect_from_queue']
['apply_change_group', 'compute_transp', 'convert_from_eh_region_ranges', 'local_alloc', 'merge_blocks_nomove', 'protect_from_queue', 'purge_addressof_1', 'reload', 'subst', 'unshare_all_rtl']
['record_constant_1']
['apply_distributive_law', 'back_branch_in_range_p', 'copy_insn_1', 'copy_loop_body', 'eliminate_regs_in_insn', 'find_reloads_subreg_address', 'finish_enum', 'for_each_insn_in_loop', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'make_memloc', 'protect_from_queue', 'reload', 'replace_pseudos_in_call_usage', 'schedule_block', 'simplify_giv_expr', 'subst_asm_stack_regs', 'subst_stack_regs_pat', 'true_dependence', 'write_dependence_p']
['adjust_address_1', 'gen_call_pop']
['regmove_optimize', 'subst_stack_regs_pat']
['merge_blocks_nomove', 'protect_from_queue', 'unshare_all_rtl']
['life_analysis', 'push_reload', 'record_giv']
['convert_regs_2', 'gen_reload', 'init_alias_analysis', 'init_alias_analysis', 'scan_loop']
['insns_match_p', 'insns_match_p', 'recog_26', 'recog_26', 'recog_26', 'recog_26']
['adjust_address_1', 'init_alias_analysis']
['compare_for_stack_reg']
['expand_goto', 'expand_goto']
['gen_lowpart_for_combine']
['apply_change_group', 'compute_transp', 'convert_from_eh_region_ranges', 'purge_addressof_1']
['compute_transp', 'compute_transp']
['compute_transp', 'compute_transp']
['compute_transp']
['compute_transp', 'compute_transp']
['compute_transp', 'compute_transp']
['compute_transp', 'elimination_effects', 'find_split_point', 'fixup_var_refs_1', 'reload', 'rtx_renumbered_equal_p', 'subst', 'validate_replace_rtx_1']
['compute_transp']
['handle_rd_kill_set']
['compute_transp', 'compute_transp']
['compute_transp', 'compute_transp']
['handle_rd_kill_set', 'handle_rd_kill_set']
['handle_rd_kill_set', 'handle_rd_kill_set']
['compute_transp']
['handle_rd_kill_set']
['compute_transp']
['compute_use_by_pseudos']
['expand_decl', 'legitimize_pic_address', 'make_extraction', 'memrefs_conflict_p', 'subst_asm_stack_regs']
['consec_sets_giv']
['consec_sets_giv', 'ix86_split_long_move']
['consec_sets_giv']
['consec_sets_giv']
['consec_sets_giv']
['consec_sets_giv', 'expand_goto', 'init_propagate_block_info', 'replace_equiv_address_nv', 'replace_equiv_address_nv', 'rm_other_notes', 'rm_other_notes']
['consec_sets_giv']
['consec_sets_giv']
['convert_from_eh_region_ranges_1']
['elimination_effects']
['genrtl_scope_stmt']
['genrtl_scope_stmt']
['check_asm_stack_operands', 'ix86_decompose_address']
['constrain_operands', 'constrain_operands', 'nonoverlapping_memrefs_p', 'reload_combine_note_use', 'simplify_if_then_else']
['check_asm_stack_operands', 'constrain_operands', 'copyprop_hardreg_forward', 'regrename_optimize']
['constrain_operands']
['constrain_operands']
['constrain_operands']
['constrain_operands']
['constrain_operands', 'noce_emit_move_insn', 'operands_match_p', 'operands_match_p', 'put_addressof_into_stack', 'put_addressof_into_stack', 'try_split']
['constrain_operands']
['constrain_operands', 'constrain_operands']
['constrain_operands', 'constrain_operands']
['constrain_operands', 'constrain_operands', 'constrain_operands', 'ix86_attr_length_address_default']
['subreg_regno_offset', 'subreg_regno_offset']
['subreg_regno_offset', 'subreg_regno_offset']
['subreg_regno_offset', 'subreg_regno_offset']
['insert_regs']
['convert_move', 'convert_move']
['convert_move']
['convert_move']
['convert_move', 'convert_move']
['convert_move', 'convert_move']
['convert_move', 'convert_move']
['convert_move', 'convert_move']
['convert_move']
['convert_move']
['convert_move']
['subreg_regno_offset', 'subreg_regno_offset']
['subreg_regno_offset', 'subreg_regno_offset']
['insert_regs']
['ix86_zero_extend_to_Pmode']
['ix86_expand_move']
['ggc_mark_trees']
['copy_constant']
['copy_insn_list', 'gen_reload', 'loop_optimize']
['copy_insn_list', 'expand_inline_function', 'gen_reload', 'ix86_split_fp_branch', 'loop_optimize']
['copy_insn_list', 'copy_loop_headers', 'expand_decl', 'fixup_var_refs_1', 'nonoverlapping_memrefs_p']
['copy_rtx_and_substitute', 'purge_addressof_1', 'reload_as_needed', 'reload_cse_regs', 'subst', 'visit_expression']
['eliminate_regs_in_insn']
['copy_insn_list']
['copy_insn_list']
['copy_insn_list']
['copy_insn_list']
['copy_insn_list']
['copy_insn_list']
['copy_insn_notes', 'reposition_prologue_and_epilogue_notes']
['copy_insn_notes']
['copy_insn_notes', 'copy_loop_body', 'ix86_split_to_parts', 'safe_from_p']
['copy_insn_notes']
['copy_insn_notes']
['copy_insn_notes']
['copy_insn_notes', 'copy_insn_notes']
['copy_insn_notes', 'copy_insn_notes']
['copy_insn_notes']
['copy_insn_notes', 'swap_rtx_condition']
['copy_insn_notes', 'copy_insn_notes', 'invalidate']
['copy_insn_notes', 'copy_insn_notes', 'invalidate']
['copy_insn_notes']
['copy_insn_notes']
['combine_instructions', 'copy_insn_notes', 'emit_libcall_block', 'reposition_prologue_and_epilogue_notes', 'scan_loop', 'schedule_block', 'schedule_block']
['expand_goto', 'find_reloads_subreg_address', 'gen_call_value', 'gen_reload', 'insns_match_p', 'protect_from_queue']
['copy_loop_body']
['copy_loop_headers', 'delete_address_reloads', 'ix86_decompose_address', 'ix86_decompose_address', 'subst_asm_stack_regs', 'try_copy_prop']
['apply_change_group', 'compute_transp', 'convert_from_eh_region_ranges', 'purge_addressof_1']
['check_asm_stack_operands', 'combine_regs', 'copy_loop_body', 'memrefs_conflict_p', 'rtx_renumbered_equal_p', 'scan_loop']
['try_combine']
['copy_loop_headers', 'eliminate_regs_in_insn', 'instantiate_virtual_regs_1', 'thread_prologue_and_epilogue_insns', 'verify_flow_info']
['calculate_giv_inc', 'distribute_notes', 'elimination_effects', 'force_operand', 'force_to_mode', 'nonoverlapping_memrefs_p']
['copy_node']
['copy_rtx_and_substitute']
['copy_rtx_and_substitute', 'local_alloc', 'nonoverlapping_memrefs_p']
['copy_rtx_and_substitute', 'purge_addressof_1', 'reload_as_needed', 'reload_cse_regs', 'subst', 'visit_expression']
['copy_rtx_and_substitute']
['copy_rtx_and_substitute', 'decompose', 'distribute_notes', 'loop_iterations', 'reload_as_needed']
['force_to_mode', 'move_deaths', 'move_movables']
['adjust_address_1', 'compute_forward_dependences', 'copy_insn_list', 'copy_loop_headers', 'copy_rtx_and_substitute', 'copy_rtx_and_substitute', 'decompose', 'distribute_notes', 'expected_value_to_br_prob', 'extract_bit_field', 'find_base_term', 'find_reloads_address', 'fixup_var_refs_1', 'fold_rtx', 'force_to_mode', 'gen_reload', 'gen_sequence', 'if_convert', 'instantiate_virtual_regs_1', 'loop_iterations', 'merge_blocks_nomove', 'move_movables', 'nonoverlapping_memrefs_p', 'optimize_sibling_and_tail_recursive_calls', 'protect_from_queue', 'record_giv', 'reload_as_needed', 'reload_as_needed', 'simplify_comparison', 'simplify_giv_expr', 'split_all_insns', 'unshare_all_rtl']
['copy_to_reg']
['_cpp_get_buff']
['canonicalize_condition', 'copy_loop_headers', 'create_basic_block_structure', 'cse_main', 'extract_bit_field', 'find_reloads_subreg_address', 'get_attr_prefix_0f', 'ix86_decompose_address', 'loop_optimize', 'replace_pseudos_in_call_usage', 'replace_pseudos_in_call_usage', 'rm_line_notes', 'rtx_renumbered_equal_p', 'try_copy_prop', 'unroll_loop', 'unroll_loop', 'unroll_loop', 'visit_expression']
['create_basic_block_structure', 'rm_line_notes']
['create_basic_block_structure']
['create_basic_block_structure', 'create_basic_block_structure']
['create_basic_block_structure', 'create_basic_block_structure']
['create_basic_block_structure']
['subreg_regno_offset']
['cselib_lookup']
['clear_table']
['cselib_lookup']
['cselib_lookup_mem']
['simplify_relational_operation']
['cselib_lookup_mem']
['cselib_subst_to_values']
['cselib_subst_to_values']
['cselib_subst_to_values']
['cselib_subst_to_values']
['cselib_subst_to_values']
['cselib_subst_to_values', 'cselib_subst_to_values']
['cselib_subst_to_values', 'cselib_subst_to_values']
['cselib_subst_to_values']
['cselib_subst_to_values']
['dead_or_set_p']
['refers_to_regno_p']
['scan_rtx_reg']
['deallocate_reload_reg', 'deallocate_reload_reg']
['deallocate_reload_reg', 'deallocate_reload_reg']
['dump_edge_info']
['init_cumulative_args']
['init_cumulative_args', 'init_cumulative_args']
['init_cumulative_args']
['decode_reg_name']
['mtherr']
['decode_reg_name']
['clear_edges']
['delete_address_reloads', 'try_copy_prop']
['delete_address_reloads']
['delete_address_reloads', 'delete_address_reloads', 'delete_address_reloads']
['delete_address_reloads', 'delete_address_reloads', 'delete_address_reloads']
['delete_address_reloads', 'delete_address_reloads', 'delete_address_reloads']
['delete_address_reloads']
['delete_insn', 'delete_insn']
['delete_insn', 'delete_insn']
['back_branch_in_range_p', 'canonicalize_condition', 'cleanup_barriers', 'compute_forward_dependences', 'copy_loop_headers', 'cse_basic_block', 'cse_insn', 'delete_related_insns', 'eliminate_regs_in_insn', 'find_basic_blocks', 'if_convert', 'reload_cse_regs', 'scan_loop']
['delete_related_insns']
['delete_related_insns', 'delete_related_insns', 'delete_related_insns']
['delete_related_insns', 'delete_related_insns', 'delete_related_insns']
['delete_related_insns', 'delete_related_insns', 'delete_related_insns']
['delete_related_insns']
['copy_insn_list', 'copy_loop_headers', 'find_reloads_address', 'force_to_mode']
['compute_insns_for_mem', 'convert_from_eh_region_ranges']
['memrefs_conflict_p', 'memrefs_conflict_p', 'move_deaths', 'purge_addressof_1']
['compute_insns_for_mem']
['init_cumulative_args', 'init_cumulative_args']
['df_ref_record']
['expand_builtin_apply_args_1', 'init_expr_once']
['elimination_effects', 'replace_equiv_address_nv', 'replace_equiv_address_nv', 'restore_line_notes', 'split_all_insns', 'squeeze_notes']
['elimination_effects', 'replace_equiv_address_nv', 'replace_equiv_address_nv', 'restore_line_notes', 'split_all_insns', 'squeeze_notes']
['init_cumulative_args', 'init_cumulative_args']
['check_asm_stack_operands', 'invalidate', 'swap_rtx_condition']
['distribute_links']
['copy_insn_notes', 'swap_rtx_condition']
['expand_compound_operation']
['expand_compound_operation']
['apply_distributive_law']
['apply_distributive_law']
['final', 'final', 'final', 'final', 'noce_get_condition', 'noce_get_condition', 'rm_other_notes', 'rm_other_notes']
['final', 'final', 'final', 'final', 'noce_get_condition', 'noce_get_condition', 'rm_other_notes', 'rm_other_notes']
['copy_insn_notes', 'swap_rtx_condition']
['copy_insn_notes', 'eliminate_regs_in_insn', 'expand_expr', 'for_each_insn_in_loop', 'make_extraction', 'move_by_pieces', 'schedule_block', 'thread_prologue_and_epilogue_insns']
['copy_insn_notes', 'copy_loop_body', 'eliminate_regs_in_insn', 'for_each_insn_in_loop', 'make_extraction']
['cse_end_of_basic_block', 'distribute_notes', 'loop_optimize']
['expand_decl', 'legitimize_pic_address', 'make_extraction', 'memrefs_conflict_p', 'subst_asm_stack_regs']
['copy_insn_list', 'copy_loop_headers', 'distribute_notes', 'elimination_effects', 'find_reloads_address', 'force_to_mode', 'if_convert', 'instantiate_virtual_regs_1', 'ix86_decompose_address', 'loop_optimize', 'simplify_if_then_else', 'validate_replace_rtx_1', 'visit_expression']
['cse_end_of_basic_block', 'find_reloads_address', 'optimize_sibling_and_tail_recursive_calls']
['eliminate_regs', 'push_reload']
['local_alloc']
['do_SUBST']
['do_SUBST']
['do_SUBST', 'recog_for_combine', 'undo_all']
['do_SUBST', 'recog_for_combine']
['do_SUBST', 'do_SUBST', 'recog_for_combine', 'recog_for_combine']
['do_SUBST', 'do_SUBST', 'recog_for_combine', 'recog_for_combine']
['do_SUBST', 'recog_for_combine', 'undo_all']
['do_SUBST', 'recog_for_combine']
['doloop_modify']
['doloop_optimize']
['doloop_optimize']
['doloop_optimize', 'doloop_optimize']
['doloop_optimize']
['doloop_optimize', 'doloop_optimize']
['dump_bb']
['dump_edge_info']
['dump_edge_info']
['dump_edge_info']
['dump_regset']
['add_bound_info', 'add_data_member_location_attribute', 'dwarf2out_abstract_function', 'dwarf2out_decl', 'gen_subroutine_type_die', 'gen_variable_die', 'splice_child_die']
['dwarf2out_abstract_function', 'dwarf2out_begin_prologue', 'gen_subprogram_die', 'gen_subprogram_die']
['dwarf2out_decl', 'gen_decl_die', 'gen_decl_die', 'gen_decl_die', 'gen_subprogram_die', 'gen_subprogram_die']
['add_bound_info', 'add_data_member_location_attribute', 'dwarf2out_abstract_function', 'dwarf2out_decl', 'gen_subroutine_type_die', 'gen_variable_die', 'splice_child_die']
['dwarf2out_decl']
['dwarf2out_frame_debug_expr']
['dwarf2out_frame_debug_expr']
['dwarf2out_frame_debug_expr']
['dwarf2out_frame_debug_expr']
['dwarf2out_frame_debug_expr']
['dwarf2out_frame_debug_expr']
['dwarf2out_frame_debug_expr']
['dwarf2out_frame_debug_expr']
['dwarf2out_frame_debug_expr']
['dwarf2out_frame_debug_expr']
['dwarf2out_frame_debug_expr']
['dwarf2out_frame_debug_expr']
['dwarf2out_frame_debug_expr']
['dwarf2out_frame_debug_expr']
['change_address_1', 'e24toe', 'e53toe', 'replace_equiv_address_nv']
['clear_edges']
['change_address_1', 'e24toe', 'e53toe', 'replace_equiv_address_nv']
['eiremain']
['eliminate_regs', 'squeeze_notes', 'thread_prologue_and_epilogue_insns', 'try_split']
['eliminate_regs']
['optimize_sibling_and_tail_recursive_calls', 'subst_stack_regs_pat']
['fold_rtx', 'optimize_sibling_and_tail_recursive_calls', 'record_giv', 'reload_as_needed']
['eliminate_regs', 'nonoverlapping_memrefs_p', 'strength_reduce']
['eliminate_regs', 'ix86_decompose_address', 'ix86_decompose_address', 'optimize_sibling_and_tail_recursive_calls', 'optimize_sibling_and_tail_recursive_calls', 'push_reload', 'reload_as_needed', 'subst_asm_stack_regs']
['if_convert', 'simplify_giv_expr']
['eliminate_regs']
['copy_insn_notes', 'copy_loop_body', 'ix86_split_to_parts', 'safe_from_p']
['convert_from_eh_region_ranges', 'for_each_insn_in_loop', 'mark_used_regs', 'subst']
['sched_analyze_2', 'unroll_loop']
['apply_change_group']
['elimination_effects']
['elimination_effects', 'mem_loc_descriptor']
['check_asm_stack_operands']
['elimination_effects']
['elimination_effects']
['distribute_links']
['emdnorm']
['emdnorm']
['grokfield']
['emit_block_move']
['emit_block_move']
['emit_block_move', 'emit_block_move']
['emit_block_move']
['insert_regs']
['emit_cmp_and_jump_insns']
['emit_indirect_jump']
['emit_indirect_jump']
['grokfield']
['adjust_address_1', 'copy_rtx_and_substitute', 'find_reloads_address', 'gen_reload', 'scan_loop']
['find_comparison_args']
['cleanup_barriers', 'convert_from_eh_region_ranges_1', 'get_true_reg', 'get_true_reg', 'scope_to_insns_initialize', 'squeeze_notes', 'squeeze_notes', 'squeeze_notes']
['grokfield']
['grokfield']
['squeeze_notes']
['clear_edges']
['squeeze_notes']
['init_regs']
['reload_combine_note_use']
['instantiate_virtual_regs']
['cleanup_barriers', 'cleanup_barriers', 'cleanup_barriers', 'compute_forward_dependences', 'compute_forward_dependences', 'delete_related_insns', 'reload_combine_note_use', 'rtx_renumbered_equal_p']
['restore_line_notes', 'restore_line_notes', 'squeeze_notes', 'squeeze_notes']
['restore_line_notes', 'restore_line_notes', 'squeeze_notes', 'squeeze_notes']
['grokfield']
['grokfield']
['grokfield']
['protect_from_queue']
['emit_unop_insn']
['protect_from_queue']
['emit_move_insn']
['emit_move_insn']
['grokfield']
['emit_pop_insn']
['emit_prefetch_instructions', 'emit_prefetch_instructions']
['emit_prefetch_instructions', 'emit_prefetch_instructions']
['offset_address']
['biv_total_increment', 'biv_total_increment', 'biv_total_increment', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['get_attr_prefix_0f']
['ix86_split_to_parts']
['dwarf2out_cfi_label']
['convert_from_eh_region_ranges_1', 'convert_from_eh_region_ranges_1', 'rm_other_notes', 'scope_to_insns_initialize', 'squeeze_notes', 'squeeze_notes', 'swap_rtx_condition']
['assign_stack_temp_for_type']
['invalidate']
['change_address_1', 'change_address_1', 'combine_instructions', 'convert_regs_2', 'getpwd', 'ix86_split_long_move', 'memrefs_conflict_p', 'rm_line_notes', 'rm_line_notes', 'validate_replace_rtx_1']
['assign_stack_temp_for_type']
['biv_total_increment']
['change_address_1', 'change_address_1', 'combine_instructions', 'convert_regs_2', 'getpwd', 'ix86_split_long_move', 'memrefs_conflict_p', 'rm_line_notes', 'rm_line_notes', 'validate_replace_rtx_1']
['emit_move_insn']
['emit_stack_save']
['emit_stack_save', 'ix86_expand_move']
['emit_move_insn']
['offset_address']
['emit_unrolled_add']
['cleanup_barriers']
['cselib_subst_to_values']
['find_equiv_reg']
['simplify_unary_operation', 'simplify_unary_operation', 'simplify_unary_operation']
['convert_regs_2']
['expand_anon_union_decl']
['ssa_eliminate_dead_code']
['expand_anon_union_decl']
['expand_compound_operation']
['expand_compound_operation']
['expand_compound_operation']
['expand_compound_operation']
['expand_compound_operation']
['expand_compound_operation']
['expand_decl', 'record_giv']
['expand_decl', 'legitimize_pic_address', 'make_extraction', 'memrefs_conflict_p', 'subst_asm_stack_regs']
['sched_analyze_2', 'unroll_loop']
['gen_reload', 'scan_loop']
['expand_decl', 'expand_decl']
['expand_decl']
['expand_decl', 'expand_decl']
['expand_decl']
['expand_end_bindings']
['signed_type', 'unsigned_type']
['build_compound_literal']
['redirect_edge_and_branch']
['ix86_setup_incoming_varargs']
['convert_from_eh_region_ranges', 'expand_end_case_type', 'expand_inline_function', 'move_movables', 'reload', 'strength_reduce']
['canonicalize_condition', 'copy_loop_body', 'expand_inline_function', 'move_movables', 'reload', 'strength_reduce']
['apply_distributive_law', 'memrefs_conflict_p', 'protect_from_queue', 'schedule_block', 'subst_stack_regs_pat']
['compute_forward_dependences', 'expand_end_case_type', 'find_dummy_reload', 'purge_addressof_1', 'reload_cse_regs', 'strength_reduce']
['find_pdom']
['if_convert', 'subst_stack_regs_pat']
['expand_expr', 'expand_expr']
['decompose', 'find_comparison_args', 'if_convert']
['find_reg']
['insert_regs']
['expand_field_assignment']
['expand_field_assignment']
['reorder_blocks_0']
['reorder_blocks_1']
['unshare_all_decls']
['expand_inc']
['emit_pop_insn']
['expand_mult', 'expand_mult', 'expand_mult', 'expand_mult']
['expand_mult', 'expand_mult', 'expand_mult', 'expand_mult']
['expand_mult']
['expand_mult']
['expand_mult', 'expand_mult', 'expand_mult', 'expand_mult']
['expand_mult', 'expand_mult', 'expand_mult', 'expand_mult']
['expand_mult_highpart_adjust']
['stabilize_reference']
['stabilize_reference']
['expand_mult_highpart_adjust']
['expand_mult_add']
['expand_mult_add', 'make_tree']
['expand_mult_add', 'expand_mult_add', 'expand_shift', 'make_tree', 'make_tree', 'make_tree']
['expand_mult_add']
['expand_mult_add']
['expand_mult_add']
['expand_mult_add', 'expand_mult_add']
['expand_mult_add', 'expand_mult_add']
['expand_mult_add']
['expand_mult_add', 'ix86_va_start']
['gen_formal_parameter_die', 'gen_subprogram_die', 'gen_variable_die', 'ssa_eliminate_dead_code']
['gen_split_1214', 'gen_split_1214']
['gen_split_1214', 'gen_split_1214']
['bitmap_copy', 'bitmap_operation', 'bitmap_set_bit']
['gen_peephole2_1260', 'gen_peephole2_1260', 'gen_peephole2_1261', 'gen_peephole2_1261', 'gen_peephole2_1262', 'gen_peephole2_1262', 'gen_split_1214', 'gen_split_1214', 'get_set_constructor_bits', 'walk_tree']
['gen_peephole2_1260', 'gen_peephole2_1260', 'gen_peephole2_1261', 'gen_peephole2_1261', 'gen_peephole2_1262', 'gen_peephole2_1262', 'gen_split_1214', 'gen_split_1214', 'get_set_constructor_bits', 'walk_tree']
['assemble_variable', 'set_block_abstract_flags', 'set_block_origin_self', 'set_decl_abstract_flags', 'set_decl_origin_self']
['genrtl_case_label']
['genrtl_case_label']
['express_from']
['express_from']
['express_from', 'express_from', 'express_from']
['express_from', 'express_from', 'express_from']
['express_from', 'express_from', 'express_from']
['express_from']
['extend_value_for_giv']
['extend_value_for_giv']
['extract_constrain_insn_cached']
['extract_constrain_insn_cached', 'extract_insn_cached']
['extract_constrain_insn_cached']
['finish_struct']
['do_store_flag']
['extract_fixed_bit_field']
['expand_float', 'extract_fixed_bit_field']
['extract_fixed_bit_field']
['expand_function_end', 'get_set_constructor_bits', 'record_constant_1', 'record_constant_1']
['do_store_flag']
['extract_insn']
['extract_insn']
['extract_insn', 'peephole2_insns', 'recog', 'split_insns']
['extract_insn']
['extract_insn']
['extract_insn']
['extract_insn']
['extract_insn']
['extract_insn']
['extract_insn']
['extract_insn']
['extract_insn']
['extract_insn']
['extract_insn']
['extract_insn_cached']
['extract_constrain_insn_cached', 'extract_insn_cached']
['combine_regs']
['extract_left_shift', 'find_reloads_toplev', 'kill_value', 'noce_emit_cmove', 'replace_regs', 'replace_rtx', 'replace_rtx', 'simplify_rtx', 'simplify_rtx', 'write_dependence_p']
['add_data_member_location_attribute']
['truthvalue_conversion']
['final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value']
['biv_total_increment', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['subreg_regno_offset', 'subreg_regno_offset']
['subreg_regno_offset', 'subreg_regno_offset']
['final_biv_value', 'final_biv_value']
['biv_total_increment', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['biv_total_increment', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value']
['final_biv_value']
['final_giv_value']
['compute_forward_dependences', 'expected_value_to_br_prob', 'find_base_term', 'gen_sequence', 'split_all_insns']
['find_base_term']
['find_base_term']
['find_base_term']
['find_base_term', 'find_base_term', 'find_base_term']
['find_base_term', 'find_base_term', 'find_base_term']
['find_base_term', 'find_base_term', 'find_base_term']
['find_base_value']
['final', 'find_base_value', 'gen_call', 'gen_call_pop', 'try_replace_reg']
['find_base_value']
['find_base_value']
['find_base_value']
['find_base_value']
['find_base_value']
['find_base_value']
['find_comparison_args']
['find_comparison_args']
['find_comparison_args']
['find_comparison_args']
['find_comparison_args']
['find_comparison_args']
['find_dummy_reload']
['find_dummy_reload']
['find_dummy_reload']
['cse_end_of_basic_block', 'decompose', 'expand_inline_function', 'find_dummy_reload', 'subst']
['find_dummy_reload', 'move_movables', 'simplify_giv_expr']
['canonicalize_condition', 'extract_bit_field', 'find_reloads_subreg_address', 'try_copy_prop', 'unroll_loop']
['constrain_operands', 'elimination_effects', 'reload_combine_note_use']
['expand_decl', 'legitimize_pic_address', 'make_extraction', 'memrefs_conflict_p', 'subst_asm_stack_regs']
['find_dummy_reload', 'move_movables', 'simplify_giv_expr']
['expand_inline_function', 'move_deaths', 'thread_prologue_and_epilogue_insns']
['copy_loop_headers', 'create_basic_block_structure', 'replace_pseudos_in_call_usage', 'strength_reduce', 'subst_asm_stack_regs']
['insn_extract', 'insn_extract', 'insn_extract']
['apply_change_group', 'back_branch_in_range_p', 'compute_forward_dependences', 'compute_transp', 'convert_from_eh_region_ranges', 'decompose', 'distribute_notes', 'eliminate_regs', 'expand_decl', 'find_reloads_address', 'find_split_point', 'if_convert', 'mem_loc_descriptor', 'move_movables', 'nonoverlapping_memrefs_p', 'optimize_sibling_and_tail_recursive_calls', 'purge_addressof_1', 'reload', 'replace_pseudos_in_call_usage', 'rm_line_notes', 'sge_plus_constant', 'simplify_comparison', 'simplify_giv_expr', 'simplify_plus_minus', 'store_expr', 'strength_reduce', 'subst']
['if_then_else_cond']
['find_free_reg']
['find_free_reg']
['find_reg']
['find_free_reg']
['find_free_reg']
['find_free_reg']
['find_free_reg']
['find_mem_givs', 'find_mem_givs']
['find_mem_givs', 'find_mem_givs']
['find_mem_givs']
['find_mem_givs', 'find_mem_givs']
['find_mem_givs', 'find_mem_givs']
['find_mem_givs']
['find_mem_givs']
['find_reg']
['find_reg']
['find_reg']
['find_reg']
['find_reg']
['find_reg']
['find_reg']
['find_reg']
['find_reg']
['find_oldest_value_reg']
['find_regno_note']
['hard_reg_set_here_p']
['find_reloads_address']
['force_nonfallthru_and_redirect']
['cse_insn']
['copy_rtx_and_substitute']
['instantiate_virtual_regs_1', 'loop_iterations', 'store_bit_field', 'subst_constants', 'unroll_loop']
['expand_end_case_type']
['distribute_notes', 'find_reloads_address', 'move_movables', 'nonoverlapping_memrefs_p', 'optimize_sibling_and_tail_recursive_calls', 'simplify_plus_minus', 'store_expr']
['find_reloads_address_part']
['find_reloads_address_part']
['find_reloads_address_part', 'find_reloads_address_part']
['find_reloads_address_part']
['find_reloads_address_part', 'find_reloads_address_part']
['find_reloads_address_part']
['find_reloads_address_part']
['find_reloads_address_part']
['find_reloads_address_part', 'find_reloads_address_part']
['find_reloads_address_part', 'find_reloads_address_part']
['find_reloads_subreg_address']
['expand_goto', 'find_reloads_subreg_address', 'gen_call_value', 'gen_reload', 'insns_match_p', 'protect_from_queue']
['canonicalize_condition', 'extract_bit_field', 'find_reloads_subreg_address', 'try_copy_prop', 'unroll_loop']
['apply_distributive_law', 'copy_insn_1', 'find_reloads_subreg_address', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'make_memloc', 'protect_from_queue', 'simplify_giv_expr']
['find_reloads_subreg_address']
['find_reloads_subreg_address']
['find_reloads_subreg_address', 'find_reloads_subreg_address']
['find_reloads_subreg_address', 'find_reloads_subreg_address']
['find_reloads_subreg_address']
['find_reloads_subreg_address']
['find_reloads_subreg_address']
['copy_insn_1', 'find_reloads_subreg_address', 'gen_binary', 'gen_binary', 'gen_binary', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'make_memloc']
['find_reloads_toplev']
['find_reloads_toplev']
['extract_left_shift', 'find_reloads_toplev', 'kill_value', 'noce_emit_cmove', 'replace_regs', 'replace_rtx', 'replace_rtx', 'simplify_rtx', 'simplify_rtx', 'write_dependence_p']
['find_reloads_toplev']
['find_reloads_toplev']
['find_reloads_toplev']
['find_reloads_toplev']
['find_replacement', 'find_replacement']
['find_replacement', 'find_replacement']
['find_replacement']
['find_replacement']
['find_replacement']
['find_replacement']
['find_split_point']
['adjust_address_1', 'compute_transp', 'elimination_effects', 'find_split_point', 'force_to_mode', 'legitimize_pic_address', 'move_movables', 'validate_replace_rtx_1']
['recog']
['adjust_address_1', 'find_split_point', 'fold_rtx', 'gen_call_pop', 'if_convert', 'ix86_split_fp_branch']
['check_asm_stack_operands', 'delete_address_reloads', 'distribute_notes', 'eliminate_regs', 'find_split_point', 'ix86_decompose_address', 'optimize_sibling_and_tail_recursive_calls', 'try_copy_prop']
['insn_extract']
['find_split_point']
['find_valid_class']
['find_valid_class']
['c_expand_return']
['fix_lexical_addr']
['expand_builtin_return_addr', 'fix_lexical_addr', 'gen_eh_return', 'ix86_setup_incoming_varargs']
['fixup_stack_1']
['copy_loop_headers', 'copy_loop_headers', 'fixup_var_refs_1', 'push_reload', 'push_reload', 'rtx_renumbered_equal_p', 'subst_asm_stack_regs', 'visit_expression']
['expand_decl', 'legitimize_pic_address', 'make_extraction', 'memrefs_conflict_p', 'subst_asm_stack_regs']
['push_reload']
['cleanup_barriers', 'copy_insn_notes', 'emit_libcall_block', 'reposition_prologue_and_epilogue_notes']
['reload', 'subst']
['copy_insn_list', 'fixup_var_refs_1']
['reload_as_needed']
['expand_inline_function']
['optimize_sibling_and_tail_recursive_calls']
['fixup_var_refs_insn']
['fixup_var_refs_insns']
['fixup_var_refs_insns']
['fixup_var_refs_insns']
['flush_pending_lists', 'flush_pending_lists']
['flush_pending_lists']
['flush_pending_lists']
['force_to_mode', 'move_deaths', 'move_movables']
['eliminate_regs', 'fixup_var_refs_1', 'ix86_decompose_address', 'loop_optimize', 'optimize_sibling_and_tail_recursive_calls', 'squeeze_notes', 'unroll_loop']
['thread_prologue_and_epilogue_insns']
['subst_asm_stack_regs']
['eliminate_regs_in_insn']
['decompose']
['fold_rtx']
['force_const_mem']
['force_const_mem']
['calculate_giv_inc', 'emit_libcall_block', 'reload_cse_regs']
['find_reloads_address', 'force_nonfallthru_and_redirect', 'ix86_decompose_address', 'reload_combine_note_use', 'simplify_if_then_else', 'try_split']
['gen_reload', 'scan_loop']
['force_nonfallthru_and_redirect']
['force_nonfallthru_and_redirect', 'peephole2_optimize']
['force_nonfallthru_and_redirect']
['force_nonfallthru_and_redirect']
['force_nonfallthru_and_redirect', 'force_nonfallthru_and_redirect']
['force_nonfallthru_and_redirect', 'force_nonfallthru_and_redirect']
['force_nonfallthru_and_redirect', 'force_nonfallthru_and_redirect']
['force_nonfallthru_and_redirect', 'force_nonfallthru_and_redirect']
['force_nonfallthru_and_redirect', 'force_nonfallthru_and_redirect']
['force_nonfallthru_and_redirect']
['force_nonfallthru_and_redirect', 'force_nonfallthru_and_redirect']
['calculate_giv_inc', 'distribute_notes', 'elimination_effects', 'force_operand', 'force_to_mode', 'nonoverlapping_memrefs_p']
['force_operand']
['force_operand']
['force_operand', 'force_operand']
['force_operand', 'force_operand']
['force_operand']
['force_operand']
['force_operand']
['force_operand']
['force_operand', 'force_operand']
['force_operand', 'force_operand']
['force_operand']
['calculate_giv_inc', 'distribute_notes', 'elimination_effects', 'force_operand', 'force_to_mode', 'nonoverlapping_memrefs_p']
['copy_insn_list', 'copy_loop_headers', 'find_reloads_address', 'force_to_mode']
['force_to_mode', 'legitimize_pic_address']
['force_to_mode', 'move_deaths', 'move_movables']
['expand_expr', 'force_to_mode']
['form_sum', 'form_sum', 'form_sum', 'form_sum']
['form_sum', 'form_sum', 'form_sum', 'form_sum']
['form_sum', 'form_sum', 'form_sum', 'form_sum']
['form_sum', 'form_sum', 'form_sum', 'form_sum']
['form_sum']
['function_section']
['function_section', 'text_section']
['function_units_used']
['function_units_used']
['function_units_used']
['gen_add2_insn']
['gen_add2_insn']
['gen_add2_insn']
['gen_add2_insn']
['gen_add3_insn', 'gen_sub3_insn']
['gen_add3_insn', 'gen_sub3_insn']
['gen_add3_insn', 'gen_sub3_insn']
['gen_add3_insn', 'gen_sub3_insn']
['gen_array_type_die']
['gen_array_type_die']
['apply_distributive_law', 'copy_insn_1', 'find_reloads_subreg_address', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'make_memloc', 'protect_from_queue', 'simplify_giv_expr']
['gen_binary']
['gen_binary', 'gen_binary', 'gen_binary', 'gen_lowpart_for_combine']
['copy_insn_1', 'find_reloads_subreg_address', 'gen_binary', 'gen_binary', 'gen_binary', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'make_memloc']
['gen_binary']
['gen_binary', 'gen_binary', 'gen_binary', 'gen_lowpart_for_combine']
['copy_insn_1', 'find_reloads_subreg_address', 'gen_binary', 'gen_binary', 'gen_binary', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'make_memloc']
['gen_binary']
['gen_binary', 'gen_binary', 'gen_binary', 'gen_lowpart_for_combine']
['copy_insn_1', 'find_reloads_subreg_address', 'gen_binary', 'gen_binary', 'gen_binary', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'make_memloc']
['gen_binary']
['gen_binary', 'gen_lowpart_for_combine']
['copy_insn_1', 'find_reloads_subreg_address', 'gen_binary', 'gen_binary', 'gen_binary', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'make_memloc']
['final', 'find_base_value', 'gen_call', 'gen_call_pop', 'try_replace_reg']
['gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'emit_move_insn_1', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_main_function', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_tablejump', 'legitimize_address', 'probe_stack_range', 'push_block', 'round_push', 'round_trampoline_addr']
['gen_call']
['gen_call']
['expand_goto', 'find_reloads_subreg_address', 'gen_call_value', 'gen_reload', 'insns_match_p', 'protect_from_queue']
['gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'emit_move_insn_1', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_main_function', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_tablejump', 'legitimize_address', 'probe_stack_range', 'push_block', 'round_push', 'round_trampoline_addr']
['gen_call_value']
['gen_call_value']
['dwarf2out_decl', 'gen_decl_die', 'gen_decl_die', 'gen_decl_die', 'gen_subprogram_die', 'gen_subprogram_die']
['dwarf2out_decl', 'gen_decl_die', 'gen_decl_die', 'gen_decl_die', 'gen_subprogram_die', 'gen_subprogram_die']
['gen_decl_die']
['dwarf2out_decl', 'gen_decl_die', 'gen_decl_die', 'gen_decl_die', 'gen_subprogram_die', 'gen_subprogram_die']
['gen_formal_parameter_die']
['gen_formal_parameter_die', 'gen_subprogram_die', 'gen_variable_die']
['gen_lowpart']
['apply_distributive_law', 'copy_insn_1', 'find_reloads_subreg_address', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'make_memloc', 'protect_from_queue', 'simplify_giv_expr']
['expand_goto', 'gen_reload']
['final_scan_insn', 'if_then_else_cond', 'if_then_else_cond', 'ix86_split_fp_branch', 'ix86_split_long_move', 'sched_init', 'schedule_insns', 'try_copy_prop']
['constant_subword']
['gen_lowpart_common']
['copy_insn_1', 'find_reloads_subreg_address', 'gen_binary', 'gen_binary', 'gen_binary', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'make_memloc']
['copy_insn_1', 'find_reloads_subreg_address', 'gen_binary', 'gen_binary', 'gen_binary', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'make_memloc']
['calculate_giv_inc']
['cselib_lookup']
['build_type_attribute_variant']
['convert_regs_2', 'gen_call_value_pop']
['convert_regs_2', 'gen_call_value_pop']
['new_alias_set']
['apply_distributive_law', 'copy_insn_1', 'find_reloads_subreg_address', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'make_memloc', 'protect_from_queue', 'simplify_giv_expr']
['gen_lowpart_for_combine']
['gen_lowpart_for_combine']
['gen_lowpart_for_combine']
['copy_insn_1', 'find_reloads_subreg_address', 'gen_binary', 'gen_binary', 'gen_binary', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'make_memloc']
['gen_lowpart_for_combine']
['gen_binary', 'gen_binary', 'gen_binary', 'gen_lowpart_for_combine']
['copy_insn_1', 'find_reloads_subreg_address', 'gen_binary', 'gen_binary', 'gen_binary', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'make_memloc']
['gen_lowpart_for_combine']
['gen_lowpart_for_combine', 'gen_lowpart_for_combine']
['gen_lowpart_for_combine', 'gen_lowpart_for_combine']
['gen_binary', 'gen_lowpart_for_combine']
['copy_insn_1', 'find_reloads_subreg_address', 'gen_binary', 'gen_binary', 'gen_binary', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'make_memloc']
['gen_move_insn']
['gen_move_insn']
['gen_peephole2_1164']
['gen_reg_rtx']
['expand_goto', 'gen_reload']
['expand_goto', 'find_reloads_subreg_address', 'gen_call_value', 'gen_reload', 'insns_match_p', 'protect_from_queue']
['copy_insn_list', 'gen_reload', 'loop_optimize']
['adjust_address_1', 'gen_reload', 'instantiate_virtual_regs_1']
['gen_reload', 'simplify_giv_expr']
['gen_reload']
['gen_reload', 'scan_loop']
['gen_reload']
['gen_reload', 'subst_stack_regs_pat']
['gen_sequence', 'gen_sequence']
['gen_sequence', 'gen_sequence']
['gen_sequence', 'gen_sequence']
['immed_real_const_1']
['gen_sequence', 'gen_sequence']
['gen_rtx_REG']
['gen_split_1087', 'gen_split_954', 'gen_split_955', 'gen_split_956', 'gen_split_957', 'gen_split_958', 'gen_split_959', 'gen_split_962']
['gen_split_1087']
['gen_split_1087']
['gen_split_1088', 'gen_split_955', 'gen_split_957', 'gen_split_959', 'gen_split_962']
['gen_split_1088']
['gen_split_1157']
['gen_split_1158']
['gen_split_1181', 'gen_split_950']
['gen_split_1181', 'gen_split_1182', 'gen_split_950']
['gen_split_1181', 'gen_split_1181']
['gen_split_1181', 'gen_split_1181']
['gen_split_1181', 'gen_split_950']
['gen_split_1182']
['gen_split_1181', 'gen_split_1182', 'gen_split_950']
['gen_split_1182', 'gen_split_1182']
['gen_split_1182', 'gen_split_1182']
['gen_split_1182']
['gen_split_1214', 'gen_split_1214']
['gen_split_1214', 'gen_split_1214']
['gen_split_1214', 'gen_split_1214']
['gen_split_1214', 'gen_split_1214']
['gen_split_1231', 'gen_split_1231']
['gen_split_1231', 'gen_split_1231']
['gen_split_1232']
['gen_split_1232']
['gen_split_1232', 'gen_split_1232']
['gen_split_1232', 'gen_split_1232']
['gen_split_1214', 'gen_split_1214']
['gen_split_1214', 'gen_split_1214']
['gen_split_1181', 'gen_split_950']
['gen_split_1181', 'gen_split_1182', 'gen_split_950']
['gen_split_1181', 'gen_split_950']
['gen_split_1087', 'gen_split_954', 'gen_split_955', 'gen_split_956', 'gen_split_957', 'gen_split_958', 'gen_split_959', 'gen_split_962']
['gen_split_954', 'gen_split_955', 'gen_split_956', 'gen_split_958', 'gen_split_959']
['gen_split_954', 'gen_split_958']
['gen_split_954']
['gen_split_954']
['gen_split_1088', 'gen_split_955', 'gen_split_957', 'gen_split_959', 'gen_split_962']
['gen_split_1087', 'gen_split_954', 'gen_split_955', 'gen_split_956', 'gen_split_957', 'gen_split_958', 'gen_split_959', 'gen_split_962']
['gen_split_954', 'gen_split_955', 'gen_split_956', 'gen_split_958', 'gen_split_959']
['gen_split_1087', 'gen_split_954', 'gen_split_955', 'gen_split_956', 'gen_split_957', 'gen_split_958', 'gen_split_959', 'gen_split_962']
['gen_split_954', 'gen_split_955', 'gen_split_956', 'gen_split_958', 'gen_split_959']
['gen_split_956']
['gen_split_956']
['gen_split_1088', 'gen_split_955', 'gen_split_957', 'gen_split_959', 'gen_split_962']
['gen_split_1087', 'gen_split_954', 'gen_split_955', 'gen_split_956', 'gen_split_957', 'gen_split_958', 'gen_split_959', 'gen_split_962']
['gen_split_1087', 'gen_split_954', 'gen_split_955', 'gen_split_956', 'gen_split_957', 'gen_split_958', 'gen_split_959', 'gen_split_962']
['gen_split_954', 'gen_split_955', 'gen_split_956', 'gen_split_958', 'gen_split_959']
['gen_split_954', 'gen_split_958']
['gen_split_958']
['gen_split_958']
['gen_split_958']
['gen_split_1088', 'gen_split_955', 'gen_split_957', 'gen_split_959', 'gen_split_962']
['gen_split_1087', 'gen_split_954', 'gen_split_955', 'gen_split_956', 'gen_split_957', 'gen_split_958', 'gen_split_959', 'gen_split_962']
['gen_split_954', 'gen_split_955', 'gen_split_956', 'gen_split_958', 'gen_split_959']
['gen_split_961']
['gen_split_961']
['gen_split_961']
['gen_split_1088', 'gen_split_955', 'gen_split_957', 'gen_split_959', 'gen_split_962']
['gen_split_1087', 'gen_split_954', 'gen_split_955', 'gen_split_956', 'gen_split_957', 'gen_split_958', 'gen_split_959', 'gen_split_962']
['gen_sse_movdfcc', 'gen_sse_movsfcc']
['gen_sse_movdfcc', 'gen_sse_movsfcc']
['gen_add3_insn', 'gen_sub3_insn']
['gen_add3_insn', 'gen_sub3_insn']
['gen_add3_insn', 'gen_sub3_insn']
['gen_add3_insn', 'gen_sub3_insn']
['dwarf2out_abstract_function', 'dwarf2out_begin_prologue', 'gen_subprogram_die', 'gen_subprogram_die']
['add_bound_info', 'add_data_member_location_attribute', 'dwarf2out_abstract_function', 'dwarf2out_decl', 'gen_subroutine_type_die', 'gen_variable_die', 'splice_child_die']
['dwarf2out_abstract_function', 'dwarf2out_begin_prologue', 'gen_subprogram_die', 'gen_subprogram_die']
['force_const_mem']
['dwarf2out_decl', 'gen_decl_die', 'gen_decl_die', 'gen_decl_die', 'gen_subprogram_die', 'gen_subprogram_die']
['gen_formal_parameter_die', 'gen_subprogram_die', 'gen_variable_die']
['make_node']
['add_bound_info', 'add_data_member_location_attribute', 'dwarf2out_abstract_function', 'dwarf2out_decl', 'gen_subroutine_type_die', 'gen_variable_die', 'splice_child_die']
['adjust_stack', 'allocate_dynamic_stack_space', 'allocate_dynamic_stack_space', 'anti_adjust_stack', 'emit_move_insn_1', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_builtin_next_arg', 'expand_main_function', 'gen_call', 'gen_call_pop', 'gen_call_value', 'gen_call_value_pop', 'gen_tablejump', 'legitimize_address', 'probe_stack_range', 'push_block', 'round_push', 'round_trampoline_addr']
['gen_type_die_for_member']
['gen_formal_parameter_die', 'gen_subprogram_die', 'gen_variable_die']
['add_bound_info', 'add_data_member_location_attribute', 'dwarf2out_abstract_function', 'dwarf2out_decl', 'gen_subroutine_type_die', 'gen_variable_die', 'splice_child_die']
['gen_variable_die']
['general_operand']
['general_operand']
['general_operand']
['general_operand']
['get_alias_set']
['get_alias_set']
['get_alias_set']
['get_alias_set', 'get_frame_alias_set', 'get_varargs_alias_set']
['get_attr_athlon_decode']
['get_attr_athlon_decode', 'get_attr_modrm']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits']
['get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits']
['get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits']
['get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits']
['get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits']
['get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits']
['get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits']
['get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits']
['get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits']
['get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_athlon_fpunits']
['get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_i387']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_i387']
['get_attr_athlon_fpunits']
['get_attr_athlon_fpunits']
['get_attr_i387']
['get_attr_athlon_fpunits', 'get_attr_athlon_fpunits', 'get_attr_i387']
['get_attr_i387']
['get_attr_i387']
['get_attr_i387']
['get_attr_imm_disp']
['get_attr_imm_disp', 'get_attr_pent_pair', 'get_attr_pent_pair']
['get_attr_imm_disp']
['get_attr_imm_disp']
['get_attr_imm_disp', 'get_attr_pent_pair', 'get_attr_prefix_0f', 'get_attr_type']
['get_attr_imm_disp', 'get_attr_length_immediate', 'get_attr_pent_pair', 'get_attr_pent_pair', 'get_attr_type']
['get_attr_imm_disp']
['get_attr_imm_disp', 'get_attr_length_immediate']
['get_attr_imm_disp', 'get_attr_length_immediate', 'get_attr_pent_pair', 'get_attr_type']
['get_attr_imm_disp', 'get_attr_length_immediate', 'get_attr_modrm', 'get_attr_pent_pair', 'get_attr_type']
['get_attr_imm_disp']
['get_attr_imm_disp']
['get_attr_imm_disp']
['get_attr_imm_disp']
['get_attr_imm_disp']
['get_attr_imm_disp']
['get_attr_memory', 'get_attr_memory', 'get_attr_memory', 'get_attr_memory']
['get_attr_memory', 'get_attr_memory', 'get_attr_memory', 'get_attr_memory']
['get_attr_memory', 'get_attr_memory', 'get_attr_memory', 'get_attr_memory', 'get_attr_pent_pair']
['get_attr_memory']
['get_attr_memory']
['get_attr_memory']
['get_attr_memory', 'get_attr_memory', 'get_attr_memory', 'get_attr_memory', 'get_attr_pent_pair']
['get_attr_memory', 'get_attr_pent_pair']
['get_attr_memory', 'get_attr_memory', 'get_attr_memory', 'get_attr_memory', 'get_attr_pent_pair']
['get_attr_memory']
['get_attr_memory', 'get_attr_memory', 'get_attr_memory', 'get_attr_memory']
['get_attr_memory', 'get_attr_memory', 'get_attr_memory', 'get_attr_memory']
['get_attr_memory', 'get_attr_memory', 'get_attr_memory', 'get_attr_memory', 'get_attr_pent_pair']
['get_attr_mode']
['get_attr_mode']
['get_attr_mode', 'get_attr_prefix_0f']
['get_attr_length_immediate', 'get_attr_mode', 'get_attr_modrm']
['get_attr_pent_pair']
['get_attr_memory', 'get_attr_memory', 'get_attr_memory', 'get_attr_memory', 'get_attr_pent_pair']
['get_attr_imm_disp', 'get_attr_pent_pair', 'get_attr_pent_pair']
['get_attr_imm_disp', 'get_attr_pent_pair', 'get_attr_pent_pair']
['get_attr_memory', 'get_attr_pent_pair']
['get_attr_length_immediate', 'get_attr_pent_pair', 'get_attr_type']
['get_attr_imm_disp', 'get_attr_pent_pair', 'get_attr_prefix_0f', 'get_attr_type']
['get_attr_imm_disp', 'get_attr_length_immediate', 'get_attr_pent_pair', 'get_attr_pent_pair', 'get_attr_type']
['get_attr_imm_disp', 'get_attr_length_immediate', 'get_attr_pent_pair', 'get_attr_pent_pair', 'get_attr_type']
['get_attr_pent_pair']
['get_attr_pent_pair']
['get_attr_pent_pair', 'get_attr_type']
['get_attr_pent_pair']
['get_attr_imm_disp', 'get_attr_length_immediate', 'get_attr_pent_pair', 'get_attr_type']
['get_attr_pent_pair']
['get_attr_imm_disp', 'get_attr_length_immediate', 'get_attr_modrm', 'get_attr_pent_pair', 'get_attr_type']
['get_attr_type']
['get_attr_type']
['get_attr_length_immediate', 'get_attr_modrm', 'get_attr_type']
['get_attr_length_immediate', 'get_attr_pent_pair', 'get_attr_type']
['get_attr_type']
['get_attr_imm_disp', 'get_attr_pent_pair', 'get_attr_prefix_0f', 'get_attr_type']
['get_attr_imm_disp', 'get_attr_length_immediate', 'get_attr_pent_pair', 'get_attr_pent_pair', 'get_attr_type']
['get_attr_type']
['get_attr_length_immediate', 'get_attr_type']
['get_attr_pent_pair', 'get_attr_type']
['get_attr_modrm', 'get_attr_type']
['get_attr_imm_disp', 'get_attr_length_immediate', 'get_attr_pent_pair', 'get_attr_type']
['get_attr_imm_disp', 'get_attr_length_immediate', 'get_attr_modrm', 'get_attr_pent_pair', 'get_attr_type']
['get_attr_modrm', 'get_attr_type', 'insn_default_length']
['get_condition_for_loop']
['get_inner_reference']
['get_inner_reference']
['get_inner_reference']
['ix86_split_to_parts', 'purge_addressof']
['find_base_value']
['get_last_value']
['dump_flow_info', 'find_base_value']
['record_value_for_reg']
['qty_sugg_compare']
['instantiate_decl']
['instantiate_decl']
['compute_forward_dependences']
['copy_insn_1', 'find_reloads_subreg_address', 'gen_binary', 'gen_binary', 'gen_binary', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'gen_sequence', 'make_memloc']
['mention_regs']
['get_last_value_validate']
['subreg_regno_offset', 'subreg_regno_offset']
['insert_regs']
['get_secondary_mem']
['get_secondary_mem']
['get_true_reg', 'mark_all_labels']
['get_true_reg', 'get_true_reg']
['get_true_reg', 'get_true_reg']
['get_true_reg']
['get_true_reg']
['ggc_alloc']
['ggc_alloc']
['ggc_alloc', 'release_pages', 'release_pages']
['ggc_alloc_string']
['count_one_set', 'df_ref_record', 'reg_bitfield_target_p', 'reg_overlap_mentioned_for_reload_p']
['reg_bitfield_target_p']
['clear_reload_reg_in_use', 'use_crosses_set_p']
['choose_hard_reg_mode', 'refers_to_regno_for_reload_p', 'refers_to_regno_p', 'save_call_clobbered_regs']
['choose_hard_reg_mode', 'save_call_clobbered_regs']
['invalidate', 'reg_bitfield_target_p', 'update_table_tick']
['init_propagate_block_info', 'legitimize_address', 'local_alloc', 'record_giv']
['combine_regs']
['init_cumulative_args']
['init_cumulative_args', 'init_cumulative_args']
['combine_instructions', 'memrefs_conflict_p']
['rm_line_notes', 'rm_other_notes']
['hash_expr_1']
['hash_rtx']
['hash_rtx']
['i386_simplify_dwarf_addr']
['calculate_giv_inc', 'if_then_else_cond']
['mark_used_regs']
['fold_rtx', 'loop_iterations']
['extract_bit_field', 'fixup_var_refs_1', 'move_movables', 'nonoverlapping_memrefs_p']
['adjust_address_1', 'compute_forward_dependences', 'copy_insn_list', 'copy_loop_headers', 'copy_rtx_and_substitute', 'copy_rtx_and_substitute', 'decompose', 'distribute_notes', 'expected_value_to_br_prob', 'extract_bit_field', 'find_base_term', 'find_reloads_address', 'fixup_var_refs_1', 'fold_rtx', 'force_to_mode', 'gen_reload', 'gen_sequence', 'if_convert', 'instantiate_virtual_regs_1', 'loop_iterations', 'merge_blocks_nomove', 'move_movables', 'nonoverlapping_memrefs_p', 'optimize_sibling_and_tail_recursive_calls', 'protect_from_queue', 'record_giv', 'reload_as_needed', 'reload_as_needed', 'simplify_comparison', 'simplify_giv_expr', 'split_all_insns', 'unshare_all_rtl']
['immed_double_const']
['immed_real_const_1']
['immed_real_const_1']
['immed_real_const_1']
['immediate_operand']
['combine_instructions', 'cse_basic_block', 'legitimize_pic_address', 'refers_to_regno_for_reload_p', 'simplify_giv_expr']
['init_propagate_block_info', 'invalidate']
['legitimize_pic_address']
['init_propagate_block_info']
['init_propagate_block_info']
['initial_reg_note_copy']
['copy_rtx_if_shared']
['copy_rtx_if_shared']
['copy_rtx_if_shared']
['copy_rtx_if_shared']
['copy_rtx_if_shared']
['copy_rtx_if_shared']
['copy_rtx_if_shared']
['copy_rtx_if_shared']
['initializer_constant_valid_p']
['initializer_constant_valid_p']
['initializer_constant_valid_p']
['initializer_constant_valid_p', 'initializer_constant_valid_p']
['initializer_constant_valid_p']
['initializer_constant_valid_p']
['initializer_constant_valid_p', 'initializer_constant_valid_p']
['insns_match_p']
['clear_reload_reg_in_use', 'invalidate']
['notreg_cost']
['notreg_cost']
['want_to_gcse_p', 'want_to_gcse_p']
['insert']
['move_by_pieces']
['instantiate_decl']
['consec_sets_giv', 'squeeze_notes']
['ssa_const_prop', 'want_to_gcse_p', 'want_to_gcse_p']
['insert_one_insn']
['insert_regs']
['insert_regs']
['insert_regs']
['clear_edges', 'clear_edges']
['insert_regs']
['insn_default_length']
['insn_default_length']
['insn_default_length']
['get_attr_modrm', 'get_attr_type', 'insn_default_length']
['insns_match_p']
['insns_match_p']
['expand_goto', 'find_reloads_subreg_address', 'gen_call_value', 'gen_reload', 'insns_match_p', 'protect_from_queue']
['insns_match_p']
['insns_match_p']
['insns_match_p']
['insns_match_p']
['expand_builtin_prefetch']
['get_set_constructor_bits']
['build_component_ref', 'offset_address']
['check_asm_stack_operands', 'invalidate', 'swap_rtx_condition']
['invalidate']
['invalidate']
['invalidate']
['invalidate']
['copy_insn_notes', 'copy_insn_notes', 'invalidate']
['invalidate']
['invalidate_for_call']
['invalidate_from_clobbers']
['invalidate_from_clobbers']
['insert_regs']
['reverse_condition']
['ix86_register_move_cost']
['memory_address']
['combine_regs']
['copy_loop_body']
['combine_regs']
['swap_rtx_condition']
['ix86_split_long_move']
['ix86_attr_length_address_default']
['ix86_attr_length_address_default']
['ix86_attr_length_immediate_default']
['ix86_attr_length_immediate_default']
['ix86_attr_length_immediate_default']
['ix86_attr_length_immediate_default']
['emit_pop_insn']
['unroll_loop', 'visit_expression']
['nonoverlapping_memrefs_p', 'simplify_if_then_else']
['combine_regs', 'copy_insn_notes', 'copy_insn_notes', 'expand_goto', 'for_each_insn_in_loop', 'for_each_insn_in_loop', 'reposition_prologue_and_epilogue_notes']
['swap_rtx_condition']
['refers_to_regno_for_reload_p']
['mem_loc_descriptor', 'replace_pseudos_in_call_usage', 'sge_plus_constant', 'swap_rtx_condition']
['ix86_emit_restore_regs_using_mov', 'ix86_emit_save_regs_using_mov']
['expand_builtin_init_dwarf_reg_sizes']
['finish_eh_generation']
['expand_builtin_apply_args_1', 'init_expr_once']
['ix86_emit_restore_regs_using_mov', 'ix86_emit_save_regs_using_mov']
['ix86_emit_restore_regs_using_mov', 'ix86_emit_save_regs_using_mov']
['simplify_relational_operation']
['expand_builtin_apply_args_1']
['form_sum']
['ix86_expand_epilogue']
['ix86_expand_epilogue']
['ix86_expand_epilogue']
['ix86_expand_epilogue']
['ix86_expand_fp_movcc', 'ix86_expand_fp_movcc']
['ix86_expand_fp_movcc', 'ix86_expand_fp_movcc']
['ix86_expand_fp_movcc', 'ix86_expand_fp_movcc']
['ix86_expand_fp_movcc', 'ix86_expand_fp_movcc']
['ix86_expand_fp_movcc']
['ix86_expand_fp_movcc']
['ix86_expand_fp_movcc']
['ix86_expand_fp_movcc']
['ix86_expand_fp_movcc', 'ix86_expand_fp_movcc']
['ix86_expand_fp_movcc', 'ix86_expand_fp_movcc']
['scan_loop']
['calculate_giv_inc', 'cse_basic_block', 'nonoverlapping_memrefs_p', 'sched_analyze_2']
['ix86_expand_move', 'ix86_expand_move']
['ix86_expand_move', 'ix86_expand_move']
['create_basic_block_structure', 'init_emit_once', 'init_emit_once', 'instantiate_decl', 'instantiate_decl', 'instantiate_decl', 'instantiate_decl', 'rm_line_notes']
['convert_from_eh_region_ranges_1', 'dwarf2out_frame_debug', 'for_each_insn_in_loop']
['check_asm_stack_operands', 'for_each_insn_in_loop']
['init_propagate_block_info']
['ix86_expand_move']
['ix86_expand_move']
['try_tablejump']
['try_tablejump']
['create_basic_block_structure', 'init_emit_once', 'init_emit_once', 'instantiate_decl', 'instantiate_decl', 'instantiate_decl', 'instantiate_decl', 'rm_line_notes']
['expand_goto', 'init_regs', 'init_regs', 'rm_other_notes', 'rm_other_notes', 'sched_init']
['ix86_expand_setcc']
['emit_single_push_insn']
['gen_push', 'ix86_force_to_memory', 'ix86_force_to_memory']
['gen_push', 'ix86_force_to_memory', 'ix86_force_to_memory']
['ix86_free_from_memory']
['insert_regs']
['ix86_memory_move_cost']
['num_sign_bit_copies']
['insert_regs']
['standard_80387_constant_p', 'standard_80387_constant_p']
['standard_80387_constant_p', 'standard_80387_constant_p']
['ix86_expand_move', 'ix86_expand_move']
['ix86_expand_move', 'ix86_expand_move']
['num_sign_bit_copies']
['insert_regs']
['subreg_regno_offset']
['ix86_register_move_cost']
['ix86_register_move_cost']
['subreg_regno_offset', 'subreg_regno_offset']
['ix86_split_fp_branch']
['ix86_split_fp_branch']
['ix86_split_fp_branch']
['ix86_split_fp_branch']
['ix86_split_fp_branch']
['ix86_split_fp_branch', 'ix86_split_fp_branch']
['ix86_split_fp_branch', 'ix86_split_fp_branch']
['ix86_split_fp_branch']
['ix86_split_fp_branch', 'ix86_split_fp_branch']
['ix86_split_fp_branch']
['ix86_split_fp_branch']
['ix86_split_fp_branch']
['ix86_split_fp_branch', 'ix86_split_fp_branch']
['ix86_split_long_move']
['dbxout_symbol_location']
['ix86_split_long_move']
['ix86_split_long_move']
['ix86_split_long_move']
['ix86_split_long_move', 'ix86_split_long_move']
['ix86_split_long_move', 'ix86_split_long_move']
['ix86_split_long_move', 'ix86_split_long_move']
['ix86_split_long_move', 'ix86_split_long_move']
['ix86_split_long_move']
['ix86_split_long_move', 'ix86_split_long_move']
['ix86_split_long_move', 'ix86_split_long_move']
['ix86_split_long_move', 'ix86_split_long_move']
['ix86_split_long_move', 'ix86_split_long_move']
['copy_insn_notes', 'copy_loop_body', 'ix86_split_to_parts', 'safe_from_p']
['ix86_split_to_parts']
['ix86_split_to_parts']
['ix86_split_to_parts']
['ix86_split_to_parts', 'ix86_split_to_parts']
['ix86_split_to_parts', 'ix86_split_to_parts']
['ix86_split_to_parts']
['ix86_split_to_parts']
['grokfield']
['known_cond', 'simplify_relational_operation']
['decompose']
['known_cond', 'simplify_relational_operation']
['emit_pop_insn']
['kill_value', 'known_cond', 'replace_rtx', 'simplify_rtx', 'true_regnum']
['known_cond', 'replace_rtx', 'simplify_rtx']
['known_cond']
['combine_reversed_comparison_code']
['simplify_rtx', 'simplify_rtx']
['copy_rtx_and_substitute']
['cse_end_of_basic_block', 'decompose', 'expand_inline_function', 'find_dummy_reload', 'subst']
['eliminate_regs', 'push_reload']
['legitimize_pic_address']
['legitimize_pic_address']
['expand_builtin_return_addr', 'fix_lexical_addr', 'ix86_setup_incoming_varargs']
['legitimize_pic_address', 'legitimize_pic_address']
['legitimize_pic_address']
['legitimize_pic_address', 'legitimize_pic_address']
['expand_function_start', 'finish_eh_generation', 'round_trampoline_addr']
['legitimize_pic_address']
['legitimize_pic_address']
['ix86_free_from_memory']
['expand_function_start']
['expand_function_start']
['legitimize_pic_address', 'legitimize_pic_address']
['load_pic_register']
['loc_descriptor']
['loc_descriptor']
['loc_descriptor_from_tree']
['force_const_mem']
['expand_goto', 'reposition_prologue_and_epilogue_notes']
['finish_enum']
['named_section_flags']
['named_section_flags']
['named_section_flags']
['verify_tree']
['print_spelling']
['delete_related_insns', 'ssa_const_prop']
['assemble_variable', 'assemble_zeros']
['delete_related_insns', 'init_stringpool']
['c_expand_start_cond', 'c_expand_start_cond']
['finish_enum']
['cached_make_edge', 'extract_insn', 'init_branch_prob', 'init_branch_prob', 'init_branch_prob', 'init_branch_prob', 'init_branch_prob', 'record_one_set']
['output_constant_def_contents']
['biv_total_increment', 'biv_total_increment']
['biv_total_increment', 'biv_total_increment']
['emit_prefetch_instructions', 'emit_prefetch_instructions', 'final_biv_value', 'final_biv_value']
['emit_prefetch_instructions', 'emit_prefetch_instructions', 'final_biv_value', 'final_biv_value']
['biv_total_increment', 'final_biv_value', 'final_biv_value', 'final_biv_value']
['biv_total_increment']
['final_biv_value', 'final_biv_value']
['final_biv_value', 'final_biv_value']
['force_nonfallthru_and_redirect']
['init_propagate_block_info']
['final_biv_value', 'final_biv_value']
['build_type_attribute_variant', 'cfg_layout_finalize', 'copy_eh_notes', 'mark_all_labels', 'reg_scan_mark_refs']
['init_propagate_block_info']
['scope_to_insns_initialize']
['final_biv_value', 'gen_call_value_pop', 'gen_call_value_pop']
['convert_regs_2', 'convert_regs_2']
['flush_pending_lists', 'flush_pending_lists']
['flush_pending_lists', 'flush_pending_lists']
['expected_value_to_br_prob', 'loop_insn_first_p', 'replace_equiv_address_nv']
['loop_insn_first_p']
['loop_insn_first_p']
['loop_insn_first_p']
['loop_insn_first_p', 'loop_insn_first_p', 'rm_other_notes', 'rm_other_notes']
['loop_insn_first_p', 'loop_insn_first_p', 'rm_other_notes', 'rm_other_notes']
['loop_insn_first_p']
['loop_insn_first_p']
['biv_total_increment', 'biv_total_increment', 'final_biv_value', 'final_biv_value']
['biv_total_increment', 'biv_total_increment', 'final_biv_value', 'final_biv_value']
['emit_prefetch_instructions', 'emit_prefetch_instructions', 'emit_prefetch_instructions', 'emit_prefetch_instructions', 'emit_prefetch_instructions', 'emit_prefetch_instructions']
['emit_prefetch_instructions', 'emit_prefetch_instructions', 'emit_prefetch_instructions', 'emit_prefetch_instructions', 'emit_prefetch_instructions', 'emit_prefetch_instructions']
['eliminate_regs', 'nonoverlapping_memrefs_p', 'strength_reduce']
['expand_end_case_type', 'expand_inline_function', 'get_true_reg', 'mark_all_labels', 'move_movables', 'reload', 'schedule_block', 'strength_reduce']
['eliminate_regs']
['reload']
['loop_iterations']
['find_split_point']
['loop_iterations', 'loop_iterations']
['loop_iterations', 'loop_iterations']
['loop_iv_add_mult_emit_before']
['loop_iv_add_mult_hoist']
['loop_iv_add_mult_sink']
['gen_lowpart_common']
['make_compound_operation']
['make_compound_operation']
['make_decl_rtl']
['make_decl_rtl']
['make_decl_rtl']
['make_decl_rtl']
['make_decl_rtl']
['cached_make_edge']
['cached_make_edge']
['cached_make_edge']
['cached_make_edge']
['copy_loop_body', 'find_reloads_subreg_address', 'sched_analyze_2', 'thread_prologue_and_epilogue_insns']
['copy_loop_body', 'make_extraction', 'replace_pseudos_in_call_usage']
['fixup_var_refs_1', 'rtx_renumbered_equal_p']
['consec_sets_giv', 'loop_optimize', 'scan_loop']
['copy_insn_list', 'copy_loop_headers', 'find_reloads_address', 'force_to_mode']
['adjust_address_1', 'compute_transp', 'elimination_effects', 'find_split_point', 'force_to_mode', 'legitimize_pic_address', 'move_movables', 'validate_replace_rtx_1']
['cse_end_of_basic_block', 'find_reloads_address', 'optimize_sibling_and_tail_recursive_calls']
['apply_distributive_law', 'copy_insn_1', 'find_reloads_subreg_address', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'make_memloc', 'protect_from_queue', 'simplify_giv_expr']
['make_memloc', 'make_memloc']
['make_memloc', 'make_memloc']
['make_memloc']
['make_memloc']
['copy_insn_1', 'find_reloads_subreg_address', 'gen_binary', 'gen_binary', 'gen_binary', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'gen_lowpart_for_combine', 'make_memloc']
['make_node']
['cached_make_edge', 'emdnorm', 'global_alloc']
['eiremain']
['emdnorm']
['cached_make_edge', 'emdnorm', 'global_alloc']
['make_tree']
['expand_mult_add', 'make_tree']
['make_tree', 'make_tree']
['expand_mult_add', 'expand_mult_add', 'expand_shift', 'make_tree', 'make_tree', 'make_tree']
['ix86_va_start']
['clear_storage', 'emit_block_move', 'make_tree']
['mark_home_live']
['mark_referenced_regs']
['subreg_regno_offset']
['find_replacement', 'mark_set_1']
['mark_set_1']
['subreg_regno_offset']
['mark_set_1']
['copy_loop_body', 'copy_loop_body', 'expand_expr', 'find_reloads_subreg_address', 'fixup_var_refs_1', 'ix86_split_fp_branch', 'sched_analyze_2']
['copy_loop_body']
['try_combine']
['mark_used_regs']
['copy_loop_headers', 'for_each_insn_in_loop', 'mark_used_regs', 'subst']
['if_then_else_cond']
['mark_used_regs']
['mark_used_regs']
['mark_used_regs']
['mark_used_regs', 'mark_used_regs']
['mark_used_regs_combine', 'setup_save_areas']
['simplify_relational_operation']
['may_trap_p']
['may_trap_p']
['may_trap_p']
['emit_pop_insn']
['maybe_eliminate_biv']
['maybe_read_dollar_number']
['maybe_read_dollar_number']
['compute_forward_dependences', 'mem_loc_descriptor']
['mem_loc_descriptor']
['mem_loc_descriptor']
['mem_loc_descriptor']
['mem_loc_descriptor']
['mem_loc_descriptor']
['mem_loc_descriptor']
['mem_loc_descriptor']
['mem_loc_descriptor']
['mem_loc_descriptor']
['mem_loc_descriptor']
['adjust_address_1', 'copy_insn_notes', 'eliminate_regs_in_insn', 'for_each_insn_in_loop', 'gen_call_pop', 'gen_reload', 'make_extraction', 'subst_stack_regs_pat', 'trampoline_address']
['memory_address']
['memory_address']
['memory_address']
['memory_address']
['memory_address']
['memory_address']
['memory_address']
['memory_address']
['emit_unop_insn', 'expand_fix']
['emit_unop_insn', 'expand_fix']
['ix86_split_to_parts']
['expand_mult_add', 'move_by_pieces']
['expand_mult_add', 'move_by_pieces']
['sched_init']
['convert_from_eh_region_ranges_1']
['mark_all_labels', 'memrefs_conflict_p']
['memrefs_conflict_p']
['memrefs_conflict_p', 'true_dependence']
['check_asm_stack_operands', 'memrefs_conflict_p', 'scan_loop']
['expand_decl', 'legitimize_pic_address', 'make_extraction', 'memrefs_conflict_p', 'subst_asm_stack_regs']
['memrefs_conflict_p']
['memrefs_conflict_p']
['memrefs_conflict_p']
['memrefs_conflict_p']
['memrefs_conflict_p']
['choose_hard_reg_mode', 'clear_reload_reg_in_use', 'cselib_lookup', 'invalidate', 'mention_regs', 'recog_for_combine', 'refers_to_regno_p', 'scan_rtx_reg', 'use_crosses_set_p']
['mode_for_extraction']
['modified_type_die']
['modified_type_die']
['modified_type_die']
['move_deaths']
['verify_flow_info']
['fold_rtx', 'optimize_sibling_and_tail_recursive_calls', 'record_giv', 'reload_as_needed']
['if_convert', 'move_deaths', 'simplify_giv_expr', 'thread_prologue_and_epilogue_insns']
['move_deaths']
['apply_change_group', 'compute_forward_dependences', 'compute_forward_dependences', 'compute_transp', 'convert_from_eh_region_ranges', 'copy_rtx_and_substitute', 'decompose', 'distribute_notes', 'eliminate_regs', 'expand_decl', 'expected_value_to_br_prob', 'extract_bit_field', 'find_base_term', 'find_reloads_address', 'fixup_var_refs_1', 'gen_sequence', 'if_convert', 'mem_loc_descriptor', 'move_movables', 'move_movables', 'nonoverlapping_memrefs_p', 'nonoverlapping_memrefs_p', 'optimize_sibling_and_tail_recursive_calls', 'purge_addressof_1', 'reload', 'simplify_comparison', 'simplify_giv_expr', 'simplify_giv_expr', 'simplify_plus_minus', 'split_all_insns', 'store_expr', 'strength_reduce', 'subst']
['recog']
['ix86_split_long_move', 'move_deaths', 'subst_constants', 'subst_constants']
['ix86_split_long_move', 'move_deaths', 'move_deaths', 'move_deaths', 'subst_constants', 'subst_constants']
['init_alias_analysis', 'move_deaths']
['for_each_insn_in_loop']
['init_alias_analysis']
['get_secondary_mem', 'replace_reg']
['replace_reg']
['replace_reg']
['get_secondary_mem', 'replace_reg']
['build_complex_type', 'build_complex_type', 'mtherr']
['new_alias_set']
['general_operand']
['general_operand']
['general_operand']
['apply_change_group']
['nonmemory_operand']
['cse_main']
['find_dummy_reload', 'find_dummy_reload', 'loop_optimize']
['copy_loop_body', 'copy_loop_headers', 'legitimize_address']
['decompose', 'expand_decl', 'simplify_giv_expr']
['cse_end_of_basic_block', 'decompose', 'expand_inline_function', 'find_dummy_reload', 'subst']
['copy_rtx_and_substitute', 'decompose', 'distribute_notes', 'loop_iterations', 'reload_as_needed']
['eliminate_regs']
['fold_rtx', 'optimize_sibling_and_tail_recursive_calls', 'record_giv', 'reload_as_needed']
['convert_move']
['num_sign_bit_copies']
['subreg_regno_offset', 'subreg_regno_offset']
['insert_regs']
['x86_field_alignment']
['calculate_giv_inc', 'if_then_else_cond']
['num_sign_bit_copies']
['subreg_regno_offset', 'subreg_regno_offset']
['num_sign_bit_copies']
['clear_dead_regs', 'mark_effect', 'reload_combine_note_use']
['find_base_value']
['find_base_value']
['calculate_giv_inc']
['nonzero_bits', 'nonzero_bits']
['nonzero_bits', 'nonzero_bits']
['offsettable_address_p']
['change_address']
['offsettable_address_p']
['operands_match_p']
['operands_match_p', 'reg_overlap_mentioned_for_reload_p', 'reg_overlap_mentioned_p']
['operands_match_p']
['operands_match_p']
['combine_instructions']
['oprs_unchanged_p']
['oprs_unchanged_p']
['handle_rd_kill_set']
['oprs_unchanged_p']
['compute_transp']
['copy_insn_notes', 'final', 'swap_rtx_condition', 'try_replace_reg']
['delete_address_reloads', 'try_copy_prop']
['check_asm_stack_operands', 'peephole2_insns', 'peephole2_insns', 'peephole2_insns', 'peephole2_insns', 'peephole2_insns', 'peephole2_insns', 'peephole2_insns', 'split_1', 'split_1', 'split_1']
['peep2_find_free_register']
['add_byte_size_attribute', 'expand_builtin_va_arg', 'recog_for_combine', 'xexit']
['copy_insn_notes']
['copy_insn_notes', 'final', 'swap_rtx_condition', 'try_replace_reg']
['handle_rd_kill_set']
['try_copy_prop']
['check_asm_stack_operands', 'peephole2_insns', 'peephole2_insns', 'peephole2_insns', 'peephole2_insns', 'peephole2_insns', 'peephole2_insns', 'peephole2_insns', 'split_1', 'split_1', 'split_1']
['peep2_find_free_register']
['add_byte_size_attribute', 'expand_builtin_va_arg', 'recog_for_combine', 'xexit']
['output_constant_def_contents', 'output_constant_def_contents', 'variable_section', 'variable_section']
['output_constant_def_contents', 'output_constant_def_contents', 'variable_section', 'variable_section']
['data_section', 'output_constant_def_contents', 'variable_section']
['output_constant_def_contents', 'output_constant_def_contents', 'variable_section', 'variable_section']
['output_constant_def_contents']
['output_constant_def_contents', 'output_constant_def_contents', 'variable_section', 'variable_section']
['mergeable_constant_section', 'mergeable_string_section', 'output_constant_def_contents', 'readonly_data_section', 'variable_section']
['output_constant_def_contents']
['extract_left_shift', 'find_reloads_toplev', 'kill_value', 'noce_emit_cmove', 'replace_regs', 'replace_rtx', 'replace_rtx', 'simplify_rtx', 'simplify_rtx', 'write_dependence_p']
['write_dependence_p']
['output_format']
['output_format']
['output_format']
['output_format']
['output_format']
['output_format']
['c_add_case_label']
['parse_output_constraint']
['_cpp_lex_token', '_cpp_temp_token']
['gen_type', 'gen_type', 'record_constant_1', 'record_constant_1']
['parse_number', 'parse_number']
['parse_output_constraint']
['_cpp_get_buff']
['_cpp_get_buff']
['parse_string']
['peep2_find_free_register']
['peep2_find_free_register']
['peep2_find_free_register']
['peep2_find_free_register']
['peep2_find_free_register']
['peep2_find_free_register']
['peep2_find_free_register']
['peep2_find_free_register']
['peep2_find_free_register']
['simplify_giv_expr']
['simplify_comparison']
['dbxout_symbol_location', 'ix86_split_to_parts']
['dbxout_symbol_location']
['dbxout_symbol_location']
['dbxout_symbol_location']
['expand_increment']
['emit_move_insn']
['find_reloads_address_part']
['emit_move_insn']
['dbxout_symbol_location']
['canonicalize_condition', 'try_copy_prop']
['precondition_loop_p']
['precondition_loop_p']
['predict_insn_def']
['predict_insn_def']
['check_asm_stack_operands', 'constrain_operands', 'copyprop_hardreg_forward', 'regrename_optimize']
['check_asm_stack_operands', 'cleanup_subreg_operands', 'preprocess_constraints', 'regrename_optimize']
['preprocess_constraints']
['check_asm_stack_operands', 'constrain_operands', 'copyprop_hardreg_forward', 'regrename_optimize']
['cleanup_subreg_operands']
['print_mem_expr']
['print_mem_expr']
['print_reg']
['print_rtx']
['print_rtx']
['print_rtx']
['print_rtx']
['print_rtx']
['print_rtx']
['print_rtx']
['print_rtx']
['print_rtx']
['print_rtx']
['print_rtx']
['print_rtx']
['print_rtx']
['output_asm_operand_names']
['output_asm_operand_names']
['output_asm_operand_names']
['print_rtx', 'print_rtx']
['print_stack']
['propagate_one_insn']
['apply_distributive_law', 'copy_insn_1', 'find_reloads_subreg_address', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'make_memloc', 'protect_from_queue', 'simplify_giv_expr']
['apply_distributive_law']
['change_address_1', 'protect_from_queue', 'update_temp_slot_address']
['legitimize_pic_address']
['merge_blocks_nomove', 'protect_from_queue', 'unshare_all_rtl']
['eliminate_regs_in_insn', 'gen_call_value_pop', 'scan_loop', 'visit_expression']
['protect_from_queue']
['protect_from_queue']
['expected_value_to_br_prob']
['ix86_split_to_parts', 'ix86_split_to_parts']
['push_reload']
['push_reload']
['ix86_decompose_address', 'push_reload']
['eliminate_regs', 'push_reload']
['push_reload']
['push_reload']
['push_reload']
['read_filename_string']
['read_filename_string']
['recog']
['recog']
['recog']
['recog']
['recog']
['recog']
['recog']
['recog']
['extract_insn', 'peephole2_insns', 'recog', 'split_insns']
['do_SUBST', 'recog_for_combine', 'undo_all']
['do_SUBST', 'recog_for_combine']
['do_SUBST', 'do_SUBST', 'recog_for_combine', 'recog_for_combine']
['do_SUBST', 'do_SUBST', 'recog_for_combine', 'recog_for_combine']
['do_SUBST', 'recog_for_combine', 'undo_all']
['do_SUBST', 'recog_for_combine']
['recog_for_combine']
['recog_for_combine', 'recog_for_combine']
['recog_for_combine']
['recog_for_combine']
['recog_for_combine', 'recog_for_combine']
['recog_for_combine']
['recog_for_combine']
['recog_for_combine']
['recog_for_combine']
['recog_for_combine']
['recog_for_combine']
['recog_for_combine']
['recog_for_combine']
['record_address_regs']
['record_address_regs', 'record_address_regs']
['record_address_regs', 'record_address_regs']
['record_address_regs']
['copy_insn_notes', 'reposition_prologue_and_epilogue_notes']
['expand_goto', 'find_reloads_subreg_address', 'gen_call_value', 'gen_reload', 'insns_match_p', 'protect_from_queue']
['canonicalize_condition', 'try_copy_prop']
['copy_insn_list']
['elimination_effects', 'mem_loc_descriptor']
['check_asm_stack_operands']
['find_base_value']
['find_base_value']
['distribute_links', 'find_base_value', 'rm_other_notes']
['consec_sets_giv', 'expand_goto', 'expand_goto', 'for_each_insn_in_loop', 'for_each_insn_in_loop']
['consec_sets_giv', 'expand_goto', 'expand_goto', 'for_each_insn_in_loop', 'for_each_insn_in_loop']
['for_each_insn_in_loop']
['scope_to_insns_initialize']
['elimination_effects', 'mem_loc_descriptor']
['copy_insn_notes', 'copy_insn_notes', 'invalidate']
['copy_insn_notes']
['record_constant_1']
['record_constant_1', 'record_constant_1']
['record_constant_1', 'record_constant_1']
['adjust_address_1', 'apply_change_group', 'combine_regs', 'compute_transp', 'convert_from_eh_region_ranges', 'emit_libcall_block', 'ix86_decompose_address', 'purge_addressof_1', 'rtx_renumbered_equal_p', 'unroll_loop']
['expand_decl', 'record_giv']
['record_giv']
['subst_stack_regs_pat']
['fold_rtx', 'loop_iterations']
['check_insn_for_givs']
['check_insn_for_givs']
['if_then_else_cond']
['ix86_setup_incoming_varargs']
['combine_instructions', 'cse_basic_block', 'legitimize_pic_address', 'refers_to_regno_for_reload_p', 'simplify_giv_expr']
['refers_to_regno_for_reload_p']
['refers_to_regno_for_reload_p']
['refers_to_regno_for_reload_p']
['refers_to_regno_for_reload_p']
['refers_to_regno_for_reload_p']
['refers_to_regno_for_reload_p']
['mention_regs']
['choose_hard_reg_mode', 'combine_regs', 'count_one_set', 'df_ref_record', 'hard_reg_set_here_p', 'invalidate_for_call', 'refers_to_regno_for_reload_p', 'refers_to_regno_p', 'reg_bitfield_target_p', 'reg_bitfield_target_p', 'reg_overlap_mentioned_for_reload_p', 'reg_overlap_mentioned_p', 'scan_rtx_reg']
['allocate_reg_info', 'reg_alternate_class', 'reg_preferred_class']
['reg_alternate_class']
['invalidate', 'refers_to_regno_p', 'scan_rtx_reg']
['refers_to_regno_for_reload_p', 'save_call_clobbered_regs']
['cselib_lookup', 'invalidate', 'mark_set_1']
['invalidate']
['df_ref_record', 'invalidate_for_call', 'refers_to_regno_for_reload_p']
['refers_to_regno_p']
['reg_fits_class_p']
['reg_overlap_mentioned_for_reload_p', 'reg_overlap_mentioned_p']
['operands_match_p', 'reg_overlap_mentioned_for_reload_p', 'reg_overlap_mentioned_p']
['reg_overlap_mentioned_for_reload_p']
['hard_reg_set_here_p', 'reg_overlap_mentioned_for_reload_p', 'reg_overlap_mentioned_p']
['invalidate']
['choose_hard_reg_mode', 'choose_hard_reg_mode', 'clear_reload_reg_in_use', 'cselib_lookup', 'df_ref_record', 'find_oldest_value_reg', 'mark_reg_death', 'mark_set_1', 'peep2_reg_dead_p', 'record_value_for_reg', 'reg_bitfield_target_p']
['check_asm_stack_operands']
['purge_addressof_1']
['try_copy_prop']
['try_copy_prop']
['add_case_node']
['split_insns']
['split_insns']
['split_insns']
['split_insns']
['calculate_giv_inc']
['split_insns']
['record_value_for_reg']
['noce_get_condition', 'noce_get_condition']
['final_scan_insn', 'insns_match_p', 'ix86_split_long_move', 'mark_set_1', 'recog_26', 'subst_constants', 'verify_flow_info']
['mark_used_regs', 'memrefs_conflict_p']
['gen_lowpart_common']
['apply_change_group']
['apply_change_group']
['split_insns']
['split_insns']
['replace_equiv_address_nv']
['replace_equiv_address_nv']
['split_insns']
['record_value_for_reg']
['noce_get_condition', 'noce_get_condition', 'split_insns']
['mention_regs', 'recog_for_combine', 'scan_rtx_reg', 'use_crosses_set_p']
['wipe_dead_reg']
['subreg_regno_offset']
['free_for_value_p']
['remove_edge']
['remove_edge']
['remove_edge']
['remove_edge']
['replace_equiv_address_nv']
['expected_value_to_br_prob', 'loop_insn_first_p', 'replace_equiv_address_nv']
['replace_equiv_address_nv']
['replace_equiv_address_nv']
['replace_equiv_address_nv']
['replace_equiv_address_nv', 'replace_equiv_address_nv']
['replace_equiv_address_nv', 'replace_equiv_address_nv']
['replace_equiv_address_nv', 'replace_equiv_address_nv']
['replace_equiv_address_nv', 'replace_equiv_address_nv']
['replace_equiv_address_nv', 'replace_equiv_address_nv', 'replace_equiv_address_nv', 'replace_equiv_address_nv']
['replace_equiv_address_nv', 'replace_equiv_address_nv', 'replace_equiv_address_nv', 'replace_equiv_address_nv']
['replace_equiv_address_nv', 'replace_equiv_address_nv']
['replace_equiv_address_nv', 'replace_equiv_address_nv']
['replace_equiv_address_nv', 'replace_equiv_address_nv', 'replace_equiv_address_nv', 'replace_equiv_address_nv']
['replace_equiv_address_nv', 'replace_equiv_address_nv', 'replace_equiv_address_nv', 'replace_equiv_address_nv']
['replace_equiv_address_nv']
['replace_equiv_address_nv']
['expected_value_to_br_prob', 'loop_insn_first_p', 'replace_equiv_address_nv']
['replace_equiv_address_nv']
['replace_equiv_address_nv']
['replace_equiv_address_nv']
['replace_equiv_address_nv', 'replace_equiv_address_nv']
['replace_equiv_address_nv', 'replace_equiv_address_nv']
['replace_equiv_address_nv', 'replace_equiv_address_nv']
['replace_equiv_address_nv', 'replace_equiv_address_nv']
['replace_equiv_address_nv', 'replace_equiv_address_nv', 'replace_equiv_address_nv', 'replace_equiv_address_nv']
['replace_equiv_address_nv', 'replace_equiv_address_nv', 'replace_equiv_address_nv', 'replace_equiv_address_nv']
['replace_equiv_address_nv', 'replace_equiv_address_nv']
['replace_equiv_address_nv', 'replace_equiv_address_nv']
['replace_equiv_address_nv', 'replace_equiv_address_nv', 'replace_equiv_address_nv', 'replace_equiv_address_nv']
['replace_equiv_address_nv', 'replace_equiv_address_nv', 'replace_equiv_address_nv', 'replace_equiv_address_nv']
['replace_equiv_address_nv']
['replace_reg']
['extract_left_shift', 'find_reloads_toplev', 'kill_value', 'noce_emit_cmove', 'replace_regs', 'replace_rtx', 'replace_rtx', 'simplify_rtx', 'simplify_rtx', 'write_dependence_p']
['replace_regs']
['extract_left_shift', 'find_reloads_toplev', 'kill_value', 'noce_emit_cmove', 'replace_regs', 'replace_rtx', 'replace_rtx', 'simplify_rtx', 'simplify_rtx', 'write_dependence_p']
['kill_value', 'known_cond', 'replace_rtx', 'simplify_rtx', 'true_regnum']
['extract_left_shift', 'find_reloads_toplev', 'kill_value', 'noce_emit_cmove', 'replace_regs', 'replace_rtx', 'replace_rtx', 'simplify_rtx', 'simplify_rtx', 'write_dependence_p']
['known_cond', 'replace_rtx', 'simplify_rtx']
['count_error']
['count_error']
['unshare_all_decls']
['resolve_operand_name_1']
['output_loc_operands']
['rest_of_decl_compilation']
['rest_of_decl_compilation']
['check_global_declarations', 'rest_of_decl_compilation', 'rest_of_type_compilation']
['check_global_declarations', 'rest_of_decl_compilation', 'rest_of_type_compilation', 'rest_of_type_compilation']
['reverse_condition']
['reverse_condition']
['noce_get_condition']
['combine_reversed_comparison_code']
['purge_single_hard_subreg_set']
['canon_hash']
['reverse_condition']
['insert_regs']
['reverse_condition']
['reverse_condition']
['reverse_condition']
['rtl_for_decl_location']
['clear_dead_regs', 'mark_effect', 'reload_combine_note_use']
['rtx_cost']
['rtx_equal_for_cselib_p']
['rtx_equal_for_cselib_p']
['rtx_equal_for_field_assignment_p']
['rtx_equal_for_field_assignment_p']
['rtx_equal_for_memref_p']
['rtx_renumbered_equal_p']
['fixup_var_refs_1', 'rtx_renumbered_equal_p']
['rtx_renumbered_equal_p']
['rtx_renumbered_equal_p']
['rtx_renumbered_equal_p']
['rtx_renumbered_equal_p']
['rtx_renumbered_equal_p']
['rtx_renumbered_equal_p']
['rtx_renumbered_equal_p']
['rtx_renumbered_equal_p']
['rtx_renumbered_equal_p']
['rtx_varies_p']
['rtx_varies_p']
['rtx_varies_p']
['rtx_varies_p']
['cpp_push_buffer']
['cpp_push_buffer']
['sched_analyze_1']
['flush_pending_lists', 'flush_pending_lists']
['flush_pending_lists', 'flush_pending_lists']
['flush_pending_lists', 'flush_pending_lists']
['copy_loop_headers']
['sched_analyze_2']
['sched_analyze_2']
['regmove_optimize']
['emit_libcall_block']
['calculate_giv_inc', 'compute_forward_dependences', 'distribute_notes', 'elimination_effects', 'emit_libcall_block', 'expand_decl', 'find_dummy_reload', 'force_operand', 'force_to_mode', 'loop_optimize', 'nonoverlapping_memrefs_p', 'record_giv', 'rtx_renumbered_equal_p', 'subst_stack_regs_pat']
['constrain_operands', 'delete_output_reload', 'ix86_decompose_address', 'ix86_decompose_address', 'ix86_decompose_address', 'ix86_decompose_address', 'push_reload', 'subst_asm_stack_regs']
['copy_rtx_and_substitute', 'local_alloc', 'nonoverlapping_memrefs_p']
['scope_die_for']
['scope_die_for']
['scope_die_for']
['set_block_origin_self']
['set_decl_abstract_flags', 'set_decl_origin_self']
['set_decl_abstract_flags', 'set_decl_origin_self']
['set_mem_attributes']
['set_mem_attributes']
['set_mem_attributes']
['set_mem_attributes']
['set_mem_attributes']
['c_alignof', 'lex_number']
['set_reload_reg']
['set_reload_reg']
['set_reload_reg']
['set_reload_reg', 'set_reload_reg']
['set_reload_reg', 'set_reload_reg']
['set_unique_reg_note']
['back_branch_in_range_p', 'replace_pseudos_in_call_usage', 'rm_line_notes', 'sge_plus_constant']
['emit_libcall_block', 'expand_goto', 'for_each_insn_in_loop', 'restore_line_notes', 'rm_other_notes', 'sge_plus_constant']
['sge_plus_constant']
['sge_plus_constant']
['sge_plus_constant']
['sge_plus_constant']
['replace_pseudos_in_call_usage', 'sge_plus_constant']
['signed_type']
['signed_type']
['signed_type']
['signed_type']
['signed_type']
['simple_cst_equal', 'simple_cst_equal']
['simple_cst_equal', 'simple_cst_equal']
['simple_type_promotes_to']
['simple_type_promotes_to']
['simplify_and_const_int']
['simplify_and_const_int']
['simplify_and_const_int', 'simplify_and_const_int']
['simplify_and_const_int', 'simplify_and_const_int']
['ix86_split_to_parts']
['apply_distributive_law', 'copy_insn_1', 'find_reloads_subreg_address', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'make_memloc', 'protect_from_queue', 'simplify_giv_expr']
['calculate_giv_inc', 'cse_basic_block', 'nonoverlapping_memrefs_p', 'sched_analyze_2']
['decompose', 'expand_decl', 'simplify_giv_expr']
['eliminate_regs', 'push_reload']
['simplify_comparison']
['distribute_notes', 'loop_optimize', 'mark_all_labels', 'mark_all_labels', 'memrefs_conflict_p', 'reload_as_needed', 'simplify_comparison', 'store_expr']
['calculate_giv_inc', 'canonicalize_condition', 'change_address_1', 'compute_forward_dependences', 'copy_rtx_and_substitute', 'distribute_notes', 'eliminate_regs', 'elimination_effects', 'expected_value_to_br_prob', 'extract_bit_field', 'extract_bit_field', 'find_base_term', 'find_reloads_subreg_address', 'fixup_var_refs_1', 'force_operand', 'force_to_mode', 'force_to_mode', 'gen_reload', 'gen_sequence', 'if_convert', 'move_deaths', 'move_movables', 'move_movables', 'nonoverlapping_memrefs_p', 'nonoverlapping_memrefs_p', 'protect_from_queue', 'push_reload', 'scan_loop', 'simplify_giv_expr', 'split_all_insns', 'subst_stack_regs_pat', 'try_copy_prop', 'unroll_loop', 'update_temp_slot_address']
['insn_extract']
['calculate_giv_inc', 'compute_forward_dependences', 'copy_insn_list', 'copy_loop_headers', 'cse_basic_block', 'cse_end_of_basic_block', 'eliminate_regs', 'eliminate_regs', 'expand_decl', 'expand_expr', 'expand_goto', 'expected_value_to_br_prob', 'find_reloads_subreg_address', 'find_split_point', 'fixup_var_refs_1', 'force_to_mode', 'gen_call_value', 'gen_reload', 'if_convert', 'insns_match_p', 'loop_insn_first_p', 'mem_loc_descriptor', 'nonoverlapping_memrefs_p', 'nonoverlapping_memrefs_p', 'nonoverlapping_memrefs_p', 'protect_from_queue', 'replace_equiv_address_nv', 'sched_analyze_2', 'simplify_comparison', 'strength_reduce', 'strength_reduce']
['simplify_giv_expr']
['apply_distributive_law', 'copy_insn_1', 'find_reloads_subreg_address', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'make_memloc', 'protect_from_queue', 'simplify_giv_expr']
['combine_instructions', 'cse_basic_block', 'legitimize_pic_address', 'refers_to_regno_for_reload_p', 'simplify_giv_expr']
['decompose', 'expand_decl', 'simplify_giv_expr']
['gen_reload', 'simplify_giv_expr']
['force_to_mode', 'move_deaths', 'move_movables']
['adjust_address_1', 'compute_forward_dependences', 'copy_insn_list', 'copy_loop_headers', 'copy_rtx_and_substitute', 'copy_rtx_and_substitute', 'decompose', 'distribute_notes', 'expected_value_to_br_prob', 'extract_bit_field', 'find_base_term', 'find_reloads_address', 'fixup_var_refs_1', 'fold_rtx', 'force_to_mode', 'gen_reload', 'gen_sequence', 'if_convert', 'instantiate_virtual_regs_1', 'loop_iterations', 'merge_blocks_nomove', 'move_movables', 'nonoverlapping_memrefs_p', 'optimize_sibling_and_tail_recursive_calls', 'protect_from_queue', 'record_giv', 'reload_as_needed', 'reload_as_needed', 'simplify_comparison', 'simplify_giv_expr', 'split_all_insns', 'unshare_all_rtl']
['check_asm_stack_operands', 'invalidate', 'swap_rtx_condition']
['simplify_if_then_else']
['ix86_decompose_address', 'unroll_loop']
['instantiate_virtual_regs_1']
['calculate_giv_inc', 'if_then_else_cond']
['reload_cse_regs']
['copy_rtx_and_substitute', 'eliminate_regs_in_insn', 'instantiate_virtual_regs', 'simplify_if_then_else', 'subst', 'subst_asm_stack_regs', 'subst_asm_stack_regs', 'thread_prologue_and_epilogue_insns']
['adjust_address_1', 'copy_insn_list', 'copy_loop_body', 'find_reloads_subreg_address', 'gen_call_pop', 'gen_reload', 'loop_optimize', 'sched_analyze_2', 'trampoline_address']
['eliminate_regs_in_insn', 'gen_call_value_pop', 'scan_loop', 'visit_expression']
['apply_distributive_law', 'copy_insn_1', 'find_reloads_subreg_address', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'make_memloc', 'protect_from_queue', 'simplify_giv_expr']
['adjust_address_1', 'rm_line_notes', 'rm_other_notes', 'rm_other_notes']
['simplify_replace_rtx']
['simplify_rtx']
['simplify_rtx', 'simplify_rtx']
['extract_left_shift', 'find_reloads_toplev', 'kill_value', 'noce_emit_cmove', 'replace_regs', 'replace_rtx', 'replace_rtx', 'simplify_rtx', 'simplify_rtx', 'write_dependence_p']
['known_cond', 'replace_rtx', 'simplify_rtx']
['simplify_rtx', 'simplify_rtx']
['extract_left_shift', 'find_reloads_toplev', 'kill_value', 'noce_emit_cmove', 'replace_regs', 'replace_rtx', 'replace_rtx', 'simplify_rtx', 'simplify_rtx', 'write_dependence_p']
['kill_value', 'known_cond', 'replace_rtx', 'simplify_rtx', 'true_regnum']
['simplify_rtx']
['clear_dead_regs', 'mark_effect', 'reload_combine_note_use']
['simplify_subreg']
['simplify_subreg']
['clear_dead_regs', 'mark_effect', 'reload_combine_note_use']
['clear_dead_regs', 'mark_effect', 'reload_combine_note_use']
['simplify_ternary_operation', 'simplify_ternary_operation', 'simplify_ternary_operation', 'simplify_ternary_operation']
['simplify_ternary_operation', 'simplify_ternary_operation', 'simplify_ternary_operation', 'simplify_ternary_operation']
['simplify_ternary_operation', 'simplify_ternary_operation', 'simplify_ternary_operation', 'simplify_ternary_operation']
['simplify_ternary_operation', 'simplify_ternary_operation', 'simplify_ternary_operation', 'simplify_ternary_operation']
['simplify_ternary_operation']
['apply_distributive_law', 'copy_insn_1', 'find_reloads_subreg_address', 'gen_binary', 'gen_lowpart_common', 'gen_lowpart_for_combine', 'make_memloc', 'protect_from_queue', 'simplify_giv_expr']
['copy_loop_body', 'copy_loop_headers', 'legitimize_address']
['gen_binary']
['simplify_unary_operation', 'simplify_unary_operation', 'simplify_unary_operation']
['size_int_type_wide', 'size_int_type_wide']
['size_int_type_wide']
['size_int_type_wide']
['size_int_type_wide']
['size_int_type_wide', 'size_int_type_wide']
['size_int_type_wide']
['size_int_type_wide', 'size_int_type_wide']
['size_int_type_wide', 'size_int_type_wide', 'size_int_type_wide']
['size_int_type_wide']
['size_int_type_wide', 'size_int_type_wide', 'size_int_type_wide']
['size_int_type_wide', 'size_int_type_wide', 'size_int_type_wide']
['size_int_type_wide']
['size_int_type_wide', 'size_int_type_wide']
['skip_escaped_newlines']
['skip_escaped_newlines']
['skip_escaped_newlines']
['cached_make_edge']
['add_bound_info', 'add_data_member_location_attribute', 'dwarf2out_abstract_function', 'dwarf2out_decl', 'gen_subroutine_type_die', 'gen_variable_die', 'splice_child_die']
['splice_child_die']
['split_1', 'split_1', 'split_1']
['split_1', 'split_1']
['split_1']
['recog_26', 'split_1']
['split_1']
['split_1', 'split_1', 'split_1']
['split_1']
['split_1']
['split_1', 'split_1', 'split_1']
['recog_26', 'split_1']
['extract_insn', 'peephole2_insns', 'recog', 'split_insns']
['split_insns', 'split_insns']
['split_insns']
['split_insns', 'split_insns']
['split_insns']
['split_insns']
['split_insns']
['split_insns']
['split_insns']
['split_insns']
['split_insns']
['split_insns']
['split_insns']
['split_insns']
['split_insns']
['split_insns']
['squeeze_notes']
['squeeze_notes']
['convert_from_eh_region_ranges_1', 'squeeze_notes', 'squeeze_notes']
['squeeze_notes']
['squeeze_notes', 'squeeze_notes']
['squeeze_notes', 'squeeze_notes']
['squeeze_notes']
['squeeze_notes', 'squeeze_notes']
['squeeze_notes', 'squeeze_notes']
['convert_from_eh_region_ranges_1', 'squeeze_notes', 'squeeze_notes']
['squeeze_notes']
['squeeze_notes']
['squeeze_notes', 'squeeze_notes']
['squeeze_notes', 'squeeze_notes']
['squeeze_notes']
['squeeze_notes']
['standard_80387_constant_p', 'standard_80387_constant_p']
['standard_80387_constant_p', 'standard_80387_constant_p']
['get_set_constructor_bits']
['for_each_insn_in_loop']
['merge_blocks_nomove', 'protect_from_queue', 'unshare_all_rtl']
['make_extraction']
['expand_goto', 'find_reloads_subreg_address', 'gen_call_value', 'gen_reload', 'insns_match_p', 'protect_from_queue']
['protect_from_queue']
['protect_from_queue']
['elimination_effects']
['ix86_split_to_parts', 'ix86_split_to_parts']
['copy_insn_1']
['copy_insn_1']
['swap_rtx_condition']
['protect_from_queue']
['do_store_flag']
['store_fixed_bit_field']
['store_fixed_bit_field']
['store_split_bit_field', 'store_split_bit_field']
['store_split_bit_field', 'store_split_bit_field']
['extract_split_bit_field', 'store_split_bit_field']
['store_split_bit_field']
['count_spilled_pseudo', 'mark_reg_death', 'mark_used_regs_combine', 'setup_save_areas']
['clear_dead_regs', 'get_mode_alignment', 'kill_value', 'mark_effect', 'reload_combine_note_use']
['find_reg']
['clear_dead_regs', 'get_mode_alignment', 'kill_value', 'mark_effect', 'reload_combine_note_use']
['count_pseudo', 'kill_value', 'make_decl_rtl', 'mark_effect', 'mark_reg']
['subreg_regno_offset']
['subreg_regno_offset', 'subreg_regno_offset']
['subreg_regno_offset']
['subreg_regno_offset', 'subreg_regno_offset']
['find_reg']
['apply_change_group', 'compute_transp', 'convert_from_eh_region_ranges', 'purge_addressof_1']
['for_each_insn_in_loop', 'mark_used_regs', 'subst']
['check_asm_stack_operands', 'constrain_operands', 'copy_loop_headers', 'delete_output_reload', 'ix86_decompose_address', 'subst', 'subst_stack_regs_pat']
['subst']
['copy_insn_list', 'copy_loop_headers', 'expand_decl', 'fixup_var_refs_1', 'nonoverlapping_memrefs_p']
['force_to_mode', 'legitimize_pic_address']
['gen_reload', 'scan_loop']
['reload', 'subst']
['legitimize_address', 'move_movables', 'unroll_loop']
['subst_asm_stack_regs']
['eliminate_regs_in_insn', 'ix86_decompose_address', 'simplify_if_then_else', 'unroll_loop']
['add_case_node', 'copy_loop_body', 'copy_loop_headers', 'rtx_varies_p', 'subst_asm_stack_regs', 'subst_asm_stack_regs', 'subst_stack_regs_pat', 'subst_stack_regs_pat']
['decompose', 'expand_decl', 'simplify_giv_expr']
['consec_sets_giv', 'loop_optimize', 'scan_loop']
['copy_insn_list', 'copy_loop_headers', 'expand_decl', 'fixup_var_refs_1', 'nonoverlapping_memrefs_p']
['init_alias_analysis', 'subst_asm_stack_regs']
['move_deaths', 'subst_asm_stack_regs']
['insn_extract']
['insn_extract']
['eliminate_regs_in_insn', 'eliminate_regs_in_insn', 'extract_bit_field', 'fixup_var_refs_1', 'fold_rtx', 'insn_extract', 'insn_extract', 'insn_extract', 'move_deaths', 'move_movables', 'nonoverlapping_memrefs_p', 'reload_as_needed', 'schedule_block', 'strength_reduce', 'subst_asm_stack_regs', 'thread_prologue_and_epilogue_insns', 'visit_expression']
['copy_rtx_and_substitute']
['copy_loop_headers', 'move_deaths']
['constrain_operands', 'distribute_notes']
['reload']
['cse_end_of_basic_block', 'eliminate_regs']
['find_split_point']
['find_split_point']
['subst_constants', 'subst_constants']
['check_insn_for_givs', 'ix86_split_fp_branch']
['validate_replace_rtx_1']
['subst_constants']
['instantiate_virtual_regs_1']
['replace_reg']
['emit_pop_insn']
['nonzero_bits']
['replace_reg']
['replace_reg']
['insert_one_insn', 'mark_set_1', 'reload_combine_note_use']
['get_secondary_mem', 'replace_reg']
['swap_rtx_condition_1']
['simplify_unary_operation', 'simplify_unary_operation', 'simplify_unary_operation']
['etoe64']
['tree_cons']
['tree_int_cst_lt']
['true_dependence', 'write_dependence_p']
['memrefs_conflict_p', 'true_dependence']
['true_dependence']
['true_dependence']
['true_dependence', 'true_dependence']
['true_dependence', 'true_dependence', 'write_dependence_p']
['true_dependence', 'true_dependence']
['true_dependence', 'true_dependence', 'write_dependence_p']
['true_dependence', 'true_dependence', 'write_dependence_p', 'write_dependence_p']
['true_dependence', 'true_dependence', 'write_dependence_p', 'write_dependence_p']
['canon_true_dependence']
['subreg_regno']
['subreg_regno', 'true_regnum']
['subreg_regno']
['subreg_regno', 'true_regnum']
['purge_single_hard_subreg_set']
['subreg_regno']
['purge_single_hard_subreg_set']
['purge_single_hard_subreg_set']
['purge_single_hard_subreg_set']
['purge_single_hard_subreg_set']
['hash_expr_1']
['purge_single_hard_subreg_set']
['try_tablejump']
['try_tablejump']
['try_tablejump']
['try_tablejump']
['ix86_setup_incoming_varargs']
['gen_split_956', 'init_reload', 'try_tablejump']
['try_tablejump']
['allocate_dynamic_stack_space', 'expand_return', 'ix86_zero_extend_to_Pmode']
['try_tablejump']
['copy_loop_headers', 'create_basic_block_structure', 'cse_main', 'eliminate_regs_in_insn', 'emit_libcall_block', 'gen_call_value_pop', 'get_attr_prefix_0f', 'ix86_decompose_address', 'ix86_decompose_address', 'protect_from_queue', 'replace_pseudos_in_call_usage', 'replace_pseudos_in_call_usage', 'scan_loop', 'simplify_if_then_else', 'subst_asm_stack_regs', 'unroll_loop', 'unroll_loop', 'visit_expression', 'visit_expression']
['init_propagate_block_info', 'legitimize_address', 'local_alloc', 'record_giv']
['combine_regs', 'instantiate_virtual_regs_1']
['check_asm_stack_operands', 'memrefs_conflict_p', 'scan_loop']
['force_to_mode', 'legitimize_pic_address']
['sched_analyze_2']
['expand_inline_function']
['add_case_node', 'fold_rtx', 'loop_iterations', 'unroll_loop']
['insn_extract', 'insn_extract']
['cse_end_of_basic_block', 'find_reloads', 'instantiate_virtual_regs', 'move_deaths', 'simplify_if_then_else', 'subst', 'subst_asm_stack_regs', 'subst_asm_stack_regs']
['fold_rtx']
['unsigned_type']
['unsigned_type']
['unsigned_type']
['unsigned_type']
['unsigned_type']
['update_table_tick']
['reg_overlap_mentioned_p']
['c_add_case_label']
['validate_change']
['compute_transp', 'copy_loop_body', 'copy_rtx_and_substitute', 'elimination_effects', 'emit_libcall_block', 'find_split_point', 'ix86_decompose_address', 'local_alloc', 'nonoverlapping_memrefs_p', 'save_line_notes', 'simplify_if_then_else', 'validate_replace_rtx_1']
['subst_stack_regs_pat']
['reload', 'subst']
['validate_replace_rtx_1']
['validate_replace_rtx_1']
['validate_replace_rtx_1']
['validate_replace_rtx_1']
['validate_replace_rtx_1', 'validate_replace_rtx_1']
['offset_address']
['walk_tree']
['walk_tree', 'walk_tree']
['walk_tree', 'walk_tree']
['walk_tree', 'walk_tree']
['walk_tree', 'walk_tree']
['want_to_gcse_p']
['want_to_gcse_p', 'want_to_gcse_p']
['want_to_gcse_p']
['want_to_gcse_p']
['want_to_gcse_p']
['want_to_gcse_p', 'want_to_gcse_p']
['x86_field_alignment']
['x86_field_alignment']
