if ( ++quantum_qec_counter_counter >= quantum_qec_counter_freq ) 
if ( ++quantum_qec_counter_counter >= quantum_qec_counter_freq ) 
quantum_qec_counter_counter = 0; 
v1 = _mm_cvtpd_ps( _mm_add_pd( _mm_add_pd( v9, v9), ( __m128d)xmmword_409250)); 
*( _OWORD *)&v3.t[2].real = xmmword_409310; 
*( _OWORD *)&v3.t[2].real = xmmword_409310; 
_OWORD v55[4]; // [rsp+21h] [rbp-117h] 
_OWORD v55[4]; // [rsp+21h] [rbp-117h] 
LOBYTE( v55[0]) = HIBYTE( v5); 
BYTE1( v55[0]) = BYTE2( v7); 
BYTE2( v55[0]) = HIBYTE( v9); 
BYTE3( v55[0]) = v8; 
*( _QWORD *)&v55[0] = _byteswap_uint64( v56); 
LOBYTE( v55[0]) = ( int)v56 / 0x1000000; 
BYTE1( v55[0]) = v17; 
BYTE2( v55[0]) = HIBYTE( v19); 
BYTE3( v55[0]) = v18; 
BYTE4( v55[0]) = HIBYTE( v20); 
BYTE5( v55[0]) = BYTE2( v22); 
BYTE6( v55[0]) = HIBYTE( v24); 
BYTE7( v55[0]) = v23; 
LOBYTE( v55[0]) = ( int)v56 / 0x1000000; 
BYTE1( v55[0]) = v27; 
BYTE2( v55[0]) = HIBYTE( v29); 
BYTE3( v55[0]) = v28; 
BYTE4( v55[0]) = ( int)v57 / 0x1000000; 
BYTE5( v55[0]) = v32; 
BYTE6( v55[0]) = HIBYTE( v34); 
BYTE7( v55[0]) = v33; 
BYTE8( v55[0]) = HIBYTE( v35); 
BYTE9( v55[0]) = BYTE2( v37); 
BYTE10( v55[0]) = HIBYTE( v39); 
BYTE11( v55[0]) = v38; 
LOBYTE( v55[0]) = HIBYTE( v10); 
BYTE1( v55[0]) = BYTE2( v12); 
BYTE2( v55[0]) = HIBYTE( v14); 
BYTE3( v55[0]) = v13; 
*( _QWORD *)( ( char *)v55 + 4) = v59; 
LOBYTE( v55[0]) = ( int)v56 / 0x1000000; 
BYTE1( v55[0]) = v42; 
BYTE2( v55[0]) = HIBYTE( v44); 
BYTE3( v55[0]) = v43; 
BYTE4( v55[0]) = HIBYTE( v45); 
BYTE5( v55[0]) = BYTE2( v47); 
BYTE6( v55[0]) = HIBYTE( v49); 
BYTE7( v55[0]) = v48; 
*( ( _QWORD *)&v55[0] + 1) = v59; 
objcode[v53 + 1] = *( ( _BYTE *)v55 + v51); 
si128 = _mm_load_si128( ( const __m128i *)&xmmword_4092C0); 
v47 = _mm_load_si128( ( const __m128i *)&xmmword_4092D0); 
v48 = _mm_load_si128( ( const __m128i *)&xmmword_4092E0); 
if ( ++quantum_qec_counter_counter >= quantum_qec_counter_freq ) 
if ( ++quantum_qec_counter_counter >= quantum_qec_counter_freq ) 
quantum_qec_counter_counter = 0; 
